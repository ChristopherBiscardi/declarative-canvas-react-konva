{"version":3,"sources":["webpack:///static/js/main.8281b6ce.js","webpack:///webpack/bootstrap 6c73281eaeeddc77e76b","webpack:///./~/react/index.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/fbjs/lib/emptyObject.js","webpack:///./~/mobx-react/index.js","webpack:///./~/mobx/lib/mobx.js","webpack:///./~/object-assign/index.js","webpack:///./~/custom-react-scripts/~/promise/lib/core.js","webpack:///./~/fbjs/lib/shallowEqual.js","webpack:///./~/react-dom/index.js","webpack:///./~/react-konva/react-konva.js","webpack:///./~/asap/browser-raw.js","webpack:///./~/custom-react-scripts/config/polyfills.js","webpack:///./src/components/App.js","webpack:///./src/components/Marble.js","webpack:///./src/components/MarbleList.js","webpack:///./src/index.js","webpack:///./src/logic/Physics.js","webpack:///./src/logic/Sprite.js","webpack:///./~/custom-react-scripts/~/object-assign/index.js","webpack:///./~/custom-react-scripts/~/promise/lib/es6-extensions.js","webpack:///./~/custom-react-scripts/~/promise/lib/rejection-tracking.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./~/d3-quadtree/build/d3-quadtree.js","webpack:///./~/d3-timer/build/d3-timer.js","webpack:///./~/fbjs/lib/EventListener.js","webpack:///./~/fbjs/lib/ExecutionEnvironment.js","webpack:///./~/fbjs/lib/containsNode.js","webpack:///./~/fbjs/lib/focusNode.js","webpack:///./~/fbjs/lib/getActiveElement.js","webpack:///./~/fbjs/lib/isNode.js","webpack:///./~/fbjs/lib/isTextNode.js","webpack:///./~/konva/konva.js","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react-reconciler/cjs/react-reconciler.production.min.js","webpack:///./~/react-reconciler/index.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./src/monster-marbles-sprite-sheets.jpg","webpack:///./~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","emptyObject","global","factory","mobx","react","reactDom","createChainableTypeChecker","validate","checkType","isRequired","props","propName","componentName","location","propFullName","_len","arguments","length","rest","Array","_key","untracked","actual","Error","apply","undefined","concat","chainedCheckType","bind","isSymbol","propType","propValue","Symbol","getPropType","_typeof","isArray","RegExp","getPreciseType","Date","createObservableTypeCheckerCreator","allowNativeType","mobxType","toLowerCase","mobxChecker","isObservableArray","isObservableObject","isObservableMap","preciseType","nativeTypeExpectationMessage","createObservableArrayOfTypeChecker","typeChecker","_len2","_key2","error","i","isStateless","component","prototype","render","createStoreInjector","grabStoresFn","injectNames","_class","_temp2","displayName","name","constructor","Injector","_Component","_ref","_temp","_this","_ret","classCallCheck","args","possibleConstructorReturn","__proto__","Object","getPrototypeOf","storeRef","instance","wrappedInstance","inherits","createClass","key","value","newProps","hasOwnProperty","additionalProps","context","mobxStores","ref","createElement","Component","hoistNonReactStatics","wrappedComponent","defineProperties","proxiedInjectorProps","grabStoresByName","storeNames","baseStores","nextProps","forEach","storeName","inject","componentClass","injected","isMobxInjector","observer","join","findDOMNode$2","findDOMNode","e","reportRendering","node","componentByNodeRegistery","set","renderReporter","emit","event","renderTime","__$mobRenderEnd","__$mobRenderStart","totalTime","now","trackComponents","WeakMap","isDevtoolsEnabled","useStaticRendering","isUsingStaticRendering","patch","target","funcName","runMixinFirst","base","mixinFunc","reactiveMixin","f","isObjectShallowModified","prev","next","keys","arg1","arg2","warnedAboutObserverInjectDeprecation","console","warn","isReactClass","isPrototypeOf","contextTypes","propTypes","defaultProps","mixinLifecycleEvents","isMobXReactObserver","shouldComponentUpdate","unstable_batchedUpdates$1","iterator","obj","AwaitValue","AsyncGenerator","gen","send","Promise","resolve","reject","request","back","front","resume","result","then","settle","done","err","type","_invoke","return","asyncIterator","throw","wrap","fn","await","Constructor","TypeError","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","subClass","superClass","create","setPrototypeOf","self","ReferenceError","EventEmitter","listeners","cb","push","index","indexOf","splice","data","REACT_STATICS","childContextTypes","getDefaultProps","mixins","KNOWN_STATICS","caller","callee","arity","defineProperty$1","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","objectPrototype","targetComponent","sourceComponent","blacklist","inheritedComponent","observableArray","observableArrayOf","observableMap","observableObject","arrayOrObservableArray","arrayOrObservableArrayOf","objectOrObservableObject","freeze","injectorContextTypes","seal","get","_","errorsReporter","componentWillMount","makePropertyObservableReference","valueHolder","atom","Atom","reportObserved","v","isForcingUpdate","skipRender","reportChanged","initialName","rootNodeID","_reactInternalInstance","_rootNodeID","baseRender","reaction","isRenderingPending","initialRender","Reaction","componentWillReact","__$mobxIsUnmounted","hasError","forceUpdate","dispose","reactComponent","reactiveRender","$mobx","exception","rendering","track","extras","allowStateChanges","componentWillUnmount","delete","componentDidMount","componentDidUpdate","nextState","state","Observer","children","specialReactKeys","Provider","Children","only","stores","suppressChangedStoreWarning","unstable_batchedUpdates","setReactionScheduler","onError","on","__MOBX_DEVTOOLS_GLOBAL_HOOK__","mobx$1","spy","mobxReact","injectMobxReact","PropTypes","__extends","d","b","__","extendStatics","hasInterceptors","interceptable","interceptors","registerInterceptor","handler","once","idx","interceptChange","change","prevU","untrackedStart","l","invariant","untrackedEnd","hasListeners","listenable","changeListeners","registerListener","notifyListeners","slice","isSpyEnabled","globalState","spyListeners","spyReport","spyReportStart","objectAssign","spyReportEnd","END_EVENT","listener","iteratorSymbol","arrayAsIterator","array","IS_ITERATING_MARKER","addHiddenFinalProp","declareIterator","prototType","iteratorFactory","inherit","ctor","proto","createArrayEntryDescriptor","createArrayBufferItem","ObservableArray","reserveArrayBuffer","max","OBSERVABLE_ARRAY_BUFFER_SIZE","thing","isObject","isObservableArrayAdministration","getMessage","messages","createAction","actionName","res","executeAction","originalFn","isMobxAction","scope","runInfo","startAction","endAction","notifySpy","startTime","flattendArgs","object","prevDerivation","startBatch","prevAllowStateChanges","allowStateChangesStart","allowStateChangesEnd","endBatch","time","useStrict","strict","trackingDerivation","strictMode","isStrictModeEnabled","func","createClassPropertyDecorator","onInitialize","allowCustomArguments","classPropertyDecorator","customArgs","argLen","quacksLikeADecorator","addHiddenProp","__mobxLazyInitializers","value_1","initializer_1","initializer","__mobxDidRunLazyInitializers","runLazyInitializers","newDescriptor","__mobxInitializedProps","typescriptInitializeProperty","outerArgs","baseDescriptor","namedActionDecorator","prop","actionFieldDecorator","runInAction","arg3","isAction","defineBoundAction","propertyName","identityComparer","a","structuralComparer","deepEqual","defaultComparer","areBothNaN","autorun","reactionRunner","view","getNextId","schedule","getDisposer","when","arg4","predicate","effect","disposer","r","prevUntracked","autorunAsync","delay","isScheduled","setTimeout","isDisposed","expression","changed","nextValue","firstTime","equals","opts","fireImmediately","fail","isModifierDescriptor","compareStructural","struct","action","comparer","structural","default","asObservableObject","isExtensible","isPlainObject","adm","ObservableObjectAdministration","defineObservablePropertyFromDescriptor","defaultEnhancer","values","isComputedValue","modifierDescriptor","defineObservableProperty","initialValue","enhancer","autoBind","defineComputedPropertyFromComputedValue","defineComputedProperty","newValue","assertPropertyConfigurable","observable","ObservableValue","generateObservablePropConfig","notifyPropertyAddition","getter","setter","asInstanceProperty","ComputedValue","generateComputedPropConfig","computedValue","observablePropertyConfigs","setPropertyValue","computedPropertyConfigs","prepareNewValue","UNCHANGED","notify","oldValue","setNewValue","isObservableObjectAdministration","isObservable","property","o","isAtom","isReaction","createDecoratorForEnhancer","baseValue","extendObservable","properties","_i","extendObservableHelper","deepEnhancer","extendShallowObservable","referenceEnhancer","propSet","definedProps","isPropertyConfigurable","createObservable","deepDecorator","box","incorrectlyUsedAsDecorator","methodName","isMobxModifierDescriptor","createModifierDescriptor","isES6Map","map","shallowEnhancer","shallowArray","shallowObject","shallowMap","deepStructEnhancer","ObservableMap","refStructEnhancer","transaction","thisArg","initialValues","deprecated","getGlobal","window","mobxGuid","message","check","msg","deprecatedMessages","invoked","unique","list","item","joinStrings","things","limit","separator","sliced","source","prototypeHasOwnProperty","makeNonEnumerable","propNames","getEnumerableKeys","aIsArray","isArrayLike","aIsMap","isMapLike","size","equals_1","entries","createInstanceofPredicate","clazz","x","isNaN","Map","getMapLikeKeys","map$$1","_a","from","primitiveSymbol","toPrimitive","isolateGlobalState","runInIsolationCalled","__mobxInstanceCount","shareGlobalState","shareGlobalStateCalled","ownState","__mobservableTrackingStack","__mobservableViewStack","__mobxGlobal","version","getGlobalState","resetGlobalState","resetId","defaultGlobals","MobXGlobals","persistentKeys","hasObservers","observers","getObservers","addObserver","observersIndexes","__mapid","lowestObserverState","dependenciesState","removeObserver","queueForUnobservation","filler","pop","isPendingUnobservation","pendingUnobservations","inBatch","runReactions","onBecomeUnobserved","derivation","runId","lastAccessedBy","newObserving","unboundDepsCount","propagateChanged","IDerivationState","STALE","UP_TO_DATE","onBecomeStale","propagateChangeConfirmed","POSSIBLY_STALE","propagateMaybeChanged","isCaughtException","CaughtException","shouldCompute","NOT_TRACKING","obs","observing","changeDependenciesStateTo0","isComputingDerivation","checkIfStateModificationsAreAllowed","hasObservers$$1","computationDepth","trackDerivedFunction","prevTracking","bindDependencies","prevObserving","lowestNewObservingDerivationState","i0","dep","diffValue","clearObserving","registerErrorHandler","errorHandler","onReactionError","globalReactionErrorHandlers","isRunningReactions","reactionScheduler","runReactionsHelper","allReactions","pendingReactions","iterations","MAX_REACTION_ITERATIONS","remainingReactions","runReaction","baseScheduler","asReference","asStructure","asFlat","shallow","asMap","createComputedDecorator","originalDescriptor","getAtom","anyThing","_keys","_data","_hasMap","getDebugName","getAdministration","named","isComputed","observe","propOrCb","cbOrFire","observeObservableProperty","observeObservable","intercept","propOrHandler","interceptProperty","interceptInterceptable","expr","computed","toJS","detectCycles","__alreadySeen","cache","toAdd","res_1","isObservableValue","createTransformer","transformer","onCleanup","objectCache","Transformer","_super","sourceIdentifier","sourceObject","lastValue","identifier","getMemoizationId","reactiveTransformer","tid","$transformId","log","whyRun","getDependencyTree","nodeToDependencyTree","dependencies","getObserverTree","nodeToObserverTree","interceptReads","dehancer","BaseAtom","toString","onBecomeObservedHandler","onBecomeUnobservedHandler","noop","isBeingTracked","MAX_SPLICE_SIZE","safariPrototypeSetterInheritanceBug","StubArray","isFrozen","ObservableArrayAdministration","owned","lastKnownLength","newV","oldV","dehanceValue","dehanceValues","added","addedCount","removed","removedCount","getArrayLength","setArrayLength","newLength","currentLength","newItems","spliceWithArray","updateArrayLength","oldLength","delta","deleteCount","Math","min","EMPTY_ARRAY","lengthDelta","spliceItemsIntoValues","notifyArraySplice","notifyArrayChildUpdate","ENTRY_0","clear","arrays","peek","replace","toJSON","find","fromIndex","findIndex","items","shift","unshift","reverse","clone","sort","compareFn","remove","move","toIndex","checkIndex","oldItems","impl","baseFunc","hasUnreportedChange","valueOf","m001","m002","m003","m004","m005","m006","m007","m008","m009","m010","m011","m012","m013","m014","m015","m016","m017","m018","m019","m020","m021","m022","m024","m025","m026","m028","m029","m030a","m030b","m031","m032","m033","m034","m035","m036","m037","m038","wrappedAction","boundActionDecorator","bound","action_1","identity","isComputing","isRunningSetter","computeValue","trackAndCompute","cause","wasSuspended","prevValue","isTracking","Boolean","callback","shallowDecorator","refDecorator","deepStructDecorator","refStructDecorator","observableFactories","shallowBox","deep","ObservableMapMarker","initialData","merge","_has","has","isValidKey","_updateHasMapEntry","assertValidKey","hasKey","_updateValue","_addValue","observable$$1","entry","other","newKeys","oldKeys","missingKeys","filter","k","warnedAboutMultipleInstances","global_1","onInvalidate","_isScheduled","_isTrackPending","_isRunning","reportExceptionInDerivation","messageToUser","computedDecorator","computedStructDecorator","everything","isBoxedObservable","warnedAboutDefaultExport","_loop_1","val","injectMobx","toObject","shouldUseNative","assign","test1","String","test2","fromCharCode","order2","n","test3","split","letter","propIsEnumerable","propertyIsEnumerable","symbols","to","s","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","handle","Handler","deferred","_10","handleResolved","asap","promise","ret","finale","_97","reason","_61","is","y","shallowEqual","objA","objB","keysA","keysB","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","root","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__esModule","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","len","run","Item","process","nextTick","title","browser","env","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","_classCallCheck","_possibleConstructorReturn","_inherits","applyNodeProps","oldProps","warningShowed","updatedProps","hasUpdates","propsToSkip","isEvent","propChanged","eventName","substr","toUpperCase","toRemove","setAttr","getAttr","setAttrs","updatePicture","drawingNode","getLayer","getStage","batchDraw","_createClass","React","Konva","ReactFiberReconciler","ReactDOMFrameScheduling","style","Stage","_props","width","height","_stage","container","_tagRef","_mountNode","KonvaRenderer","createContainer","updateContainer","prevProps","prevState","destroy","_this2","accessKey","className","role","tabIndex","KONVA_NODES","TYPES","nodeName","UPDATE_SIGNAL","appendInitialChild","parentInstance","child","add","createInstance","internalInstanceHandle","NodeClass","_applyProps","createTextInstance","text","rootContainerInstance","finalizeInitialChildren","domElement","getPublicInstance","prepareForCommit","prepareUpdate","resetAfterCommit","resetTextContent","shouldDeprioritizeSubtree","getRootHostContext","getChildHostContext","scheduleDeferredCallback","rIC","shouldSetTextContent","useSyncScheduling","mutation","appendChild","parent","moveToTop","appendChildToContainer","insertBefore","beforeChild","setZIndex","getZIndex","insertInContainerBefore","removeChild","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitMount","commitUpdate","updatePayload","fiberInstance","condition","format","validateFormat","argIndex","framesToPop","NODE_ENV","ExecutionEnvironment","hasNativePerformanceNow","performance","canUseDOM","requestIdleCallback","frameDeadlineObject","scheduledRAFCallback","scheduledRICCallback","isIdleScheduled","isAnimationFrameScheduled","frameDeadline","previousFrameTime","activeFrameTime","timeRemaining","messageKey","random","idleTick","addEventListener","animationTick","rafTime","nextFrameTime","postMessage","requestAnimationFrame","frameCallback","Infinity","document","canUseWorkers","Worker","canUseEventListeners","attachEvent","canUseViewport","screen","isInWorker","rawAsap","task","requestFlush","flushing","flush","currentIndex","capacity","scan","makeRequestCallFromMutationObserver","toggle","BrowserMutationObserver","createTextNode","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","MutationObserver","WebKitMutationObserver","enable","_interopRequireDefault","_react","_react2","_mobxReact","_Physics","_Physics2","_Sprite","_Sprite2","_MarbleList","_MarbleList2","App","loadSprite","startGameLoop","physics","sprite","_dec","_reactKonva","Marble","setState","origX","marbles","origY","_props2","_refs$circle$attrs","refs","circle","attrs","_state","_circle$attrs","delta_t","dist","pow","sqrt","shoot","vx","vy","_props3","draggable","MarbleDefinitions","marbleDefinitions","_physics$marbles$id","Circle","radius","fillPatternImage","fillPatternOffset","fillPatternScale","shadowColor","shadowBlur","shadowOpacity","onDragStart","onDragEnd","onDragMove","_Marble","_Marble2","MarbleList","marbleTypes","Layer","Group","_ref2","_reactDom","_reactDom2","_App","_App2","getElementById","_initDefineProp","_applyDecoratedDescriptor","decorators","desc","reduce","decorator","_descriptor","_descriptor2","_descriptor3","_descriptor4","_mobx","_d3Array","_d3Timer","_d3Quadtree","Physics","timer","initialPositions","simulationStep","MarbleR","moveMarble","_vx","_vy","subdividedSpace","quadtree","extent","addAll","candidate","cx","cy","normx","normy","marble","_moveMarble","maxSpeed","_this3","center","lines","maxY","range","left","right","acc","pos","_monsterMarblesSpriteSheets","_monsterMarblesSpriteSheets2","dino","redHeart","sun","yellowHeart","mouse","pumpkin","frog","moon","bear","Sprite","Image","src","onload","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","remaining","race","disable","enabled","options","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","_72","errStr","stack","line","some","cls","RangeError","ascendingComparator","ascending","pair","tickIncrement","start","stop","count","step","power","floor","LN10","e10","e5","e2","tickStep","step0","abs","step1","NaN","bisector","compare","lo","hi","mid","ascendingBisect","bisectRight","bisectLeft","pairs","cross","values0","values1","i1","value0","n0","n1","descending","number","variance","valueof","mean","sum","deviation","constant","ceil","ticks","isFinite","sturges","LN2","histogram","xz","domain","x0","x1","tz","threshold","bin","bins","thresholds","quantile","value1","freedmanDiaconis","scott","median","numbers","merged","j","permute","indexes","permutes","xi","xj","shuffle","t","transpose","matrix","row","zip","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","tree","xm","ym","xp","yp","bottom","_root","leaf","_x0","y0","_y0","_x1","y1","_y1","_x","_y","yz","cover","removeAll","defaultX","defaultY","nodes","Quadtree","leaf_copy","copy","tree_add","tree_cover","z","tree_data","visit","tree_extent","Quad","tree_find","x2","y2","q","x3","y3","quads","dx","dy","d2","tree_remove","retainer","previous","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","_next","restart","timerFlush","frame","taskHead","wake","clockLast","nap","poke","pokeDelay","t0","t2","t1","taskTail","sleep","interval","timeout$1","elapsed","interval$1","total","tick","EventListener","listen","eventType","removeEventListener","detachEvent","capture","registerDefault","containsNode","outerNode","innerNode","isTextNode","parentNode","contains","compareDocumentPosition","focusNode","focus","getActiveElement","doc","activeElement","body","isNode","ownerDocument","defaultView","Node","nodeType","PI_OVER_180","PI","stages","idCounter","ids","names","shapes","listenClickTap","inDblClickWindow","isBrowser","enableTrace","traceArrMax","dblClickWindow","pixelRatio","dragDistance","angleDeg","showWarnings","Filters","isDragging","dd","DD","isDragReady","_addId","_removeId","_addName","_removeName","_id","no","getAngle","angle","_detectIE","ua","msie","parseInt","substring","trident","rv","edge","_parseUA","userAgent","match","exec","mobile","ieMobile","isIE","UA","glob","WorkerGlobalScope","navigator","Collection","each","toArray","toCollection","collection","_mapMethod","mapMethods","prot","Transform","point","translate","scale","sx","sy","rotate","rad","cos","sin","m11","m12","m21","m22","getTranslation","skew","multiply","invert","m0","m1","m2","m3","m4","m5","getMatrix","setAbsolutePosition","yt","xt","CONTEXT_2D","OBJECT_ARRAY","OBJECT_NUMBER","OBJECT_STRING","PI_OVER_DEG180","DEG180_OVER_PI","HASH","EMPTY_STRING","KONVA_WARNING","KONVA_ERROR","RGB_PAREN","COLORS","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","transparent","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RGB_REGEX","Util","_isElement","_isFunction","_isObject","_isArray","_isNumber","_isString","_throttle","wait","later","leading","getTime","trailing","_hasMethods","isValidSelector","selector","firstChar","createCanvasElement","canvas","_nodeCanvas","_isInDocument","el","_simplifyArray","retArr","util","round","_getImage","imageObj","_context","getContext","putImageData","toDataURL","_getRGBAString","alpha","_rgbToHex","g","_hexToRgb","hex","bigint","getRandomColor","randColor","def","getRGB","color","rgb","colorToRGBA","str","_namedColorToRBA","_hex3ColorToRGBA","_hex6ColorToRGBA","_rgbColorToRGBA","_rgbaColorToRGBA","parts","Number","_merge","o1","o2","retObj","_clone","cloneObject","cloneArray","_degToRad","deg","_radToDeg","_capitalize","charAt","extend","Ctor","oldProto","__super__","super","addMethods","methods","_getControlPoints","d01","d12","fa","fb","p1x","p1y","p2x","p2y","_expandPoints","tension","cp","allPoints","_removeLastLetter","_getProjectionToSegment","pd2","u","_getProjectionToLine","pt","isClosed","pc","MAX_VALUE","p1","p2","proj","px","py","pdist","_prepareArrayForTween","startArray","endArray","end","temp","newStart","pr","_prepareToStringify","visitedByCircularReferenceRemoval","getDevicePixelRatio","_pixelRatio","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Canvas","config","init","conf","_canvas","padding","margin","border","background","position","top","getPixelRatio","setPixelRatio","previousRatio","setSize","getWidth","getHeight","setWidth","setHeight","mimeType","quality","SceneCanvas","SceneContext","HitCanvas","HitContext","hitCanvas","COMMA","OPEN_PAREN","CLOSE_PAREN","OPEN_PAREN_BRACKET","CLOSE_BRACKET_PAREN","SEMICOLON","DOUBLE_PAREN","EQUALS","CONTEXT_METHODS","CONTEXT_PROPERTIES","Context","traceArr","_enableTrace","fillShape","shape","getFillEnabled","_fill","strokeShape","getStrokeEnabled","_stroke","fillStrokeShape","fillEnabled","getTrace","relaxed","trace","method","clearTrace","_trace","reset","getCanvas","setTransform","bounds","clearRect","_applyLineCap","lineCap","getLineCap","_applyOpacity","absOpacity","getAbsoluteOpacity","_applyLineJoin","lineJoin","getLineJoin","attr","arc","beginPath","bezierCurveTo","clip","closePath","createImageData","createLinearGradient","createPattern","createRadialGradient","drawImage","isPointInPath","fill","fillRect","strokeRect","fillText","measureText","getImageData","lineTo","moveTo","rect","quadraticCurveTo","restore","save","setLineDash","mozDash","webkitLineDash","getLineDash","stroke","strokeText","transform","that","origSetter","origMethod","_fillColor","_fillFunc","_fillPattern","fillPatternX","getFillPatternX","fillPatternY","getFillPatternY","getFillPatternScale","fillPatternRotation","getFillPatternRotation","getFillPatternOffset","getFillPatternImage","getFillPatternRepeat","_fillLinearGradient","getFillLinearGradientStartPoint","getFillLinearGradientEndPoint","colorStops","getFillLinearGradientColorStops","grd","addColorStop","_fillRadialGradient","getFillRadialGradientStartPoint","getFillRadialGradientEndPoint","startRadius","getFillRadialGradientStartRadius","endRadius","getFillRadialGradientEndRadius","getFillRadialGradientColorStops","hasColor","hasPattern","hasLinearGradient","hasRadialGradient","fillPriority","getFillPriority","dash","strokeScaleEnabled","getStrokeScaleEnabled","Text","hasStroke","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeFunc","_applyShadow","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","scaleX","scaleY","_applyGlobalCompositeOperation","globalCompositeOperation","getGlobalCompositeOperation","colorKey","_fillFuncHit","strokeHitEnabled","_strokeFuncHit","GET","SET","Factory","addGetterSetter","validator","after","addGetter","addSetter","addOverloadedGetterSetter","_setAttr","addComponentsGetterSetter","components","capitalize","oldVal","_fireChangeEvent","capitalizedAttr","addDeprecatedGetterSetter","backCompat","oldMethodName","newMethodName","afterSetFilter","_filterUpToDate","Validators","RGBComponent","alphaComponent","ABSOLUTE_OPACITY","ABSOLUTE_TRANSFORM","ABSOLUTE_SCALE","CHANGE","CHILDREN","DOT","ID","KONVA","LISTENING","MOUSEENTER","MOUSELEAVE","NAME","SHAPE","SPACE","STAGE","TRANSFORM","UPPER_STAGE","VISIBLE","CLONE_BLACK_LIST","TRANSFORM_CHANGE_STR","SCALE_CHANGE_STR","_init","eventListeners","_cache","_isUnderCache","_clearCache","_clearSelfAndDescendantCache","_getCache","privateGetter","getChildren","clearCache","getClientRect","skipTransform","relativeTo","getParent","drawBorder","cachedSceneCanvas","cachedFilterCanvas","cachedHitCanvas","sceneContext","hitContext","isCache","drawScene","drawHit","scene","hit","_transformedRect","minX","minY","maxX","points","trans","getAbsoluteTransform","transformed","_drawCachedSceneCanvas","cacheCanvas","_getCachedSceneCanvas","_drawCachedHitCanvas","cachedCanvas","imageData","filters","sceneCanvas","filterCanvas","filterContext","evtStr","_delegate","baseEvent","events","_off","dispatchEvent","evt","fire","stopNode","targets","findAncestors","currentTarget","_setChildrenIndices","getId","getName","subname","getAncestors","ancestors","getAttrs","isListening","_isListening","listening","getListening","isVisible","_isVisible","visible","getVisible","shouldDrawHit","layer","hitGraphEnabled","show","setVisible","hide","getAbsoluteZIndex","addChildren","getDepth","depth","setPosition","setX","setY","getPosition","getX","getY","getAbsolutePosition","absoluteMatrix","absoluteTransform","it","origTrans","_clearTransform","_setTransform","rotation","getRotation","getScaleX","getScaleY","offsetX","getOffsetX","offsetY","getOffsetY","skewX","getSkewX","skewY","getSkewY","changeX","changeY","_eachAncestorReverse","family","theta","setRotation","moveUp","moveDown","moveToBottom","zIndex","_getAbsoluteOpacity","getOpacity","newContainer","__originalRemove","defaultValue","getClassName","JSON","stringify","includeSelf","_isMatch","ancestor","findAncestor","sel","selectorArr","hasName","_get","_getStage","bubble","_fireAndBubble","_fire","_getAbsoluteTransform","transformsEnabled","at","getTransform","_getAbsoluteScale","_getTransform","allListeners","blockAttr","_toKonvaCanvas","stage","toCanvas","toImage","img","getSize","getType","getDragDistance","evtName","evtListeners","newVal","setId","oldId","setName","oldNames","newNames","addName","oldName","newName","removeName","_setComponentAttr","compareShape","okayToRun","isAncestorOf","stopBubble","cancelBubble","draw","parse","_createNode","rotateDeg","setRotationDeg","getRotationDeg","Grayscale","brightness","Brighten","Invert","BlurStack","filterGaussBlurRGBA","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pg","pb","pa","rbs","pixels","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","stackEnd","stackIn","stackOut","mul_sum","mul_table","shg_sum","shg_table","Blur","blurRadius","pixelAt","idata","rgbDistance","rgbMean","pTab","backgroundMask","rgbv_no","rgbv_ne","rgbv_so","rgbv_se","thres","mask","applyMask","erodeMask","sw","sh","weights","side","halfSide","maskResult","so","scy","scx","srcOff","wt","dilateMask","smoothEdgeMask","Mask","RGB","nPixels","RGBA","ia","HSV","saturation","h","hue","vsu","vsw","rr","rg","rb","gr","gg","gb","br","bg","bb","HSL","luminance","Emboss","strength","embossStrength","greyLevel","embossWhiteLevel","direction","embossDirection","blend","embossBlend","dirY","dirX","w","w4","otherY","offsetYOther","otherX","offsetOther","dR","dG","dB","dif","absDif","absG","absB","remap","fromValue","fromMin","fromMax","toMin","toMax","toValue","fromRange","toRange","Enhance","nSubPixels","rMin","rMax","gMin","gMax","bMin","bMax","enhanceAmount","enhance","rMid","rGoalMax","rGoalMin","gMid","gGoalMax","gGoalMin","bMid","bGoalMax","bGoalMin","Posterize","levels","Noise","amount","noise","half","Pixelate","xBinStart","xBinEnd","yBinStart","yBinEnd","xBin","yBin","pixelsInBin","pixelSize","nBinsX","nBinsY","Threshold","level","Sepia","or","og","ob","Solarize","ToPolar","dst","opt","srcPixels","dstPixels","xSize","ySize","xMid","polarCenterX","yMid","polarCenterY","rSize","tSize","conversion","FromPolar","phaseShift","polarRotation","atan2","Kaleidoscope","xoff","srcPos","dstPos","kaleidoscopePower","kaleidoscopeAngle","tempCanvas","scratchData","minSectionSize","sectionSize","xStart","xEnd","xDelta","Container","__init","filterFunc","results","hasChildren","removeChildren","destroyChildren","_validateAdd","anim","setLayers","clen","_getNodeById","_getNodesByName","findOne","_getDescendants","getAllIntersections","intersects","can","caching","_applyTransform","_drawChildren","clearHitCache","drawMethod","skipBuffer","clipX","clipY","clipWidth","getClipWidth","clipHeight","getClipHeight","clipFunc","getClipFunc","hasClip","getClipX","getClipY","layerUnderDrag","getLayers","selfRect","_clearHasShadowCache","HAS_SHADOW","_clearGetShadowRGBACache","SHADOW_RGBA","Shape","hasShadow","_hasShadow","getShadowEnabled","getShadowOpacity","getShadowColor","getShadowOffsetX","getShadowOffsetY","_getShadowRGBA","rgba","hasFill","getFill","strokeEnabled","bufferHitCanvas","_useBufferCanvas","perfectDrawEnabled","getSelfRect","_centroid","fillAndStrokeWidth","fillAndStrokeHeight","shadowOffsetX","shadowOffsetY","preWidth","preHeight","roundingOffset","bufferCanvas","bufferContext","drawFunc","sceneFunc","hitFunc","drawHitFromCache","alphaThreshold","hitImageData","hitData","rgbColorKey","hitWidth","hitHeight","dashArray","getDashArray","setDashArray","getDrawFunc","setDrawFunc","drawHitFunc","getDrawHitFunc","setDrawHitFunc","addEvent","ctx","content","UNDERSCORE","STRING","PX","MOUSEOUT","MOUSEOVER","MOUSEMOVE","MOUSEDOWN","MOUSEUP","CONTEXTMENU","CLICK","DBL_CLICK","TOUCHSTART","TOUCHEND","TAP","DBL_TAP","TOUCHMOVE","WHEEL","CONTENT_MOUSEOUT","CONTENT_MOUSEOVER","CONTENT_MOUSEMOVE","CONTENT_MOUSEDOWN","CONTENT_MOUSEUP","CONTENT_CONTEXTMENU","CONTENT_CLICK","CONTENT_DBL_CLICK","CONTENT_TOUCHSTART","CONTENT_TOUCHEND","CONTENT_DBL_TAP","CONTENT_TAP","CONTENT_TOUCHMOVE","CONTENT_WHEEL","DIV","RELATIVE","KONVA_CONTENT","CONTAINER","EVENTS","eventsLength","___init","_buildDOM","_bindContentEvents","_enableNestedTransforms","setContainer","getElementsByClassName","_resizeDOM","layers","getContainer","getPointerPosition","pointerPos","getContent","dataUrl","getIntersection","_setCanvasSize","_mouseover","_setPointerPosition","_mouseout","targetShape","_mousemove","_touchmove","movementX","movementY","preventDefault","_mousedown","_touchstart","clickStartShape","_mouseup","_touchend","clickEndShape","fireDblClick","justDragged","_contextmenu","tapStartShape","_wheel","contentPosition","_getContentPosition","touches","touch","clientX","clientY","getBoundingClientRect","innerHTML","setAttribute","_onContent","typesStr","types","BaseLayer","createPNGStream","getHitCanvas","_hitImageData","moved","BEFORE_DRAW","DRAW","INTERSECTION_OFFSETS","INTERSECTION_OFFSETS_LEN","____init","intersectionOffset","spiralSearchDistance","continueSearch","_getIntersection","antialiased","_getImageData","p3","getClearBeforeDraw","display","enableHitGraph","setHitGraphEnabled","disableHitGraph","FastLayer","FRAF","requestAnimFrame","RAF","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Animation","Anim","animIdCounter","timeDiff","lastTime","lays","addLayer","isRunning","animations","_addAnimation","_removeAnimation","_updateFrameObject","frameRate","animRunning","_handleAnimation","_runFrames","layersLen","needRedraw","layerHash","_animationLoop","batchAnim","duration","easing","onFinish","yoyo","PAUSED","PLAYING","REVERSING","colorAttrs","Tween","propFunc","begin","finish","_pos","_change","prevPos","_position","_startTime","_finish","pause","setTime","play","update","getTimer","onEnterFrame","seek","nodeId","Easings","Linear","tween","_tweenFunc","_addListeners","tweens","_addAttr","onReset","diff","tweenId","trueEnd","trueStart","closed","endRGBA","onPlay","onReverse","onPause","thisId","params","BackEaseIn","BackEaseOut","BackEaseInOut","ElasticEaseIn","asin","ElasticEaseOut","ElasticEaseInOut","BounceEaseOut","BounceEaseIn","BounceEaseInOut","EaseIn","EaseOut","EaseInOut","StrongEaseIn","StrongEaseOut","StrongEaseInOut","dirty","_drag","distance","startPointerPos","_setDragPosition","_endDragBefore","dragEndNode","_endDragAfter","startDrag","ap","stopDrag","dbf","getDragBoundFunc","newNodePos","_lastPos","setDraggable","_dragChange","origRemove","_listenDrag","_dragCleanup","button","html","documentElement","Rect","_sceneFunc","cornerRadius","getCornerRadius","PIx2","CIRCLE","getRadius","setRadius","ELLIPSE","Ellipse","rx","getRadiusX","ry","getRadiusY","Ring","getInnerRadius","getOuterRadius","outerRadius","setOuterRadius","Wedge","getClockwise","getAngleDeg","setAngleDeg","Arc","clockwise","IMAGE","_hitFunc","cropWidth","cropHeight","image","getImage","getCropWidth","getCropHeight","getCropX","getCropY","fromURL","url","getDummyContext","dummyContext","partialText","AUTO","CENTER","JUSTIFY","CHANGE_KONVA","DASH","LEFT","TEXT","TEXT_UPPER","MIDDLE","NORMAL","PX_SPACE","RIGHT","WORD","CHAR","NONE","ATTR_CHANGE_LIST","attrChangeListLen","fillLinearGradientColorStops","fillRadialGradientColorStops","_setTextData","getPadding","textHeight","getTextHeight","lineHeightPx","getLineHeight","textArr","textArrLen","align","getAlign","totalWidth","letterSpacing","getLetterSpacing","textDecoration","fontSize","_getContextFont","lineWidth","strokeStyle","spacesNumber","li","_getTextSize","setText","isAuto","getTextWidth","textWidth","metrics","getFontSize","font","getFontStyle","getFontFamily","getFontVariant","_addTextLine","trim","_getTextWidth","latterSpacing","getText","fixedWidth","fixedHeight","maxWidth","maxHeightPx","currentHeightPx","getWrap","shouldWrap","wrapAtWord","low","high","matchWidth","substrWidth","wrapIndex","lastIndexOf","Line","tp","getPoints","getTension","getClosed","bezier","getBezier","getTensionPoints","_getTensionPoints","_getTensionPointsClosed","firstControlPoints","lastControlPoints","middle","_updated","updated","frameIndex","_setInterval","getAnimation","ix4","getAnimations","offsets","frameOffsets","ix2","_updateIndex","getFrameRate","animation","getIndex","setIndex","Path","dataArray","parsePathData","getData","ca","command","dTheta","psi","fs","getLineLength","getPointOnLine","P1x","P1y","P2x","P2y","fromX","fromY","rise","ix","iy","pRise","pRun","getPointOnCubicBezier","pct","P3x","P3y","P4x","P4y","CB1","CB2","CB3","CB4","getPointOnQuadraticBezier","QB1","QB2","QB3","getPointOnEllipticalArc","cosPsi","sinPsi","cs","cc","cpx","cpy","parseFloat","prevCmd","ctlPtx","ctlPty","cmd","startX","startY","convertEndpointToCenterParameterization","pathLength","calcLength","path","inc","psiDeg","lambda","cxp","cyp","vMag","vRatio","vAngle","acos","TextPath","dummyCanvas","getTextBaseline","glyphInfo","p0","textFullWidth","fullPathWidth","pathCmd","charArr","pIndex","currentT","getNextPathSegment","pathData","findSegmentToFitCharacter","glyphWidth","currLen","attempts","cumulativePathLength","needNewSegment","testChar","kern","midpoint","transposeX","transposeY","info","RegularPolygon","sides","Star","innerRadius","numPoints","UP","DOWN","LABEL","Label","_sync","getTag","pointerDirection","pointerWidth","pointerHeight","tag","getPointerDirection","getPointerWidth","getPointerHeight","Tag","Arrow","PI2","radians","pointerLength","pointerAtBeginning","E","encodeURIComponent","va","oa","wa","hasBooleanValue","hasStringBooleanValue","hasOverloadedBooleanValue","Ia","Ja","P","_hasCaughtError","_caughtError","Ka","_hasRethrowError","_rethrowError","Na","La","Ma","Oa","extractEvents","eventTypes","Pa","phasedRegistrationNames","Qa","registrationName","Ra","Sa","Ta","Ua","Za","Ya","invokeGuardedCallbackAndCatchFirstError","$a","ab","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","db","ib","stateNode","Wa","disabled","jb","kb","lb","rethrowCaughtError","Q","qb","tb","ub","vb","dispatchConfig","wb","_targetInst","xb","yb","zb","Ab","Bb","alternate","Eb","Db","Fb","S","_fallbackText","_startText","Gb","T","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","C","Kb","eventPool","Lb","destructor","Jb","getPooled","Mb","Nb","dc","Pb","keyCode","ec","detail","gc","which","ac","hc","fc","Vb","ctrlKey","altKey","metaKey","char","$b","mc","Xa","jc","restoreControlledState","oc","kc","lc","rc","tc","sc","vc","uc","wc","srcElement","correspondingUseElement","yc","xc","implementation","hasFeature","zc","Ac","getValue","setValue","stopTracking","_valueTracker","Bc","Cc","checked","Ec","Dc","Hc","Ic","Jc","Lc","Fc","Mc","Gc","Nc","Oc","Pc","$c","bd","getModifierState","cd","ed","fd","jd","kd","effectTag","ld","_reactInternalFiber","md","nd","sibling","current","od","pd","rd","targetInst","containerInfo","sd","topLevelType","ud","td","U","ba","vd","wd","qd","yd","Cd","Ad","zd","Bd","Hd","Gd","Fd","Ed","Id","firstChild","Jd","textContent","nextSibling","Kd","contentEditable","Rd","Qd","Nd","da","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusOffset","Pd","ea","Md","select","Od","Td","Ud","Vd","Wd","charCode","Zd","$d","ae","be","ce","V","he","ge","W","ke","le","je","ie","me","D","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","ne","X","oe","cursor","pe","getChildContext","B","qe","__reactInternalMemoizedMergedChildContext","re","Y","memoizedState","updateQueue","memoizedProps","pendingProps","internalContextTag","lastEffect","firstEffect","nextEffect","expirationTime","se","te","isReactComponent","ue","ve","we","xe","ye","pendingChildren","Be","Ce","isDisabled","supportsFiber","ze","onCommitFiberRoot","Ae","onCommitFiberUnmount","De","Ee","Fe","baseState","first","last","callbackList","hasForceUpdate","isInitialized","Ge","He","Ie","partialState","Je","isReplace","isForced","Ke","Le","updater","isMounted","enqueueSetState","nextCallback","enqueueReplaceState","enqueueForceUpdate","adoptClassInstance","constructClassInstance","mountClassInstance","unstable_isAsyncReactComponent","updateClassInstance","componentWillReceiveProps","G","I","L","isPureReactComponent","componentWillUpdate","Xe","We","Ze","_owner","_stringRef","$e","af","$$typeof","Re","Ve","Se","Te","Ue","Ye","A","N","J","df","cf","bf","pendingContext","pushHostContext","pushHostContainer","enterHydrationState","resetHydrationState","tryToClaimNextHydratableInstance","Ob","beginWork","element","hydrate","beginFailedWork","ef","persistence","getRootHostContainer","popHostContext","getHostContext","popHostContainer","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","completeWork","ff","commitResetTextContent","commitPlacement","commitDeletion","commitWork","commitLifeCycles","commitAttachRef","commitDetachRef","hf","gf","resetHostContainer","jf","hydration","canHydrateInstance","canHydrateTextInstance","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","hydrateTextInstance","kf","Qb","ja","isReadyForCommit","yg","zg","Ag","Ne","Oe","Sc","Bg","Tc","Cg","Dg","Eg","R","componentDidCatch","componentStack","Qc","ha","qa","Fg","H","Gg","Uc","F","ra","Rc","eb","qg","Set","_debugOwner","_debugSource","fileName","lineNumber","errorBoundary","errorBoundaryFound","errorBoundaryName","willRetry","suppressReactErrorLogging","Vc","ka","Hg","Rb","Ig","nextScheduledRoot","remainingExpirationTime","O","sa","Fa","la","Sb","ma","na","Wc","Pe","Tb","Jg","Xc","Kg","Yc","Ub","Zc","finishedWork","Lg","Me","cancelDeferredCallback","computeAsyncExpiration","computeExpirationForFiber","scheduleWork","batchedUpdates","unbatchedUpdates","flushSync","deferredUpdates","lf","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","injectIntoDevTools","findFiberByHostInstance","findHostInstanceByFiber","pf","Hf","Gf","Ff","Ef","test","If","mutationMethod","hasNumericValue","hasPositiveNumericValue","Jf","mustUseProperty","attributeName","attributeNamespace","setAttributeNS","Kf","removeAttribute","Lf","defaultChecked","_wrapperState","initialChecked","Mf","controlled","Nf","Of","Pf","Qf","aa","Rf","Sf","selected","defaultSelected","Tf","wasMultiple","multiple","Uf","dangerouslySetInnerHTML","Vf","Wf","Xf","Zf","$f","cg","lastChild","nodeValue","fg","dg","setProperty","hg","ig","lg","topBlur","topFocus","topCancel","topClose","Dd","ng","jg","createElementNS","mg","kg","__html","onClick","onclick","sg","tg","ug","vg","Ng","Og","hasAttribute","Pg","_reactRootContainer","Z","Qg","Rg","suppressContentEditableWarning","suppressHydrationWarning","ta","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","HAS_STRING_BOOLEAN_VALUE","injectDOMPropertyConfig","Properties","DOMAttributeNamespaces","DOMAttributeNames","DOMMutationMethods","xa","ya","K","za","Aa","Ba","Ca","Da","allowFullScreen","async","autoFocus","autoPlay","cols","controls","defer","download","formNoValidate","hidden","loop","muted","noValidate","open","playsInline","readOnly","required","reversed","rows","rowSpan","scoped","seamless","span","spellCheck","itemScope","acceptCharset","htmlFor","httpEquiv","validity","badInput","Ea","M","xlink","xml","Ga","autoReverse","externalResourcesRequired","preserveAlpha","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlLang","xmlSpace","Ha","injection","injectErrorUtils","invokeGuardedCallback","hasCaughtError","clearCaughtError","Va","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","hb","mb","getListener","enqueueEvents","processEventQueue","nb","sb","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","Cb","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","Hb","Ib","eventPhase","bubbles","cancelable","timeStamp","isTrusted","stopPropagation","persist","augmentClass","Wb","documentMode","Xb","Yb","opera","Zb","bc","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","ic","nc","injectFiberControlledHostComponent","qc","enqueueStateRestore","restoreStateIfNeeded","date","datetime","datetime-local","email","month","password","search","tel","week","Kc","ad","_isInputEventSupported","getAttribute","Alt","Control","Meta","Shift","screenX","screenY","pageX","pageY","shiftKey","buttons","relatedTarget","fromElement","toElement","gd","mouseEnter","mouseLeave","hd","parentWindow","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","xd","_enabled","_handleTopLevel","setHandleTopLevel","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","animationend","animationiteration","animationstart","transitionend","transition","topAbort","topAnimationEnd","topAnimationIteration","topAnimationStart","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topInput","topKeyDown","topKeyPress","topKeyUp","topLoadedData","topLoad","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSuspend","topTextInput","topTimeUpdate","topToggle","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topVolumeChange","topWaiting","topWheel","Ld","Sd","onSelect","animationName","elapsedTime","pseudoElement","clipboardData","Xd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Yd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","repeat","locale","dataTransfer","targetTouches","changedTouches","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","de","ee","fe","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","Qe","mf","nf","of","qf","rf","sf","tf","cancelIdleCallback","Bf","uf","vf","wf","xf","yf","zf","Af","didTimeout","Cf","Df","Yf","mathml","svg","ag","MSApp","execUnsafeLocalFunction","namespaceURI","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","eg","menuitem","area","col","embed","hr","input","keygen","link","meta","param","wbr","wg","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","form","xg","Mg","tagName","rangeCount","focusedElem","selectionRange","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","didNotHydrateContainerInstance","didNotHydrateInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","unmount","Sg","createPortal","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_deferredUpdates","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","bundleType","rendererPackageName","Tg","Ug","$$$reconciler","escape","=",":","keyPrefix","__self","__source","PureComponent","unstable_AsyncComponent","Fragment","cloneElement","createFactory","isValidElement","normalizeName","normalizeValue","iteratorFor","support","iterable","Headers","headers","append","consumed","bodyUsed","fileReaderReady","reader","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","ArrayBuffer","rejected","decode","json","normalizeMethod","upcased","Request","credentials","mode","referrer","bytes","decodeURIComponent","xhr","head","getAllResponseHeaders","header","Response","bodyInit","status","ok","statusText","fetch","getAll","response","redirectStatuses","redirect","responseURL","getResponseHeader","XMLHttpRequest","responseText","ontimeout","withCredentials","responseType","setRequestHeader","polyfill"],"mappings":"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","file":"static/js/main.8281b6ce.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/declarative-canvas-react-konva/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(12);\n\tmodule.exports = __webpack_require__(16);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(37);\n\t} else {\n\t  module.exports = require('./cjs/react.development.js');\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyObject = {};\n\t\n\tif (false) {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(5), __webpack_require__(1), __webpack_require__(9)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'mobx', 'react', 'react-dom'], factory) :\n\t\t(factory((global.mobxReact = {}),global.mobx,global.React,global.ReactDOM));\n\t}(this, (function (exports,mobx,react,reactDom) { 'use strict';\n\t\n\t// These functions can be stubbed out in specific environments\n\tvar unstable_batchedUpdates$1 = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t  return typeof obj;\n\t} : function (obj) {\n\t  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n\t};\n\t\n\t\n\t\n\t\n\t\n\tvar asyncGenerator = function () {\n\t  function AwaitValue(value) {\n\t    this.value = value;\n\t  }\n\t\n\t  function AsyncGenerator(gen) {\n\t    var front, back;\n\t\n\t    function send(key, arg) {\n\t      return new Promise(function (resolve, reject) {\n\t        var request = {\n\t          key: key,\n\t          arg: arg,\n\t          resolve: resolve,\n\t          reject: reject,\n\t          next: null\n\t        };\n\t\n\t        if (back) {\n\t          back = back.next = request;\n\t        } else {\n\t          front = back = request;\n\t          resume(key, arg);\n\t        }\n\t      });\n\t    }\n\t\n\t    function resume(key, arg) {\n\t      try {\n\t        var result = gen[key](arg);\n\t        var value = result.value;\n\t\n\t        if (value instanceof AwaitValue) {\n\t          Promise.resolve(value.value).then(function (arg) {\n\t            resume(\"next\", arg);\n\t          }, function (arg) {\n\t            resume(\"throw\", arg);\n\t          });\n\t        } else {\n\t          settle(result.done ? \"return\" : \"normal\", result.value);\n\t        }\n\t      } catch (err) {\n\t        settle(\"throw\", err);\n\t      }\n\t    }\n\t\n\t    function settle(type, value) {\n\t      switch (type) {\n\t        case \"return\":\n\t          front.resolve({\n\t            value: value,\n\t            done: true\n\t          });\n\t          break;\n\t\n\t        case \"throw\":\n\t          front.reject(value);\n\t          break;\n\t\n\t        default:\n\t          front.resolve({\n\t            value: value,\n\t            done: false\n\t          });\n\t          break;\n\t      }\n\t\n\t      front = front.next;\n\t\n\t      if (front) {\n\t        resume(front.key, front.arg);\n\t      } else {\n\t        back = null;\n\t      }\n\t    }\n\t\n\t    this._invoke = send;\n\t\n\t    if (typeof gen.return !== \"function\") {\n\t      this.return = undefined;\n\t    }\n\t  }\n\t\n\t  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n\t    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n\t      return this;\n\t    };\n\t  }\n\t\n\t  AsyncGenerator.prototype.next = function (arg) {\n\t    return this._invoke(\"next\", arg);\n\t  };\n\t\n\t  AsyncGenerator.prototype.throw = function (arg) {\n\t    return this._invoke(\"throw\", arg);\n\t  };\n\t\n\t  AsyncGenerator.prototype.return = function (arg) {\n\t    return this._invoke(\"return\", arg);\n\t  };\n\t\n\t  return {\n\t    wrap: function (fn) {\n\t      return function () {\n\t        return new AsyncGenerator(fn.apply(this, arguments));\n\t      };\n\t    },\n\t    await: function (value) {\n\t      return new AwaitValue(value);\n\t    }\n\t  };\n\t}();\n\t\n\t\n\t\n\t\n\t\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\t\n\tvar createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\t\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tvar inherits = function (subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n\t  }\n\t\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      enumerable: false,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t};\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tvar possibleConstructorReturn = function (self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }\n\t\n\t  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n\t};\n\t\n\tvar EventEmitter = function () {\n\t    function EventEmitter() {\n\t        classCallCheck(this, EventEmitter);\n\t        this.listeners = [];\n\t    }\n\t\n\t    createClass(EventEmitter, [{\n\t        key: \"on\",\n\t        value: function on(cb) {\n\t            var _this = this;\n\t\n\t            this.listeners.push(cb);\n\t            return function () {\n\t                var index = _this.listeners.indexOf(cb);\n\t                if (index !== -1) _this.listeners.splice(index, 1);\n\t            };\n\t        }\n\t    }, {\n\t        key: \"emit\",\n\t        value: function emit(data) {\n\t            this.listeners.forEach(function (fn) {\n\t                return fn(data);\n\t            });\n\t        }\n\t    }]);\n\t    return EventEmitter;\n\t}();\n\t\n\t/**\n\t * Copyright 2015, Yahoo! Inc.\n\t * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n\t */\n\t'use strict';\n\t\n\tvar REACT_STATICS = {\n\t    childContextTypes: true,\n\t    contextTypes: true,\n\t    defaultProps: true,\n\t    displayName: true,\n\t    getDefaultProps: true,\n\t    mixins: true,\n\t    propTypes: true,\n\t    type: true\n\t};\n\t\n\tvar KNOWN_STATICS = {\n\t  name: true,\n\t  length: true,\n\t  prototype: true,\n\t  caller: true,\n\t  callee: true,\n\t  arguments: true,\n\t  arity: true\n\t};\n\t\n\tvar defineProperty$1 = Object.defineProperty;\n\tvar getOwnPropertyNames = Object.getOwnPropertyNames;\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\tvar getPrototypeOf = Object.getPrototypeOf;\n\tvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\t\n\tvar hoistNonReactStatics = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n\t    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\t\n\t        if (objectPrototype) {\n\t            var inheritedComponent = getPrototypeOf(sourceComponent);\n\t            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n\t                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n\t            }\n\t        }\n\t\n\t        var keys = getOwnPropertyNames(sourceComponent);\n\t\n\t        if (getOwnPropertySymbols) {\n\t            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n\t        }\n\t\n\t        for (var i = 0; i < keys.length; ++i) {\n\t            var key = keys[i];\n\t            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n\t                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\t                try { // Avoid failures from read-only properties\n\t                    defineProperty$1(targetComponent, key, descriptor);\n\t                } catch (e) {}\n\t            }\n\t        }\n\t\n\t        return targetComponent;\n\t    }\n\t\n\t    return targetComponent;\n\t};\n\t\n\t// Copied from React.PropTypes\n\tfunction createChainableTypeChecker(validate) {\n\t    function checkType(isRequired, props, propName, componentName, location, propFullName) {\n\t        for (var _len = arguments.length, rest = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n\t            rest[_key - 6] = arguments[_key];\n\t        }\n\t\n\t        return mobx.untracked(function () {\n\t            componentName = componentName || \"<<anonymous>>\";\n\t            propFullName = propFullName || propName;\n\t            if (props[propName] == null) {\n\t                if (isRequired) {\n\t                    var actual = props[propName] === null ? \"null\" : \"undefined\";\n\t                    return new Error(\"The \" + location + \" `\" + propFullName + \"` is marked as required \" + \"in `\" + componentName + \"`, but its value is `\" + actual + \"`.\");\n\t                }\n\t                return null;\n\t            } else {\n\t                return validate.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));\n\t            }\n\t        });\n\t    }\n\t\n\t    var chainedCheckType = checkType.bind(null, false);\n\t    chainedCheckType.isRequired = checkType.bind(null, true);\n\t    return chainedCheckType;\n\t}\n\t\n\t// Copied from React.PropTypes\n\tfunction isSymbol(propType, propValue) {\n\t    // Native Symbol.\n\t    if (propType === \"symbol\") {\n\t        return true;\n\t    }\n\t\n\t    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t    if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n\t        return true;\n\t    }\n\t\n\t    // Fallback for non-spec compliant Symbols which are polyfilled.\n\t    if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n\t        return true;\n\t    }\n\t\n\t    return false;\n\t}\n\t\n\t// Copied from React.PropTypes\n\tfunction getPropType(propValue) {\n\t    var propType = typeof propValue === \"undefined\" ? \"undefined\" : _typeof(propValue);\n\t    if (Array.isArray(propValue)) {\n\t        return \"array\";\n\t    }\n\t    if (propValue instanceof RegExp) {\n\t        // Old webkits (at least until Android 4.0) return 'function' rather than\n\t        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t        // passes PropTypes.object.\n\t        return \"object\";\n\t    }\n\t    if (isSymbol(propType, propValue)) {\n\t        return \"symbol\";\n\t    }\n\t    return propType;\n\t}\n\t\n\t// This handles more types than `getPropType`. Only used for error messages.\n\t// Copied from React.PropTypes\n\tfunction getPreciseType(propValue) {\n\t    var propType = getPropType(propValue);\n\t    if (propType === \"object\") {\n\t        if (propValue instanceof Date) {\n\t            return \"date\";\n\t        } else if (propValue instanceof RegExp) {\n\t            return \"regexp\";\n\t        }\n\t    }\n\t    return propType;\n\t}\n\t\n\tfunction createObservableTypeCheckerCreator(allowNativeType, mobxType) {\n\t    return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n\t        return mobx.untracked(function () {\n\t            if (allowNativeType) {\n\t                if (getPropType(props[propName]) === mobxType.toLowerCase()) return null;\n\t            }\n\t            var mobxChecker = void 0;\n\t            switch (mobxType) {\n\t                case \"Array\":\n\t                    mobxChecker = mobx.isObservableArray;\n\t                    break;\n\t                case \"Object\":\n\t                    mobxChecker = mobx.isObservableObject;\n\t                    break;\n\t                case \"Map\":\n\t                    mobxChecker = mobx.isObservableMap;\n\t                    break;\n\t                default:\n\t                    throw new Error(\"Unexpected mobxType: \" + mobxType);\n\t            }\n\t            var propValue = props[propName];\n\t            if (!mobxChecker(propValue)) {\n\t                var preciseType = getPreciseType(propValue);\n\t                var nativeTypeExpectationMessage = allowNativeType ? \" or javascript `\" + mobxType.toLowerCase() + \"`\" : \"\";\n\t                return new Error(\"Invalid prop `\" + propFullName + \"` of type `\" + preciseType + \"` supplied to\" + \" `\" + componentName + \"`, expected `mobx.Observable\" + mobxType + \"`\" + nativeTypeExpectationMessage + \".\");\n\t            }\n\t            return null;\n\t        });\n\t    });\n\t}\n\t\n\tfunction createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {\n\t    return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n\t        for (var _len2 = arguments.length, rest = Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {\n\t            rest[_key2 - 5] = arguments[_key2];\n\t        }\n\t\n\t        return mobx.untracked(function () {\n\t            if (typeof typeChecker !== \"function\") {\n\t                return new Error(\"Property `\" + propFullName + \"` of component `\" + componentName + \"` has \" + \"invalid PropType notation.\");\n\t            }\n\t            var error = createObservableTypeCheckerCreator(allowNativeType, \"Array\")(props, propName, componentName);\n\t            if (error instanceof Error) return error;\n\t            var propValue = props[propName];\n\t            for (var i = 0; i < propValue.length; i++) {\n\t                error = typeChecker.apply(undefined, [propValue, i, componentName, location, propFullName + \"[\" + i + \"]\"].concat(rest));\n\t                if (error instanceof Error) return error;\n\t            }\n\t            return null;\n\t        });\n\t    });\n\t}\n\t\n\tvar observableArray = createObservableTypeCheckerCreator(false, \"Array\");\n\tvar observableArrayOf = createObservableArrayOfTypeChecker.bind(null, false);\n\tvar observableMap = createObservableTypeCheckerCreator(false, \"Map\");\n\tvar observableObject = createObservableTypeCheckerCreator(false, \"Object\");\n\tvar arrayOrObservableArray = createObservableTypeCheckerCreator(true, \"Array\");\n\tvar arrayOrObservableArrayOf = createObservableArrayOfTypeChecker.bind(null, true);\n\tvar objectOrObservableObject = createObservableTypeCheckerCreator(true, \"Object\");\n\t\n\t\n\t\n\tvar propTypes = Object.freeze({\n\t\tobservableArray: observableArray,\n\t\tobservableArrayOf: observableArrayOf,\n\t\tobservableMap: observableMap,\n\t\tobservableObject: observableObject,\n\t\tarrayOrObservableArray: arrayOrObservableArray,\n\t\tarrayOrObservableArrayOf: arrayOrObservableArrayOf,\n\t\tobjectOrObservableObject: objectOrObservableObject\n\t});\n\t\n\tfunction isStateless(component) {\n\t    // `function() {}` has prototype, but `() => {}` doesn't\n\t    // `() => {}` via Babel has prototype too.\n\t    return !(component.prototype && component.prototype.render);\n\t}\n\t\n\tvar injectorContextTypes = {\n\t    mobxStores: objectOrObservableObject\n\t};\n\tObject.seal(injectorContextTypes);\n\t\n\tvar proxiedInjectorProps = {\n\t    contextTypes: {\n\t        get: function get$$1() {\n\t            return injectorContextTypes;\n\t        },\n\t        set: function set$$1(_) {\n\t            console.warn(\"Mobx Injector: you are trying to attach `contextTypes` on an component decorated with `inject` (or `observer`) HOC. Please specify the contextTypes on the wrapped component instead. It is accessible through the `wrappedComponent`\");\n\t        },\n\t        configurable: true,\n\t        enumerable: false\n\t    },\n\t    isMobxInjector: {\n\t        value: true,\n\t        writable: true,\n\t        configurable: true,\n\t        enumerable: true\n\t    }\n\t\n\t    /**\n\t     * Store Injection\n\t     */\n\t};function createStoreInjector(grabStoresFn, component, injectNames) {\n\t    var _class, _temp2;\n\t\n\t    var displayName = \"inject-\" + (component.displayName || component.name || component.constructor && component.constructor.name || \"Unknown\");\n\t    if (injectNames) displayName += \"-with-\" + injectNames;\n\t\n\t    var Injector = (_temp2 = _class = function (_Component) {\n\t        inherits(Injector, _Component);\n\t\n\t        function Injector() {\n\t            var _ref;\n\t\n\t            var _temp, _this, _ret;\n\t\n\t            classCallCheck(this, Injector);\n\t\n\t            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t                args[_key] = arguments[_key];\n\t            }\n\t\n\t            return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Injector.__proto__ || Object.getPrototypeOf(Injector)).call.apply(_ref, [this].concat(args))), _this), _this.storeRef = function (instance) {\n\t                _this.wrappedInstance = instance;\n\t            }, _temp), possibleConstructorReturn(_this, _ret);\n\t        }\n\t\n\t        createClass(Injector, [{\n\t            key: \"render\",\n\t            value: function render() {\n\t                // Optimization: it might be more efficient to apply the mapper function *outside* the render method\n\t                // (if the mapper is a function), that could avoid expensive(?) re-rendering of the injector component\n\t                // See this test: 'using a custom injector is not too reactive' in inject.js\n\t                var newProps = {};\n\t                for (var key in this.props) {\n\t                    if (this.props.hasOwnProperty(key)) {\n\t                        newProps[key] = this.props[key];\n\t                    }\n\t                }var additionalProps = grabStoresFn(this.context.mobxStores || {}, newProps, this.context) || {};\n\t                for (var _key2 in additionalProps) {\n\t                    newProps[_key2] = additionalProps[_key2];\n\t                }\n\t\n\t                if (!isStateless(component)) {\n\t                    newProps.ref = this.storeRef;\n\t                }\n\t\n\t                return react.createElement(component, newProps);\n\t            }\n\t        }]);\n\t        return Injector;\n\t    }(react.Component), _class.displayName = displayName, _temp2);\n\t\n\t    // Static fields from component should be visible on the generated Injector\n\t\n\t    hoistNonReactStatics(Injector, component);\n\t\n\t    Injector.wrappedComponent = component;\n\t    Object.defineProperties(Injector, proxiedInjectorProps);\n\t\n\t    return Injector;\n\t}\n\t\n\tfunction grabStoresByName(storeNames) {\n\t    return function (baseStores, nextProps) {\n\t        storeNames.forEach(function (storeName) {\n\t            if (storeName in nextProps // prefer props over stores\n\t            ) return;\n\t            if (!(storeName in baseStores)) throw new Error(\"MobX injector: Store '\" + storeName + \"' is not available! Make sure it is provided by some Provider\");\n\t            nextProps[storeName] = baseStores[storeName];\n\t        });\n\t        return nextProps;\n\t    };\n\t}\n\t\n\t/**\n\t * higher order component that injects stores to a child.\n\t * takes either a varargs list of strings, which are stores read from the context,\n\t * or a function that manually maps the available stores from the context to props:\n\t * storesToProps(mobxStores, props, context) => newProps\n\t */\n\tfunction inject() /* fn(stores, nextProps) or ...storeNames */{\n\t    var grabStoresFn = void 0;\n\t    if (typeof arguments[0] === \"function\") {\n\t        grabStoresFn = arguments[0];\n\t        return function (componentClass) {\n\t            var injected = createStoreInjector(grabStoresFn, componentClass);\n\t            injected.isMobxInjector = false; // supress warning\n\t            // mark the Injector as observer, to make it react to expressions in `grabStoresFn`,\n\t            // see #111\n\t            injected = observer(injected);\n\t            injected.isMobxInjector = true; // restore warning\n\t            return injected;\n\t        };\n\t    } else {\n\t        var storeNames = [];\n\t        for (var i = 0; i < arguments.length; i++) {\n\t            storeNames[i] = arguments[i];\n\t        }grabStoresFn = grabStoresByName(storeNames);\n\t        return function (componentClass) {\n\t            return createStoreInjector(grabStoresFn, componentClass, storeNames.join(\"-\"));\n\t        };\n\t    }\n\t}\n\t\n\t/**\n\t * dev tool support\n\t */\n\tvar isDevtoolsEnabled = false;\n\t\n\tvar isUsingStaticRendering = false;\n\t\n\tvar warnedAboutObserverInjectDeprecation = false;\n\t\n\t// WeakMap<Node, Object>;\n\tvar componentByNodeRegistery = typeof WeakMap !== \"undefined\" ? new WeakMap() : undefined;\n\tvar renderReporter = new EventEmitter();\n\t\n\tfunction findDOMNode$2(component) {\n\t    if (reactDom.findDOMNode) {\n\t        try {\n\t            return reactDom.findDOMNode(component);\n\t        } catch (e) {\n\t            // findDOMNode will throw in react-test-renderer, see:\n\t            // See https://github.com/mobxjs/mobx-react/issues/216\n\t            // Is there a better heuristic?\n\t            return null;\n\t        }\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction reportRendering(component) {\n\t    var node = findDOMNode$2(component);\n\t    if (node && componentByNodeRegistery) componentByNodeRegistery.set(node, component);\n\t\n\t    renderReporter.emit({\n\t        event: \"render\",\n\t        renderTime: component.__$mobRenderEnd - component.__$mobRenderStart,\n\t        totalTime: Date.now() - component.__$mobRenderStart,\n\t        component: component,\n\t        node: node\n\t    });\n\t}\n\t\n\tfunction trackComponents() {\n\t    if (typeof WeakMap === \"undefined\") throw new Error(\"[mobx-react] tracking components is not supported in this browser.\");\n\t    if (!isDevtoolsEnabled) isDevtoolsEnabled = true;\n\t}\n\t\n\tfunction useStaticRendering(useStaticRendering) {\n\t    isUsingStaticRendering = useStaticRendering;\n\t}\n\t\n\t/**\n\t * Errors reporter\n\t */\n\t\n\tvar errorsReporter = new EventEmitter();\n\t\n\t/**\n\t * Utilities\n\t */\n\t\n\tfunction patch(target, funcName) {\n\t    var runMixinFirst = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\n\t    var base = target[funcName];\n\t    var mixinFunc = reactiveMixin[funcName];\n\t    var f = !base ? mixinFunc : runMixinFirst === true ? function () {\n\t        mixinFunc.apply(this, arguments);\n\t        base.apply(this, arguments);\n\t    } : function () {\n\t        base.apply(this, arguments);\n\t        mixinFunc.apply(this, arguments);\n\t    };\n\t\n\t    // MWE: ideally we freeze here to protect against accidental overwrites in component instances, see #195\n\t    // ...but that breaks react-hot-loader, see #231...\n\t    target[funcName] = f;\n\t}\n\t\n\tfunction isObjectShallowModified(prev, next) {\n\t    if (null == prev || null == next || (typeof prev === \"undefined\" ? \"undefined\" : _typeof(prev)) !== \"object\" || (typeof next === \"undefined\" ? \"undefined\" : _typeof(next)) !== \"object\") {\n\t        return prev !== next;\n\t    }\n\t    var keys = Object.keys(prev);\n\t    if (keys.length !== Object.keys(next).length) {\n\t        return true;\n\t    }\n\t    var key = void 0;\n\t    for (var i = keys.length - 1; i >= 0, key = keys[i]; i--) {\n\t        if (next[key] !== prev[key]) {\n\t            return true;\n\t        }\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * ReactiveMixin\n\t */\n\tvar reactiveMixin = {\n\t    componentWillMount: function componentWillMount() {\n\t        var _this = this;\n\t\n\t        if (isUsingStaticRendering === true) return;\n\t        // Generate friendly name for debugging\n\t        var initialName = this.displayName || this.name || this.constructor && (this.constructor.displayName || this.constructor.name) || \"<component>\";\n\t        var rootNodeID = this._reactInternalInstance && this._reactInternalInstance._rootNodeID;\n\t\n\t        /**\n\t         * If props are shallowly modified, react will render anyway,\n\t         * so atom.reportChanged() should not result in yet another re-render\n\t         */\n\t        var skipRender = false;\n\t        /**\n\t         * forceUpdate will re-assign this.props. We don't want that to cause a loop,\n\t         * so detect these changes\n\t         */\n\t        var isForcingUpdate = false;\n\t\n\t        function makePropertyObservableReference(propName) {\n\t            var valueHolder = this[propName];\n\t            var atom = new mobx.Atom(\"reactive \" + propName);\n\t            Object.defineProperty(this, propName, {\n\t                configurable: true,\n\t                enumerable: true,\n\t                get: function get$$1() {\n\t                    atom.reportObserved();\n\t                    return valueHolder;\n\t                },\n\t                set: function set$$1(v) {\n\t                    if (!isForcingUpdate && isObjectShallowModified(valueHolder, v)) {\n\t                        valueHolder = v;\n\t                        skipRender = true;\n\t                        atom.reportChanged();\n\t                        skipRender = false;\n\t                    } else {\n\t                        valueHolder = v;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        // make this.props an observable reference, see #124\n\t        makePropertyObservableReference.call(this, \"props\");\n\t        // make state an observable reference\n\t        makePropertyObservableReference.call(this, \"state\");\n\t\n\t        // wire up reactive render\n\t        var baseRender = this.render.bind(this);\n\t        var reaction = null;\n\t        var isRenderingPending = false;\n\t\n\t        var initialRender = function initialRender() {\n\t            reaction = new mobx.Reaction(initialName + \"#\" + rootNodeID + \".render()\", function () {\n\t                if (!isRenderingPending) {\n\t                    // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)\n\t                    // This unidiomatic React usage but React will correctly warn about this so we continue as usual\n\t                    // See #85 / Pull #44\n\t                    isRenderingPending = true;\n\t                    if (typeof _this.componentWillReact === \"function\") _this.componentWillReact(); // TODO: wrap in action?\n\t                    if (_this.__$mobxIsUnmounted !== true) {\n\t                        // If we are unmounted at this point, componentWillReact() had a side effect causing the component to unmounted\n\t                        // TODO: remove this check? Then react will properly warn about the fact that this should not happen? See #73\n\t                        // However, people also claim this migth happen during unit tests..\n\t                        var hasError = true;\n\t                        try {\n\t                            isForcingUpdate = true;\n\t                            if (!skipRender) react.Component.prototype.forceUpdate.call(_this);\n\t                            hasError = false;\n\t                        } finally {\n\t                            isForcingUpdate = false;\n\t                            if (hasError) reaction.dispose();\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t            reaction.reactComponent = _this;\n\t            reactiveRender.$mobx = reaction;\n\t            _this.render = reactiveRender;\n\t            return reactiveRender();\n\t        };\n\t\n\t        var reactiveRender = function reactiveRender() {\n\t            isRenderingPending = false;\n\t            var exception = undefined;\n\t            var rendering = undefined;\n\t            reaction.track(function () {\n\t                if (isDevtoolsEnabled) {\n\t                    _this.__$mobRenderStart = Date.now();\n\t                }\n\t                try {\n\t                    rendering = mobx.extras.allowStateChanges(false, baseRender);\n\t                } catch (e) {\n\t                    exception = e;\n\t                }\n\t                if (isDevtoolsEnabled) {\n\t                    _this.__$mobRenderEnd = Date.now();\n\t                }\n\t            });\n\t            if (exception) {\n\t                errorsReporter.emit(exception);\n\t                throw exception;\n\t            }\n\t            return rendering;\n\t        };\n\t\n\t        this.render = initialRender;\n\t    },\n\t\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        if (isUsingStaticRendering === true) return;\n\t        this.render.$mobx && this.render.$mobx.dispose();\n\t        this.__$mobxIsUnmounted = true;\n\t        if (isDevtoolsEnabled) {\n\t            var node = findDOMNode$2(this);\n\t            if (node && componentByNodeRegistery) {\n\t                componentByNodeRegistery.delete(node);\n\t            }\n\t            renderReporter.emit({\n\t                event: \"destroy\",\n\t                component: this,\n\t                node: node\n\t            });\n\t        }\n\t    },\n\t\n\t    componentDidMount: function componentDidMount() {\n\t        if (isDevtoolsEnabled) {\n\t            reportRendering(this);\n\t        }\n\t    },\n\t\n\t    componentDidUpdate: function componentDidUpdate() {\n\t        if (isDevtoolsEnabled) {\n\t            reportRendering(this);\n\t        }\n\t    },\n\t\n\t    shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n\t        if (isUsingStaticRendering) {\n\t            console.warn(\"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\");\n\t        }\n\t        // update on any state changes (as is the default)\n\t        if (this.state !== nextState) {\n\t            return true;\n\t        }\n\t        // update if props are shallowly not equal, inspired by PureRenderMixin\n\t        // we could return just 'false' here, and avoid the `skipRender` checks etc\n\t        // however, it is nicer if lifecycle events are triggered like usually,\n\t        // so we return true here if props are shallowly modified.\n\t        return isObjectShallowModified(this.props, nextProps);\n\t    }\n\t\n\t    /**\n\t     * Observer function / decorator\n\t     */\n\t};function observer(arg1, arg2) {\n\t    if (typeof arg1 === \"string\") {\n\t        throw new Error(\"Store names should be provided as array\");\n\t    }\n\t    if (Array.isArray(arg1)) {\n\t        // component needs stores\n\t        if (!warnedAboutObserverInjectDeprecation) {\n\t            warnedAboutObserverInjectDeprecation = true;\n\t            console.warn('Mobx observer: Using observer to inject stores is deprecated since 4.0. Use `@inject(\"store1\", \"store2\") @observer ComponentClass` or `inject(\"store1\", \"store2\")(observer(componentClass))` instead of `@observer([\"store1\", \"store2\"]) ComponentClass`');\n\t        }\n\t        if (!arg2) {\n\t            // invoked as decorator\n\t            return function (componentClass) {\n\t                return observer(arg1, componentClass);\n\t            };\n\t        } else {\n\t            return inject.apply(null, arg1)(observer(arg2));\n\t        }\n\t    }\n\t    var componentClass = arg1;\n\t\n\t    if (componentClass.isMobxInjector === true) {\n\t        console.warn(\"Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'\");\n\t    }\n\t\n\t    // Stateless function component:\n\t    // If it is function but doesn't seem to be a react class constructor,\n\t    // wrap it to a react class automatically\n\t    if (typeof componentClass === \"function\" && (!componentClass.prototype || !componentClass.prototype.render) && !componentClass.isReactClass && !react.Component.isPrototypeOf(componentClass)) {\n\t        var _class, _temp;\n\t\n\t        return observer((_temp = _class = function (_Component) {\n\t            inherits(_class, _Component);\n\t\n\t            function _class() {\n\t                classCallCheck(this, _class);\n\t                return possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n\t            }\n\t\n\t            createClass(_class, [{\n\t                key: \"render\",\n\t                value: function render() {\n\t                    return componentClass.call(this, this.props, this.context);\n\t                }\n\t            }]);\n\t            return _class;\n\t        }(react.Component), _class.displayName = componentClass.displayName || componentClass.name, _class.contextTypes = componentClass.contextTypes, _class.propTypes = componentClass.propTypes, _class.defaultProps = componentClass.defaultProps, _temp));\n\t    }\n\t\n\t    if (!componentClass) {\n\t        throw new Error(\"Please pass a valid component to 'observer'\");\n\t    }\n\t\n\t    var target = componentClass.prototype || componentClass;\n\t    mixinLifecycleEvents(target);\n\t    componentClass.isMobXReactObserver = true;\n\t    return componentClass;\n\t}\n\t\n\tfunction mixinLifecycleEvents(target) {\n\t    patch(target, \"componentWillMount\", true);[\"componentDidMount\", \"componentWillUnmount\", \"componentDidUpdate\"].forEach(function (funcName) {\n\t        patch(target, funcName);\n\t    });\n\t    if (!target.shouldComponentUpdate) {\n\t        target.shouldComponentUpdate = reactiveMixin.shouldComponentUpdate;\n\t    }\n\t}\n\t\n\t// TODO: support injection somehow as well?\n\tvar Observer = observer(function (_ref) {\n\t    var children = _ref.children;\n\t    return children();\n\t});\n\t\n\tObserver.displayName = \"Observer\";\n\t\n\tObserver.propTypes = {\n\t    children: function children(propValue, key, componentName, location, propFullName) {\n\t        if (typeof propValue[key] !== \"function\") return new Error(\"Invalid prop `\" + propFullName + \"` of type `\" + _typeof(propValue[key]) + \"` supplied to\" + \" `\" + componentName + \"`, expected `function`.\");\n\t    }\n\t};\n\t\n\tvar _class;\n\tvar _temp;\n\t\n\tvar specialReactKeys = { children: true, key: true, ref: true };\n\t\n\tvar Provider = (_temp = _class = function (_Component) {\n\t    inherits(Provider, _Component);\n\t\n\t    function Provider() {\n\t        classCallCheck(this, Provider);\n\t        return possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(Provider, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            return react.Children.only(this.props.children);\n\t        }\n\t    }, {\n\t        key: \"getChildContext\",\n\t        value: function getChildContext() {\n\t            var stores = {};\n\t            // inherit stores\n\t            var baseStores = this.context.mobxStores;\n\t            if (baseStores) for (var key in baseStores) {\n\t                stores[key] = baseStores[key];\n\t            }\n\t            // add own stores\n\t            for (var _key in this.props) {\n\t                if (!specialReactKeys[_key] && _key !== \"suppressChangedStoreWarning\") stores[_key] = this.props[_key];\n\t            }return {\n\t                mobxStores: stores\n\t            };\n\t        }\n\t    }, {\n\t        key: \"componentWillReceiveProps\",\n\t        value: function componentWillReceiveProps(nextProps) {\n\t            // Maybe this warning is too aggressive?\n\t            if (Object.keys(nextProps).length !== Object.keys(this.props).length) console.warn(\"MobX Provider: The set of provided stores has changed. Please avoid changing stores as the change might not propagate to all children\");\n\t            if (!nextProps.suppressChangedStoreWarning) for (var key in nextProps) {\n\t                if (!specialReactKeys[key] && this.props[key] !== nextProps[key]) console.warn(\"MobX Provider: Provided store '\" + key + \"' has changed. Please avoid replacing stores as the change might not propagate to all children\");\n\t            }\n\t        }\n\t    }]);\n\t    return Provider;\n\t}(react.Component), _class.contextTypes = {\n\t    mobxStores: objectOrObservableObject\n\t}, _class.childContextTypes = {\n\t    mobxStores: objectOrObservableObject.isRequired\n\t}, _temp);\n\t\n\tif (!react.Component) throw new Error(\"mobx-react requires React to be available\");\n\tif (!mobx.extras) throw new Error(\"mobx-react requires mobx to be available\");\n\t\n\tif (typeof reactDom.unstable_batchedUpdates === \"function\") mobx.extras.setReactionScheduler(reactDom.unstable_batchedUpdates);else if (typeof unstable_batchedUpdates$1 === \"function\") mobx.extras.setReactionScheduler(unstable_batchedUpdates$1);\n\t\n\tvar onError = function onError(fn) {\n\t    return errorsReporter.on(fn);\n\t};\n\t\n\t/* DevTool support */\n\t// See: https://github.com/andykog/mobx-devtools/blob/d8976c24b8cb727ed59f9a0bc905a009df79e221/src/backend/installGlobalHook.js\n\t\n\tif ((typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\" ? \"undefined\" : _typeof(__MOBX_DEVTOOLS_GLOBAL_HOOK__)) === \"object\") {\n\t    var mobx$1 = { spy: mobx.spy, extras: mobx.extras };\n\t    var mobxReact = { renderReporter: renderReporter, componentByNodeRegistery: componentByNodeRegistery, trackComponents: trackComponents };\n\t    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobxReact(mobxReact, mobx$1);\n\t}\n\t\n\texports.propTypes = propTypes;\n\texports.PropTypes = propTypes;\n\texports.onError = onError;\n\texports.observer = observer;\n\texports.Observer = Observer;\n\texports.renderReporter = renderReporter;\n\texports.componentByNodeRegistery = componentByNodeRegistery;\n\texports.trackComponents = trackComponents;\n\texports.useStaticRendering = useStaticRendering;\n\texports.Provider = Provider;\n\texports.inject = inject;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/** MobX - (c) Michel Weststrate 2015, 2016 - MIT Licensed */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t/*! *****************************************************************************\r\n\tCopyright (c) Microsoft Corporation. All rights reserved.\r\n\tLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n\tthis file except in compliance with the License. You may obtain a copy of the\r\n\tLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\t\r\n\tTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n\tKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n\tWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n\tMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\t\r\n\tSee the Apache Version 2.0 License for specific language governing permissions\r\n\tand limitations under the License.\r\n\t***************************************************************************** */\r\n\t/* global Reflect, Promise */\r\n\t\r\n\tvar extendStatics = Object.setPrototypeOf ||\r\n\t    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t\r\n\tfunction __extends(d, b) {\r\n\t    extendStatics(d, b);\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t}\n\t\n\t/**\n\t * Anything that can be used to _store_ state is an Atom in mobx. Atoms have two important jobs\n\t *\n\t * 1) detect when they are being _used_ and report this (using reportObserved). This allows mobx to make the connection between running functions and the data they used\n\t * 2) they should notify mobx whenever they have _changed_. This way mobx can re-run any functions (derivations) that are using this atom.\n\t */\n\tvar BaseAtom = (function () {\n\t    /**\n\t     * Create a new atom. For debugging purposes it is recommended to give it a name.\n\t     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n\t     */\n\t    function BaseAtom(name) {\n\t        if (name === void 0) { name = \"Atom@\" + getNextId(); }\n\t        this.name = name;\n\t        this.isPendingUnobservation = true; // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n\t        this.observers = [];\n\t        this.observersIndexes = {};\n\t        this.diffValue = 0;\n\t        this.lastAccessedBy = 0;\n\t        this.lowestObserverState = exports.IDerivationState.NOT_TRACKING;\n\t    }\n\t    BaseAtom.prototype.onBecomeUnobserved = function () {\n\t        // noop\n\t    };\n\t    /**\n\t     * Invoke this method to notify mobx that your atom has been used somehow.\n\t     */\n\t    BaseAtom.prototype.reportObserved = function () {\n\t        reportObserved(this);\n\t    };\n\t    /**\n\t     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n\t     */\n\t    BaseAtom.prototype.reportChanged = function () {\n\t        startBatch();\n\t        propagateChanged(this);\n\t        endBatch();\n\t    };\n\t    BaseAtom.prototype.toString = function () {\n\t        return this.name;\n\t    };\n\t    return BaseAtom;\n\t}());\n\tvar Atom = (function (_super) {\n\t    __extends(Atom, _super);\n\t    /**\n\t     * Create a new atom. For debugging purposes it is recommended to give it a name.\n\t     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n\t     */\n\t    function Atom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {\n\t        if (name === void 0) { name = \"Atom@\" + getNextId(); }\n\t        if (onBecomeObservedHandler === void 0) { onBecomeObservedHandler = noop; }\n\t        if (onBecomeUnobservedHandler === void 0) { onBecomeUnobservedHandler = noop; }\n\t        var _this = _super.call(this, name) || this;\n\t        _this.name = name;\n\t        _this.onBecomeObservedHandler = onBecomeObservedHandler;\n\t        _this.onBecomeUnobservedHandler = onBecomeUnobservedHandler;\n\t        _this.isPendingUnobservation = false; // for effective unobserving.\n\t        _this.isBeingTracked = false;\n\t        return _this;\n\t    }\n\t    Atom.prototype.reportObserved = function () {\n\t        startBatch();\n\t        _super.prototype.reportObserved.call(this);\n\t        if (!this.isBeingTracked) {\n\t            this.isBeingTracked = true;\n\t            this.onBecomeObservedHandler();\n\t        }\n\t        endBatch();\n\t        return !!globalState.trackingDerivation;\n\t        // return doesn't really give useful info, because it can be as well calling computed which calls atom (no reactions)\n\t        // also it could not trigger when calculating reaction dependent on Atom because Atom's value was cached by computed called by given reaction.\n\t    };\n\t    Atom.prototype.onBecomeUnobserved = function () {\n\t        this.isBeingTracked = false;\n\t        this.onBecomeUnobservedHandler();\n\t    };\n\t    return Atom;\n\t}(BaseAtom));\n\tvar isAtom = createInstanceofPredicate(\"Atom\", BaseAtom);\n\t\n\tfunction hasInterceptors(interceptable) {\n\t    return interceptable.interceptors && interceptable.interceptors.length > 0;\n\t}\n\tfunction registerInterceptor(interceptable, handler) {\n\t    var interceptors = interceptable.interceptors || (interceptable.interceptors = []);\n\t    interceptors.push(handler);\n\t    return once(function () {\n\t        var idx = interceptors.indexOf(handler);\n\t        if (idx !== -1)\n\t            interceptors.splice(idx, 1);\n\t    });\n\t}\n\tfunction interceptChange(interceptable, change) {\n\t    var prevU = untrackedStart();\n\t    try {\n\t        var interceptors = interceptable.interceptors;\n\t        if (interceptors)\n\t            for (var i = 0, l = interceptors.length; i < l; i++) {\n\t                change = interceptors[i](change);\n\t                invariant(!change || change.type, \"Intercept handlers should return nothing or a change object\");\n\t                if (!change)\n\t                    break;\n\t            }\n\t        return change;\n\t    }\n\t    finally {\n\t        untrackedEnd(prevU);\n\t    }\n\t}\n\t\n\tfunction hasListeners(listenable) {\n\t    return listenable.changeListeners && listenable.changeListeners.length > 0;\n\t}\n\tfunction registerListener(listenable, handler) {\n\t    var listeners = listenable.changeListeners || (listenable.changeListeners = []);\n\t    listeners.push(handler);\n\t    return once(function () {\n\t        var idx = listeners.indexOf(handler);\n\t        if (idx !== -1)\n\t            listeners.splice(idx, 1);\n\t    });\n\t}\n\tfunction notifyListeners(listenable, change) {\n\t    var prevU = untrackedStart();\n\t    var listeners = listenable.changeListeners;\n\t    if (!listeners)\n\t        return;\n\t    listeners = listeners.slice();\n\t    for (var i = 0, l = listeners.length; i < l; i++) {\n\t        listeners[i](change);\n\t    }\n\t    untrackedEnd(prevU);\n\t}\n\t\n\tfunction isSpyEnabled() {\n\t    return !!globalState.spyListeners.length;\n\t}\n\tfunction spyReport(event) {\n\t    if (!globalState.spyListeners.length)\n\t        return;\n\t    var listeners = globalState.spyListeners;\n\t    for (var i = 0, l = listeners.length; i < l; i++)\n\t        listeners[i](event);\n\t}\n\tfunction spyReportStart(event) {\n\t    var change = objectAssign({}, event, { spyReportStart: true });\n\t    spyReport(change);\n\t}\n\tvar END_EVENT = { spyReportEnd: true };\n\tfunction spyReportEnd(change) {\n\t    if (change)\n\t        spyReport(objectAssign({}, change, END_EVENT));\n\t    else\n\t        spyReport(END_EVENT);\n\t}\n\tfunction spy(listener) {\n\t    globalState.spyListeners.push(listener);\n\t    return once(function () {\n\t        var idx = globalState.spyListeners.indexOf(listener);\n\t        if (idx !== -1)\n\t            globalState.spyListeners.splice(idx, 1);\n\t    });\n\t}\n\t\n\tfunction iteratorSymbol() {\n\t    return (typeof Symbol === \"function\" && Symbol.iterator) || \"@@iterator\";\n\t}\n\tvar IS_ITERATING_MARKER = \"__$$iterating\";\n\tfunction arrayAsIterator(array) {\n\t    // returning an array for entries(), values() etc for maps was a mis-interpretation of the specs..,\n\t    // yet it is quite convenient to be able to use the response both as array directly and as iterator\n\t    // it is suboptimal, but alas...\n\t    invariant(array[IS_ITERATING_MARKER] !== true, \"Illegal state: cannot recycle array as iterator\");\n\t    addHiddenFinalProp(array, IS_ITERATING_MARKER, true);\n\t    var idx = -1;\n\t    addHiddenFinalProp(array, \"next\", function next() {\n\t        idx++;\n\t        return {\n\t            done: idx >= this.length,\n\t            value: idx < this.length ? this[idx] : undefined\n\t        };\n\t    });\n\t    return array;\n\t}\n\tfunction declareIterator(prototType, iteratorFactory) {\n\t    addHiddenFinalProp(prototType, iteratorSymbol(), iteratorFactory);\n\t}\n\t\n\tvar MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859\n\t// Detects bug in safari 9.1.1 (or iOS 9 safari mobile). See #364\n\tvar safariPrototypeSetterInheritanceBug = (function () {\n\t    var v = false;\n\t    var p = {};\n\t    Object.defineProperty(p, \"0\", {\n\t        set: function () {\n\t            v = true;\n\t        }\n\t    });\n\t    Object.create(p)[\"0\"] = 1;\n\t    return v === false;\n\t})();\n\t/**\n\t * This array buffer contains two lists of properties, so that all arrays\n\t * can recycle their property definitions, which significantly improves performance of creating\n\t * properties on the fly.\n\t */\n\tvar OBSERVABLE_ARRAY_BUFFER_SIZE = 0;\n\t// Typescript workaround to make sure ObservableArray extends Array\n\tvar StubArray = (function () {\n\t    function StubArray() {\n\t    }\n\t    return StubArray;\n\t}());\n\tfunction inherit(ctor, proto) {\n\t    if (typeof Object[\"setPrototypeOf\"] !== \"undefined\") {\n\t        Object[\"setPrototypeOf\"](ctor.prototype, proto);\n\t    }\n\t    else if (typeof ctor.prototype.__proto__ !== \"undefined\") {\n\t        ctor.prototype.__proto__ = proto;\n\t    }\n\t    else {\n\t        ctor[\"prototype\"] = proto;\n\t    }\n\t}\n\tinherit(StubArray, Array.prototype);\n\t// Weex freeze Array.prototype\n\t// Make them writeable and configurable in prototype chain\n\t// https://github.com/alibaba/weex/pull/1529\n\tif (Object.isFrozen(Array)) {\n\t    \n\t    [\n\t        \"constructor\",\n\t        \"push\",\n\t        \"shift\",\n\t        \"concat\",\n\t        \"pop\",\n\t        \"unshift\",\n\t        \"replace\",\n\t        \"find\",\n\t        \"findIndex\",\n\t        \"splice\",\n\t        \"reverse\",\n\t        \"sort\"\n\t    ].forEach(function (key) {\n\t        Object.defineProperty(StubArray.prototype, key, {\n\t            configurable: true,\n\t            writable: true,\n\t            value: Array.prototype[key]\n\t        });\n\t    });\n\t}\n\tvar ObservableArrayAdministration = (function () {\n\t    function ObservableArrayAdministration(name, enhancer, array, owned) {\n\t        this.array = array;\n\t        this.owned = owned;\n\t        this.values = [];\n\t        this.lastKnownLength = 0;\n\t        this.interceptors = null;\n\t        this.changeListeners = null;\n\t        this.atom = new BaseAtom(name || \"ObservableArray@\" + getNextId());\n\t        this.enhancer = function (newV, oldV) { return enhancer(newV, oldV, name + \"[..]\"); };\n\t    }\n\t    ObservableArrayAdministration.prototype.dehanceValue = function (value) {\n\t        if (this.dehancer !== undefined)\n\t            return this.dehancer(value);\n\t        return value;\n\t    };\n\t    ObservableArrayAdministration.prototype.dehanceValues = function (values) {\n\t        if (this.dehancer !== undefined)\n\t            return values.map(this.dehancer);\n\t        return values;\n\t    };\n\t    ObservableArrayAdministration.prototype.intercept = function (handler) {\n\t        return registerInterceptor(this, handler);\n\t    };\n\t    ObservableArrayAdministration.prototype.observe = function (listener, fireImmediately) {\n\t        if (fireImmediately === void 0) { fireImmediately = false; }\n\t        if (fireImmediately) {\n\t            listener({\n\t                object: this.array,\n\t                type: \"splice\",\n\t                index: 0,\n\t                added: this.values.slice(),\n\t                addedCount: this.values.length,\n\t                removed: [],\n\t                removedCount: 0\n\t            });\n\t        }\n\t        return registerListener(this, listener);\n\t    };\n\t    ObservableArrayAdministration.prototype.getArrayLength = function () {\n\t        this.atom.reportObserved();\n\t        return this.values.length;\n\t    };\n\t    ObservableArrayAdministration.prototype.setArrayLength = function (newLength) {\n\t        if (typeof newLength !== \"number\" || newLength < 0)\n\t            throw new Error(\"[mobx.array] Out of range: \" + newLength);\n\t        var currentLength = this.values.length;\n\t        if (newLength === currentLength)\n\t            return;\n\t        else if (newLength > currentLength) {\n\t            var newItems = new Array(newLength - currentLength);\n\t            for (var i = 0; i < newLength - currentLength; i++)\n\t                newItems[i] = undefined; // No Array.fill everywhere...\n\t            this.spliceWithArray(currentLength, 0, newItems);\n\t        }\n\t        else\n\t            this.spliceWithArray(newLength, currentLength - newLength);\n\t    };\n\t    // adds / removes the necessary numeric properties to this object\n\t    ObservableArrayAdministration.prototype.updateArrayLength = function (oldLength, delta) {\n\t        if (oldLength !== this.lastKnownLength)\n\t            throw new Error(\"[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?\");\n\t        this.lastKnownLength += delta;\n\t        if (delta > 0 && oldLength + delta + 1 > OBSERVABLE_ARRAY_BUFFER_SIZE)\n\t            reserveArrayBuffer(oldLength + delta + 1);\n\t    };\n\t    ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {\n\t        var _this = this;\n\t        checkIfStateModificationsAreAllowed(this.atom);\n\t        var length = this.values.length;\n\t        if (index === undefined)\n\t            index = 0;\n\t        else if (index > length)\n\t            index = length;\n\t        else if (index < 0)\n\t            index = Math.max(0, length + index);\n\t        if (arguments.length === 1)\n\t            deleteCount = length - index;\n\t        else if (deleteCount === undefined || deleteCount === null)\n\t            deleteCount = 0;\n\t        else\n\t            deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n\t        if (newItems === undefined)\n\t            newItems = [];\n\t        if (hasInterceptors(this)) {\n\t            var change = interceptChange(this, {\n\t                object: this.array,\n\t                type: \"splice\",\n\t                index: index,\n\t                removedCount: deleteCount,\n\t                added: newItems\n\t            });\n\t            if (!change)\n\t                return EMPTY_ARRAY;\n\t            deleteCount = change.removedCount;\n\t            newItems = change.added;\n\t        }\n\t        newItems = newItems.map(function (v) { return _this.enhancer(v, undefined); });\n\t        var lengthDelta = newItems.length - deleteCount;\n\t        this.updateArrayLength(length, lengthDelta); // create or remove new entries\n\t        var res = this.spliceItemsIntoValues(index, deleteCount, newItems);\n\t        if (deleteCount !== 0 || newItems.length !== 0)\n\t            this.notifyArraySplice(index, newItems, res);\n\t        return this.dehanceValues(res);\n\t    };\n\t    ObservableArrayAdministration.prototype.spliceItemsIntoValues = function (index, deleteCount, newItems) {\n\t        if (newItems.length < MAX_SPLICE_SIZE) {\n\t            return (_a = this.values).splice.apply(_a, [index, deleteCount].concat(newItems));\n\t        }\n\t        else {\n\t            var res = this.values.slice(index, index + deleteCount);\n\t            this.values = this.values\n\t                .slice(0, index)\n\t                .concat(newItems, this.values.slice(index + deleteCount));\n\t            return res;\n\t        }\n\t        var _a;\n\t    };\n\t    ObservableArrayAdministration.prototype.notifyArrayChildUpdate = function (index, newValue, oldValue) {\n\t        var notifySpy = !this.owned && isSpyEnabled();\n\t        var notify = hasListeners(this);\n\t        var change = notify || notifySpy\n\t            ? {\n\t                object: this.array,\n\t                type: \"update\",\n\t                index: index,\n\t                newValue: newValue,\n\t                oldValue: oldValue\n\t            }\n\t            : null;\n\t        if (notifySpy)\n\t            spyReportStart(change);\n\t        this.atom.reportChanged();\n\t        if (notify)\n\t            notifyListeners(this, change);\n\t        if (notifySpy)\n\t            spyReportEnd();\n\t    };\n\t    ObservableArrayAdministration.prototype.notifyArraySplice = function (index, added, removed) {\n\t        var notifySpy = !this.owned && isSpyEnabled();\n\t        var notify = hasListeners(this);\n\t        var change = notify || notifySpy\n\t            ? {\n\t                object: this.array,\n\t                type: \"splice\",\n\t                index: index,\n\t                removed: removed,\n\t                added: added,\n\t                removedCount: removed.length,\n\t                addedCount: added.length\n\t            }\n\t            : null;\n\t        if (notifySpy)\n\t            spyReportStart(change);\n\t        this.atom.reportChanged();\n\t        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n\t        if (notify)\n\t            notifyListeners(this, change);\n\t        if (notifySpy)\n\t            spyReportEnd();\n\t    };\n\t    return ObservableArrayAdministration;\n\t}());\n\tvar ObservableArray = (function (_super) {\n\t    __extends(ObservableArray, _super);\n\t    function ObservableArray(initialValues, enhancer, name, owned) {\n\t        if (name === void 0) { name = \"ObservableArray@\" + getNextId(); }\n\t        if (owned === void 0) { owned = false; }\n\t        var _this = _super.call(this) || this;\n\t        var adm = new ObservableArrayAdministration(name, enhancer, _this, owned);\n\t        addHiddenFinalProp(_this, \"$mobx\", adm);\n\t        if (initialValues && initialValues.length) {\n\t            _this.spliceWithArray(0, 0, initialValues);\n\t        }\n\t        if (safariPrototypeSetterInheritanceBug) {\n\t            // Seems that Safari won't use numeric prototype setter untill any * numeric property is\n\t            // defined on the instance. After that it works fine, even if this property is deleted.\n\t            Object.defineProperty(adm.array, \"0\", ENTRY_0);\n\t        }\n\t        return _this;\n\t    }\n\t    ObservableArray.prototype.intercept = function (handler) {\n\t        return this.$mobx.intercept(handler);\n\t    };\n\t    ObservableArray.prototype.observe = function (listener, fireImmediately) {\n\t        if (fireImmediately === void 0) { fireImmediately = false; }\n\t        return this.$mobx.observe(listener, fireImmediately);\n\t    };\n\t    ObservableArray.prototype.clear = function () {\n\t        return this.splice(0);\n\t    };\n\t    ObservableArray.prototype.concat = function () {\n\t        var arrays = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            arrays[_i] = arguments[_i];\n\t        }\n\t        this.$mobx.atom.reportObserved();\n\t        return Array.prototype.concat.apply(this.peek(), arrays.map(function (a) { return (isObservableArray(a) ? a.peek() : a); }));\n\t    };\n\t    ObservableArray.prototype.replace = function (newItems) {\n\t        return this.$mobx.spliceWithArray(0, this.$mobx.values.length, newItems);\n\t    };\n\t    /**\n\t     * Converts this array back to a (shallow) javascript structure.\n\t     * For a deep clone use mobx.toJS\n\t     */\n\t    ObservableArray.prototype.toJS = function () {\n\t        return this.slice();\n\t    };\n\t    ObservableArray.prototype.toJSON = function () {\n\t        // Used by JSON.stringify\n\t        return this.toJS();\n\t    };\n\t    ObservableArray.prototype.peek = function () {\n\t        this.$mobx.atom.reportObserved();\n\t        return this.$mobx.dehanceValues(this.$mobx.values);\n\t    };\n\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n\t    ObservableArray.prototype.find = function (predicate, thisArg, fromIndex) {\n\t        if (fromIndex === void 0) { fromIndex = 0; }\n\t        var idx = this.findIndex.apply(this, arguments);\n\t        return idx === -1 ? undefined : this.get(idx);\n\t    };\n\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n\t    ObservableArray.prototype.findIndex = function (predicate, thisArg, fromIndex) {\n\t        if (fromIndex === void 0) { fromIndex = 0; }\n\t        var items = this.peek(), l = items.length;\n\t        for (var i = fromIndex; i < l; i++)\n\t            if (predicate.call(thisArg, items[i], i, this))\n\t                return i;\n\t        return -1;\n\t    };\n\t    /*\n\t     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n\t     * since these functions alter the inner structure of the array, the have side effects.\n\t     * Because the have side effects, they should not be used in computed function,\n\t     * and for that reason the do not call dependencyState.notifyObserved\n\t     */\n\t    ObservableArray.prototype.splice = function (index, deleteCount) {\n\t        var newItems = [];\n\t        for (var _i = 2; _i < arguments.length; _i++) {\n\t            newItems[_i - 2] = arguments[_i];\n\t        }\n\t        switch (arguments.length) {\n\t            case 0:\n\t                return [];\n\t            case 1:\n\t                return this.$mobx.spliceWithArray(index);\n\t            case 2:\n\t                return this.$mobx.spliceWithArray(index, deleteCount);\n\t        }\n\t        return this.$mobx.spliceWithArray(index, deleteCount, newItems);\n\t    };\n\t    ObservableArray.prototype.spliceWithArray = function (index, deleteCount, newItems) {\n\t        return this.$mobx.spliceWithArray(index, deleteCount, newItems);\n\t    };\n\t    ObservableArray.prototype.push = function () {\n\t        var items = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            items[_i] = arguments[_i];\n\t        }\n\t        var adm = this.$mobx;\n\t        adm.spliceWithArray(adm.values.length, 0, items);\n\t        return adm.values.length;\n\t    };\n\t    ObservableArray.prototype.pop = function () {\n\t        return this.splice(Math.max(this.$mobx.values.length - 1, 0), 1)[0];\n\t    };\n\t    ObservableArray.prototype.shift = function () {\n\t        return this.splice(0, 1)[0];\n\t    };\n\t    ObservableArray.prototype.unshift = function () {\n\t        var items = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            items[_i] = arguments[_i];\n\t        }\n\t        var adm = this.$mobx;\n\t        adm.spliceWithArray(0, 0, items);\n\t        return adm.values.length;\n\t    };\n\t    ObservableArray.prototype.reverse = function () {\n\t        // reverse by default mutates in place before returning the result\n\t        // which makes it both a 'derivation' and a 'mutation'.\n\t        // so we deviate from the default and just make it an dervitation\n\t        var clone = this.slice();\n\t        return clone.reverse.apply(clone, arguments);\n\t    };\n\t    ObservableArray.prototype.sort = function (compareFn) {\n\t        // sort by default mutates in place before returning the result\n\t        // which goes against all good practices. Let's not change the array in place!\n\t        var clone = this.slice();\n\t        return clone.sort.apply(clone, arguments);\n\t    };\n\t    ObservableArray.prototype.remove = function (value) {\n\t        var idx = this.$mobx.dehanceValues(this.$mobx.values).indexOf(value);\n\t        if (idx > -1) {\n\t            this.splice(idx, 1);\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    ObservableArray.prototype.move = function (fromIndex, toIndex) {\n\t        function checkIndex(index) {\n\t            if (index < 0) {\n\t                throw new Error(\"[mobx.array] Index out of bounds: \" + index + \" is negative\");\n\t            }\n\t            var length = this.$mobx.values.length;\n\t            if (index >= length) {\n\t                throw new Error(\"[mobx.array] Index out of bounds: \" + index + \" is not smaller than \" + length);\n\t            }\n\t        }\n\t        checkIndex.call(this, fromIndex);\n\t        checkIndex.call(this, toIndex);\n\t        if (fromIndex === toIndex) {\n\t            return;\n\t        }\n\t        var oldItems = this.$mobx.values;\n\t        var newItems;\n\t        if (fromIndex < toIndex) {\n\t            newItems = oldItems.slice(0, fromIndex).concat(oldItems.slice(fromIndex + 1, toIndex + 1), [\n\t                oldItems[fromIndex]\n\t            ], oldItems.slice(toIndex + 1));\n\t        }\n\t        else {\n\t            // toIndex < fromIndex\n\t            newItems = oldItems.slice(0, toIndex).concat([\n\t                oldItems[fromIndex]\n\t            ], oldItems.slice(toIndex, fromIndex), oldItems.slice(fromIndex + 1));\n\t        }\n\t        this.replace(newItems);\n\t    };\n\t    // See #734, in case property accessors are unreliable...\n\t    ObservableArray.prototype.get = function (index) {\n\t        var impl = this.$mobx;\n\t        if (impl) {\n\t            if (index < impl.values.length) {\n\t                impl.atom.reportObserved();\n\t                return impl.dehanceValue(impl.values[index]);\n\t            }\n\t            console.warn(\"[mobx.array] Attempt to read an array index (\" + index + \") that is out of bounds (\" + impl\n\t                .values\n\t                .length + \"). Please check length first. Out of bound indices will not be tracked by MobX\");\n\t        }\n\t        return undefined;\n\t    };\n\t    // See #734, in case property accessors are unreliable...\n\t    ObservableArray.prototype.set = function (index, newValue) {\n\t        var adm = this.$mobx;\n\t        var values = adm.values;\n\t        if (index < values.length) {\n\t            // update at index in range\n\t            checkIfStateModificationsAreAllowed(adm.atom);\n\t            var oldValue = values[index];\n\t            if (hasInterceptors(adm)) {\n\t                var change = interceptChange(adm, {\n\t                    type: \"update\",\n\t                    object: this,\n\t                    index: index,\n\t                    newValue: newValue\n\t                });\n\t                if (!change)\n\t                    return;\n\t                newValue = change.newValue;\n\t            }\n\t            newValue = adm.enhancer(newValue, oldValue);\n\t            var changed = newValue !== oldValue;\n\t            if (changed) {\n\t                values[index] = newValue;\n\t                adm.notifyArrayChildUpdate(index, newValue, oldValue);\n\t            }\n\t        }\n\t        else if (index === values.length) {\n\t            // add a new item\n\t            adm.spliceWithArray(index, 0, [newValue]);\n\t        }\n\t        else {\n\t            // out of bounds\n\t            throw new Error(\"[mobx.array] Index out of bounds, \" + index + \" is larger than \" + values.length);\n\t        }\n\t    };\n\t    return ObservableArray;\n\t}(StubArray));\n\tdeclareIterator(ObservableArray.prototype, function () {\n\t    return arrayAsIterator(this.slice());\n\t});\n\tObject.defineProperty(ObservableArray.prototype, \"length\", {\n\t    enumerable: false,\n\t    configurable: true,\n\t    get: function () {\n\t        return this.$mobx.getArrayLength();\n\t    },\n\t    set: function (newLength) {\n\t        this.$mobx.setArrayLength(newLength);\n\t    }\n\t});\n\t[\n\t    \"every\",\n\t    \"filter\",\n\t    \"forEach\",\n\t    \"indexOf\",\n\t    \"join\",\n\t    \"lastIndexOf\",\n\t    \"map\",\n\t    \"reduce\",\n\t    \"reduceRight\",\n\t    \"slice\",\n\t    \"some\",\n\t    \"toString\",\n\t    \"toLocaleString\"\n\t].forEach(function (funcName) {\n\t    var baseFunc = Array.prototype[funcName];\n\t    invariant(typeof baseFunc === \"function\", \"Base function not defined on Array prototype: '\" + funcName + \"'\");\n\t    addHiddenProp(ObservableArray.prototype, funcName, function () {\n\t        return baseFunc.apply(this.peek(), arguments);\n\t    });\n\t});\n\t/**\n\t * We don't want those to show up in `for (const key in ar)` ...\n\t */\n\tmakeNonEnumerable(ObservableArray.prototype, [\n\t    \"constructor\",\n\t    \"intercept\",\n\t    \"observe\",\n\t    \"clear\",\n\t    \"concat\",\n\t    \"get\",\n\t    \"replace\",\n\t    \"toJS\",\n\t    \"toJSON\",\n\t    \"peek\",\n\t    \"find\",\n\t    \"findIndex\",\n\t    \"splice\",\n\t    \"spliceWithArray\",\n\t    \"push\",\n\t    \"pop\",\n\t    \"set\",\n\t    \"shift\",\n\t    \"unshift\",\n\t    \"reverse\",\n\t    \"sort\",\n\t    \"remove\",\n\t    \"move\",\n\t    \"toString\",\n\t    \"toLocaleString\"\n\t]);\n\t// See #364\n\tvar ENTRY_0 = createArrayEntryDescriptor(0);\n\tfunction createArrayEntryDescriptor(index) {\n\t    return {\n\t        enumerable: false,\n\t        configurable: false,\n\t        get: function () {\n\t            // TODO: Check `this`?, see #752?\n\t            return this.get(index);\n\t        },\n\t        set: function (value) {\n\t            this.set(index, value);\n\t        }\n\t    };\n\t}\n\tfunction createArrayBufferItem(index) {\n\t    Object.defineProperty(ObservableArray.prototype, \"\" + index, createArrayEntryDescriptor(index));\n\t}\n\tfunction reserveArrayBuffer(max) {\n\t    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max; index++)\n\t        createArrayBufferItem(index);\n\t    OBSERVABLE_ARRAY_BUFFER_SIZE = max;\n\t}\n\treserveArrayBuffer(1000);\n\tvar isObservableArrayAdministration = createInstanceofPredicate(\"ObservableArrayAdministration\", ObservableArrayAdministration);\n\tfunction isObservableArray(thing) {\n\t    return isObject(thing) && isObservableArrayAdministration(thing.$mobx);\n\t}\n\t\n\tvar UNCHANGED = {};\n\tvar ObservableValue = (function (_super) {\n\t    __extends(ObservableValue, _super);\n\t    function ObservableValue(value, enhancer, name, notifySpy) {\n\t        if (name === void 0) { name = \"ObservableValue@\" + getNextId(); }\n\t        if (notifySpy === void 0) { notifySpy = true; }\n\t        var _this = _super.call(this, name) || this;\n\t        _this.enhancer = enhancer;\n\t        _this.hasUnreportedChange = false;\n\t        _this.dehancer = undefined;\n\t        _this.value = enhancer(value, undefined, name);\n\t        if (notifySpy && isSpyEnabled()) {\n\t            // only notify spy if this is a stand-alone observable\n\t            spyReport({ type: \"create\", object: _this, newValue: _this.value });\n\t        }\n\t        return _this;\n\t    }\n\t    ObservableValue.prototype.dehanceValue = function (value) {\n\t        if (this.dehancer !== undefined)\n\t            return this.dehancer(value);\n\t        return value;\n\t    };\n\t    ObservableValue.prototype.set = function (newValue) {\n\t        var oldValue = this.value;\n\t        newValue = this.prepareNewValue(newValue);\n\t        if (newValue !== UNCHANGED) {\n\t            var notifySpy = isSpyEnabled();\n\t            if (notifySpy) {\n\t                spyReportStart({\n\t                    type: \"update\",\n\t                    object: this,\n\t                    newValue: newValue,\n\t                    oldValue: oldValue\n\t                });\n\t            }\n\t            this.setNewValue(newValue);\n\t            if (notifySpy)\n\t                spyReportEnd();\n\t        }\n\t    };\n\t    ObservableValue.prototype.prepareNewValue = function (newValue) {\n\t        checkIfStateModificationsAreAllowed(this);\n\t        if (hasInterceptors(this)) {\n\t            var change = interceptChange(this, {\n\t                object: this,\n\t                type: \"update\",\n\t                newValue: newValue\n\t            });\n\t            if (!change)\n\t                return UNCHANGED;\n\t            newValue = change.newValue;\n\t        }\n\t        // apply modifier\n\t        newValue = this.enhancer(newValue, this.value, this.name);\n\t        return this.value !== newValue ? newValue : UNCHANGED;\n\t    };\n\t    ObservableValue.prototype.setNewValue = function (newValue) {\n\t        var oldValue = this.value;\n\t        this.value = newValue;\n\t        this.reportChanged();\n\t        if (hasListeners(this)) {\n\t            notifyListeners(this, {\n\t                type: \"update\",\n\t                object: this,\n\t                newValue: newValue,\n\t                oldValue: oldValue\n\t            });\n\t        }\n\t    };\n\t    ObservableValue.prototype.get = function () {\n\t        this.reportObserved();\n\t        return this.dehanceValue(this.value);\n\t    };\n\t    ObservableValue.prototype.intercept = function (handler) {\n\t        return registerInterceptor(this, handler);\n\t    };\n\t    ObservableValue.prototype.observe = function (listener, fireImmediately) {\n\t        if (fireImmediately)\n\t            listener({\n\t                object: this,\n\t                type: \"update\",\n\t                newValue: this.value,\n\t                oldValue: undefined\n\t            });\n\t        return registerListener(this, listener);\n\t    };\n\t    ObservableValue.prototype.toJSON = function () {\n\t        return this.get();\n\t    };\n\t    ObservableValue.prototype.toString = function () {\n\t        return this.name + \"[\" + this.value + \"]\";\n\t    };\n\t    ObservableValue.prototype.valueOf = function () {\n\t        return toPrimitive(this.get());\n\t    };\n\t    return ObservableValue;\n\t}(BaseAtom));\n\tObservableValue.prototype[primitiveSymbol()] = ObservableValue.prototype.valueOf;\n\tvar isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue);\n\t\n\tvar messages = {\n\t    m001: \"It is not allowed to assign new values to @action fields\",\n\t    m002: \"`runInAction` expects a function\",\n\t    m003: \"`runInAction` expects a function without arguments\",\n\t    m004: \"autorun expects a function\",\n\t    m005: \"Warning: attempted to pass an action to autorun. Actions are untracked and will not trigger on state changes. Use `reaction` or wrap only your state modification code in an action.\",\n\t    m006: \"Warning: attempted to pass an action to autorunAsync. Actions are untracked and will not trigger on state changes. Use `reaction` or wrap only your state modification code in an action.\",\n\t    m007: \"reaction only accepts 2 or 3 arguments. If migrating from MobX 2, please provide an options object\",\n\t    m008: \"wrapping reaction expression in `asReference` is no longer supported, use options object instead\",\n\t    m009: \"@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'. It looks like it was used on a property.\",\n\t    m010: \"@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'\",\n\t    m011: \"First argument to `computed` should be an expression. If using computed as decorator, don't pass it arguments\",\n\t    m012: \"computed takes one or two arguments if used as function\",\n\t    m013: \"[mobx.expr] 'expr' should only be used inside other reactive functions.\",\n\t    m014: \"extendObservable expected 2 or more arguments\",\n\t    m015: \"extendObservable expects an object as first argument\",\n\t    m016: \"extendObservable should not be used on maps, use map.merge instead\",\n\t    m017: \"all arguments of extendObservable should be objects\",\n\t    m018: \"extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540\",\n\t    m019: \"[mobx.isObservable] isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\",\n\t    m020: \"modifiers can only be used for individual object properties\",\n\t    m021: \"observable expects zero or one arguments\",\n\t    m022: \"@observable can not be used on getters, use @computed instead\",\n\t    m024: \"whyRun() can only be used if a derivation is active, or by passing an computed value / reaction explicitly. If you invoked whyRun from inside a computation; the computation is currently suspended but re-evaluating because somebody requested its value.\",\n\t    m025: \"whyRun can only be used on reactions and computed values\",\n\t    m026: \"`action` can only be invoked on functions\",\n\t    m028: \"It is not allowed to set `useStrict` when a derivation is running\",\n\t    m029: \"INTERNAL ERROR only onBecomeUnobserved shouldn't be called twice in a row\",\n\t    m030a: \"Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: \",\n\t    m030b: \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: \",\n\t    m031: \"Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: \",\n\t    m032: \"* This computation is suspended (not in use by any reaction) and won't run automatically.\\n\tDidn't expect this computation to be suspended at this point?\\n\t  1. Make sure this computation is used by a reaction (reaction, autorun, observer).\\n\t  2. Check whether you are using this computation synchronously (in the same stack as they reaction that needs it).\",\n\t    m033: \"`observe` doesn't support the fire immediately property for observable maps.\",\n\t    m034: \"`mobx.map` is deprecated, use `new ObservableMap` or `mobx.observable.map` instead\",\n\t    m035: \"Cannot make the designated object observable; it is not extensible\",\n\t    m036: \"It is not possible to get index atoms from arrays\",\n\t    m037: \"Hi there! I'm sorry you have just run into an exception.\\nIf your debugger ends up here, know that some reaction (like the render() of an observer component, autorun or reaction)\\nthrew an exception and that mobx caught it, to avoid that it brings the rest of your application down.\\nThe original cause of the exception (the code that caused this reaction to run (again)), is still in the stack.\\n\\nHowever, more interesting is the actual stack trace of the error itself.\\nHopefully the error is an instanceof Error, because in that case you can inspect the original stack of the error from where it was thrown.\\nSee `error.stack` property, or press the very subtle \\\"(...)\\\" link you see near the console.error message that probably brought you here.\\nThat stack is more interesting than the stack of this console.error itself.\\n\\nIf the exception you see is an exception you created yourself, make sure to use `throw new Error(\\\"Oops\\\")` instead of `throw \\\"Oops\\\"`,\\nbecause the javascript environment will only preserve the original stack trace in the first form.\\n\\nYou can also make sure the debugger pauses the next time this very same exception is thrown by enabling \\\"Pause on caught exception\\\".\\n(Note that it might pause on many other, unrelated exception as well).\\n\\nIf that all doesn't help you out, feel free to open an issue https://github.com/mobxjs/mobx/issues!\\n\",\n\t    m038: \"Missing items in this list?\\n    1. Check whether all used values are properly marked as observable (use isObservable to verify)\\n    2. Make sure you didn't dereference values too early. MobX observes props, not primitives. E.g: use 'person.name' instead of 'name' in your computation.\\n\"\n\t};\n\tfunction getMessage(id) {\n\t    return messages[id];\n\t}\n\t\n\tfunction createAction(actionName, fn) {\n\t    invariant(typeof fn === \"function\", getMessage(\"m026\"));\n\t    invariant(typeof actionName === \"string\" && actionName.length > 0, \"actions should have valid names, got: '\" + actionName + \"'\");\n\t    var res = function () {\n\t        return executeAction(actionName, fn, this, arguments);\n\t    };\n\t    res.originalFn = fn;\n\t    res.isMobxAction = true;\n\t    return res;\n\t}\n\tfunction executeAction(actionName, fn, scope, args) {\n\t    var runInfo = startAction(actionName, fn, scope, args);\n\t    try {\n\t        return fn.apply(scope, args);\n\t    }\n\t    finally {\n\t        endAction(runInfo);\n\t    }\n\t}\n\tfunction startAction(actionName, fn, scope, args) {\n\t    var notifySpy = isSpyEnabled() && !!actionName;\n\t    var startTime = 0;\n\t    if (notifySpy) {\n\t        startTime = Date.now();\n\t        var l = (args && args.length) || 0;\n\t        var flattendArgs = new Array(l);\n\t        if (l > 0)\n\t            for (var i = 0; i < l; i++)\n\t                flattendArgs[i] = args[i];\n\t        spyReportStart({\n\t            type: \"action\",\n\t            name: actionName,\n\t            fn: fn,\n\t            object: scope,\n\t            arguments: flattendArgs\n\t        });\n\t    }\n\t    var prevDerivation = untrackedStart();\n\t    startBatch();\n\t    var prevAllowStateChanges = allowStateChangesStart(true);\n\t    return {\n\t        prevDerivation: prevDerivation,\n\t        prevAllowStateChanges: prevAllowStateChanges,\n\t        notifySpy: notifySpy,\n\t        startTime: startTime\n\t    };\n\t}\n\tfunction endAction(runInfo) {\n\t    allowStateChangesEnd(runInfo.prevAllowStateChanges);\n\t    endBatch();\n\t    untrackedEnd(runInfo.prevDerivation);\n\t    if (runInfo.notifySpy)\n\t        spyReportEnd({ time: Date.now() - runInfo.startTime });\n\t}\n\tfunction useStrict(strict) {\n\t    invariant(globalState.trackingDerivation === null, getMessage(\"m028\"));\n\t    globalState.strictMode = strict;\n\t    globalState.allowStateChanges = !strict;\n\t}\n\tfunction isStrictModeEnabled() {\n\t    return globalState.strictMode;\n\t}\n\tfunction allowStateChanges(allowStateChanges, func) {\n\t    // TODO: deprecate / refactor this function in next major\n\t    // Currently only used by `@observer`\n\t    // Proposed change: remove first param, rename to `forbidStateChanges`,\n\t    // require error callback instead of the hardcoded error message now used\n\t    // Use `inAction` instead of allowStateChanges in derivation.ts to check strictMode\n\t    var prev = allowStateChangesStart(allowStateChanges);\n\t    var res;\n\t    try {\n\t        res = func();\n\t    }\n\t    finally {\n\t        allowStateChangesEnd(prev);\n\t    }\n\t    return res;\n\t}\n\tfunction allowStateChangesStart(allowStateChanges) {\n\t    var prev = globalState.allowStateChanges;\n\t    globalState.allowStateChanges = allowStateChanges;\n\t    return prev;\n\t}\n\tfunction allowStateChangesEnd(prev) {\n\t    globalState.allowStateChanges = prev;\n\t}\n\t\n\t/**\n\t * Constructs a decorator, that normalizes the differences between\n\t * TypeScript and Babel. Mainly caused by the fact that legacy-decorator cannot assign\n\t * values during instance creation to properties that have a getter setter.\n\t *\n\t * - Sigh -\n\t *\n\t * Also takes care of the difference between @decorator field and @decorator(args) field, and different forms of values.\n\t * For performance (cpu and mem) reasons the properties are always defined on the prototype (at least initially).\n\t * This means that these properties despite being enumerable might not show up in Object.keys() (but they will show up in for...in loops).\n\t */\n\tfunction createClassPropertyDecorator(\n\t    /**\n\t     * This function is invoked once, when the property is added to a new instance.\n\t     * When this happens is not strictly determined due to differences in TS and Babel:\n\t     * Typescript: Usually when constructing the new instance\n\t     * Babel, sometimes Typescript: during the first get / set\n\t     * Both: when calling `runLazyInitializers(instance)`\n\t     */\n\t    onInitialize, get, set, enumerable, \n\t    /**\n\t     * Can this decorator invoked with arguments? e.g. @decorator(args)\n\t     */\n\t    allowCustomArguments) {\n\t    function classPropertyDecorator(target, key, descriptor, customArgs, argLen) {\n\t        if (argLen === void 0) { argLen = 0; }\n\t        invariant(allowCustomArguments || quacksLikeADecorator(arguments), \"This function is a decorator, but it wasn't invoked like a decorator\");\n\t        if (!descriptor) {\n\t            // typescript (except for getter / setters)\n\t            var newDescriptor = {\n\t                enumerable: enumerable,\n\t                configurable: true,\n\t                get: function () {\n\t                    if (!this.__mobxInitializedProps || this.__mobxInitializedProps[key] !== true)\n\t                        typescriptInitializeProperty(this, key, undefined, onInitialize, customArgs, descriptor);\n\t                    return get.call(this, key);\n\t                },\n\t                set: function (v) {\n\t                    if (!this.__mobxInitializedProps || this.__mobxInitializedProps[key] !== true) {\n\t                        typescriptInitializeProperty(this, key, v, onInitialize, customArgs, descriptor);\n\t                    }\n\t                    else {\n\t                        set.call(this, key, v);\n\t                    }\n\t                }\n\t            };\n\t            if (arguments.length < 3 || (arguments.length === 5 && argLen < 3)) {\n\t                // Typescript target is ES3, so it won't define property for us\n\t                // or using Reflect.decorate polyfill, which will return no descriptor\n\t                // (see https://github.com/mobxjs/mobx/issues/333)\n\t                Object.defineProperty(target, key, newDescriptor);\n\t            }\n\t            return newDescriptor;\n\t        }\n\t        else {\n\t            // babel and typescript getter / setter props\n\t            if (!hasOwnProperty(target, \"__mobxLazyInitializers\")) {\n\t                addHiddenProp(target, \"__mobxLazyInitializers\", (target.__mobxLazyInitializers && target.__mobxLazyInitializers.slice()) || [] // support inheritance\n\t                );\n\t            }\n\t            var value_1 = descriptor.value, initializer_1 = descriptor.initializer;\n\t            target.__mobxLazyInitializers.push(function (instance) {\n\t                onInitialize(instance, key, initializer_1 ? initializer_1.call(instance) : value_1, customArgs, descriptor);\n\t            });\n\t            return {\n\t                enumerable: enumerable,\n\t                configurable: true,\n\t                get: function () {\n\t                    if (this.__mobxDidRunLazyInitializers !== true)\n\t                        runLazyInitializers(this);\n\t                    return get.call(this, key);\n\t                },\n\t                set: function (v) {\n\t                    if (this.__mobxDidRunLazyInitializers !== true)\n\t                        runLazyInitializers(this);\n\t                    set.call(this, key, v);\n\t                }\n\t            };\n\t        }\n\t    }\n\t    if (allowCustomArguments) {\n\t        /** If custom arguments are allowed, we should return a function that returns a decorator */\n\t        return function () {\n\t            /** Direct invocation: @decorator bla */\n\t            if (quacksLikeADecorator(arguments))\n\t                return classPropertyDecorator.apply(null, arguments);\n\t            /** Indirect invocation: @decorator(args) bla */\n\t            var outerArgs = arguments;\n\t            var argLen = arguments.length;\n\t            return function (target, key, descriptor) {\n\t                return classPropertyDecorator(target, key, descriptor, outerArgs, argLen);\n\t            };\n\t        };\n\t    }\n\t    return classPropertyDecorator;\n\t}\n\tfunction typescriptInitializeProperty(instance, key, v, onInitialize, customArgs, baseDescriptor) {\n\t    if (!hasOwnProperty(instance, \"__mobxInitializedProps\"))\n\t        addHiddenProp(instance, \"__mobxInitializedProps\", {});\n\t    instance.__mobxInitializedProps[key] = true;\n\t    onInitialize(instance, key, v, customArgs, baseDescriptor);\n\t}\n\tfunction runLazyInitializers(instance) {\n\t    if (instance.__mobxDidRunLazyInitializers === true)\n\t        return;\n\t    if (instance.__mobxLazyInitializers) {\n\t        addHiddenProp(instance, \"__mobxDidRunLazyInitializers\", true);\n\t        instance.__mobxDidRunLazyInitializers &&\n\t            instance.__mobxLazyInitializers.forEach(function (initializer) { return initializer(instance); });\n\t    }\n\t}\n\tfunction quacksLikeADecorator(args) {\n\t    return (args.length === 2 || args.length === 3) && typeof args[1] === \"string\";\n\t}\n\t\n\tvar actionFieldDecorator = createClassPropertyDecorator(function (target, key, value, args, originalDescriptor) {\n\t    var actionName = args && args.length === 1 ? args[0] : value.name || key || \"<unnamed action>\";\n\t    var wrappedAction = action(actionName, value);\n\t    addHiddenProp(target, key, wrappedAction);\n\t}, function (key) {\n\t    return this[key];\n\t}, function () {\n\t    invariant(false, getMessage(\"m001\"));\n\t}, false, true);\n\tvar boundActionDecorator = createClassPropertyDecorator(function (target, key, value) {\n\t    defineBoundAction(target, key, value);\n\t}, function (key) {\n\t    return this[key];\n\t}, function () {\n\t    invariant(false, getMessage(\"m001\"));\n\t}, false, false);\n\tvar action = function action(arg1, arg2, arg3, arg4) {\n\t    if (arguments.length === 1 && typeof arg1 === \"function\")\n\t        return createAction(arg1.name || \"<unnamed action>\", arg1);\n\t    if (arguments.length === 2 && typeof arg2 === \"function\")\n\t        return createAction(arg1, arg2);\n\t    if (arguments.length === 1 && typeof arg1 === \"string\")\n\t        return namedActionDecorator(arg1);\n\t    return namedActionDecorator(arg2).apply(null, arguments);\n\t};\n\taction.bound = function boundAction(arg1, arg2, arg3) {\n\t    if (typeof arg1 === \"function\") {\n\t        var action_1 = createAction(\"<not yet bound action>\", arg1);\n\t        action_1.autoBind = true;\n\t        return action_1;\n\t    }\n\t    return boundActionDecorator.apply(null, arguments);\n\t};\n\tfunction namedActionDecorator(name) {\n\t    return function (target, prop, descriptor) {\n\t        if (descriptor && typeof descriptor.value === \"function\") {\n\t            // TypeScript @action method() { }. Defined on proto before being decorated\n\t            // Don't use the field decorator if we are just decorating a method\n\t            descriptor.value = createAction(name, descriptor.value);\n\t            descriptor.enumerable = false;\n\t            descriptor.configurable = true;\n\t            return descriptor;\n\t        }\n\t        if (descriptor !== undefined && descriptor.get !== undefined) {\n\t            throw new Error(\"[mobx] action is not expected to be used with getters\");\n\t        }\n\t        // bound instance methods\n\t        return actionFieldDecorator(name).apply(this, arguments);\n\t    };\n\t}\n\tfunction runInAction(arg1, arg2, arg3) {\n\t    var actionName = typeof arg1 === \"string\" ? arg1 : arg1.name || \"<unnamed action>\";\n\t    var fn = typeof arg1 === \"function\" ? arg1 : arg2;\n\t    var scope = typeof arg1 === \"function\" ? arg2 : arg3;\n\t    invariant(typeof fn === \"function\", getMessage(\"m002\"));\n\t    invariant(fn.length === 0, getMessage(\"m003\"));\n\t    invariant(typeof actionName === \"string\" && actionName.length > 0, \"actions should have valid names, got: '\" + actionName + \"'\");\n\t    return executeAction(actionName, fn, scope, undefined);\n\t}\n\tfunction isAction(thing) {\n\t    return typeof thing === \"function\" && thing.isMobxAction === true;\n\t}\n\tfunction defineBoundAction(target, propertyName, fn) {\n\t    var res = function () {\n\t        return executeAction(propertyName, fn, target, arguments);\n\t    };\n\t    res.isMobxAction = true;\n\t    addHiddenProp(target, propertyName, res);\n\t}\n\t\n\tfunction identityComparer(a, b) {\n\t    return a === b;\n\t}\n\tfunction structuralComparer(a, b) {\n\t    return deepEqual(a, b);\n\t}\n\tfunction defaultComparer(a, b) {\n\t    return areBothNaN(a, b) || identityComparer(a, b);\n\t}\n\tvar comparer = {\n\t    identity: identityComparer,\n\t    structural: structuralComparer,\n\t    default: defaultComparer\n\t};\n\t\n\tfunction autorun(arg1, arg2, arg3) {\n\t    var name, view, scope;\n\t    if (typeof arg1 === \"string\") {\n\t        name = arg1;\n\t        view = arg2;\n\t        scope = arg3;\n\t    }\n\t    else {\n\t        name = arg1.name || \"Autorun@\" + getNextId();\n\t        view = arg1;\n\t        scope = arg2;\n\t    }\n\t    invariant(typeof view === \"function\", getMessage(\"m004\"));\n\t    invariant(isAction(view) === false, getMessage(\"m005\"));\n\t    if (scope)\n\t        view = view.bind(scope);\n\t    var reaction = new Reaction(name, function () {\n\t        this.track(reactionRunner);\n\t    });\n\t    function reactionRunner() {\n\t        view(reaction);\n\t    }\n\t    reaction.schedule();\n\t    return reaction.getDisposer();\n\t}\n\tfunction when(arg1, arg2, arg3, arg4) {\n\t    var name, predicate, effect, scope;\n\t    if (typeof arg1 === \"string\") {\n\t        name = arg1;\n\t        predicate = arg2;\n\t        effect = arg3;\n\t        scope = arg4;\n\t    }\n\t    else {\n\t        name = \"When@\" + getNextId();\n\t        predicate = arg1;\n\t        effect = arg2;\n\t        scope = arg3;\n\t    }\n\t    var disposer = autorun(name, function (r) {\n\t        if (predicate.call(scope)) {\n\t            r.dispose();\n\t            var prevUntracked = untrackedStart();\n\t            effect.call(scope);\n\t            untrackedEnd(prevUntracked);\n\t        }\n\t    });\n\t    return disposer;\n\t}\n\tfunction autorunAsync(arg1, arg2, arg3, arg4) {\n\t    var name, func, delay, scope;\n\t    if (typeof arg1 === \"string\") {\n\t        name = arg1;\n\t        func = arg2;\n\t        delay = arg3;\n\t        scope = arg4;\n\t    }\n\t    else {\n\t        name = arg1.name || \"AutorunAsync@\" + getNextId();\n\t        func = arg1;\n\t        delay = arg2;\n\t        scope = arg3;\n\t    }\n\t    invariant(isAction(func) === false, getMessage(\"m006\"));\n\t    if (delay === void 0)\n\t        delay = 1;\n\t    if (scope)\n\t        func = func.bind(scope);\n\t    var isScheduled = false;\n\t    var r = new Reaction(name, function () {\n\t        if (!isScheduled) {\n\t            isScheduled = true;\n\t            setTimeout(function () {\n\t                isScheduled = false;\n\t                if (!r.isDisposed)\n\t                    r.track(reactionRunner);\n\t            }, delay);\n\t        }\n\t    });\n\t    function reactionRunner() {\n\t        func(r);\n\t    }\n\t    r.schedule();\n\t    return r.getDisposer();\n\t}\n\tfunction reaction(expression, effect, arg3) {\n\t    if (arguments.length > 3) {\n\t        fail(getMessage(\"m007\"));\n\t    }\n\t    if (isModifierDescriptor(expression)) {\n\t        fail(getMessage(\"m008\"));\n\t    }\n\t    var opts;\n\t    if (typeof arg3 === \"object\") {\n\t        opts = arg3;\n\t    }\n\t    else {\n\t        opts = {};\n\t    }\n\t    opts.name =\n\t        opts.name || expression.name || effect.name || \"Reaction@\" + getNextId();\n\t    opts.fireImmediately = arg3 === true || opts.fireImmediately === true;\n\t    opts.delay = opts.delay || 0;\n\t    opts.compareStructural = opts.compareStructural || opts.struct || false;\n\t    // TODO: creates ugly spy events, use `effect = (r) => runInAction(opts.name, () => effect(r))` instead\n\t    effect = action(opts.name, opts.context ? effect.bind(opts.context) : effect);\n\t    if (opts.context) {\n\t        expression = expression.bind(opts.context);\n\t    }\n\t    var firstTime = true;\n\t    var isScheduled = false;\n\t    var value;\n\t    var equals = opts.equals\n\t        ? opts.equals\n\t        : opts.compareStructural || opts.struct ? comparer.structural : comparer.default;\n\t    var r = new Reaction(opts.name, function () {\n\t        if (firstTime || opts.delay < 1) {\n\t            reactionRunner();\n\t        }\n\t        else if (!isScheduled) {\n\t            isScheduled = true;\n\t            setTimeout(function () {\n\t                isScheduled = false;\n\t                reactionRunner();\n\t            }, opts.delay);\n\t        }\n\t    });\n\t    function reactionRunner() {\n\t        if (r.isDisposed)\n\t            return;\n\t        var changed = false;\n\t        r.track(function () {\n\t            var nextValue = expression(r);\n\t            changed = firstTime || !equals(value, nextValue);\n\t            value = nextValue;\n\t        });\n\t        if (firstTime && opts.fireImmediately)\n\t            effect(value, r);\n\t        if (!firstTime && changed === true)\n\t            effect(value, r);\n\t        if (firstTime)\n\t            firstTime = false;\n\t    }\n\t    r.schedule();\n\t    return r.getDisposer();\n\t}\n\t\n\t/**\n\t * A node in the state dependency root that observes other nodes, and can be observed itself.\n\t *\n\t * ComputedValue will remember the result of the computation for the duration of the batch, or\n\t * while being observed.\n\t *\n\t * During this time it will recompute only when one of its direct dependencies changed,\n\t * but only when it is being accessed with `ComputedValue.get()`.\n\t *\n\t * Implementation description:\n\t * 1. First time it's being accessed it will compute and remember result\n\t *    give back remembered result until 2. happens\n\t * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n\t * 3. When it's being accessed, recompute if any shallow dependency changed.\n\t *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n\t *    go to step 2. either way\n\t *\n\t * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n\t */\n\tvar ComputedValue = (function () {\n\t    /**\n\t     * Create a new computed value based on a function expression.\n\t     *\n\t     * The `name` property is for debug purposes only.\n\t     *\n\t     * The `equals` property specifies the comparer function to use to determine if a newly produced\n\t     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n\t     * compares based on identity comparison (===), and `structualComparer` deeply compares the structure.\n\t     * Structural comparison can be convenient if you always produce an new aggregated object and\n\t     * don't want to notify observers if it is structurally the same.\n\t     * This is useful for working with vectors, mouse coordinates etc.\n\t     */\n\t    function ComputedValue(derivation, scope, equals, name, setter) {\n\t        this.derivation = derivation;\n\t        this.scope = scope;\n\t        this.equals = equals;\n\t        this.dependenciesState = exports.IDerivationState.NOT_TRACKING;\n\t        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n\t        this.newObserving = null; // during tracking it's an array with new observed observers\n\t        this.isPendingUnobservation = false;\n\t        this.observers = [];\n\t        this.observersIndexes = {};\n\t        this.diffValue = 0;\n\t        this.runId = 0;\n\t        this.lastAccessedBy = 0;\n\t        this.lowestObserverState = exports.IDerivationState.UP_TO_DATE;\n\t        this.unboundDepsCount = 0;\n\t        this.__mapid = \"#\" + getNextId();\n\t        this.value = new CaughtException(null);\n\t        this.isComputing = false; // to check for cycles\n\t        this.isRunningSetter = false;\n\t        this.name = name || \"ComputedValue@\" + getNextId();\n\t        if (setter)\n\t            this.setter = createAction(name + \"-setter\", setter);\n\t    }\n\t    ComputedValue.prototype.onBecomeStale = function () {\n\t        propagateMaybeChanged(this);\n\t    };\n\t    ComputedValue.prototype.onBecomeUnobserved = function () {\n\t        clearObserving(this);\n\t        this.value = undefined;\n\t    };\n\t    /**\n\t     * Returns the current value of this computed value.\n\t     * Will evaluate its computation first if needed.\n\t     */\n\t    ComputedValue.prototype.get = function () {\n\t        invariant(!this.isComputing, \"Cycle detected in computation \" + this.name, this.derivation);\n\t        if (globalState.inBatch === 0) {\n\t            // This is an minor optimization which could be omitted to simplify the code\n\t            // The computedValue is accessed outside of any mobx stuff. Batch observing should be enough and don't need\n\t            // tracking as it will never be called again inside this batch.\n\t            startBatch();\n\t            if (shouldCompute(this))\n\t                this.value = this.computeValue(false);\n\t            endBatch();\n\t        }\n\t        else {\n\t            reportObserved(this);\n\t            if (shouldCompute(this))\n\t                if (this.trackAndCompute())\n\t                    propagateChangeConfirmed(this);\n\t        }\n\t        var result = this.value;\n\t        if (isCaughtException(result))\n\t            throw result.cause;\n\t        return result;\n\t    };\n\t    ComputedValue.prototype.peek = function () {\n\t        var res = this.computeValue(false);\n\t        if (isCaughtException(res))\n\t            throw res.cause;\n\t        return res;\n\t    };\n\t    ComputedValue.prototype.set = function (value) {\n\t        if (this.setter) {\n\t            invariant(!this.isRunningSetter, \"The setter of computed value '\" + this\n\t                .name + \"' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?\");\n\t            this.isRunningSetter = true;\n\t            try {\n\t                this.setter.call(this.scope, value);\n\t            }\n\t            finally {\n\t                this.isRunningSetter = false;\n\t            }\n\t        }\n\t        else\n\t            invariant(false, \"[ComputedValue '\" + this\n\t                .name + \"'] It is not possible to assign a new value to a computed value.\");\n\t    };\n\t    ComputedValue.prototype.trackAndCompute = function () {\n\t        if (isSpyEnabled()) {\n\t            spyReport({\n\t                object: this.scope,\n\t                type: \"compute\",\n\t                fn: this.derivation\n\t            });\n\t        }\n\t        var oldValue = this.value;\n\t        var wasSuspended = this.dependenciesState === exports.IDerivationState.NOT_TRACKING;\n\t        var newValue = (this.value = this.computeValue(true));\n\t        return (wasSuspended ||\n\t            isCaughtException(oldValue) ||\n\t            isCaughtException(newValue) ||\n\t            !this.equals(oldValue, newValue));\n\t    };\n\t    ComputedValue.prototype.computeValue = function (track) {\n\t        this.isComputing = true;\n\t        globalState.computationDepth++;\n\t        var res;\n\t        if (track) {\n\t            res = trackDerivedFunction(this, this.derivation, this.scope);\n\t        }\n\t        else {\n\t            try {\n\t                res = this.derivation.call(this.scope);\n\t            }\n\t            catch (e) {\n\t                res = new CaughtException(e);\n\t            }\n\t        }\n\t        globalState.computationDepth--;\n\t        this.isComputing = false;\n\t        return res;\n\t    };\n\t    ComputedValue.prototype.observe = function (listener, fireImmediately) {\n\t        var _this = this;\n\t        var firstTime = true;\n\t        var prevValue = undefined;\n\t        return autorun(function () {\n\t            var newValue = _this.get();\n\t            if (!firstTime || fireImmediately) {\n\t                var prevU = untrackedStart();\n\t                listener({\n\t                    type: \"update\",\n\t                    object: _this,\n\t                    newValue: newValue,\n\t                    oldValue: prevValue\n\t                });\n\t                untrackedEnd(prevU);\n\t            }\n\t            firstTime = false;\n\t            prevValue = newValue;\n\t        });\n\t    };\n\t    ComputedValue.prototype.toJSON = function () {\n\t        return this.get();\n\t    };\n\t    ComputedValue.prototype.toString = function () {\n\t        return this.name + \"[\" + this.derivation.toString() + \"]\";\n\t    };\n\t    ComputedValue.prototype.valueOf = function () {\n\t        return toPrimitive(this.get());\n\t    };\n\t    ComputedValue.prototype.whyRun = function () {\n\t        var isTracking = Boolean(globalState.trackingDerivation);\n\t        var observing = unique(this.isComputing ? this.newObserving : this.observing).map(function (dep) { return dep.name; });\n\t        var observers = unique(getObservers(this).map(function (dep) { return dep.name; }));\n\t        return (\"\\nWhyRun? computation '\" + this.name + \"':\\n * Running because: \" + (isTracking\n\t            ? \"[active] the value of this computation is needed by a reaction\"\n\t            : this.isComputing\n\t                ? \"[get] The value of this computed was requested outside a reaction\"\n\t                : \"[idle] not running at the moment\") + \"\\n\" +\n\t            (this.dependenciesState === exports.IDerivationState.NOT_TRACKING\n\t                ? getMessage(\"m032\")\n\t                : \" * This computation will re-run if any of the following observables changes:\\n    \" + joinStrings(observing) + \"\\n    \" + (this.isComputing && isTracking\n\t                    ? \" (... or any observable accessed during the remainder of the current run)\"\n\t                    : \"\") + \"\\n    \" + getMessage(\"m038\") + \"\\n\\n  * If the outcome of this computation changes, the following observers will be re-run:\\n    \" + joinStrings(observers) + \"\\n\"));\n\t    };\n\t    return ComputedValue;\n\t}());\n\tComputedValue.prototype[primitiveSymbol()] = ComputedValue.prototype.valueOf;\n\tvar isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue);\n\t\n\tvar ObservableObjectAdministration = (function () {\n\t    function ObservableObjectAdministration(target, name) {\n\t        this.target = target;\n\t        this.name = name;\n\t        this.values = {};\n\t        this.changeListeners = null;\n\t        this.interceptors = null;\n\t    }\n\t    /**\n\t     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n\t     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n\t     * for callback details\n\t     */\n\t    ObservableObjectAdministration.prototype.observe = function (callback, fireImmediately) {\n\t        invariant(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable objects.\");\n\t        return registerListener(this, callback);\n\t    };\n\t    ObservableObjectAdministration.prototype.intercept = function (handler) {\n\t        return registerInterceptor(this, handler);\n\t    };\n\t    return ObservableObjectAdministration;\n\t}());\n\tfunction asObservableObject(target, name) {\n\t    if (isObservableObject(target) && target.hasOwnProperty(\"$mobx\"))\n\t        return target.$mobx;\n\t    invariant(Object.isExtensible(target), getMessage(\"m035\"));\n\t    if (!isPlainObject(target))\n\t        name = (target.constructor.name || \"ObservableObject\") + \"@\" + getNextId();\n\t    if (!name)\n\t        name = \"ObservableObject@\" + getNextId();\n\t    var adm = new ObservableObjectAdministration(target, name);\n\t    addHiddenFinalProp(target, \"$mobx\", adm);\n\t    return adm;\n\t}\n\tfunction defineObservablePropertyFromDescriptor(adm, propName, descriptor, defaultEnhancer) {\n\t    if (adm.values[propName] && !isComputedValue(adm.values[propName])) {\n\t        // already observable property\n\t        invariant(\"value\" in descriptor, \"The property \" + propName + \" in \" + adm.name + \" is already observable, cannot redefine it as computed property\");\n\t        adm.target[propName] = descriptor.value; // the property setter will make 'value' reactive if needed.\n\t        return;\n\t    }\n\t    // not yet observable property\n\t    if (\"value\" in descriptor) {\n\t        // not a computed value\n\t        if (isModifierDescriptor(descriptor.value)) {\n\t            // x : ref(someValue)\n\t            var modifierDescriptor = descriptor.value;\n\t            defineObservableProperty(adm, propName, modifierDescriptor.initialValue, modifierDescriptor.enhancer);\n\t        }\n\t        else if (isAction(descriptor.value) && descriptor.value.autoBind === true) {\n\t            defineBoundAction(adm.target, propName, descriptor.value.originalFn);\n\t        }\n\t        else if (isComputedValue(descriptor.value)) {\n\t            // x: computed(someExpr)\n\t            defineComputedPropertyFromComputedValue(adm, propName, descriptor.value);\n\t        }\n\t        else {\n\t            // x: someValue\n\t            defineObservableProperty(adm, propName, descriptor.value, defaultEnhancer);\n\t        }\n\t    }\n\t    else {\n\t        // get x() { return 3 } set x(v) { }\n\t        defineComputedProperty(adm, propName, descriptor.get, descriptor.set, comparer.default, true);\n\t    }\n\t}\n\tfunction defineObservableProperty(adm, propName, newValue, enhancer) {\n\t    assertPropertyConfigurable(adm.target, propName);\n\t    if (hasInterceptors(adm)) {\n\t        var change = interceptChange(adm, {\n\t            object: adm.target,\n\t            name: propName,\n\t            type: \"add\",\n\t            newValue: newValue\n\t        });\n\t        if (!change)\n\t            return;\n\t        newValue = change.newValue;\n\t    }\n\t    var observable = (adm.values[propName] = new ObservableValue(newValue, enhancer, adm.name + \".\" + propName, false));\n\t    newValue = observable.value; // observableValue might have changed it\n\t    Object.defineProperty(adm.target, propName, generateObservablePropConfig(propName));\n\t    notifyPropertyAddition(adm, adm.target, propName, newValue);\n\t}\n\tfunction defineComputedProperty(adm, propName, getter, setter, equals, asInstanceProperty) {\n\t    if (asInstanceProperty)\n\t        assertPropertyConfigurable(adm.target, propName);\n\t    adm.values[propName] = new ComputedValue(getter, adm.target, equals, adm.name + \".\" + propName, setter);\n\t    if (asInstanceProperty) {\n\t        Object.defineProperty(adm.target, propName, generateComputedPropConfig(propName));\n\t    }\n\t}\n\tfunction defineComputedPropertyFromComputedValue(adm, propName, computedValue) {\n\t    var name = adm.name + \".\" + propName;\n\t    computedValue.name = name;\n\t    if (!computedValue.scope)\n\t        computedValue.scope = adm.target;\n\t    adm.values[propName] = computedValue;\n\t    Object.defineProperty(adm.target, propName, generateComputedPropConfig(propName));\n\t}\n\tvar observablePropertyConfigs = {};\n\tvar computedPropertyConfigs = {};\n\tfunction generateObservablePropConfig(propName) {\n\t    return (observablePropertyConfigs[propName] ||\n\t        (observablePropertyConfigs[propName] = {\n\t            configurable: true,\n\t            enumerable: true,\n\t            get: function () {\n\t                return this.$mobx.values[propName].get();\n\t            },\n\t            set: function (v) {\n\t                setPropertyValue(this, propName, v);\n\t            }\n\t        }));\n\t}\n\tfunction generateComputedPropConfig(propName) {\n\t    return (computedPropertyConfigs[propName] ||\n\t        (computedPropertyConfigs[propName] = {\n\t            configurable: true,\n\t            enumerable: false,\n\t            get: function () {\n\t                return this.$mobx.values[propName].get();\n\t            },\n\t            set: function (v) {\n\t                return this.$mobx.values[propName].set(v);\n\t            }\n\t        }));\n\t}\n\tfunction setPropertyValue(instance, name, newValue) {\n\t    var adm = instance.$mobx;\n\t    var observable = adm.values[name];\n\t    // intercept\n\t    if (hasInterceptors(adm)) {\n\t        var change = interceptChange(adm, {\n\t            type: \"update\",\n\t            object: instance,\n\t            name: name,\n\t            newValue: newValue\n\t        });\n\t        if (!change)\n\t            return;\n\t        newValue = change.newValue;\n\t    }\n\t    newValue = observable.prepareNewValue(newValue);\n\t    // notify spy & observers\n\t    if (newValue !== UNCHANGED) {\n\t        var notify = hasListeners(adm);\n\t        var notifySpy = isSpyEnabled();\n\t        var change = notify || notifySpy\n\t            ? {\n\t                type: \"update\",\n\t                object: instance,\n\t                oldValue: observable.value,\n\t                name: name,\n\t                newValue: newValue\n\t            }\n\t            : null;\n\t        if (notifySpy)\n\t            spyReportStart(change);\n\t        observable.setNewValue(newValue);\n\t        if (notify)\n\t            notifyListeners(adm, change);\n\t        if (notifySpy)\n\t            spyReportEnd();\n\t    }\n\t}\n\tfunction notifyPropertyAddition(adm, object, name, newValue) {\n\t    var notify = hasListeners(adm);\n\t    var notifySpy = isSpyEnabled();\n\t    var change = notify || notifySpy\n\t        ? {\n\t            type: \"add\",\n\t            object: object,\n\t            name: name,\n\t            newValue: newValue\n\t        }\n\t        : null;\n\t    if (notifySpy)\n\t        spyReportStart(change);\n\t    if (notify)\n\t        notifyListeners(adm, change);\n\t    if (notifySpy)\n\t        spyReportEnd();\n\t}\n\tvar isObservableObjectAdministration = createInstanceofPredicate(\"ObservableObjectAdministration\", ObservableObjectAdministration);\n\tfunction isObservableObject(thing) {\n\t    if (isObject(thing)) {\n\t        // Initializers run lazily when transpiling to babel, so make sure they are run...\n\t        runLazyInitializers(thing);\n\t        return isObservableObjectAdministration(thing.$mobx);\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * Returns true if the provided value is reactive.\n\t * @param value object, function or array\n\t * @param property if property is specified, checks whether value.property is reactive.\n\t */\n\tfunction isObservable(value, property) {\n\t    if (value === null || value === undefined)\n\t        return false;\n\t    if (property !== undefined) {\n\t        if (isObservableArray(value) || isObservableMap(value))\n\t            throw new Error(getMessage(\"m019\"));\n\t        else if (isObservableObject(value)) {\n\t            var o = value.$mobx;\n\t            return o.values && !!o.values[property];\n\t        }\n\t        return false;\n\t    }\n\t    // For first check, see #701\n\t    return (isObservableObject(value) ||\n\t        !!value.$mobx ||\n\t        isAtom(value) ||\n\t        isReaction(value) ||\n\t        isComputedValue(value));\n\t}\n\t\n\tfunction createDecoratorForEnhancer(enhancer) {\n\t    invariant(!!enhancer, \":(\");\n\t    return createClassPropertyDecorator(function (target, name, baseValue, _, baseDescriptor) {\n\t        assertPropertyConfigurable(target, name);\n\t        invariant(!baseDescriptor || !baseDescriptor.get, getMessage(\"m022\"));\n\t        var adm = asObservableObject(target, undefined);\n\t        defineObservableProperty(adm, name, baseValue, enhancer);\n\t    }, function (name) {\n\t        var observable = this.$mobx.values[name];\n\t        if (observable === undefined // See #505\n\t        )\n\t            return undefined;\n\t        return observable.get();\n\t    }, function (name, value) {\n\t        setPropertyValue(this, name, value);\n\t    }, true, false);\n\t}\n\t\n\tfunction extendObservable(target) {\n\t    var properties = [];\n\t    for (var _i = 1; _i < arguments.length; _i++) {\n\t        properties[_i - 1] = arguments[_i];\n\t    }\n\t    return extendObservableHelper(target, deepEnhancer, properties);\n\t}\n\tfunction extendShallowObservable(target) {\n\t    var properties = [];\n\t    for (var _i = 1; _i < arguments.length; _i++) {\n\t        properties[_i - 1] = arguments[_i];\n\t    }\n\t    return extendObservableHelper(target, referenceEnhancer, properties);\n\t}\n\tfunction extendObservableHelper(target, defaultEnhancer, properties) {\n\t    invariant(arguments.length >= 2, getMessage(\"m014\"));\n\t    invariant(typeof target === \"object\", getMessage(\"m015\"));\n\t    invariant(!isObservableMap(target), getMessage(\"m016\"));\n\t    properties.forEach(function (propSet) {\n\t        invariant(typeof propSet === \"object\", getMessage(\"m017\"));\n\t        invariant(!isObservable(propSet), getMessage(\"m018\"));\n\t    });\n\t    var adm = asObservableObject(target);\n\t    var definedProps = {};\n\t    // Note could be optimised if properties.length === 1\n\t    for (var i = properties.length - 1; i >= 0; i--) {\n\t        var propSet = properties[i];\n\t        for (var key in propSet)\n\t            if (definedProps[key] !== true && hasOwnProperty(propSet, key)) {\n\t                definedProps[key] = true;\n\t                if (target === propSet && !isPropertyConfigurable(target, key))\n\t                    continue; // see #111, skip non-configurable or non-writable props for `observable(object)`.\n\t                var descriptor = Object.getOwnPropertyDescriptor(propSet, key);\n\t                defineObservablePropertyFromDescriptor(adm, key, descriptor, defaultEnhancer);\n\t            }\n\t    }\n\t    return target;\n\t}\n\t\n\tvar deepDecorator = createDecoratorForEnhancer(deepEnhancer);\n\tvar shallowDecorator = createDecoratorForEnhancer(shallowEnhancer);\n\tvar refDecorator = createDecoratorForEnhancer(referenceEnhancer);\n\tvar deepStructDecorator = createDecoratorForEnhancer(deepStructEnhancer);\n\tvar refStructDecorator = createDecoratorForEnhancer(refStructEnhancer);\n\t/**\n\t * Turns an object, array or function into a reactive structure.\n\t * @param v the value which should become observable.\n\t */\n\tfunction createObservable(v) {\n\t    if (v === void 0) { v = undefined; }\n\t    // @observable someProp;\n\t    if (typeof arguments[1] === \"string\")\n\t        return deepDecorator.apply(null, arguments);\n\t    invariant(arguments.length <= 1, getMessage(\"m021\"));\n\t    invariant(!isModifierDescriptor(v), getMessage(\"m020\"));\n\t    // it is an observable already, done\n\t    if (isObservable(v))\n\t        return v;\n\t    // something that can be converted and mutated?\n\t    var res = deepEnhancer(v, undefined, undefined);\n\t    // this value could be converted to a new observable data structure, return it\n\t    if (res !== v)\n\t        return res;\n\t    // otherwise, just box it\n\t    return observable.box(v);\n\t}\n\tvar observableFactories = {\n\t    box: function (value, name) {\n\t        if (arguments.length > 2)\n\t            incorrectlyUsedAsDecorator(\"box\");\n\t        return new ObservableValue(value, deepEnhancer, name);\n\t    },\n\t    shallowBox: function (value, name) {\n\t        if (arguments.length > 2)\n\t            incorrectlyUsedAsDecorator(\"shallowBox\");\n\t        return new ObservableValue(value, referenceEnhancer, name);\n\t    },\n\t    array: function (initialValues, name) {\n\t        if (arguments.length > 2)\n\t            incorrectlyUsedAsDecorator(\"array\");\n\t        return new ObservableArray(initialValues, deepEnhancer, name);\n\t    },\n\t    shallowArray: function (initialValues, name) {\n\t        if (arguments.length > 2)\n\t            incorrectlyUsedAsDecorator(\"shallowArray\");\n\t        return new ObservableArray(initialValues, referenceEnhancer, name);\n\t    },\n\t    map: function (initialValues, name) {\n\t        if (arguments.length > 2)\n\t            incorrectlyUsedAsDecorator(\"map\");\n\t        return new ObservableMap(initialValues, deepEnhancer, name);\n\t    },\n\t    shallowMap: function (initialValues, name) {\n\t        if (arguments.length > 2)\n\t            incorrectlyUsedAsDecorator(\"shallowMap\");\n\t        return new ObservableMap(initialValues, referenceEnhancer, name);\n\t    },\n\t    object: function (props, name) {\n\t        if (arguments.length > 2)\n\t            incorrectlyUsedAsDecorator(\"object\");\n\t        var res = {};\n\t        // convert to observable object\n\t        asObservableObject(res, name);\n\t        // add properties\n\t        extendObservable(res, props);\n\t        return res;\n\t    },\n\t    shallowObject: function (props, name) {\n\t        if (arguments.length > 2)\n\t            incorrectlyUsedAsDecorator(\"shallowObject\");\n\t        var res = {};\n\t        asObservableObject(res, name);\n\t        extendShallowObservable(res, props);\n\t        return res;\n\t    },\n\t    ref: function () {\n\t        if (arguments.length < 2) {\n\t            // although ref creates actually a modifier descriptor, the type of the resultig properties\n\t            // of the object is `T` in the end, when the descriptors are interpreted\n\t            return createModifierDescriptor(referenceEnhancer, arguments[0]);\n\t        }\n\t        else {\n\t            return refDecorator.apply(null, arguments);\n\t        }\n\t    },\n\t    shallow: function () {\n\t        if (arguments.length < 2) {\n\t            // although ref creates actually a modifier descriptor, the type of the resultig properties\n\t            // of the object is `T` in the end, when the descriptors are interpreted\n\t            return createModifierDescriptor(shallowEnhancer, arguments[0]);\n\t        }\n\t        else {\n\t            return shallowDecorator.apply(null, arguments);\n\t        }\n\t    },\n\t    deep: function () {\n\t        if (arguments.length < 2) {\n\t            // although ref creates actually a modifier descriptor, the type of the resultig properties\n\t            // of the object is `T` in the end, when the descriptors are interpreted\n\t            return createModifierDescriptor(deepEnhancer, arguments[0]);\n\t        }\n\t        else {\n\t            return deepDecorator.apply(null, arguments);\n\t        }\n\t    },\n\t    struct: function () {\n\t        if (arguments.length < 2) {\n\t            // although ref creates actually a modifier descriptor, the type of the resultig properties\n\t            // of the object is `T` in the end, when the descriptors are interpreted\n\t            return createModifierDescriptor(deepStructEnhancer, arguments[0]);\n\t        }\n\t        else {\n\t            return deepStructDecorator.apply(null, arguments);\n\t        }\n\t    }\n\t};\n\tvar observable = createObservable;\n\t// weird trick to keep our typings nicely with our funcs, and still extend the observable function\n\tObject.keys(observableFactories).forEach(function (name) { return (observable[name] = observableFactories[name]); });\n\tobservable.deep.struct = observable.struct;\n\tobservable.ref.struct = function () {\n\t    if (arguments.length < 2) {\n\t        return createModifierDescriptor(refStructEnhancer, arguments[0]);\n\t    }\n\t    else {\n\t        return refStructDecorator.apply(null, arguments);\n\t    }\n\t};\n\tfunction incorrectlyUsedAsDecorator(methodName) {\n\t    fail(\"Expected one or two arguments to observable.\" + methodName + \". Did you accidentally try to use observable.\" + methodName + \" as decorator?\");\n\t}\n\t\n\tfunction isModifierDescriptor(thing) {\n\t    return typeof thing === \"object\" && thing !== null && thing.isMobxModifierDescriptor === true;\n\t}\n\tfunction createModifierDescriptor(enhancer, initialValue) {\n\t    invariant(!isModifierDescriptor(initialValue), \"Modifiers cannot be nested\");\n\t    return {\n\t        isMobxModifierDescriptor: true,\n\t        initialValue: initialValue,\n\t        enhancer: enhancer\n\t    };\n\t}\n\tfunction deepEnhancer(v, _, name) {\n\t    if (isModifierDescriptor(v))\n\t        fail(\"You tried to assign a modifier wrapped value to a collection, please define modifiers when creating the collection, not when modifying it\");\n\t    // it is an observable already, done\n\t    if (isObservable(v))\n\t        return v;\n\t    // something that can be converted and mutated?\n\t    if (Array.isArray(v))\n\t        return observable.array(v, name);\n\t    if (isPlainObject(v))\n\t        return observable.object(v, name);\n\t    if (isES6Map(v))\n\t        return observable.map(v, name);\n\t    return v;\n\t}\n\tfunction shallowEnhancer(v, _, name) {\n\t    if (isModifierDescriptor(v))\n\t        fail(\"You tried to assign a modifier wrapped value to a collection, please define modifiers when creating the collection, not when modifying it\");\n\t    if (v === undefined || v === null)\n\t        return v;\n\t    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v))\n\t        return v;\n\t    if (Array.isArray(v))\n\t        return observable.shallowArray(v, name);\n\t    if (isPlainObject(v))\n\t        return observable.shallowObject(v, name);\n\t    if (isES6Map(v))\n\t        return observable.shallowMap(v, name);\n\t    return fail(\"The shallow modifier / decorator can only used in combination with arrays, objects and maps\");\n\t}\n\tfunction referenceEnhancer(newValue) {\n\t    // never turn into an observable\n\t    return newValue;\n\t}\n\tfunction deepStructEnhancer(v, oldValue, name) {\n\t    // don't confuse structurally compare enhancer with ref enhancer! The latter is probably\n\t    // more suited for immutable objects\n\t    if (deepEqual(v, oldValue))\n\t        return oldValue;\n\t    // it is an observable already, done\n\t    if (isObservable(v))\n\t        return v;\n\t    // something that can be converted and mutated?\n\t    if (Array.isArray(v))\n\t        return new ObservableArray(v, deepStructEnhancer, name);\n\t    if (isES6Map(v))\n\t        return new ObservableMap(v, deepStructEnhancer, name);\n\t    if (isPlainObject(v)) {\n\t        var res = {};\n\t        asObservableObject(res, name);\n\t        extendObservableHelper(res, deepStructEnhancer, [v]);\n\t        return res;\n\t    }\n\t    return v;\n\t}\n\tfunction refStructEnhancer(v, oldValue, name) {\n\t    if (deepEqual(v, oldValue))\n\t        return oldValue;\n\t    return v;\n\t}\n\t\n\t/**\n\t * During a transaction no views are updated until the end of the transaction.\n\t * The transaction will be run synchronously nonetheless.\n\t *\n\t * @param action a function that updates some reactive state\n\t * @returns any value that was returned by the 'action' parameter.\n\t */\n\tfunction transaction(action, thisArg) {\n\t    if (thisArg === void 0) { thisArg = undefined; }\n\t    startBatch();\n\t    try {\n\t        return action.apply(thisArg);\n\t    }\n\t    finally {\n\t        endBatch();\n\t    }\n\t}\n\t\n\tvar ObservableMapMarker = {};\n\tvar ObservableMap = (function () {\n\t    function ObservableMap(initialData, enhancer, name) {\n\t        if (enhancer === void 0) { enhancer = deepEnhancer; }\n\t        if (name === void 0) { name = \"ObservableMap@\" + getNextId(); }\n\t        this.enhancer = enhancer;\n\t        this.name = name;\n\t        this.$mobx = ObservableMapMarker;\n\t        this._data = Object.create(null);\n\t        this._hasMap = Object.create(null); // hasMap, not hashMap >-).\n\t        this._keys = new ObservableArray(undefined, referenceEnhancer, this.name + \".keys()\", true);\n\t        this.interceptors = null;\n\t        this.changeListeners = null;\n\t        this.dehancer = undefined;\n\t        this.merge(initialData);\n\t    }\n\t    ObservableMap.prototype._has = function (key) {\n\t        return typeof this._data[key] !== \"undefined\";\n\t    };\n\t    ObservableMap.prototype.has = function (key) {\n\t        if (!this.isValidKey(key))\n\t            return false;\n\t        key = \"\" + key;\n\t        if (this._hasMap[key])\n\t            return this._hasMap[key].get();\n\t        return this._updateHasMapEntry(key, false).get();\n\t    };\n\t    ObservableMap.prototype.set = function (key, value) {\n\t        this.assertValidKey(key);\n\t        key = \"\" + key;\n\t        var hasKey = this._has(key);\n\t        if (hasInterceptors(this)) {\n\t            var change = interceptChange(this, {\n\t                type: hasKey ? \"update\" : \"add\",\n\t                object: this,\n\t                newValue: value,\n\t                name: key\n\t            });\n\t            if (!change)\n\t                return this;\n\t            value = change.newValue;\n\t        }\n\t        if (hasKey) {\n\t            this._updateValue(key, value);\n\t        }\n\t        else {\n\t            this._addValue(key, value);\n\t        }\n\t        return this;\n\t    };\n\t    ObservableMap.prototype.delete = function (key) {\n\t        var _this = this;\n\t        this.assertValidKey(key);\n\t        key = \"\" + key;\n\t        if (hasInterceptors(this)) {\n\t            var change = interceptChange(this, {\n\t                type: \"delete\",\n\t                object: this,\n\t                name: key\n\t            });\n\t            if (!change)\n\t                return false;\n\t        }\n\t        if (this._has(key)) {\n\t            var notifySpy = isSpyEnabled();\n\t            var notify = hasListeners(this);\n\t            var change = notify || notifySpy\n\t                ? {\n\t                    type: \"delete\",\n\t                    object: this,\n\t                    oldValue: this._data[key].value,\n\t                    name: key\n\t                }\n\t                : null;\n\t            if (notifySpy)\n\t                spyReportStart(change);\n\t            transaction(function () {\n\t                _this._keys.remove(key);\n\t                _this._updateHasMapEntry(key, false);\n\t                var observable$$1 = _this._data[key];\n\t                observable$$1.setNewValue(undefined);\n\t                _this._data[key] = undefined;\n\t            });\n\t            if (notify)\n\t                notifyListeners(this, change);\n\t            if (notifySpy)\n\t                spyReportEnd();\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    ObservableMap.prototype._updateHasMapEntry = function (key, value) {\n\t        // optimization; don't fill the hasMap if we are not observing, or remove entry if there are no observers anymore\n\t        var entry = this._hasMap[key];\n\t        if (entry) {\n\t            entry.setNewValue(value);\n\t        }\n\t        else {\n\t            entry = this._hasMap[key] = new ObservableValue(value, referenceEnhancer, this.name + \".\" + key + \"?\", false);\n\t        }\n\t        return entry;\n\t    };\n\t    ObservableMap.prototype._updateValue = function (name, newValue) {\n\t        var observable$$1 = this._data[name];\n\t        newValue = observable$$1.prepareNewValue(newValue);\n\t        if (newValue !== UNCHANGED) {\n\t            var notifySpy = isSpyEnabled();\n\t            var notify = hasListeners(this);\n\t            var change = notify || notifySpy\n\t                ? {\n\t                    type: \"update\",\n\t                    object: this,\n\t                    oldValue: observable$$1.value,\n\t                    name: name,\n\t                    newValue: newValue\n\t                }\n\t                : null;\n\t            if (notifySpy)\n\t                spyReportStart(change);\n\t            observable$$1.setNewValue(newValue);\n\t            if (notify)\n\t                notifyListeners(this, change);\n\t            if (notifySpy)\n\t                spyReportEnd();\n\t        }\n\t    };\n\t    ObservableMap.prototype._addValue = function (name, newValue) {\n\t        var _this = this;\n\t        transaction(function () {\n\t            var observable$$1 = (_this._data[name] = new ObservableValue(newValue, _this.enhancer, _this.name + \".\" + name, false));\n\t            newValue = observable$$1.value; // value might have been changed\n\t            _this._updateHasMapEntry(name, true);\n\t            _this._keys.push(name);\n\t        });\n\t        var notifySpy = isSpyEnabled();\n\t        var notify = hasListeners(this);\n\t        var change = notify || notifySpy\n\t            ? {\n\t                type: \"add\",\n\t                object: this,\n\t                name: name,\n\t                newValue: newValue\n\t            }\n\t            : null;\n\t        if (notifySpy)\n\t            spyReportStart(change);\n\t        if (notify)\n\t            notifyListeners(this, change);\n\t        if (notifySpy)\n\t            spyReportEnd();\n\t    };\n\t    ObservableMap.prototype.get = function (key) {\n\t        key = \"\" + key;\n\t        if (this.has(key))\n\t            return this.dehanceValue(this._data[key].get());\n\t        return this.dehanceValue(undefined);\n\t    };\n\t    ObservableMap.prototype.dehanceValue = function (value) {\n\t        if (this.dehancer !== undefined) {\n\t            return this.dehancer(value);\n\t        }\n\t        return value;\n\t    };\n\t    ObservableMap.prototype.keys = function () {\n\t        return arrayAsIterator(this._keys.slice());\n\t    };\n\t    ObservableMap.prototype.values = function () {\n\t        return arrayAsIterator(this._keys.map(this.get, this));\n\t    };\n\t    ObservableMap.prototype.entries = function () {\n\t        var _this = this;\n\t        return arrayAsIterator(this._keys.map(function (key) { return [key, _this.get(key)]; }));\n\t    };\n\t    ObservableMap.prototype.forEach = function (callback, thisArg) {\n\t        var _this = this;\n\t        this.keys().forEach(function (key) { return callback.call(thisArg, _this.get(key), key, _this); });\n\t    };\n\t    /** Merge another object into this object, returns this. */\n\t    ObservableMap.prototype.merge = function (other) {\n\t        var _this = this;\n\t        if (isObservableMap(other)) {\n\t            other = other.toJS();\n\t        }\n\t        transaction(function () {\n\t            if (isPlainObject(other))\n\t                Object.keys(other).forEach(function (key) { return _this.set(key, other[key]); });\n\t            else if (Array.isArray(other))\n\t                other.forEach(function (_a) {\n\t                    var key = _a[0], value = _a[1];\n\t                    return _this.set(key, value);\n\t                });\n\t            else if (isES6Map(other))\n\t                other.forEach(function (value, key) { return _this.set(key, value); });\n\t            else if (other !== null && other !== undefined)\n\t                fail(\"Cannot initialize map from \" + other);\n\t        });\n\t        return this;\n\t    };\n\t    ObservableMap.prototype.clear = function () {\n\t        var _this = this;\n\t        transaction(function () {\n\t            untracked(function () {\n\t                _this.keys().forEach(_this.delete, _this);\n\t            });\n\t        });\n\t    };\n\t    ObservableMap.prototype.replace = function (values) {\n\t        var _this = this;\n\t        transaction(function () {\n\t            // grab all the keys that are present in the new map but not present in the current map\n\t            // and delete them from the map, then merge the new map\n\t            // this will cause reactions only on changed values\n\t            var newKeys = getMapLikeKeys(values);\n\t            var oldKeys = _this.keys();\n\t            var missingKeys = oldKeys.filter(function (k) { return newKeys.indexOf(k) === -1; });\n\t            missingKeys.forEach(function (k) { return _this.delete(k); });\n\t            _this.merge(values);\n\t        });\n\t        return this;\n\t    };\n\t    Object.defineProperty(ObservableMap.prototype, \"size\", {\n\t        get: function () {\n\t            return this._keys.length;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    /**\n\t     * Returns a shallow non observable object clone of this map.\n\t     * Note that the values might still be observable. For a deep clone use mobx.toJS.\n\t     */\n\t    ObservableMap.prototype.toJS = function () {\n\t        var _this = this;\n\t        var res = {};\n\t        this.keys().forEach(function (key) { return (res[key] = _this.get(key)); });\n\t        return res;\n\t    };\n\t    ObservableMap.prototype.toJSON = function () {\n\t        // Used by JSON.stringify\n\t        return this.toJS();\n\t    };\n\t    ObservableMap.prototype.isValidKey = function (key) {\n\t        if (key === null || key === undefined)\n\t            return false;\n\t        if (typeof key === \"string\" || typeof key === \"number\" || typeof key === \"boolean\")\n\t            return true;\n\t        return false;\n\t    };\n\t    ObservableMap.prototype.assertValidKey = function (key) {\n\t        if (!this.isValidKey(key))\n\t            throw new Error(\"[mobx.map] Invalid key: '\" + key + \"', only strings, numbers and booleans are accepted as key in observable maps.\");\n\t    };\n\t    ObservableMap.prototype.toString = function () {\n\t        var _this = this;\n\t        return (this.name +\n\t            \"[{ \" +\n\t            this.keys().map(function (key) { return key + \": \" + (\"\" + _this.get(key)); }).join(\", \") +\n\t            \" }]\");\n\t    };\n\t    /**\n\t     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n\t     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n\t     * for callback details\n\t     */\n\t    ObservableMap.prototype.observe = function (listener, fireImmediately) {\n\t        invariant(fireImmediately !== true, getMessage(\"m033\"));\n\t        return registerListener(this, listener);\n\t    };\n\t    ObservableMap.prototype.intercept = function (handler) {\n\t        return registerInterceptor(this, handler);\n\t    };\n\t    return ObservableMap;\n\t}());\n\tdeclareIterator(ObservableMap.prototype, function () {\n\t    return this.entries();\n\t});\n\tfunction map(initialValues) {\n\t    deprecated(\"`mobx.map` is deprecated, use `new ObservableMap` or `mobx.observable.map` instead\");\n\t    return observable.map(initialValues);\n\t}\n\t/* 'var' fixes small-build issue */\n\tvar isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap);\n\t\n\tvar EMPTY_ARRAY = [];\n\tObject.freeze(EMPTY_ARRAY);\n\tfunction getGlobal() {\n\t    return typeof window !== \"undefined\" ? window : global;\n\t}\n\tfunction getNextId() {\n\t    return ++globalState.mobxGuid;\n\t}\n\tfunction fail(message, thing) {\n\t    invariant(false, message, thing);\n\t    throw \"X\"; // unreachable\n\t}\n\tfunction invariant(check, message, thing) {\n\t    if (!check)\n\t        throw new Error(\"[mobx] Invariant failed: \" + message + (thing ? \" in '\" + thing + \"'\" : \"\"));\n\t}\n\t/**\n\t * Prints a deprecation message, but only one time.\n\t * Returns false if the deprecated message was already printed before\n\t */\n\tvar deprecatedMessages = [];\n\tfunction deprecated(msg) {\n\t    if (deprecatedMessages.indexOf(msg) !== -1)\n\t        return false;\n\t    deprecatedMessages.push(msg);\n\t    console.error(\"[mobx] Deprecated: \" + msg);\n\t    return true;\n\t}\n\t/**\n\t * Makes sure that the provided function is invoked at most once.\n\t */\n\tfunction once(func) {\n\t    var invoked = false;\n\t    return function () {\n\t        if (invoked)\n\t            return;\n\t        invoked = true;\n\t        return func.apply(this, arguments);\n\t    };\n\t}\n\tvar noop = function () { };\n\tfunction unique(list) {\n\t    var res = [];\n\t    list.forEach(function (item) {\n\t        if (res.indexOf(item) === -1)\n\t            res.push(item);\n\t    });\n\t    return res;\n\t}\n\tfunction joinStrings(things, limit, separator) {\n\t    if (limit === void 0) { limit = 100; }\n\t    if (separator === void 0) { separator = \" - \"; }\n\t    if (!things)\n\t        return \"\";\n\t    var sliced = things.slice(0, limit);\n\t    return \"\" + sliced.join(separator) + (things.length > limit\n\t        ? \" (... and \" + (things.length - limit) + \"more)\"\n\t        : \"\");\n\t}\n\tfunction isObject(value) {\n\t    return value !== null && typeof value === \"object\";\n\t}\n\tfunction isPlainObject(value) {\n\t    if (value === null || typeof value !== \"object\")\n\t        return false;\n\t    var proto = Object.getPrototypeOf(value);\n\t    return proto === Object.prototype || proto === null;\n\t}\n\tfunction objectAssign() {\n\t    var res = arguments[0];\n\t    for (var i = 1, l = arguments.length; i < l; i++) {\n\t        var source = arguments[i];\n\t        for (var key in source)\n\t            if (hasOwnProperty(source, key)) {\n\t                res[key] = source[key];\n\t            }\n\t    }\n\t    return res;\n\t}\n\tvar prototypeHasOwnProperty = Object.prototype.hasOwnProperty;\n\tfunction hasOwnProperty(object, propName) {\n\t    return prototypeHasOwnProperty.call(object, propName);\n\t}\n\tfunction makeNonEnumerable(object, propNames) {\n\t    for (var i = 0; i < propNames.length; i++) {\n\t        addHiddenProp(object, propNames[i], object[propNames[i]]);\n\t    }\n\t}\n\tfunction addHiddenProp(object, propName, value) {\n\t    Object.defineProperty(object, propName, {\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true,\n\t        value: value\n\t    });\n\t}\n\tfunction addHiddenFinalProp(object, propName, value) {\n\t    Object.defineProperty(object, propName, {\n\t        enumerable: false,\n\t        writable: false,\n\t        configurable: true,\n\t        value: value\n\t    });\n\t}\n\tfunction isPropertyConfigurable(object, prop) {\n\t    var descriptor = Object.getOwnPropertyDescriptor(object, prop);\n\t    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);\n\t}\n\tfunction assertPropertyConfigurable(object, prop) {\n\t    invariant(isPropertyConfigurable(object, prop), \"Cannot make property '\" + prop + \"' observable, it is not configurable and writable in the target object\");\n\t}\n\tfunction getEnumerableKeys(obj) {\n\t    var res = [];\n\t    for (var key in obj)\n\t        res.push(key);\n\t    return res;\n\t}\n\t/**\n\t * Naive deepEqual. Doesn't check for prototype, non-enumerable or out-of-range properties on arrays.\n\t * If you have such a case, you probably should use this function but something fancier :).\n\t */\n\tfunction deepEqual(a, b) {\n\t    if (a === null && b === null)\n\t        return true;\n\t    if (a === undefined && b === undefined)\n\t        return true;\n\t    if (areBothNaN(a, b))\n\t        return true;\n\t    if (typeof a !== \"object\")\n\t        return a === b;\n\t    var aIsArray = isArrayLike(a);\n\t    var aIsMap = isMapLike(a);\n\t    if (aIsArray !== isArrayLike(b)) {\n\t        return false;\n\t    }\n\t    else if (aIsMap !== isMapLike(b)) {\n\t        return false;\n\t    }\n\t    else if (aIsArray) {\n\t        if (a.length !== b.length)\n\t            return false;\n\t        for (var i = a.length - 1; i >= 0; i--)\n\t            if (!deepEqual(a[i], b[i]))\n\t                return false;\n\t        return true;\n\t    }\n\t    else if (aIsMap) {\n\t        if (a.size !== b.size)\n\t            return false;\n\t        var equals_1 = true;\n\t        a.forEach(function (value, key) {\n\t            equals_1 = equals_1 && deepEqual(b.get(key), value);\n\t        });\n\t        return equals_1;\n\t    }\n\t    else if (typeof a === \"object\" && typeof b === \"object\") {\n\t        if (a === null || b === null)\n\t            return false;\n\t        if (isMapLike(a) && isMapLike(b)) {\n\t            if (a.size !== b.size)\n\t                return false;\n\t            // Freaking inefficient.... Create PR if you run into this :) Much appreciated!\n\t            return deepEqual(observable.shallowMap(a).entries(), observable.shallowMap(b).entries());\n\t        }\n\t        if (getEnumerableKeys(a).length !== getEnumerableKeys(b).length)\n\t            return false;\n\t        for (var prop in a) {\n\t            if (!(prop in b))\n\t                return false;\n\t            if (!deepEqual(a[prop], b[prop]))\n\t                return false;\n\t        }\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\tfunction createInstanceofPredicate(name, clazz) {\n\t    var propName = \"isMobX\" + name;\n\t    clazz.prototype[propName] = true;\n\t    return function (x) {\n\t        return isObject(x) && x[propName] === true;\n\t    };\n\t}\n\tfunction areBothNaN(a, b) {\n\t    return (typeof a === \"number\" && typeof b === \"number\" && isNaN(a) && isNaN(b));\n\t}\n\t/**\n\t * Returns whether the argument is an array, disregarding observability.\n\t */\n\tfunction isArrayLike(x) {\n\t    return Array.isArray(x) || isObservableArray(x);\n\t}\n\tfunction isMapLike(x) {\n\t    return isES6Map(x) || isObservableMap(x);\n\t}\n\tfunction isES6Map(thing) {\n\t    if (getGlobal().Map !== undefined && thing instanceof getGlobal().Map)\n\t        return true;\n\t    return false;\n\t}\n\tfunction getMapLikeKeys(map$$1) {\n\t    var keys;\n\t    if (isPlainObject(map$$1))\n\t        keys = Object.keys(map$$1);\n\t    else if (Array.isArray(map$$1))\n\t        keys = map$$1.map(function (_a) {\n\t            var key = _a[0];\n\t            return key;\n\t        });\n\t    else if (isMapLike(map$$1))\n\t        keys = Array.from(map$$1.keys());\n\t    else\n\t        fail(\"Cannot get keys from \" + map$$1);\n\t    return keys;\n\t}\n\tfunction primitiveSymbol() {\n\t    return (typeof Symbol === \"function\" && Symbol.toPrimitive) || \"@@toPrimitive\";\n\t}\n\tfunction toPrimitive(value) {\n\t    return value === null ? null : typeof value === \"object\" ? \"\" + value : value;\n\t}\n\t\n\t/**\n\t * These values will persist if global state is reset\n\t */\n\tvar persistentKeys = [\"mobxGuid\", \"resetId\", \"spyListeners\", \"strictMode\", \"runId\"];\n\tvar MobXGlobals = (function () {\n\t    function MobXGlobals() {\n\t        /**\n\t         * MobXGlobals version.\n\t         * MobX compatiblity with other versions loaded in memory as long as this version matches.\n\t         * It indicates that the global state still stores similar information\n\t         */\n\t        this.version = 5;\n\t        /**\n\t         * Currently running derivation\n\t         */\n\t        this.trackingDerivation = null;\n\t        /**\n\t         * Are we running a computation currently? (not a reaction)\n\t         */\n\t        this.computationDepth = 0;\n\t        /**\n\t         * Each time a derivation is tracked, it is assigned a unique run-id\n\t         */\n\t        this.runId = 0;\n\t        /**\n\t         * 'guid' for general purpose. Will be persisted amongst resets.\n\t         */\n\t        this.mobxGuid = 0;\n\t        /**\n\t         * Are we in a batch block? (and how many of them)\n\t         */\n\t        this.inBatch = 0;\n\t        /**\n\t         * Observables that don't have observers anymore, and are about to be\n\t         * suspended, unless somebody else accesses it in the same batch\n\t         *\n\t         * @type {IObservable[]}\n\t         */\n\t        this.pendingUnobservations = [];\n\t        /**\n\t         * List of scheduled, not yet executed, reactions.\n\t         */\n\t        this.pendingReactions = [];\n\t        /**\n\t         * Are we currently processing reactions?\n\t         */\n\t        this.isRunningReactions = false;\n\t        /**\n\t         * Is it allowed to change observables at this point?\n\t         * In general, MobX doesn't allow that when running computations and React.render.\n\t         * To ensure that those functions stay pure.\n\t         */\n\t        this.allowStateChanges = true;\n\t        /**\n\t         * If strict mode is enabled, state changes are by default not allowed\n\t         */\n\t        this.strictMode = false;\n\t        /**\n\t         * Used by createTransformer to detect that the global state has been reset.\n\t         */\n\t        this.resetId = 0;\n\t        /**\n\t         * Spy callbacks\n\t         */\n\t        this.spyListeners = [];\n\t        /**\n\t         * Globally attached error handlers that react specifically to errors in reactions\n\t         */\n\t        this.globalReactionErrorHandlers = [];\n\t    }\n\t    return MobXGlobals;\n\t}());\n\tvar globalState = new MobXGlobals();\n\tvar shareGlobalStateCalled = false;\n\tvar runInIsolationCalled = false;\n\tvar warnedAboutMultipleInstances = false;\n\t{\n\t    var global_1 = getGlobal();\n\t    if (!global_1.__mobxInstanceCount) {\n\t        global_1.__mobxInstanceCount = 1;\n\t    }\n\t    else {\n\t        global_1.__mobxInstanceCount++;\n\t        setTimeout(function () {\n\t            if (!shareGlobalStateCalled && !runInIsolationCalled && !warnedAboutMultipleInstances) {\n\t                warnedAboutMultipleInstances = true;\n\t                console.warn(\"[mobx] Warning: there are multiple mobx instances active. This might lead to unexpected results. See https://github.com/mobxjs/mobx/issues/1082 for details.\");\n\t            }\n\t        });\n\t    }\n\t}\n\tfunction isolateGlobalState() {\n\t    runInIsolationCalled = true;\n\t    getGlobal().__mobxInstanceCount--;\n\t}\n\tfunction shareGlobalState() {\n\t    // TODO: remove in 4.0; just use peer dependencies instead.\n\t    deprecated(\"Using `shareGlobalState` is not recommended, use peer dependencies instead. See https://github.com/mobxjs/mobx/issues/1082 for details.\");\n\t    shareGlobalStateCalled = true;\n\t    var global = getGlobal();\n\t    var ownState = globalState;\n\t    /**\n\t     * Backward compatibility check\n\t     */\n\t    if (global.__mobservableTrackingStack || global.__mobservableViewStack)\n\t        throw new Error(\"[mobx] An incompatible version of mobservable is already loaded.\");\n\t    if (global.__mobxGlobal && global.__mobxGlobal.version !== ownState.version)\n\t        throw new Error(\"[mobx] An incompatible version of mobx is already loaded.\");\n\t    if (global.__mobxGlobal)\n\t        globalState = global.__mobxGlobal;\n\t    else\n\t        global.__mobxGlobal = ownState;\n\t}\n\tfunction getGlobalState() {\n\t    return globalState;\n\t}\n\t\n\t/**\n\t * For testing purposes only; this will break the internal state of existing observables,\n\t * but can be used to get back at a stable state after throwing errors\n\t */\n\tfunction resetGlobalState() {\n\t    globalState.resetId++;\n\t    var defaultGlobals = new MobXGlobals();\n\t    for (var key in defaultGlobals)\n\t        if (persistentKeys.indexOf(key) === -1)\n\t            globalState[key] = defaultGlobals[key];\n\t    globalState.allowStateChanges = !globalState.strictMode;\n\t}\n\t\n\tfunction hasObservers(observable) {\n\t    return observable.observers && observable.observers.length > 0;\n\t}\n\tfunction getObservers(observable) {\n\t    return observable.observers;\n\t}\n\tfunction addObserver(observable, node) {\n\t    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n\t    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n\t    // invariantObservers(observable);\n\t    var l = observable.observers.length;\n\t    if (l) {\n\t        // because object assignment is relatively expensive, let's not store data about index 0.\n\t        observable.observersIndexes[node.__mapid] = l;\n\t    }\n\t    observable.observers[l] = node;\n\t    if (observable.lowestObserverState > node.dependenciesState)\n\t        observable.lowestObserverState = node.dependenciesState;\n\t    // invariantObservers(observable);\n\t    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n\t}\n\tfunction removeObserver(observable, node) {\n\t    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n\t    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n\t    // invariantObservers(observable);\n\t    if (observable.observers.length === 1) {\n\t        // deleting last observer\n\t        observable.observers.length = 0;\n\t        queueForUnobservation(observable);\n\t    }\n\t    else {\n\t        // deleting from _observersIndexes is straight forward, to delete from _observers, let's swap `node` with last element\n\t        var list = observable.observers;\n\t        var map = observable.observersIndexes;\n\t        var filler = list.pop(); // get last element, which should fill the place of `node`, so the array doesn't have holes\n\t        if (filler !== node) {\n\t            // otherwise node was the last element, which already got removed from array\n\t            var index = map[node.__mapid] || 0; // getting index of `node`. this is the only place we actually use map.\n\t            if (index) {\n\t                // map store all indexes but 0, see comment in `addObserver`\n\t                map[filler.__mapid] = index;\n\t            }\n\t            else {\n\t                delete map[filler.__mapid];\n\t            }\n\t            list[index] = filler;\n\t        }\n\t        delete map[node.__mapid];\n\t    }\n\t    // invariantObservers(observable);\n\t    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n\t}\n\tfunction queueForUnobservation(observable) {\n\t    if (!observable.isPendingUnobservation) {\n\t        // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n\t        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n\t        observable.isPendingUnobservation = true;\n\t        globalState.pendingUnobservations.push(observable);\n\t    }\n\t}\n\t/**\n\t * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n\t * During a batch `onBecomeUnobserved` will be called at most once per observable.\n\t * Avoids unnecessary recalculations.\n\t */\n\tfunction startBatch() {\n\t    globalState.inBatch++;\n\t}\n\tfunction endBatch() {\n\t    if (--globalState.inBatch === 0) {\n\t        runReactions();\n\t        // the batch is actually about to finish, all unobserving should happen here.\n\t        var list = globalState.pendingUnobservations;\n\t        for (var i = 0; i < list.length; i++) {\n\t            var observable = list[i];\n\t            observable.isPendingUnobservation = false;\n\t            if (observable.observers.length === 0) {\n\t                observable.onBecomeUnobserved();\n\t                // NOTE: onBecomeUnobserved might push to `pendingUnobservations`\n\t            }\n\t        }\n\t        globalState.pendingUnobservations = [];\n\t    }\n\t}\n\tfunction reportObserved(observable) {\n\t    var derivation = globalState.trackingDerivation;\n\t    if (derivation !== null) {\n\t        /**\n\t         * Simple optimization, give each derivation run an unique id (runId)\n\t         * Check if last time this observable was accessed the same runId is used\n\t         * if this is the case, the relation is already known\n\t         */\n\t        if (derivation.runId !== observable.lastAccessedBy) {\n\t            observable.lastAccessedBy = derivation.runId;\n\t            derivation.newObserving[derivation.unboundDepsCount++] = observable;\n\t        }\n\t    }\n\t    else if (observable.observers.length === 0) {\n\t        queueForUnobservation(observable);\n\t    }\n\t}\n\t/**\n\t * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n\t * It will propagate changes to observers from previous run\n\t * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n\t * Hopefully self reruning autoruns aren't a feature people should depend on\n\t * Also most basic use cases should be ok\n\t */\n\t// Called by Atom when its value changes\n\tfunction propagateChanged(observable) {\n\t    // invariantLOS(observable, \"changed start\");\n\t    if (observable.lowestObserverState === exports.IDerivationState.STALE)\n\t        return;\n\t    observable.lowestObserverState = exports.IDerivationState.STALE;\n\t    var observers = observable.observers;\n\t    var i = observers.length;\n\t    while (i--) {\n\t        var d = observers[i];\n\t        if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE)\n\t            d.onBecomeStale();\n\t        d.dependenciesState = exports.IDerivationState.STALE;\n\t    }\n\t    // invariantLOS(observable, \"changed end\");\n\t}\n\t// Called by ComputedValue when it recalculate and its value changed\n\tfunction propagateChangeConfirmed(observable) {\n\t    // invariantLOS(observable, \"confirmed start\");\n\t    if (observable.lowestObserverState === exports.IDerivationState.STALE)\n\t        return;\n\t    observable.lowestObserverState = exports.IDerivationState.STALE;\n\t    var observers = observable.observers;\n\t    var i = observers.length;\n\t    while (i--) {\n\t        var d = observers[i];\n\t        if (d.dependenciesState === exports.IDerivationState.POSSIBLY_STALE)\n\t            d.dependenciesState = exports.IDerivationState.STALE;\n\t        else if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE // this happens during computing of `d`, just keep lowestObserverState up to date.\n\t        )\n\t            observable.lowestObserverState = exports.IDerivationState.UP_TO_DATE;\n\t    }\n\t    // invariantLOS(observable, \"confirmed end\");\n\t}\n\t// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\n\tfunction propagateMaybeChanged(observable) {\n\t    // invariantLOS(observable, \"maybe start\");\n\t    if (observable.lowestObserverState !== exports.IDerivationState.UP_TO_DATE)\n\t        return;\n\t    observable.lowestObserverState = exports.IDerivationState.POSSIBLY_STALE;\n\t    var observers = observable.observers;\n\t    var i = observers.length;\n\t    while (i--) {\n\t        var d = observers[i];\n\t        if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE) {\n\t            d.dependenciesState = exports.IDerivationState.POSSIBLY_STALE;\n\t            d.onBecomeStale();\n\t        }\n\t    }\n\t    // invariantLOS(observable, \"maybe end\");\n\t}\n\t\n\t(function (IDerivationState) {\n\t    // before being run or (outside batch and not being observed)\n\t    // at this point derivation is not holding any data about dependency tree\n\t    IDerivationState[IDerivationState[\"NOT_TRACKING\"] = -1] = \"NOT_TRACKING\";\n\t    // no shallow dependency changed since last computation\n\t    // won't recalculate derivation\n\t    // this is what makes mobx fast\n\t    IDerivationState[IDerivationState[\"UP_TO_DATE\"] = 0] = \"UP_TO_DATE\";\n\t    // some deep dependency changed, but don't know if shallow dependency changed\n\t    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n\t    // currently only ComputedValue will propagate POSSIBLY_STALE\n\t    //\n\t    // having this state is second big optimization:\n\t    // don't have to recompute on every dependency change, but only when it's needed\n\t    IDerivationState[IDerivationState[\"POSSIBLY_STALE\"] = 1] = \"POSSIBLY_STALE\";\n\t    // A shallow dependency has changed since last computation and the derivation\n\t    // will need to recompute when it's needed next.\n\t    IDerivationState[IDerivationState[\"STALE\"] = 2] = \"STALE\";\n\t})(exports.IDerivationState || (exports.IDerivationState = {}));\n\tvar CaughtException = (function () {\n\t    function CaughtException(cause) {\n\t        this.cause = cause;\n\t        // Empty\n\t    }\n\t    return CaughtException;\n\t}());\n\tfunction isCaughtException(e) {\n\t    return e instanceof CaughtException;\n\t}\n\t/**\n\t * Finds out whether any dependency of the derivation has actually changed.\n\t * If dependenciesState is 1 then it will recalculate dependencies,\n\t * if any dependency changed it will propagate it by changing dependenciesState to 2.\n\t *\n\t * By iterating over the dependencies in the same order that they were reported and\n\t * stopping on the first change, all the recalculations are only called for ComputedValues\n\t * that will be tracked by derivation. That is because we assume that if the first x\n\t * dependencies of the derivation doesn't change then the derivation should run the same way\n\t * up until accessing x-th dependency.\n\t */\n\tfunction shouldCompute(derivation) {\n\t    switch (derivation.dependenciesState) {\n\t        case exports.IDerivationState.UP_TO_DATE:\n\t            return false;\n\t        case exports.IDerivationState.NOT_TRACKING:\n\t        case exports.IDerivationState.STALE:\n\t            return true;\n\t        case exports.IDerivationState.POSSIBLY_STALE: {\n\t            var prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n\t            var obs = derivation.observing, l = obs.length;\n\t            for (var i = 0; i < l; i++) {\n\t                var obj = obs[i];\n\t                if (isComputedValue(obj)) {\n\t                    try {\n\t                        obj.get();\n\t                    }\n\t                    catch (e) {\n\t                        // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n\t                        untrackedEnd(prevUntracked);\n\t                        return true;\n\t                    }\n\t                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n\t                    // and `derivation` is an observer of `obj`\n\t                    if (derivation.dependenciesState === exports.IDerivationState.STALE) {\n\t                        untrackedEnd(prevUntracked);\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t            changeDependenciesStateTo0(derivation);\n\t            untrackedEnd(prevUntracked);\n\t            return false;\n\t        }\n\t    }\n\t}\n\tfunction isComputingDerivation() {\n\t    return globalState.trackingDerivation !== null; // filter out actions inside computations\n\t}\n\tfunction checkIfStateModificationsAreAllowed(atom) {\n\t    var hasObservers$$1 = atom.observers.length > 0;\n\t    // Should never be possible to change an observed observable from inside computed, see #798\n\t    if (globalState.computationDepth > 0 && hasObservers$$1)\n\t        fail(getMessage(\"m031\") + atom.name);\n\t    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n\t    if (!globalState.allowStateChanges && hasObservers$$1)\n\t        fail(getMessage(globalState.strictMode ? \"m030a\" : \"m030b\") + atom.name);\n\t}\n\t/**\n\t * Executes the provided function `f` and tracks which observables are being accessed.\n\t * The tracking information is stored on the `derivation` object and the derivation is registered\n\t * as observer of any of the accessed observables.\n\t */\n\tfunction trackDerivedFunction(derivation, f, context) {\n\t    // pre allocate array allocation + room for variation in deps\n\t    // array will be trimmed by bindDependencies\n\t    changeDependenciesStateTo0(derivation);\n\t    derivation.newObserving = new Array(derivation.observing.length + 100);\n\t    derivation.unboundDepsCount = 0;\n\t    derivation.runId = ++globalState.runId;\n\t    var prevTracking = globalState.trackingDerivation;\n\t    globalState.trackingDerivation = derivation;\n\t    var result;\n\t    try {\n\t        result = f.call(context);\n\t    }\n\t    catch (e) {\n\t        result = new CaughtException(e);\n\t    }\n\t    globalState.trackingDerivation = prevTracking;\n\t    bindDependencies(derivation);\n\t    return result;\n\t}\n\t/**\n\t * diffs newObserving with observing.\n\t * update observing to be newObserving with unique observables\n\t * notify observers that become observed/unobserved\n\t */\n\tfunction bindDependencies(derivation) {\n\t    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n\t    var prevObserving = derivation.observing;\n\t    var observing = (derivation.observing = derivation.newObserving);\n\t    var lowestNewObservingDerivationState = exports.IDerivationState.UP_TO_DATE;\n\t    // Go through all new observables and check diffValue: (this list can contain duplicates):\n\t    //   0: first occurrence, change to 1 and keep it\n\t    //   1: extra occurrence, drop it\n\t    var i0 = 0, l = derivation.unboundDepsCount;\n\t    for (var i = 0; i < l; i++) {\n\t        var dep = observing[i];\n\t        if (dep.diffValue === 0) {\n\t            dep.diffValue = 1;\n\t            if (i0 !== i)\n\t                observing[i0] = dep;\n\t            i0++;\n\t        }\n\t        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n\t        // not hitting the condition\n\t        if (dep.dependenciesState > lowestNewObservingDerivationState) {\n\t            lowestNewObservingDerivationState = dep.dependenciesState;\n\t        }\n\t    }\n\t    observing.length = i0;\n\t    derivation.newObserving = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n\t    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n\t    //   0: it's not in new observables, unobserve it\n\t    //   1: it keeps being observed, don't want to notify it. change to 0\n\t    l = prevObserving.length;\n\t    while (l--) {\n\t        var dep = prevObserving[l];\n\t        if (dep.diffValue === 0) {\n\t            removeObserver(dep, derivation);\n\t        }\n\t        dep.diffValue = 0;\n\t    }\n\t    // Go through all new observables and check diffValue: (now it should be unique)\n\t    //   0: it was set to 0 in last loop. don't need to do anything.\n\t    //   1: it wasn't observed, let's observe it. set back to 0\n\t    while (i0--) {\n\t        var dep = observing[i0];\n\t        if (dep.diffValue === 1) {\n\t            dep.diffValue = 0;\n\t            addObserver(dep, derivation);\n\t        }\n\t    }\n\t    // Some new observed derivations may become stale during this derivation computation\n\t    // so they have had no chance to propagate staleness (#916)\n\t    if (lowestNewObservingDerivationState !== exports.IDerivationState.UP_TO_DATE) {\n\t        derivation.dependenciesState = lowestNewObservingDerivationState;\n\t        derivation.onBecomeStale();\n\t    }\n\t}\n\tfunction clearObserving(derivation) {\n\t    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n\t    var obs = derivation.observing;\n\t    derivation.observing = [];\n\t    var i = obs.length;\n\t    while (i--)\n\t        removeObserver(obs[i], derivation);\n\t    derivation.dependenciesState = exports.IDerivationState.NOT_TRACKING;\n\t}\n\tfunction untracked(action) {\n\t    var prev = untrackedStart();\n\t    var res = action();\n\t    untrackedEnd(prev);\n\t    return res;\n\t}\n\tfunction untrackedStart() {\n\t    var prev = globalState.trackingDerivation;\n\t    globalState.trackingDerivation = null;\n\t    return prev;\n\t}\n\tfunction untrackedEnd(prev) {\n\t    globalState.trackingDerivation = prev;\n\t}\n\t/**\n\t * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n\t *\n\t */\n\tfunction changeDependenciesStateTo0(derivation) {\n\t    if (derivation.dependenciesState === exports.IDerivationState.UP_TO_DATE)\n\t        return;\n\t    derivation.dependenciesState = exports.IDerivationState.UP_TO_DATE;\n\t    var obs = derivation.observing;\n\t    var i = obs.length;\n\t    while (i--)\n\t        obs[i].lowestObserverState = exports.IDerivationState.UP_TO_DATE;\n\t}\n\t\n\tvar Reaction = (function () {\n\t    function Reaction(name, onInvalidate) {\n\t        if (name === void 0) { name = \"Reaction@\" + getNextId(); }\n\t        this.name = name;\n\t        this.onInvalidate = onInvalidate;\n\t        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n\t        this.newObserving = [];\n\t        this.dependenciesState = exports.IDerivationState.NOT_TRACKING;\n\t        this.diffValue = 0;\n\t        this.runId = 0;\n\t        this.unboundDepsCount = 0;\n\t        this.__mapid = \"#\" + getNextId();\n\t        this.isDisposed = false;\n\t        this._isScheduled = false;\n\t        this._isTrackPending = false;\n\t        this._isRunning = false;\n\t    }\n\t    Reaction.prototype.onBecomeStale = function () {\n\t        this.schedule();\n\t    };\n\t    Reaction.prototype.schedule = function () {\n\t        if (!this._isScheduled) {\n\t            this._isScheduled = true;\n\t            globalState.pendingReactions.push(this);\n\t            runReactions();\n\t        }\n\t    };\n\t    Reaction.prototype.isScheduled = function () {\n\t        return this._isScheduled;\n\t    };\n\t    /**\n\t     * internal, use schedule() if you intend to kick off a reaction\n\t     */\n\t    Reaction.prototype.runReaction = function () {\n\t        if (!this.isDisposed) {\n\t            startBatch();\n\t            this._isScheduled = false;\n\t            if (shouldCompute(this)) {\n\t                this._isTrackPending = true;\n\t                this.onInvalidate();\n\t                if (this._isTrackPending && isSpyEnabled()) {\n\t                    // onInvalidate didn't trigger track right away..\n\t                    spyReport({\n\t                        object: this,\n\t                        type: \"scheduled-reaction\"\n\t                    });\n\t                }\n\t            }\n\t            endBatch();\n\t        }\n\t    };\n\t    Reaction.prototype.track = function (fn) {\n\t        startBatch();\n\t        var notify = isSpyEnabled();\n\t        var startTime;\n\t        if (notify) {\n\t            startTime = Date.now();\n\t            spyReportStart({\n\t                object: this,\n\t                type: \"reaction\",\n\t                fn: fn\n\t            });\n\t        }\n\t        this._isRunning = true;\n\t        var result = trackDerivedFunction(this, fn, undefined);\n\t        this._isRunning = false;\n\t        this._isTrackPending = false;\n\t        if (this.isDisposed) {\n\t            // disposed during last run. Clean up everything that was bound after the dispose call.\n\t            clearObserving(this);\n\t        }\n\t        if (isCaughtException(result))\n\t            this.reportExceptionInDerivation(result.cause);\n\t        if (notify) {\n\t            spyReportEnd({\n\t                time: Date.now() - startTime\n\t            });\n\t        }\n\t        endBatch();\n\t    };\n\t    Reaction.prototype.reportExceptionInDerivation = function (error) {\n\t        var _this = this;\n\t        if (this.errorHandler) {\n\t            this.errorHandler(error, this);\n\t            return;\n\t        }\n\t        var message = \"[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '\" + this;\n\t        var messageToUser = getMessage(\"m037\");\n\t        console.error(message || messageToUser /* latter will not be true, make sure uglify doesn't remove */, error);\n\t        /** If debugging brought you here, please, read the above message :-). Tnx! */\n\t        if (isSpyEnabled()) {\n\t            spyReport({\n\t                type: \"error\",\n\t                message: message,\n\t                error: error,\n\t                object: this\n\t            });\n\t        }\n\t        globalState.globalReactionErrorHandlers.forEach(function (f) { return f(error, _this); });\n\t    };\n\t    Reaction.prototype.dispose = function () {\n\t        if (!this.isDisposed) {\n\t            this.isDisposed = true;\n\t            if (!this._isRunning) {\n\t                // if disposed while running, clean up later. Maybe not optimal, but rare case\n\t                startBatch();\n\t                clearObserving(this);\n\t                endBatch();\n\t            }\n\t        }\n\t    };\n\t    Reaction.prototype.getDisposer = function () {\n\t        var r = this.dispose.bind(this);\n\t        r.$mobx = this;\n\t        r.onError = registerErrorHandler;\n\t        return r;\n\t    };\n\t    Reaction.prototype.toString = function () {\n\t        return \"Reaction[\" + this.name + \"]\";\n\t    };\n\t    Reaction.prototype.whyRun = function () {\n\t        var observing = unique(this._isRunning ? this.newObserving : this.observing).map(function (dep) { return dep.name; });\n\t        return \"\\nWhyRun? reaction '\" + this.name + \"':\\n * Status: [\" + (this.isDisposed\n\t            ? \"stopped\"\n\t            : this._isRunning ? \"running\" : this.isScheduled() ? \"scheduled\" : \"idle\") + \"]\\n * This reaction will re-run if any of the following observables changes:\\n    \" + joinStrings(observing) + \"\\n    \" + (this._isRunning\n\t            ? \" (... or any observable accessed during the remainder of the current run)\"\n\t            : \"\") + \"\\n\\t\" + getMessage(\"m038\") + \"\\n\";\n\t    };\n\t    return Reaction;\n\t}());\n\tfunction registerErrorHandler(handler) {\n\t    invariant(this && this.$mobx && isReaction(this.$mobx), \"Invalid `this`\");\n\t    invariant(!this.$mobx.errorHandler, \"Only one onErrorHandler can be registered\");\n\t    this.$mobx.errorHandler = handler;\n\t}\n\tfunction onReactionError(handler) {\n\t    globalState.globalReactionErrorHandlers.push(handler);\n\t    return function () {\n\t        var idx = globalState.globalReactionErrorHandlers.indexOf(handler);\n\t        if (idx >= 0)\n\t            globalState.globalReactionErrorHandlers.splice(idx, 1);\n\t    };\n\t}\n\t/**\n\t * Magic number alert!\n\t * Defines within how many times a reaction is allowed to re-trigger itself\n\t * until it is assumed that this is gonna be a never ending loop...\n\t */\n\tvar MAX_REACTION_ITERATIONS = 100;\n\tvar reactionScheduler = function (f) { return f(); };\n\tfunction runReactions() {\n\t    // Trampolining, if runReactions are already running, new reactions will be picked up\n\t    if (globalState.inBatch > 0 || globalState.isRunningReactions)\n\t        return;\n\t    reactionScheduler(runReactionsHelper);\n\t}\n\tfunction runReactionsHelper() {\n\t    globalState.isRunningReactions = true;\n\t    var allReactions = globalState.pendingReactions;\n\t    var iterations = 0;\n\t    // While running reactions, new reactions might be triggered.\n\t    // Hence we work with two variables and check whether\n\t    // we converge to no remaining reactions after a while.\n\t    while (allReactions.length > 0) {\n\t        if (++iterations === MAX_REACTION_ITERATIONS) {\n\t            console.error(\"Reaction doesn't converge to a stable state after \" + MAX_REACTION_ITERATIONS + \" iterations.\" +\n\t                (\" Probably there is a cycle in the reactive function: \" + allReactions[0]));\n\t            allReactions.splice(0); // clear reactions\n\t        }\n\t        var remainingReactions = allReactions.splice(0);\n\t        for (var i = 0, l = remainingReactions.length; i < l; i++)\n\t            remainingReactions[i].runReaction();\n\t    }\n\t    globalState.isRunningReactions = false;\n\t}\n\tvar isReaction = createInstanceofPredicate(\"Reaction\", Reaction);\n\tfunction setReactionScheduler(fn) {\n\t    var baseScheduler = reactionScheduler;\n\t    reactionScheduler = function (f) { return fn(function () { return baseScheduler(f); }); };\n\t}\n\t\n\tfunction asReference(value) {\n\t    deprecated(\"asReference is deprecated, use observable.ref instead\");\n\t    return observable.ref(value);\n\t}\n\tfunction asStructure(value) {\n\t    deprecated(\"asStructure is deprecated. Use observable.struct, computed.struct or reaction options instead.\");\n\t    return observable.struct(value);\n\t}\n\tfunction asFlat(value) {\n\t    deprecated(\"asFlat is deprecated, use observable.shallow instead\");\n\t    return observable.shallow(value);\n\t}\n\tfunction asMap(data) {\n\t    deprecated(\"asMap is deprecated, use observable.map or observable.shallowMap instead\");\n\t    return observable.map(data || {});\n\t}\n\t\n\tfunction createComputedDecorator(equals) {\n\t    return createClassPropertyDecorator(function (target, name, _, __, originalDescriptor) {\n\t        invariant(typeof originalDescriptor !== \"undefined\", getMessage(\"m009\"));\n\t        invariant(typeof originalDescriptor.get === \"function\", getMessage(\"m010\"));\n\t        var adm = asObservableObject(target, \"\");\n\t        defineComputedProperty(adm, name, originalDescriptor.get, originalDescriptor.set, equals, false);\n\t    }, function (name) {\n\t        var observable = this.$mobx.values[name];\n\t        if (observable === undefined // See #505\n\t        )\n\t            return undefined;\n\t        return observable.get();\n\t    }, function (name, value) {\n\t        this.$mobx.values[name].set(value);\n\t    }, false, false);\n\t}\n\tvar computedDecorator = createComputedDecorator(comparer.default);\n\tvar computedStructDecorator = createComputedDecorator(comparer.structural);\n\t/**\n\t * Decorator for class properties: @computed get value() { return expr; }.\n\t * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n\t */\n\tvar computed = function computed(arg1, arg2, arg3) {\n\t    if (typeof arg2 === \"string\") {\n\t        return computedDecorator.apply(null, arguments);\n\t    }\n\t    invariant(typeof arg1 === \"function\", getMessage(\"m011\"));\n\t    invariant(arguments.length < 3, getMessage(\"m012\"));\n\t    var opts = typeof arg2 === \"object\" ? arg2 : {};\n\t    opts.setter = typeof arg2 === \"function\" ? arg2 : opts.setter;\n\t    var equals = opts.equals\n\t        ? opts.equals\n\t        : opts.compareStructural || opts.struct ? comparer.structural : comparer.default;\n\t    return new ComputedValue(arg1, opts.context, equals, opts.name || arg1.name || \"\", opts.setter);\n\t};\n\tcomputed.struct = computedStructDecorator;\n\tcomputed.equals = createComputedDecorator;\n\t\n\tfunction getAtom(thing, property) {\n\t    if (typeof thing === \"object\" && thing !== null) {\n\t        if (isObservableArray(thing)) {\n\t            invariant(property === undefined, getMessage(\"m036\"));\n\t            return thing.$mobx.atom;\n\t        }\n\t        if (isObservableMap(thing)) {\n\t            var anyThing = thing;\n\t            if (property === undefined)\n\t                return getAtom(anyThing._keys);\n\t            var observable = anyThing._data[property] || anyThing._hasMap[property];\n\t            invariant(!!observable, \"the entry '\" + property + \"' does not exist in the observable map '\" + getDebugName(thing) + \"'\");\n\t            return observable;\n\t        }\n\t        // Initializers run lazily when transpiling to babel, so make sure they are run...\n\t        runLazyInitializers(thing);\n\t        if (property && !thing.$mobx)\n\t            thing[property]; // See #1072 // TODO: remove in 4.0\n\t        if (isObservableObject(thing)) {\n\t            if (!property)\n\t                return fail(\"please specify a property\");\n\t            var observable = thing.$mobx.values[property];\n\t            invariant(!!observable, \"no observable property '\" + property + \"' found on the observable object '\" + getDebugName(thing) + \"'\");\n\t            return observable;\n\t        }\n\t        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n\t            return thing;\n\t        }\n\t    }\n\t    else if (typeof thing === \"function\") {\n\t        if (isReaction(thing.$mobx)) {\n\t            // disposer function\n\t            return thing.$mobx;\n\t        }\n\t    }\n\t    return fail(\"Cannot obtain atom from \" + thing);\n\t}\n\tfunction getAdministration(thing, property) {\n\t    invariant(thing, \"Expecting some object\");\n\t    if (property !== undefined)\n\t        return getAdministration(getAtom(thing, property));\n\t    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing))\n\t        return thing;\n\t    if (isObservableMap(thing))\n\t        return thing;\n\t    // Initializers run lazily when transpiling to babel, so make sure they are run...\n\t    runLazyInitializers(thing);\n\t    if (thing.$mobx)\n\t        return thing.$mobx;\n\t    invariant(false, \"Cannot obtain administration from \" + thing);\n\t}\n\tfunction getDebugName(thing, property) {\n\t    var named;\n\t    if (property !== undefined)\n\t        named = getAtom(thing, property);\n\t    else if (isObservableObject(thing) || isObservableMap(thing))\n\t        named = getAdministration(thing);\n\t    else\n\t        named = getAtom(thing); // valid for arrays as well\n\t    return named.name;\n\t}\n\t\n\tfunction isComputed(value, property) {\n\t    if (value === null || value === undefined)\n\t        return false;\n\t    if (property !== undefined) {\n\t        if (isObservableObject(value) === false)\n\t            return false;\n\t        if (!value.$mobx.values[property])\n\t            return false;\n\t        var atom = getAtom(value, property);\n\t        return isComputedValue(atom);\n\t    }\n\t    return isComputedValue(value);\n\t}\n\t\n\tfunction observe(thing, propOrCb, cbOrFire, fireImmediately) {\n\t    if (typeof cbOrFire === \"function\")\n\t        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n\t    else\n\t        return observeObservable(thing, propOrCb, cbOrFire);\n\t}\n\tfunction observeObservable(thing, listener, fireImmediately) {\n\t    return getAdministration(thing).observe(listener, fireImmediately);\n\t}\n\tfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n\t    return getAdministration(thing, property).observe(listener, fireImmediately);\n\t}\n\t\n\tfunction intercept(thing, propOrHandler, handler) {\n\t    if (typeof handler === \"function\")\n\t        return interceptProperty(thing, propOrHandler, handler);\n\t    else\n\t        return interceptInterceptable(thing, propOrHandler);\n\t}\n\tfunction interceptInterceptable(thing, handler) {\n\t    return getAdministration(thing).intercept(handler);\n\t}\n\tfunction interceptProperty(thing, property, handler) {\n\t    return getAdministration(thing, property).intercept(handler);\n\t}\n\t\n\t/**\n\t * expr can be used to create temporarily views inside views.\n\t * This can be improved to improve performance if a value changes often, but usually doesn't affect the outcome of an expression.\n\t *\n\t * In the following example the expression prevents that a component is rerender _each time_ the selection changes;\n\t * instead it will only rerenders when the current todo is (de)selected.\n\t *\n\t * reactiveComponent((props) => {\n\t *     const todo = props.todo;\n\t *     const isSelected = mobx.expr(() => props.viewState.selection === todo);\n\t *     return <div className={isSelected ? \"todo todo-selected\" : \"todo\"}>{todo.title}</div>\n\t * });\n\t *\n\t */\n\tfunction expr(expr, scope) {\n\t    if (!isComputingDerivation())\n\t        console.warn(getMessage(\"m013\"));\n\t    // optimization: would be more efficient if the expr itself wouldn't be evaluated first on the next change, but just a 'changed' signal would be fired\n\t    return computed(expr, { context: scope }).get();\n\t}\n\t\n\tfunction toJS(source, detectCycles, __alreadySeen) {\n\t    if (detectCycles === void 0) { detectCycles = true; }\n\t    if (__alreadySeen === void 0) { __alreadySeen = []; }\n\t    // optimization: using ES6 map would be more efficient!\n\t    // optimization: lift this function outside toJS, this makes recursion expensive\n\t    function cache(value) {\n\t        if (detectCycles)\n\t            __alreadySeen.push([source, value]);\n\t        return value;\n\t    }\n\t    if (isObservable(source)) {\n\t        if (detectCycles && __alreadySeen === null)\n\t            __alreadySeen = [];\n\t        if (detectCycles && source !== null && typeof source === \"object\") {\n\t            for (var i = 0, l = __alreadySeen.length; i < l; i++)\n\t                if (__alreadySeen[i][0] === source)\n\t                    return __alreadySeen[i][1];\n\t        }\n\t        if (isObservableArray(source)) {\n\t            var res = cache([]);\n\t            var toAdd = source.map(function (value) { return toJS(value, detectCycles, __alreadySeen); });\n\t            res.length = toAdd.length;\n\t            for (var i = 0, l = toAdd.length; i < l; i++)\n\t                res[i] = toAdd[i];\n\t            return res;\n\t        }\n\t        if (isObservableObject(source)) {\n\t            var res = cache({});\n\t            for (var key in source)\n\t                res[key] = toJS(source[key], detectCycles, __alreadySeen);\n\t            return res;\n\t        }\n\t        if (isObservableMap(source)) {\n\t            var res_1 = cache({});\n\t            source.forEach(function (value, key) { return (res_1[key] = toJS(value, detectCycles, __alreadySeen)); });\n\t            return res_1;\n\t        }\n\t        if (isObservableValue(source))\n\t            return toJS(source.get(), detectCycles, __alreadySeen);\n\t    }\n\t    return source;\n\t}\n\t\n\tfunction createTransformer(transformer, onCleanup) {\n\t    invariant(typeof transformer === \"function\" && transformer.length < 2, \"createTransformer expects a function that accepts one argument\");\n\t    // Memoizes: object id -> reactive view that applies transformer to the object\n\t    var objectCache = {};\n\t    // If the resetId changes, we will clear the object cache, see #163\n\t    // This construction is used to avoid leaking refs to the objectCache directly\n\t    var resetId = globalState.resetId;\n\t    // Local transformer class specifically for this transformer\n\t    var Transformer = (function (_super) {\n\t        __extends(Transformer, _super);\n\t        function Transformer(sourceIdentifier, sourceObject) {\n\t            var _this = _super.call(this, function () { return transformer(sourceObject); }, undefined, comparer.default, \"Transformer-\" + transformer.name + \"-\" + sourceIdentifier, undefined) || this;\n\t            _this.sourceIdentifier = sourceIdentifier;\n\t            _this.sourceObject = sourceObject;\n\t            return _this;\n\t        }\n\t        Transformer.prototype.onBecomeUnobserved = function () {\n\t            var lastValue = this.value;\n\t            _super.prototype.onBecomeUnobserved.call(this);\n\t            delete objectCache[this.sourceIdentifier];\n\t            if (onCleanup)\n\t                onCleanup(lastValue, this.sourceObject);\n\t        };\n\t        return Transformer;\n\t    }(ComputedValue));\n\t    return function (object) {\n\t        if (resetId !== globalState.resetId) {\n\t            objectCache = {};\n\t            resetId = globalState.resetId;\n\t        }\n\t        var identifier = getMemoizationId(object);\n\t        var reactiveTransformer = objectCache[identifier];\n\t        if (reactiveTransformer)\n\t            return reactiveTransformer.get();\n\t        // Not in cache; create a reactive view\n\t        reactiveTransformer = objectCache[identifier] = new Transformer(identifier, object);\n\t        return reactiveTransformer.get();\n\t    };\n\t}\n\tfunction getMemoizationId(object) {\n\t    if (typeof object === \"string\" || typeof object === \"number\")\n\t        return object;\n\t    if (object === null || typeof object !== \"object\")\n\t        throw new Error(\"[mobx] transform expected some kind of object or primitive value, got: \" + object);\n\t    var tid = object.$transformId;\n\t    if (tid === undefined) {\n\t        tid = getNextId();\n\t        addHiddenProp(object, \"$transformId\", tid);\n\t    }\n\t    return tid;\n\t}\n\t\n\tfunction log(msg) {\n\t    console.log(msg);\n\t    return msg;\n\t}\n\tfunction whyRun(thing, prop) {\n\t    switch (arguments.length) {\n\t        case 0:\n\t            thing = globalState.trackingDerivation;\n\t            if (!thing)\n\t                return log(getMessage(\"m024\"));\n\t            break;\n\t        case 2:\n\t            thing = getAtom(thing, prop);\n\t            break;\n\t    }\n\t    thing = getAtom(thing);\n\t    if (isComputedValue(thing))\n\t        return log(thing.whyRun());\n\t    else if (isReaction(thing))\n\t        return log(thing.whyRun());\n\t    return fail(getMessage(\"m025\"));\n\t}\n\t\n\tfunction getDependencyTree(thing, property) {\n\t    return nodeToDependencyTree(getAtom(thing, property));\n\t}\n\tfunction nodeToDependencyTree(node) {\n\t    var result = {\n\t        name: node.name\n\t    };\n\t    if (node.observing && node.observing.length > 0)\n\t        result.dependencies = unique(node.observing).map(nodeToDependencyTree);\n\t    return result;\n\t}\n\tfunction getObserverTree(thing, property) {\n\t    return nodeToObserverTree(getAtom(thing, property));\n\t}\n\tfunction nodeToObserverTree(node) {\n\t    var result = {\n\t        name: node.name\n\t    };\n\t    if (hasObservers(node))\n\t        result.observers = getObservers(node).map(nodeToObserverTree);\n\t    return result;\n\t}\n\t\n\tfunction interceptReads(thing, propOrHandler, handler) {\n\t    var target;\n\t    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n\t        target = getAdministration(thing);\n\t    }\n\t    else if (isObservableObject(thing)) {\n\t        if (typeof propOrHandler !== \"string\")\n\t            return fail(\"InterceptReads can only be used with a specific property, not with an object in general\");\n\t        target = getAdministration(thing, propOrHandler);\n\t    }\n\t    else {\n\t        return fail(\"Expected observable map, object or array as first array\");\n\t    }\n\t    if (target.dehancer !== undefined)\n\t        return fail(\"An intercept reader was already established\");\n\t    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler;\n\t    return function () {\n\t        target.dehancer = undefined;\n\t    };\n\t}\n\t\n\t/**\n\t * (c) Michel Weststrate 2015 - 2016\n\t * MIT Licensed\n\t *\n\t * Welcome to the mobx sources! To get an global overview of how MobX internally works,\n\t * this is a good place to start:\n\t * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n\t *\n\t * Source folders:\n\t * ===============\n\t *\n\t * - api/     Most of the public static methods exposed by the module can be found here.\n\t * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n\t * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n\t * - utils/   Utility stuff.\n\t *\n\t */\n\tvar extras = {\n\t    allowStateChanges: allowStateChanges,\n\t    deepEqual: deepEqual,\n\t    getAtom: getAtom,\n\t    getDebugName: getDebugName,\n\t    getDependencyTree: getDependencyTree,\n\t    getAdministration: getAdministration,\n\t    getGlobalState: getGlobalState,\n\t    getObserverTree: getObserverTree,\n\t    interceptReads: interceptReads,\n\t    isComputingDerivation: isComputingDerivation,\n\t    isSpyEnabled: isSpyEnabled,\n\t    onReactionError: onReactionError,\n\t    reserveArrayBuffer: reserveArrayBuffer,\n\t    resetGlobalState: resetGlobalState,\n\t    isolateGlobalState: isolateGlobalState,\n\t    shareGlobalState: shareGlobalState,\n\t    spyReport: spyReport,\n\t    spyReportEnd: spyReportEnd,\n\t    spyReportStart: spyReportStart,\n\t    setReactionScheduler: setReactionScheduler\n\t};\n\tvar everything = {\n\t    Reaction: Reaction,\n\t    untracked: untracked,\n\t    Atom: Atom,\n\t    BaseAtom: BaseAtom,\n\t    useStrict: useStrict,\n\t    isStrictModeEnabled: isStrictModeEnabled,\n\t    spy: spy,\n\t    comparer: comparer,\n\t    asReference: asReference,\n\t    asFlat: asFlat,\n\t    asStructure: asStructure,\n\t    asMap: asMap,\n\t    isModifierDescriptor: isModifierDescriptor,\n\t    isObservableObject: isObservableObject,\n\t    isBoxedObservable: isObservableValue,\n\t    isObservableArray: isObservableArray,\n\t    ObservableMap: ObservableMap,\n\t    isObservableMap: isObservableMap,\n\t    map: map,\n\t    transaction: transaction,\n\t    observable: observable,\n\t    computed: computed,\n\t    isObservable: isObservable,\n\t    isComputed: isComputed,\n\t    extendObservable: extendObservable,\n\t    extendShallowObservable: extendShallowObservable,\n\t    observe: observe,\n\t    intercept: intercept,\n\t    autorun: autorun,\n\t    autorunAsync: autorunAsync,\n\t    when: when,\n\t    reaction: reaction,\n\t    action: action,\n\t    isAction: isAction,\n\t    runInAction: runInAction,\n\t    expr: expr,\n\t    toJS: toJS,\n\t    createTransformer: createTransformer,\n\t    whyRun: whyRun,\n\t    isArrayLike: isArrayLike,\n\t    extras: extras\n\t};\n\tvar warnedAboutDefaultExport = false;\n\tvar _loop_1 = function (p) {\n\t    var val = everything[p];\n\t    Object.defineProperty(everything, p, {\n\t        get: function () {\n\t            if (!warnedAboutDefaultExport) {\n\t                warnedAboutDefaultExport = true;\n\t                console.warn(\"Using default export (`import mobx from 'mobx'`) is deprecated \" +\n\t                    \"and won’t work in mobx@4.0.0\\n\" +\n\t                    \"Use `import * as mobx from 'mobx'` instead\");\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t};\n\tfor (var p in everything) {\n\t    _loop_1(p);\n\t}\n\tif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n\t    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({ spy: spy, extras: extras });\n\t}\n\t\n\texports.extras = extras;\n\texports['default'] = everything;\n\texports.Reaction = Reaction;\n\texports.untracked = untracked;\n\texports.Atom = Atom;\n\texports.BaseAtom = BaseAtom;\n\texports.useStrict = useStrict;\n\texports.isStrictModeEnabled = isStrictModeEnabled;\n\texports.spy = spy;\n\texports.comparer = comparer;\n\texports.asReference = asReference;\n\texports.asFlat = asFlat;\n\texports.asStructure = asStructure;\n\texports.asMap = asMap;\n\texports.isModifierDescriptor = isModifierDescriptor;\n\texports.isObservableObject = isObservableObject;\n\texports.isBoxedObservable = isObservableValue;\n\texports.isObservableArray = isObservableArray;\n\texports.ObservableMap = ObservableMap;\n\texports.isObservableMap = isObservableMap;\n\texports.map = map;\n\texports.transaction = transaction;\n\texports.observable = observable;\n\texports.computed = computed;\n\texports.isObservable = isObservable;\n\texports.isComputed = isComputed;\n\texports.extendObservable = extendObservable;\n\texports.extendShallowObservable = extendShallowObservable;\n\texports.observe = observe;\n\texports.intercept = intercept;\n\texports.autorun = autorun;\n\texports.autorunAsync = autorunAsync;\n\texports.when = when;\n\texports.reaction = reaction;\n\texports.action = action;\n\texports.isAction = isAction;\n\texports.runInAction = runInAction;\n\texports.expr = expr;\n\texports.toJS = toJS;\n\texports.createTransformer = createTransformer;\n\texports.whyRun = whyRun;\n\texports.isArrayLike = isArrayLike;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(11);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * @typechecks\n\t * \n\t */\n\t\n\t/*eslint-disable no-self-compare */\n\t\n\t'use strict';\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t */\n\tfunction is(x, y) {\n\t  // SameValue algorithm\n\t  if (x === y) {\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    // Added the nonzero y check to make Flow happy, but it is redundant\n\t    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n\t  } else {\n\t    // Step 6.a: NaN == NaN\n\t    return x !== x && y !== y;\n\t  }\n\t}\n\t\n\t/**\n\t * Performs equality by iterating through keys on an object and returning false\n\t * when any key has values which are not strictly equal between the arguments.\n\t * Returns true when the values of all keys are strictly equal.\n\t */\n\tfunction shallowEqual(objA, objB) {\n\t  if (is(objA, objB)) {\n\t    return true;\n\t  }\n\t\n\t  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n\t    return false;\n\t  }\n\t\n\t  var keysA = Object.keys(objA);\n\t  var keysB = Object.keys(objB);\n\t\n\t  if (keysA.length !== keysB.length) {\n\t    return false;\n\t  }\n\t\n\t  // Test for A's keys different from B.\n\t  for (var i = 0; i < keysA.length; i++) {\n\t    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tmodule.exports = shallowEqual;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction checkDCE() {\n\t  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\t  if (\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n\t  ) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // This branch is unreachable because this function is only called\n\t    // in production, but the condition is true only in development.\n\t    // Therefore if the branch is still here, dead code elimination wasn't\n\t    // properly applied.\n\t    // Don't change the message. React DevTools relies on it. Also make sure\n\t    // this message doesn't occur elsewhere in this function, or it will cause\n\t    // a false positive.\n\t    throw new Error('^_^');\n\t  }\n\t  try {\n\t    // Verify that the code above has been dead code eliminated (DCE'd).\n\t    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n\t  } catch (err) {\n\t    // DevTools shouldn't crash React, no matter what.\n\t    // We should still report in case we break this code.\n\t    console.error(err);\n\t  }\n\t}\n\t\n\tif (true) {\n\t  // DCE check should happen before ReactDOM bundle executes so that\n\t  // DevTools can report bad minification during injection.\n\t  checkDCE();\n\t  module.exports = __webpack_require__(34);\n\t} else {\n\t  module.exports = require('./cjs/react-dom.development.js');\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(1), __webpack_require__(33), __webpack_require__(36));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([, , ], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"ReactKonva\"] = factory(require(\"react\"), require(\"konva\"), require(\"react-reconciler\"));\n\t\telse\n\t\t\troot[\"ReactKonva\"] = factory(root[\"React\"], root[\"Konva\"], root[undefined]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId]) {\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/ \t\t}\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\ti: moduleId,\n\t/******/ \t\t\tl: false,\n\t/******/ \t\t\texports: {}\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.l = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// define getter function for harmony exports\n\t/******/ \t__webpack_require__.d = function(exports, name, getter) {\n\t/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n\t/******/ \t\t\tObject.defineProperty(exports, name, {\n\t/******/ \t\t\t\tconfigurable: false,\n\t/******/ \t\t\t\tenumerable: true,\n\t/******/ \t\t\t\tget: getter\n\t/******/ \t\t\t});\n\t/******/ \t\t}\n\t/******/ \t};\n\t/******/\n\t/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t/******/ \t__webpack_require__.n = function(module) {\n\t/******/ \t\tvar getter = module && module.__esModule ?\n\t/******/ \t\t\tfunction getDefault() { return module['default']; } :\n\t/******/ \t\t\tfunction getModuleExports() { return module; };\n\t/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n\t/******/ \t\treturn getter;\n\t/******/ \t};\n\t/******/\n\t/******/ \t// Object.prototype.hasOwnProperty.call\n\t/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports) {\n\t\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\t\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\tmodule.exports = __webpack_require__(2);\n\t\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/**\n\t * Based on ReactKonva.js\n\t * Copyright (c) 2017-present Lavrenov Anton.\n\t * All rights reserved.\n\t *\n\t * MIT\n\t */\n\t\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar invariant = __webpack_require__(3);\n\tvar emptyObject = __webpack_require__(4);\n\tvar React = __webpack_require__(5);\n\tvar Konva = __webpack_require__(6);\n\tvar ReactFiberReconciler = __webpack_require__(7);\n\tvar ReactDOMFrameScheduling = __webpack_require__(8);\n\t\n\tvar Component = React.Component;\n\t\n\t\n\tvar propsToSkip = { children: true, ref: true, key: true, style: true };\n\t\n\tvar warningShowed = false;\n\t\n\tfunction applyNodeProps(instance, props) {\n\t  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t  if (!warningShowed && 'id' in props) {\n\t    var message = 'ReactKonva: You are using \"id\" attribute for a Konva node. In some very rare cases it may produce bugs. Currently we recommend not to use it and use \"name\" attribute instead.\\nYou are using id = \"' + props.id + '\".\\nFor me info see: https://github.com/lavrton/react-konva/issues/119';\n\t    console.warn(message);\n\t    warningShowed = true;\n\t  }\n\t\n\t  var updatedProps = {};\n\t  var hasUpdates = false;\n\t  for (var key in oldProps) {\n\t    if (propsToSkip[key]) {\n\t      continue;\n\t    }\n\t    var isEvent = key.slice(0, 2) === 'on';\n\t    var propChanged = oldProps[key] !== props[key];\n\t    if (isEvent && propChanged) {\n\t      var eventName = key.substr(2).toLowerCase();\n\t      if (eventName.substr(0, 7) === 'content') {\n\t        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n\t      }\n\t      instance.off(eventName, oldProps[key]);\n\t    }\n\t    var toRemove = !props.hasOwnProperty(key);\n\t    if (toRemove) {\n\t      instance.setAttr(key, undefined);\n\t    }\n\t  }\n\t  for (var key in props) {\n\t    if (propsToSkip[key]) {\n\t      continue;\n\t    }\n\t    var isEvent = key.slice(0, 2) === 'on';\n\t    var toAdd = oldProps[key] !== props[key];\n\t    if (isEvent && toAdd) {\n\t      var eventName = key.substr(2).toLowerCase();\n\t      if (eventName.substr(0, 7) === 'content') {\n\t        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n\t      }\n\t      if (props[key]) {\n\t        instance.on(eventName, props[key]);\n\t      }\n\t    }\n\t    if (!isEvent && (props[key] !== oldProps[key] || props[key] !== instance.getAttr(key))) {\n\t      hasUpdates = true;\n\t      updatedProps[key] = props[key];\n\t    }\n\t  }\n\t\n\t  if (hasUpdates) {\n\t    instance.setAttrs(updatedProps);\n\t    updatePicture(instance);\n\t  }\n\t}\n\t\n\tfunction updatePicture(node) {\n\t  var drawingNode = node.getLayer() || node.getStage();\n\t  drawingNode && drawingNode.batchDraw();\n\t}\n\t\n\tvar Stage = function (_Component) {\n\t  _inherits(Stage, _Component);\n\t\n\t  function Stage() {\n\t    _classCallCheck(this, Stage);\n\t\n\t    return _possibleConstructorReturn(this, (Stage.__proto__ || Object.getPrototypeOf(Stage)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Stage, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var _props = this.props,\n\t          height = _props.height,\n\t          width = _props.width;\n\t\n\t\n\t      this._stage = new Konva.Stage({\n\t        width: width,\n\t        height: this.props.height,\n\t        container: this._tagRef\n\t      });\n\t\n\t      applyNodeProps(this._stage, this.props);\n\t\n\t      this._mountNode = KonvaRenderer.createContainer(this._stage);\n\t      KonvaRenderer.updateContainer(this.props.children, this._mountNode, this);\n\t    }\n\t  }, {\n\t    key: 'componentDidUpdate',\n\t    value: function componentDidUpdate(prevProps, prevState) {\n\t      var props = this.props;\n\t\n\t      applyNodeProps(this._stage, this.props, prevProps);\n\t\n\t      KonvaRenderer.updateContainer(this.props.children, this._mountNode, this);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      KonvaRenderer.updateContainer(null, this._mountNode, this);\n\t      this._stage.destroy();\n\t    }\n\t  }, {\n\t    key: 'getStage',\n\t    value: function getStage() {\n\t      return this._stage;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var props = this.props;\n\t\n\t      return React.createElement('div', {\n\t        ref: function ref(_ref) {\n\t          return _this2._tagRef = _ref;\n\t        },\n\t        accessKey: props.accessKey,\n\t        className: props.className,\n\t        role: props.role,\n\t        style: props.style,\n\t        tabIndex: props.tabIndex,\n\t        title: props.title\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Stage;\n\t}(Component);\n\t\n\tvar KONVA_NODES = ['Layer', 'FastLayer', 'Group', 'Label', 'Rect', 'Circle', 'Ellipse', 'Wedge', 'Line', 'Sprite', 'Image', 'Text', 'TextPath', 'Star', 'Ring', 'Arc', 'Tag', 'Path', 'RegularPolygon', 'Arrow', 'Shape'];\n\t\n\tvar TYPES = {};\n\t\n\tKONVA_NODES.forEach(function (nodeName) {\n\t  TYPES[nodeName] = nodeName;\n\t});\n\t\n\tvar UPDATE_SIGNAL = {};\n\t\n\tvar KonvaRenderer = ReactFiberReconciler({\n\t  appendInitialChild: function appendInitialChild(parentInstance, child) {\n\t    if (typeof child === 'string') {\n\t      // Noop for string children of Text (eg <Text>{'foo'}{'bar'}</Text>)\n\t      invariant(false, 'Don not use plain text as child of Konva.Node. You are using text: \"%s\"', child);\n\t      return;\n\t    }\n\t\n\t    parentInstance.add(child);\n\t\n\t    updatePicture(parentInstance);\n\t  },\n\t  createInstance: function createInstance(type, props, internalInstanceHandle) {\n\t    var NodeClass = Konva[type];\n\t    if (!NodeClass) {\n\t      invariant(instance, 'ReactKonva does not support the type \"%s\"', type);\n\t      return;\n\t    }\n\t\n\t    var instance = new NodeClass();\n\t    instance._applyProps = applyNodeProps;\n\t    instance._applyProps(instance, props);\n\t\n\t    return instance;\n\t  },\n\t  createTextInstance: function createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n\t    invariant(false, 'Text components are not supported for now in ReactKonva.');\n\t  },\n\t  finalizeInitialChildren: function finalizeInitialChildren(domElement, type, props) {\n\t    return false;\n\t  },\n\t  getPublicInstance: function getPublicInstance(instance) {\n\t    return instance;\n\t  },\n\t  prepareForCommit: function prepareForCommit() {\n\t    // Noop\n\t  },\n\t  prepareUpdate: function prepareUpdate(domElement, type, oldProps, newProps) {\n\t    return UPDATE_SIGNAL;\n\t  },\n\t  resetAfterCommit: function resetAfterCommit() {\n\t    // Noop\n\t  },\n\t  resetTextContent: function resetTextContent(domElement) {\n\t    // Noop\n\t  },\n\t  shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {\n\t    return false;\n\t  },\n\t  getRootHostContext: function getRootHostContext() {\n\t    return emptyObject;\n\t  },\n\t  getChildHostContext: function getChildHostContext() {\n\t    return emptyObject;\n\t  },\n\t\n\t\n\t  scheduleDeferredCallback: ReactDOMFrameScheduling.rIC,\n\t\n\t  shouldSetTextContent: function shouldSetTextContent(type, props) {\n\t    return false;\n\t  },\n\t\n\t\n\t  now: ReactDOMFrameScheduling.now,\n\t\n\t  useSyncScheduling: true,\n\t\n\t  mutation: {\n\t    appendChild: function appendChild(parentInstance, child) {\n\t      if (child.parent === parentInstance) {\n\t        child.moveToTop();\n\t      } else {\n\t        parentInstance.add(child);\n\t      }\n\t\n\t      updatePicture(parentInstance);\n\t    },\n\t    appendChildToContainer: function appendChildToContainer(parentInstance, child) {\n\t      if (child.parent === parentInstance) {\n\t        child.moveToTop();\n\t      } else {\n\t        parentInstance.add(child);\n\t      }\n\t      updatePicture(parentInstance);\n\t    },\n\t    insertBefore: function insertBefore(parentInstance, child, beforeChild) {\n\t      invariant(child !== beforeChild, 'ReactKonva: Can not insert node before itself');\n\t      // remove and add back to reset zIndex\n\t      child.remove();\n\t      parentInstance.add(child);\n\t      child.setZIndex(beforeChild.getZIndex());\n\t      updatePicture(parentInstance);\n\t    },\n\t    insertInContainerBefore: function insertInContainerBefore(parentInstance, child, beforeChild) {\n\t      invariant(child !== beforeChild, 'ReactKonva: Can not insert node before itself');\n\t      // remove and add back to reset zIndex\n\t      child.remove();\n\t      parentInstance.add(child);\n\t      child.setZIndex(beforeChild.getZIndex());\n\t      updatePicture(parentInstance);\n\t    },\n\t    removeChild: function removeChild(parentInstance, child) {\n\t      child.destroy();\n\t      updatePicture(parentInstance);\n\t    },\n\t    removeChildFromContainer: function removeChildFromContainer(parentInstance, child) {\n\t      child.destroy();\n\t      updatePicture(parentInstance);\n\t    },\n\t    commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {\n\t      invariant(false, 'Text components are not yet supported in ReactKonva.');\n\t    },\n\t    commitMount: function commitMount(instance, type, newProps) {\n\t      // Noop\n\t    },\n\t    commitUpdate: function commitUpdate(instance, updatePayload, type, oldProps, newProps, fiberInstance) {\n\t      instance._applyProps(instance, newProps, oldProps);\n\t    }\n\t  }\n\t});\n\t\n\t/** API */\n\t\n\tmodule.exports = Object.assign({}, TYPES, { Stage: Stage });\n\t\n\t/***/ }),\n\t/* 3 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar validateFormat = function validateFormat(format) {};\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\t\n\t/***/ }),\n\t/* 4 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t\n\t\n\tvar emptyObject = {};\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\t\n\t/***/ }),\n\t/* 5 */\n\t/***/ (function(module, exports) {\n\t\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ }),\n\t/* 6 */\n\t/***/ (function(module, exports) {\n\t\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\t\n\t/***/ }),\n\t/* 7 */\n\t/***/ (function(module, exports) {\n\t\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\n\t/***/ }),\n\t/* 8 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t// adapted FROM: https://github.com/facebook/react/blob/3019210df2b486416ed94d7b9becffaf254e81c4/src/renderers/shared/ReactDOMFrameScheduling.js\n\t\n\t\n\t\n\t// This is a built-in polyfill for requestIdleCallback. It works by scheduling\n\t// a requestAnimationFrame, storing the time for the start of the frame, then\n\t// scheduling a postMessage which gets scheduled after paint. Within the\n\t// postMessage handler do as much work as possible until time + frame rate.\n\t// By separating the idle call into a separate event tick we ensure that\n\t// layout, paint and other browser work is counted against the available time.\n\t// The frame rate is dynamically adjusted.\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar ExecutionEnvironment = __webpack_require__(9);\n\t\n\tvar hasNativePerformanceNow = (typeof performance === 'undefined' ? 'undefined' : _typeof(performance)) === 'object' && typeof performance.now === 'function';\n\t\n\tvar now = void 0;\n\tif (hasNativePerformanceNow) {\n\t  now = function now() {\n\t    return performance.now();\n\t  };\n\t} else {\n\t  now = function now() {\n\t    return Date.now();\n\t  };\n\t}\n\t\n\t// TODO: There's no way to cancel, because Fiber doesn't atm.\n\tvar rIC = void 0;\n\t\n\tif (!ExecutionEnvironment.canUseDOM) {\n\t  rIC = function rIC(frameCallback) {\n\t    setTimeout(function () {\n\t      frameCallback({\n\t        timeRemaining: function timeRemaining() {\n\t          return Infinity;\n\t        }\n\t      });\n\t    });\n\t    return 0;\n\t  };\n\t} else if (typeof requestIdleCallback !== 'function') {\n\t  // Polyfill requestIdleCallback.\n\t\n\t  var scheduledRAFCallback = null;\n\t  var scheduledRICCallback = null;\n\t\n\t  var isIdleScheduled = false;\n\t  var isAnimationFrameScheduled = false;\n\t\n\t  var frameDeadline = 0;\n\t  // We start out assuming that we run at 30fps but then the heuristic tracking\n\t  // will adjust this value to a faster fps if we get more frequent animation\n\t  // frames.\n\t  var previousFrameTime = 33;\n\t  var activeFrameTime = 33;\n\t\n\t  var frameDeadlineObject;\n\t  if (hasNativePerformanceNow) {\n\t    frameDeadlineObject = {\n\t      timeRemaining: function timeRemaining() {\n\t        // We assume that if we have a performance timer that the rAF callback\n\t        // gets a performance timer value. Not sure if this is always true.\n\t        return frameDeadline - performance.now();\n\t      }\n\t    };\n\t  } else {\n\t    frameDeadlineObject = {\n\t      timeRemaining: function timeRemaining() {\n\t        // Fallback to Date.now()\n\t        return frameDeadline - Date.now();\n\t      }\n\t    };\n\t  }\n\t\n\t  // We use the postMessage trick to defer idle work until after the repaint.\n\t  var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);\n\t  var idleTick = function idleTick(event) {\n\t    if (event.source !== window || event.data !== messageKey) {\n\t      return;\n\t    }\n\t    isIdleScheduled = false;\n\t    var callback = scheduledRICCallback;\n\t    scheduledRICCallback = null;\n\t    if (callback !== null) {\n\t      callback(frameDeadlineObject);\n\t    }\n\t  };\n\t  // Assumes that we have addEventListener in this environment. Might need\n\t  // something better for old IE.\n\t  window.addEventListener('message', idleTick, false);\n\t\n\t  var animationTick = function animationTick(rafTime) {\n\t    isAnimationFrameScheduled = false;\n\t    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;\n\t    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {\n\t      if (nextFrameTime < 8) {\n\t        // Defensive coding. We don't support higher frame rates than 120hz.\n\t        // If we get lower than that, it is probably a bug.\n\t        nextFrameTime = 8;\n\t      }\n\t      // If one frame goes long, then the next one can be short to catch up.\n\t      // If two frames are short in a row, then that's an indication that we\n\t      // actually have a higher frame rate than what we're currently optimizing.\n\t      // We adjust our heuristic dynamically accordingly. For example, if we're\n\t      // running on 120hz display or 90hz VR display.\n\t      // Take the max of the two in case one of them was an anomaly due to\n\t      // missed frame deadlines.\n\t      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;\n\t    } else {\n\t      previousFrameTime = nextFrameTime;\n\t    }\n\t    frameDeadline = rafTime + activeFrameTime;\n\t    if (!isIdleScheduled) {\n\t      isIdleScheduled = true;\n\t      window.postMessage(messageKey, '*');\n\t    }\n\t    var callback = scheduledRAFCallback;\n\t    scheduledRAFCallback = null;\n\t    if (callback !== null) {\n\t      callback(rafTime);\n\t    }\n\t  };\n\t\n\t  rIC = function rIC(callback) {\n\t    // This assumes that we only schedule one callback at a time because that's\n\t    // how Fiber uses it.\n\t    scheduledRICCallback = callback;\n\t    if (!isAnimationFrameScheduled) {\n\t      // If rAF didn't already schedule one, we need to schedule a frame.\n\t      // TODO: If this rAF doesn't materialize because the browser throttles, we\n\t      // might want to still have setTimeout trigger rIC as a backup to ensure\n\t      // that we keep performing work.\n\t      isAnimationFrameScheduled = true;\n\t      requestAnimationFrame(animationTick);\n\t    }\n\t    return 0;\n\t  };\n\t} else {\n\t  rIC = requestIdleCallback;\n\t}\n\t\n\texports.now = now;\n\texports.rIC = rIC;\n\t\n\t/***/ }),\n\t/* 9 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t\n\t\n\tvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\t\n\t/**\n\t * Simple, lightweight module assisting with the detection and context of\n\t * Worker. Helps avoid circular dependencies and allows code to reason about\n\t * whether or not they are in a Worker, even if they never include the main\n\t * `ReactWorker` dependency.\n\t */\n\tvar ExecutionEnvironment = {\n\t\n\t  canUseDOM: canUseDOM,\n\t\n\t  canUseWorkers: typeof Worker !== 'undefined',\n\t\n\t  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t  canUseViewport: canUseDOM && !!window.screen,\n\t\n\t  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\t\n\t};\n\t\n\tmodule.exports = ExecutionEnvironment;\n\t\n\t/***/ })\n\t/******/ ]);\n\t});\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @remove-on-eject-begin\n\t/**\n\t * Copyright (c) 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t// @remove-on-eject-end\n\t\n\tif (typeof Promise === 'undefined') {\n\t  // Rejection tracking prevents a common issue where React gets into an\n\t  // inconsistent state due to an error, but it gets swallowed by a Promise,\n\t  // and the user has no idea what causes React's erratic future behavior.\n\t  __webpack_require__(21).enable();\n\t  window.Promise = __webpack_require__(20);\n\t}\n\t\n\t// fetch() polyfill for making API calls.\n\t__webpack_require__(39);\n\t\n\t// Object.assign() is commonly used with React.\n\t// It will use the native implementation if it's present and isn't buggy.\n\tObject.assign = __webpack_require__(19);\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _class;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _mobxReact = __webpack_require__(4);\n\t\n\tvar _Physics = __webpack_require__(17);\n\t\n\tvar _Physics2 = _interopRequireDefault(_Physics);\n\t\n\tvar _Sprite = __webpack_require__(18);\n\t\n\tvar _Sprite2 = _interopRequireDefault(_Sprite);\n\t\n\tvar _MarbleList = __webpack_require__(15);\n\t\n\tvar _MarbleList2 = _interopRequireDefault(_MarbleList);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar App = (0, _mobxReact.observer)(_class = function (_Component) {\n\t    _inherits(App, _Component);\n\t\n\t    function App() {\n\t        _classCallCheck(this, App);\n\t\n\t        return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(App, [{\n\t        key: \"componentWillMount\",\n\t        value: function componentWillMount() {\n\t            _Sprite2.default.loadSprite(function () {\n\t                return _Physics2.default.startGameLoop();\n\t            });\n\t        }\n\t    }, {\n\t        key: \"render\",\n\t        value: function render() {\n\t            return _react2.default.createElement(\n\t                \"div\",\n\t                { className: \"App\" },\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"App-header\" },\n\t                    _react2.default.createElement(\n\t                        \"h2\",\n\t                        null,\n\t                        \"Inelastic collisions\"\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"p\",\n\t                        null,\n\t                        \"Rendered on canvas, built with React and Konva\"\n\t                    )\n\t                ),\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"App-intro\" },\n\t                    _react2.default.createElement(\n\t                        _mobxReact.Provider,\n\t                        { physics: _Physics2.default, sprite: _Sprite2.default },\n\t                        _react2.default.createElement(_MarbleList2.default, null)\n\t                    )\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return App;\n\t}(_react.Component)) || _class;\n\t\n\texports.default = App;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _dec, _class;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactKonva = __webpack_require__(10);\n\t\n\tvar _mobxReact = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Marble = (_dec = (0, _mobxReact.inject)('physics', 'sprite'), _dec(_class = (0, _mobxReact.observer)(_class = function (_Component) {\n\t    _inherits(Marble, _Component);\n\t\n\t    function Marble() {\n\t        _classCallCheck(this, Marble);\n\t\n\t        return _possibleConstructorReturn(this, (Marble.__proto__ || Object.getPrototypeOf(Marble)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Marble, [{\n\t        key: 'onDragStart',\n\t        value: function onDragStart() {\n\t            var _props = this.props,\n\t                physics = _props.physics,\n\t                id = _props.id;\n\t\n\t\n\t            this.setState({\n\t                origX: physics.marbles[id].x,\n\t                origY: physics.marbles[id].y,\n\t                startTime: new Date()\n\t            });\n\t        }\n\t    }, {\n\t        key: 'onDragMove',\n\t        value: function onDragMove() {\n\t            var _props2 = this.props,\n\t                physics = _props2.physics,\n\t                id = _props2.id;\n\t            var _refs$circle$attrs = this.refs.circle.attrs,\n\t                x = _refs$circle$attrs.x,\n\t                y = _refs$circle$attrs.y;\n\t\n\t\n\t            physics.marbles[id].x = x;\n\t            physics.marbles[id].y = y;\n\t        }\n\t    }, {\n\t        key: 'onDragEnd',\n\t        value: function onDragEnd() {\n\t            var physics = this.props.physics,\n\t                circle = this.refs.circle,\n\t                _state = this.state,\n\t                origX = _state.origX,\n\t                origY = _state.origY,\n\t                _circle$attrs = circle.attrs,\n\t                x = _circle$attrs.x,\n\t                y = _circle$attrs.y;\n\t\n\t\n\t            var delta_t = new Date() - this.state.startTime,\n\t                dist = Math.pow(x - origX, 2) + Math.pow(y - origY, 2),\n\t                v = Math.sqrt(dist) / (delta_t / 16); // distance per frame (= 16ms)\n\t\n\t            physics.shoot({\n\t                x: x,\n\t                y: y,\n\t                vx: (x - origX) / (v / 3), // /3 is a speedup factor\n\t                vy: (y - origY) / (v / 3)\n\t            }, this.props.id);\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            var _props3 = this.props,\n\t                sprite = _props3.sprite,\n\t                type = _props3.type,\n\t                draggable = _props3.draggable,\n\t                id = _props3.id,\n\t                physics = _props3.physics;\n\t\n\t            var MarbleDefinitions = sprite.marbleDefinitions;\n\t            var _physics$marbles$id = physics.marbles[id],\n\t                x = _physics$marbles$id.x,\n\t                y = _physics$marbles$id.y,\n\t                r = _physics$marbles$id.r;\n\t\n\t\n\t            return _react2.default.createElement(_reactKonva.Circle, { x: x, y: y, radius: r,\n\t                fillPatternImage: sprite.sprite,\n\t                fillPatternOffset: MarbleDefinitions[type],\n\t                fillPatternScale: { x: r * 2 / 111, y: r * 2 / 111 },\n\t                shadowColor: MarbleDefinitions[type].c,\n\t                shadowBlur: '15',\n\t                shadowOpacity: '1',\n\t                draggable: draggable,\n\t                onDragStart: this.onDragStart.bind(this),\n\t                onDragEnd: this.onDragEnd.bind(this),\n\t                onDragMove: this.onDragMove.bind(this),\n\t                ref: 'circle'\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Marble;\n\t}(_react.Component)) || _class) || _class);\n\texports.default = Marble;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _mobxReact = __webpack_require__(4);\n\t\n\tvar _reactKonva = __webpack_require__(10);\n\t\n\tvar _Marble = __webpack_require__(14);\n\t\n\tvar _Marble2 = _interopRequireDefault(_Marble);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar MarbleList = (0, _mobxReact.inject)('physics', 'sprite')((0, _mobxReact.observer)(function (_ref) {\n\t    var physics = _ref.physics,\n\t        sprite = _ref.sprite;\n\t    var width = physics.width,\n\t        height = physics.height,\n\t        marbles = physics.marbles;\n\t    var marbleTypes = sprite.marbleTypes;\n\t\n\t\n\t    return _react2.default.createElement(\n\t        _reactKonva.Stage,\n\t        { width: width, height: height },\n\t        _react2.default.createElement(\n\t            _reactKonva.Layer,\n\t            null,\n\t            _react2.default.createElement(\n\t                _reactKonva.Group,\n\t                null,\n\t                marbles.map(function (_ref2, i) {\n\t                    var x = _ref2.x,\n\t                        y = _ref2.y,\n\t                        id = _ref2.id;\n\t                    return _react2.default.createElement(_Marble2.default, { x: x,\n\t                        y: y,\n\t                        type: marbleTypes[i % marbleTypes.length],\n\t                        draggable: 'true',\n\t                        id: id,\n\t                        key: 'marble-' + id });\n\t                })\n\t            )\n\t        )\n\t    );\n\t}));\n\t\n\texports.default = MarbleList;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(9);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _App = __webpack_require__(13);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\t__webpack_require__(25);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('root'));\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _desc, _value, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\t\n\tvar _mobx = __webpack_require__(5);\n\t\n\tvar _d3Array = __webpack_require__(22);\n\t\n\tvar _d3Timer = __webpack_require__(24);\n\t\n\tvar _d3Quadtree = __webpack_require__(23);\n\t\n\tfunction _initDefineProp(target, property, descriptor, context) {\n\t    if (!descriptor) return;\n\t    Object.defineProperty(target, property, {\n\t        enumerable: descriptor.enumerable,\n\t        configurable: descriptor.configurable,\n\t        writable: descriptor.writable,\n\t        value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n\t    });\n\t}\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n\t    var desc = {};\n\t    Object['ke' + 'ys'](descriptor).forEach(function (key) {\n\t        desc[key] = descriptor[key];\n\t    });\n\t    desc.enumerable = !!desc.enumerable;\n\t    desc.configurable = !!desc.configurable;\n\t\n\t    if ('value' in desc || desc.initializer) {\n\t        desc.writable = true;\n\t    }\n\t\n\t    desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n\t        return decorator(target, property, desc) || desc;\n\t    }, desc);\n\t\n\t    if (context && desc.initializer !== void 0) {\n\t        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n\t        desc.initializer = undefined;\n\t    }\n\t\n\t    if (desc.initializer === void 0) {\n\t        Object['define' + 'Property'](target, property, desc);\n\t        desc = null;\n\t    }\n\t\n\t    return desc;\n\t}\n\t\n\tfunction _initializerWarningHelper(descriptor, context) {\n\t    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');\n\t}\n\t\n\tvar Physics = (_class = function () {\n\t    function Physics() {\n\t        _classCallCheck(this, Physics);\n\t\n\t        _initDefineProp(this, 'MarbleR', _descriptor, this);\n\t\n\t        _initDefineProp(this, 'width', _descriptor2, this);\n\t\n\t        _initDefineProp(this, 'height', _descriptor3, this);\n\t\n\t        _initDefineProp(this, 'marbles', _descriptor4, this);\n\t\n\t        this.timer = null;\n\t    }\n\t\n\t    _createClass(Physics, [{\n\t        key: 'startGameLoop',\n\t        value: function startGameLoop() {\n\t            var _this = this;\n\t\n\t            this.marbles = this.initialPositions;\n\t\n\t            this.timer = (0, _d3Timer.timer)(function () {\n\t                return _this.simulationStep();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'simulationStep',\n\t        value: function simulationStep() {\n\t            var _this2 = this;\n\t\n\t            var width = this.width,\n\t                height = this.height,\n\t                MarbleR = this.MarbleR;\n\t\n\t\n\t            var moveMarble = function moveMarble(_ref) {\n\t                var x = _ref.x,\n\t                    y = _ref.y,\n\t                    vx = _ref.vx,\n\t                    vy = _ref.vy,\n\t                    id = _ref.id;\n\t\n\t                var _vx = (x + vx < MarbleR ? -vx : x + vx > width - MarbleR ? -vx : vx) * .99,\n\t                    _vy = (y + vy < MarbleR ? -vy : y + vy > height - MarbleR ? -vy : vy) * .99;\n\t\n\t                // nearest marble is a collision candidate\n\t                var subdividedSpace = (0, _d3Quadtree.quadtree)().extent([[-1, -1], [_this2.width + 1, _this2.height + 1]]).x(function (d) {\n\t                    return d.x;\n\t                }).y(function (d) {\n\t                    return d.y;\n\t                }).addAll(_this2.marbles.filter(function (m) {\n\t                    return id !== m.id;\n\t                })),\n\t                    candidate = subdividedSpace.find(x, y, MarbleR * 2);\n\t\n\t                if (candidate) {\n\t\n\t                    // borrowing @air_hadoken's implementation from here:\n\t                    // https://github.com/airhadoken/game_of_circles/blob/master/circles.js#L64\n\t                    var cx = candidate.x,\n\t                        cy = candidate.y,\n\t                        normx = cx - x,\n\t                        normy = cy - y,\n\t                        dist = Math.pow(normx, 2) + Math.pow(normy, 2),\n\t                        c = (_vx * normx + _vy * normy) / dist * 2.3;\n\t\n\t                    _vx = (_vx - c * normx) / 2.3;\n\t                    _vy = (_vy - c * normy) / 2.3;\n\t\n\t                    candidate.vx += -_vx;\n\t                    candidate.vy += -_vy;\n\t                    candidate.x += -_vx;\n\t                    candidate.y += -_vy;\n\t                }\n\t\n\t                return {\n\t                    x: x + _vx,\n\t                    y: y + _vy,\n\t                    vx: _vx,\n\t                    vy: _vy\n\t                };\n\t            };\n\t\n\t            this.marbles.forEach(function (marble, i) {\n\t                var _moveMarble = moveMarble(marble),\n\t                    x = _moveMarble.x,\n\t                    y = _moveMarble.y,\n\t                    vx = _moveMarble.vx,\n\t                    vy = _moveMarble.vy;\n\t\n\t                _this2.marbles[i].x = x;\n\t                _this2.marbles[i].y = y;\n\t                _this2.marbles[i].vx = vx;\n\t                _this2.marbles[i].vy = vy;\n\t            });\n\t        }\n\t    }, {\n\t        key: 'shoot',\n\t        value: function shoot(_ref2, i) {\n\t            var x = _ref2.x,\n\t                y = _ref2.y,\n\t                vx = _ref2.vx,\n\t                vy = _ref2.vy;\n\t\n\t            var maxSpeed = 20;\n\t\n\t            this.marbles[i].x = x;\n\t            this.marbles[i].y = y;\n\t            this.marbles[i].vx = vx < maxSpeed ? vx : maxSpeed;\n\t            this.marbles[i].vy = vy < maxSpeed ? vy : maxSpeed;\n\t        }\n\t    }, {\n\t        key: 'initialPositions',\n\t        get: function get() {\n\t            var _this3 = this;\n\t\n\t            var width = this.width,\n\t                height = this.height,\n\t                MarbleR = this.MarbleR,\n\t                center = width / 2;\n\t\n\t\n\t            var lines = 4,\n\t                maxY = 200;\n\t\n\t            var marbles = (0, _d3Array.range)(lines, 0, -1).map(function (y) {\n\t                if (y === lines) return [{ x: center, y: maxY,\n\t                    vx: 0, vy: 0, r: _this3.MarbleR }];\n\t\n\t                var left = center - y * (MarbleR + 5),\n\t                    right = center + y * (MarbleR + 5);\n\t\n\t                return (0, _d3Array.range)(left, right, MarbleR * 2 + 5).map(function (x) {\n\t                    return {\n\t                        x: x,\n\t                        y: maxY - y * (MarbleR * 2 + 5),\n\t                        vx: 0,\n\t                        vy: 0,\n\t                        r: _this3.MarbleR\n\t                    };\n\t                });\n\t            }).reduce(function (acc, pos) {\n\t                return acc.concat(pos);\n\t            }, []);\n\t\n\t            marbles = [].concat(marbles, {\n\t                x: width / 2,\n\t                y: height - 150,\n\t                vx: 0,\n\t                vy: 0,\n\t                r: this.MarbleR\n\t            });\n\t\n\t            marbles.forEach(function (m, i) {\n\t                return marbles[i].id = i;\n\t            });\n\t\n\t            return marbles;\n\t        }\n\t    }]);\n\t\n\t    return Physics;\n\t}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, 'MarbleR', [_mobx.observable], {\n\t    enumerable: true,\n\t    initializer: function initializer() {\n\t        return 25;\n\t    }\n\t}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, 'width', [_mobx.observable], {\n\t    enumerable: true,\n\t    initializer: function initializer() {\n\t        return 800;\n\t    }\n\t}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, 'height', [_mobx.observable], {\n\t    enumerable: true,\n\t    initializer: function initializer() {\n\t        return 600;\n\t    }\n\t}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, 'marbles', [_mobx.observable], {\n\t    enumerable: true,\n\t    initializer: function initializer() {\n\t        return [];\n\t    }\n\t}), _applyDecoratedDescriptor(_class.prototype, 'initialPositions', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'initialPositions'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'startGameLoop', [_mobx.action], Object.getOwnPropertyDescriptor(_class.prototype, 'startGameLoop'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'simulationStep', [_mobx.action], Object.getOwnPropertyDescriptor(_class.prototype, 'simulationStep'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'shoot', [_mobx.action], Object.getOwnPropertyDescriptor(_class.prototype, 'shoot'), _class.prototype)), _class);\n\texports.default = new Physics();\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.MarbleDefinitions = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _desc, _value, _class, _descriptor;\n\t\n\t// marbles sprite from https://dribbble.com/shots/2186007-Monster-Marbles\n\t\n\t\n\tvar _mobx = __webpack_require__(5);\n\t\n\tvar _monsterMarblesSpriteSheets = __webpack_require__(38);\n\t\n\tvar _monsterMarblesSpriteSheets2 = _interopRequireDefault(_monsterMarblesSpriteSheets);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _initDefineProp(target, property, descriptor, context) {\n\t    if (!descriptor) return;\n\t    Object.defineProperty(target, property, {\n\t        enumerable: descriptor.enumerable,\n\t        configurable: descriptor.configurable,\n\t        writable: descriptor.writable,\n\t        value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n\t    });\n\t}\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n\t    var desc = {};\n\t    Object['ke' + 'ys'](descriptor).forEach(function (key) {\n\t        desc[key] = descriptor[key];\n\t    });\n\t    desc.enumerable = !!desc.enumerable;\n\t    desc.configurable = !!desc.configurable;\n\t\n\t    if ('value' in desc || desc.initializer) {\n\t        desc.writable = true;\n\t    }\n\t\n\t    desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n\t        return decorator(target, property, desc) || desc;\n\t    }, desc);\n\t\n\t    if (context && desc.initializer !== void 0) {\n\t        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n\t        desc.initializer = undefined;\n\t    }\n\t\n\t    if (desc.initializer === void 0) {\n\t        Object['define' + 'Property'](target, property, desc);\n\t        desc = null;\n\t    }\n\t\n\t    return desc;\n\t}\n\t\n\tfunction _initializerWarningHelper(descriptor, context) {\n\t    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');\n\t}\n\t\n\tvar MarbleDefinitions = {\n\t    dino: { x: -222, y: -177, c: '#8664d5' },\n\t    redHeart: { x: -222, y: -299, c: '#e47178' },\n\t    sun: { x: -222, y: -420, c: '#5c96ac' },\n\t\n\t    yellowHeart: { x: -400, y: -177, c: '#c8b405' },\n\t    mouse: { x: -400, y: -299, c: '#7d7e82' },\n\t    pumpkin: { x: -400, y: -420, c: '#fa9801' },\n\t\n\t    frog: { x: -576, y: -177, c: '#98b42b' },\n\t    moon: { x: -575, y: -299, c: '#b20717' },\n\t    bear: { x: -576, y: -421, c: '#a88534' }\n\t};\n\t\n\tvar Sprite = (_class = function () {\n\t    function Sprite() {\n\t        _classCallCheck(this, Sprite);\n\t\n\t        _initDefineProp(this, 'sprite', _descriptor, this);\n\t    }\n\t\n\t    _createClass(Sprite, [{\n\t        key: 'loadSprite',\n\t        value: function loadSprite() {\n\t            var _this = this;\n\t\n\t            var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {\n\t                return null;\n\t            };\n\t\n\t            var sprite = new Image();\n\t            sprite.src = _monsterMarblesSpriteSheets2.default;\n\t\n\t            sprite.onload = function () {\n\t                _this.sprite = sprite;\n\t\n\t                callback();\n\t            };\n\t        }\n\t    }, {\n\t        key: 'marbleTypes',\n\t        get: function get() {\n\t            return Object.keys(MarbleDefinitions);\n\t        }\n\t    }, {\n\t        key: 'marbleDefinitions',\n\t        get: function get() {\n\t            return MarbleDefinitions;\n\t        }\n\t    }]);\n\t\n\t    return Sprite;\n\t}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, 'sprite', [_mobx.observable], {\n\t    enumerable: true,\n\t    initializer: function initializer() {\n\t        return null;\n\t    }\n\t}), _applyDecoratedDescriptor(_class.prototype, 'loadSprite', [_mobx.action], Object.getOwnPropertyDescriptor(_class.prototype, 'loadSprite'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'marbleTypes', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'marbleTypes'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'marbleDefinitions', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'marbleDefinitions'), _class.prototype)), _class);\n\texports.default = new Sprite();\n\texports.MarbleDefinitions = MarbleDefinitions;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (Object.getOwnPropertySymbols) {\n\t\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(7);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(7);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-quadtree/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\texports.quadtree = quadtree;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-timer/ Version 1.0.7. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar emptyFunction = __webpack_require__(2);\n\t\n\t/**\n\t * Upstream version of event listener. Does not take into account specific\n\t * nature of platform.\n\t */\n\tvar EventListener = {\n\t  /**\n\t   * Listen to DOM events during the bubble phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  listen: function listen(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, false);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, false);\n\t        }\n\t      };\n\t    } else if (target.attachEvent) {\n\t      target.attachEvent('on' + eventType, callback);\n\t      return {\n\t        remove: function remove() {\n\t          target.detachEvent('on' + eventType, callback);\n\t        }\n\t      };\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Listen to DOM events during the capture phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  capture: function capture(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, true);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, true);\n\t        }\n\t      };\n\t    } else {\n\t      if (false) {\n\t        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n\t      }\n\t      return {\n\t        remove: emptyFunction\n\t      };\n\t    }\n\t  },\n\t\n\t  registerDefault: function registerDefault() {}\n\t};\n\t\n\tmodule.exports = EventListener;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\t\n\t/**\n\t * Simple, lightweight module assisting with the detection and context of\n\t * Worker. Helps avoid circular dependencies and allows code to reason about\n\t * whether or not they are in a Worker, even if they never include the main\n\t * `ReactWorker` dependency.\n\t */\n\tvar ExecutionEnvironment = {\n\t\n\t  canUseDOM: canUseDOM,\n\t\n\t  canUseWorkers: typeof Worker !== 'undefined',\n\t\n\t  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t  canUseViewport: canUseDOM && !!window.screen,\n\t\n\t  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\t\n\t};\n\t\n\tmodule.exports = ExecutionEnvironment;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\t\n\tvar isTextNode = __webpack_require__(32);\n\t\n\t/*eslint-disable no-bitwise */\n\t\n\t/**\n\t * Checks if a given DOM node contains or is another DOM node.\n\t */\n\tfunction containsNode(outerNode, innerNode) {\n\t  if (!outerNode || !innerNode) {\n\t    return false;\n\t  } else if (outerNode === innerNode) {\n\t    return true;\n\t  } else if (isTextNode(outerNode)) {\n\t    return false;\n\t  } else if (isTextNode(innerNode)) {\n\t    return containsNode(outerNode, innerNode.parentNode);\n\t  } else if ('contains' in outerNode) {\n\t    return outerNode.contains(innerNode);\n\t  } else if (outerNode.compareDocumentPosition) {\n\t    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\t\n\tmodule.exports = containsNode;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {DOMElement} node input/textarea to focus\n\t */\n\t\n\tfunction focusNode(node) {\n\t  // IE8 can throw \"Can't move focus to the control because it is invisible,\n\t  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n\t  // reasons that are too expensive and fragile to test.\n\t  try {\n\t    node.focus();\n\t  } catch (e) {}\n\t}\n\t\n\tmodule.exports = focusNode;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/* eslint-disable fb-www/typeof-undefined */\n\t\n\t/**\n\t * Same as document.activeElement but wraps in a try-catch block. In IE it is\n\t * not safe to call document.activeElement if there is nothing focused.\n\t *\n\t * The activeElement will be null only if the document or document body is not\n\t * yet defined.\n\t *\n\t * @param {?DOMDocument} doc Defaults to current document.\n\t * @return {?DOMElement}\n\t */\n\tfunction getActiveElement(doc) /*?DOMElement*/{\n\t  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\t  if (typeof doc === 'undefined') {\n\t    return null;\n\t  }\n\t  try {\n\t    return doc.activeElement || doc.body;\n\t  } catch (e) {\n\t    return doc.body;\n\t  }\n\t}\n\t\n\tmodule.exports = getActiveElement;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM node.\n\t */\n\tfunction isNode(object) {\n\t  var doc = object ? object.ownerDocument || object : document;\n\t  var defaultView = doc.defaultView || window;\n\t  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n\t}\n\t\n\tmodule.exports = isNode;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar isNode = __webpack_require__(31);\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM text node.\n\t */\n\tfunction isTextNode(object) {\n\t  return isNode(object) && object.nodeType == 3;\n\t}\n\t\n\tmodule.exports = isTextNode;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * Konva JavaScript Framework v1.7.6\n\t * http://konvajs.github.io/\n\t * Licensed under the MIT or GPL Version 2 licenses.\n\t * Date: Wed Nov 01 2017\n\t *\n\t * Original work Copyright (C) 2011 - 2013 by Eric Rowell (KineticJS)\n\t * Modified work Copyright (C) 2014 - 2017 by Anton Lavrenov (Konva)\n\t *\n\t * @license\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t// runtime check for already included Konva\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * @namespace Konva\n\t     */\n\t\n\t  var PI_OVER_180 = Math.PI / 180;\n\t\n\t  var Konva = {\n\t    // public\n\t    version: '1.7.6',\n\t\n\t    // private\n\t    stages: [],\n\t    idCounter: 0,\n\t    ids: {},\n\t    names: {},\n\t    shapes: {},\n\t    listenClickTap: false,\n\t    inDblClickWindow: false,\n\t\n\t    isBrowser:\n\t      typeof window !== 'undefined' &&\n\t      // browser case\n\t      ({}.toString.call(window) === '[object Window]' ||\n\t        // electron case\n\t        {}.toString.call(window) === '[object global]'),\n\t\n\t    // configurations\n\t    enableTrace: false,\n\t    traceArrMax: 100,\n\t    dblClickWindow: 400,\n\t    /**\n\t         * Global pixel ratio configuration. KonvaJS automatically detect pixel ratio of current device.\n\t         * But you may override such property, if you want to use your value.\n\t         * @property pixelRatio\n\t         * @default undefined\n\t         * @memberof Konva\n\t         * @example\n\t         * Konva.pixelRatio = 1;\n\t         */\n\t    pixelRatio: undefined,\n\t    /**\n\t         * Drag distance property. If you start to drag a node you may want to wait until pointer is moved to some distance from start point,\n\t         * only then start dragging. Default is 3px.\n\t         * @property dragDistance\n\t         * @default 0\n\t         * @memberof Konva\n\t         * @example\n\t         * Konva.dragDistance = 10;\n\t         */\n\t    dragDistance: 3,\n\t    /**\n\t         * Use degree values for angle properties. You may set this property to false if you want to use radiant values.\n\t         * @property angleDeg\n\t         * @default true\n\t         * @memberof Konva\n\t         * @example\n\t         * node.rotation(45); // 45 degrees\n\t         * Konva.angleDeg = false;\n\t         * node.rotation(Math.PI / 2); // PI/2 radian\n\t         */\n\t    angleDeg: true,\n\t    /**\n\t         * Show different warnings about errors or wrong API usage\n\t         * @property showWarnings\n\t         * @default true\n\t         * @memberof Konva\n\t         * @example\n\t         * Konva.showWarnings = false;\n\t         */\n\t    showWarnings: true,\n\t\n\t    /**\n\t         * @namespace Filters\n\t         * @memberof Konva\n\t         */\n\t    Filters: {},\n\t\n\t    /**\n\t         * returns whether or not drag and drop is currently active\n\t         * @method\n\t         * @memberof Konva\n\t         */\n\t    isDragging: function() {\n\t      var dd = Konva.DD;\n\t\n\t      // if DD is not included with the build, then\n\t      // drag and drop is not even possible\n\t      if (dd) {\n\t        return dd.isDragging;\n\t      }\n\t      return false;\n\t    },\n\t    /**\n\t        * returns whether or not a drag and drop operation is ready, but may\n\t        *  not necessarily have started\n\t        * @method\n\t        * @memberof Konva\n\t        */\n\t    isDragReady: function() {\n\t      var dd = Konva.DD;\n\t\n\t      // if DD is not included with the build, then\n\t      // drag and drop is not even possible\n\t      if (dd) {\n\t        return !!dd.node;\n\t      }\n\t      return false;\n\t    },\n\t    _addId: function(node, id) {\n\t      if (id !== undefined) {\n\t        this.ids[id] = node;\n\t      }\n\t    },\n\t    _removeId: function(id) {\n\t      if (id !== undefined) {\n\t        delete this.ids[id];\n\t      }\n\t    },\n\t    _addName: function(node, name) {\n\t      if (name) {\n\t        if (!this.names[name]) {\n\t          this.names[name] = [];\n\t        }\n\t        this.names[name].push(node);\n\t      }\n\t    },\n\t    _removeName: function(name, _id) {\n\t      if (!name) {\n\t        return;\n\t      }\n\t      var nodes = this.names[name];\n\t      if (!nodes) {\n\t        return;\n\t      }\n\t      for (var n = 0; n < nodes.length; n++) {\n\t        var no = nodes[n];\n\t        if (no._id === _id) {\n\t          nodes.splice(n, 1);\n\t        }\n\t      }\n\t      if (nodes.length === 0) {\n\t        delete this.names[name];\n\t      }\n\t    },\n\t    getAngle: function(angle) {\n\t      return this.angleDeg ? angle * PI_OVER_180 : angle;\n\t    },\n\t    _detectIE: function(ua) {\n\t      var msie = ua.indexOf('msie ');\n\t      if (msie > 0) {\n\t        // IE 10 or older => return version number\n\t        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t      }\n\t\n\t      var trident = ua.indexOf('trident/');\n\t      if (trident > 0) {\n\t        // IE 11 => return version number\n\t        var rv = ua.indexOf('rv:');\n\t        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t      }\n\t\n\t      var edge = ua.indexOf('edge/');\n\t      if (edge > 0) {\n\t        // Edge (IE 12+) => return version number\n\t        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t      }\n\t\n\t      // other browser\n\t      return false;\n\t    },\n\t    _parseUA: function(userAgent) {\n\t      var ua = userAgent.toLowerCase(),\n\t        // jQuery UA regex\n\t        match =\n\t          /(chrome)[ /]([\\w.]+)/.exec(ua) ||\n\t          /(webkit)[ /]([\\w.]+)/.exec(ua) ||\n\t          /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua) ||\n\t          /(msie) ([\\w.]+)/.exec(ua) ||\n\t          (ua.indexOf('compatible') < 0 &&\n\t            /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) ||\n\t          [],\n\t        // adding mobile flag as well\n\t        mobile = !!userAgent.match(\n\t          /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i\n\t        ),\n\t        ieMobile = !!userAgent.match(/IEMobile/i);\n\t\n\t      return {\n\t        browser: match[1] || '',\n\t        version: match[2] || '0',\n\t        isIE: Konva._detectIE(ua),\n\t        // adding mobile flab\n\t        mobile: mobile,\n\t        ieMobile: ieMobile // If this is true (i.e., WP8), then Konva touch events are executed instead of equivalent Konva mouse events\n\t      };\n\t    },\n\t    // user agent\n\t    UA: undefined\n\t  };\n\t\n\t  var glob =\n\t    typeof global !== 'undefined'\n\t      ? global\n\t      : typeof window !== 'undefined'\n\t        ? window\n\t        : typeof WorkerGlobalScope !== 'undefined' ? self : {};\n\t\n\t  Konva.UA = Konva._parseUA((glob.navigator && glob.navigator.userAgent) || '');\n\t\n\t  if (glob.Konva) {\n\t    console.error(\n\t      'Konva instance is already exist in current eviroment. ' +\n\t        'Please use only one instance.'\n\t    );\n\t  }\n\t  glob.Konva = Konva;\n\t  Konva.global = glob;\n\t  Konva.window = glob;\n\t  Konva.document = glob.document;\n\t\n\t  if (true) {\n\t    module.exports = Konva;\n\t  } else if (typeof define === 'function' && define.amd) {\n\t    // AMD. Register as an anonymous module.\n\t    define(function() {\n\t      return Konva;\n\t    });\n\t  }\n\t})();\n\t\n\t/*eslint-disable  eqeqeq, no-cond-assign, no-empty*/\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Collection constructor.  Collection extends\n\t     *  Array.  This class is used in conjunction with {@link Konva.Container#get}\n\t     * @constructor\n\t     * @memberof Konva\n\t     */\n\t  Konva.Collection = function() {\n\t    var args = [].slice.call(arguments),\n\t      length = args.length,\n\t      i = 0;\n\t\n\t    this.length = length;\n\t    for (; i < length; i++) {\n\t      this[i] = args[i];\n\t    }\n\t    return this;\n\t  };\n\t  Konva.Collection.prototype = [];\n\t  /**\n\t     * iterate through node array and run a function for each node.\n\t     *  The node and index is passed into the function\n\t     * @method\n\t     * @memberof Konva.Collection.prototype\n\t     * @param {Function} func\n\t     * @example\n\t     * // get all nodes with name foo inside layer, and set x to 10 for each\n\t     * layer.get('.foo').each(function(shape, n) {\n\t     *   shape.setX(10);\n\t     * });\n\t     */\n\t  Konva.Collection.prototype.each = function(func) {\n\t    for (var n = 0; n < this.length; n++) {\n\t      func(this[n], n);\n\t    }\n\t  };\n\t  /**\n\t     * convert collection into an array\n\t     * @method\n\t     * @memberof Konva.Collection.prototype\n\t     */\n\t  Konva.Collection.prototype.toArray = function() {\n\t    var arr = [],\n\t      len = this.length,\n\t      n;\n\t\n\t    for (n = 0; n < len; n++) {\n\t      arr.push(this[n]);\n\t    }\n\t    return arr;\n\t  };\n\t  /**\n\t     * convert array into a collection\n\t     * @method\n\t     * @memberof Konva.Collection\n\t     * @param {Array} arr\n\t     */\n\t  Konva.Collection.toCollection = function(arr) {\n\t    var collection = new Konva.Collection(),\n\t      len = arr.length,\n\t      n;\n\t\n\t    for (n = 0; n < len; n++) {\n\t      collection.push(arr[n]);\n\t    }\n\t    return collection;\n\t  };\n\t\n\t  // map one method by it's name\n\t  Konva.Collection._mapMethod = function(methodName) {\n\t    Konva.Collection.prototype[methodName] = function() {\n\t      var len = this.length,\n\t        i;\n\t\n\t      var args = [].slice.call(arguments);\n\t      for (i = 0; i < len; i++) {\n\t        this[i][methodName].apply(this[i], args);\n\t      }\n\t\n\t      return this;\n\t    };\n\t  };\n\t\n\t  Konva.Collection.mapMethods = function(constructor) {\n\t    var prot = constructor.prototype;\n\t    for (var methodName in prot) {\n\t      Konva.Collection._mapMethod(methodName);\n\t    }\n\t  };\n\t\n\t  /*\n\t    * Last updated November 2011\n\t    * By Simon Sarris\n\t    * www.simonsarris.com\n\t    * sarris@acm.org\n\t    *\n\t    * Free to use and distribute at will\n\t    * So long as you are nice to people, etc\n\t    */\n\t\n\t  /*\n\t    * The usage of this class was inspired by some of the work done by a forked\n\t    * project, KineticJS-Ext by Wappworks, which is based on Simon's Transform\n\t    * class.  Modified by Eric Rowell\n\t    */\n\t\n\t  /**\n\t     * Transform constructor\n\t     * @constructor\n\t     * @param {Array} [m] Optional six-element matrix\n\t     * @memberof Konva\n\t     */\n\t  Konva.Transform = function(m) {\n\t    this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n\t  };\n\t\n\t  Konva.Transform.prototype = {\n\t    /**\n\t         * Copy Konva.Transform object\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @returns {Konva.Transform}\n\t         */\n\t    copy: function() {\n\t      return new Konva.Transform(this.m);\n\t    },\n\t    /**\n\t         * Transform point\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Object} point 2D point(x, y)\n\t         * @returns {Object} 2D point(x, y)\n\t         */\n\t    point: function(point) {\n\t      var m = this.m;\n\t      return {\n\t        x: m[0] * point.x + m[2] * point.y + m[4],\n\t        y: m[1] * point.x + m[3] * point.y + m[5]\n\t      };\n\t    },\n\t    /**\n\t         * Apply translation\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Number} x\n\t         * @param {Number} y\n\t         * @returns {Konva.Transform}\n\t         */\n\t    translate: function(x, y) {\n\t      this.m[4] += this.m[0] * x + this.m[2] * y;\n\t      this.m[5] += this.m[1] * x + this.m[3] * y;\n\t      return this;\n\t    },\n\t    /**\n\t         * Apply scale\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Number} sx\n\t         * @param {Number} sy\n\t         * @returns {Konva.Transform}\n\t         */\n\t    scale: function(sx, sy) {\n\t      this.m[0] *= sx;\n\t      this.m[1] *= sx;\n\t      this.m[2] *= sy;\n\t      this.m[3] *= sy;\n\t      return this;\n\t    },\n\t    /**\n\t         * Apply rotation\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Number} rad  Angle in radians\n\t         * @returns {Konva.Transform}\n\t         */\n\t    rotate: function(rad) {\n\t      var c = Math.cos(rad);\n\t      var s = Math.sin(rad);\n\t      var m11 = this.m[0] * c + this.m[2] * s;\n\t      var m12 = this.m[1] * c + this.m[3] * s;\n\t      var m21 = this.m[0] * -s + this.m[2] * c;\n\t      var m22 = this.m[1] * -s + this.m[3] * c;\n\t      this.m[0] = m11;\n\t      this.m[1] = m12;\n\t      this.m[2] = m21;\n\t      this.m[3] = m22;\n\t      return this;\n\t    },\n\t    /**\n\t         * Returns the translation\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @returns {Object} 2D point(x, y)\n\t         */\n\t    getTranslation: function() {\n\t      return {\n\t        x: this.m[4],\n\t        y: this.m[5]\n\t      };\n\t    },\n\t    /**\n\t         * Apply skew\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Number} sx\n\t         * @param {Number} sy\n\t         * @returns {Konva.Transform}\n\t         */\n\t    skew: function(sx, sy) {\n\t      var m11 = this.m[0] + this.m[2] * sy;\n\t      var m12 = this.m[1] + this.m[3] * sy;\n\t      var m21 = this.m[2] + this.m[0] * sx;\n\t      var m22 = this.m[3] + this.m[1] * sx;\n\t      this.m[0] = m11;\n\t      this.m[1] = m12;\n\t      this.m[2] = m21;\n\t      this.m[3] = m22;\n\t      return this;\n\t    },\n\t    /**\n\t         * Transform multiplication\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @param {Konva.Transform} matrix\n\t         * @returns {Konva.Transform}\n\t         */\n\t    multiply: function(matrix) {\n\t      var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n\t      var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\t\n\t      var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n\t      var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\t\n\t      var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n\t      var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\t\n\t      this.m[0] = m11;\n\t      this.m[1] = m12;\n\t      this.m[2] = m21;\n\t      this.m[3] = m22;\n\t      this.m[4] = dx;\n\t      this.m[5] = dy;\n\t      return this;\n\t    },\n\t    /**\n\t         * Invert the matrix\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @returns {Konva.Transform}\n\t         */\n\t    invert: function() {\n\t      var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n\t      var m0 = this.m[3] * d;\n\t      var m1 = -this.m[1] * d;\n\t      var m2 = -this.m[2] * d;\n\t      var m3 = this.m[0] * d;\n\t      var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n\t      var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n\t      this.m[0] = m0;\n\t      this.m[1] = m1;\n\t      this.m[2] = m2;\n\t      this.m[3] = m3;\n\t      this.m[4] = m4;\n\t      this.m[5] = m5;\n\t      return this;\n\t    },\n\t    /**\n\t         * return matrix\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         */\n\t    getMatrix: function() {\n\t      return this.m;\n\t    },\n\t    /**\n\t         * set to absolute position via translation\n\t         * @method\n\t         * @memberof Konva.Transform.prototype\n\t         * @returns {Konva.Transform}\n\t         * @author ericdrowell\n\t         */\n\t    setAbsolutePosition: function(x, y) {\n\t      var m0 = this.m[0],\n\t        m1 = this.m[1],\n\t        m2 = this.m[2],\n\t        m3 = this.m[3],\n\t        m4 = this.m[4],\n\t        m5 = this.m[5],\n\t        yt = (m0 * (y - m5) - m1 * (x - m4)) / (m0 * m3 - m1 * m2),\n\t        xt = (x - m4 - m2 * yt) / m0;\n\t\n\t      return this.translate(xt, yt);\n\t    }\n\t  };\n\t\n\t  // CONSTANTS\n\t  var CONTEXT_2D = '2d',\n\t    OBJECT_ARRAY = '[object Array]',\n\t    OBJECT_NUMBER = '[object Number]',\n\t    OBJECT_STRING = '[object String]',\n\t    PI_OVER_DEG180 = Math.PI / 180,\n\t    DEG180_OVER_PI = 180 / Math.PI,\n\t    HASH = '#',\n\t    EMPTY_STRING = '',\n\t    ZERO = '0',\n\t    KONVA_WARNING = 'Konva warning: ',\n\t    KONVA_ERROR = 'Konva error: ',\n\t    RGB_PAREN = 'rgb(',\n\t    COLORS = {\n\t      aliceblue: [240, 248, 255],\n\t      antiquewhite: [250, 235, 215],\n\t      aqua: [0, 255, 255],\n\t      aquamarine: [127, 255, 212],\n\t      azure: [240, 255, 255],\n\t      beige: [245, 245, 220],\n\t      bisque: [255, 228, 196],\n\t      black: [0, 0, 0],\n\t      blanchedalmond: [255, 235, 205],\n\t      blue: [0, 0, 255],\n\t      blueviolet: [138, 43, 226],\n\t      brown: [165, 42, 42],\n\t      burlywood: [222, 184, 135],\n\t      cadetblue: [95, 158, 160],\n\t      chartreuse: [127, 255, 0],\n\t      chocolate: [210, 105, 30],\n\t      coral: [255, 127, 80],\n\t      cornflowerblue: [100, 149, 237],\n\t      cornsilk: [255, 248, 220],\n\t      crimson: [220, 20, 60],\n\t      cyan: [0, 255, 255],\n\t      darkblue: [0, 0, 139],\n\t      darkcyan: [0, 139, 139],\n\t      darkgoldenrod: [184, 132, 11],\n\t      darkgray: [169, 169, 169],\n\t      darkgreen: [0, 100, 0],\n\t      darkgrey: [169, 169, 169],\n\t      darkkhaki: [189, 183, 107],\n\t      darkmagenta: [139, 0, 139],\n\t      darkolivegreen: [85, 107, 47],\n\t      darkorange: [255, 140, 0],\n\t      darkorchid: [153, 50, 204],\n\t      darkred: [139, 0, 0],\n\t      darksalmon: [233, 150, 122],\n\t      darkseagreen: [143, 188, 143],\n\t      darkslateblue: [72, 61, 139],\n\t      darkslategray: [47, 79, 79],\n\t      darkslategrey: [47, 79, 79],\n\t      darkturquoise: [0, 206, 209],\n\t      darkviolet: [148, 0, 211],\n\t      deeppink: [255, 20, 147],\n\t      deepskyblue: [0, 191, 255],\n\t      dimgray: [105, 105, 105],\n\t      dimgrey: [105, 105, 105],\n\t      dodgerblue: [30, 144, 255],\n\t      firebrick: [178, 34, 34],\n\t      floralwhite: [255, 255, 240],\n\t      forestgreen: [34, 139, 34],\n\t      fuchsia: [255, 0, 255],\n\t      gainsboro: [220, 220, 220],\n\t      ghostwhite: [248, 248, 255],\n\t      gold: [255, 215, 0],\n\t      goldenrod: [218, 165, 32],\n\t      gray: [128, 128, 128],\n\t      green: [0, 128, 0],\n\t      greenyellow: [173, 255, 47],\n\t      grey: [128, 128, 128],\n\t      honeydew: [240, 255, 240],\n\t      hotpink: [255, 105, 180],\n\t      indianred: [205, 92, 92],\n\t      indigo: [75, 0, 130],\n\t      ivory: [255, 255, 240],\n\t      khaki: [240, 230, 140],\n\t      lavender: [230, 230, 250],\n\t      lavenderblush: [255, 240, 245],\n\t      lawngreen: [124, 252, 0],\n\t      lemonchiffon: [255, 250, 205],\n\t      lightblue: [173, 216, 230],\n\t      lightcoral: [240, 128, 128],\n\t      lightcyan: [224, 255, 255],\n\t      lightgoldenrodyellow: [250, 250, 210],\n\t      lightgray: [211, 211, 211],\n\t      lightgreen: [144, 238, 144],\n\t      lightgrey: [211, 211, 211],\n\t      lightpink: [255, 182, 193],\n\t      lightsalmon: [255, 160, 122],\n\t      lightseagreen: [32, 178, 170],\n\t      lightskyblue: [135, 206, 250],\n\t      lightslategray: [119, 136, 153],\n\t      lightslategrey: [119, 136, 153],\n\t      lightsteelblue: [176, 196, 222],\n\t      lightyellow: [255, 255, 224],\n\t      lime: [0, 255, 0],\n\t      limegreen: [50, 205, 50],\n\t      linen: [250, 240, 230],\n\t      magenta: [255, 0, 255],\n\t      maroon: [128, 0, 0],\n\t      mediumaquamarine: [102, 205, 170],\n\t      mediumblue: [0, 0, 205],\n\t      mediumorchid: [186, 85, 211],\n\t      mediumpurple: [147, 112, 219],\n\t      mediumseagreen: [60, 179, 113],\n\t      mediumslateblue: [123, 104, 238],\n\t      mediumspringgreen: [0, 250, 154],\n\t      mediumturquoise: [72, 209, 204],\n\t      mediumvioletred: [199, 21, 133],\n\t      midnightblue: [25, 25, 112],\n\t      mintcream: [245, 255, 250],\n\t      mistyrose: [255, 228, 225],\n\t      moccasin: [255, 228, 181],\n\t      navajowhite: [255, 222, 173],\n\t      navy: [0, 0, 128],\n\t      oldlace: [253, 245, 230],\n\t      olive: [128, 128, 0],\n\t      olivedrab: [107, 142, 35],\n\t      orange: [255, 165, 0],\n\t      orangered: [255, 69, 0],\n\t      orchid: [218, 112, 214],\n\t      palegoldenrod: [238, 232, 170],\n\t      palegreen: [152, 251, 152],\n\t      paleturquoise: [175, 238, 238],\n\t      palevioletred: [219, 112, 147],\n\t      papayawhip: [255, 239, 213],\n\t      peachpuff: [255, 218, 185],\n\t      peru: [205, 133, 63],\n\t      pink: [255, 192, 203],\n\t      plum: [221, 160, 203],\n\t      powderblue: [176, 224, 230],\n\t      purple: [128, 0, 128],\n\t      rebeccapurple: [102, 51, 153],\n\t      red: [255, 0, 0],\n\t      rosybrown: [188, 143, 143],\n\t      royalblue: [65, 105, 225],\n\t      saddlebrown: [139, 69, 19],\n\t      salmon: [250, 128, 114],\n\t      sandybrown: [244, 164, 96],\n\t      seagreen: [46, 139, 87],\n\t      seashell: [255, 245, 238],\n\t      sienna: [160, 82, 45],\n\t      silver: [192, 192, 192],\n\t      skyblue: [135, 206, 235],\n\t      slateblue: [106, 90, 205],\n\t      slategray: [119, 128, 144],\n\t      slategrey: [119, 128, 144],\n\t      snow: [255, 255, 250],\n\t      springgreen: [0, 255, 127],\n\t      steelblue: [70, 130, 180],\n\t      tan: [210, 180, 140],\n\t      teal: [0, 128, 128],\n\t      thistle: [216, 191, 216],\n\t      transparent: [255, 255, 255, 0],\n\t      tomato: [255, 99, 71],\n\t      turquoise: [64, 224, 208],\n\t      violet: [238, 130, 238],\n\t      wheat: [245, 222, 179],\n\t      white: [255, 255, 255],\n\t      whitesmoke: [245, 245, 245],\n\t      yellow: [255, 255, 0],\n\t      yellowgreen: [154, 205, 5]\n\t    },\n\t    RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\n\t\n\t  /**\n\t     * @namespace Util\n\t     * @memberof Konva\n\t     */\n\t  Konva.Util = {\n\t    /*\n\t         * cherry-picked utilities from underscore.js\n\t         */\n\t    _isElement: function(obj) {\n\t      return !!(obj && obj.nodeType == 1);\n\t    },\n\t    _isFunction: function(obj) {\n\t      return !!(obj && obj.constructor && obj.call && obj.apply);\n\t    },\n\t    _isObject: function(obj) {\n\t      return !!obj && obj.constructor === Object;\n\t    },\n\t    _isArray: function(obj) {\n\t      return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n\t    },\n\t    _isNumber: function(obj) {\n\t      return Object.prototype.toString.call(obj) === OBJECT_NUMBER;\n\t    },\n\t    _isString: function(obj) {\n\t      return Object.prototype.toString.call(obj) === OBJECT_STRING;\n\t    },\n\t    // Returns a function, that, when invoked, will only be triggered at most once\n\t    // during a given window of time. Normally, the throttled function will run\n\t    // as much as it can, without ever going more than once per `wait` duration;\n\t    // but if you'd like to disable the execution on the leading edge, pass\n\t    // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\t    _throttle: function(func, wait, opts) {\n\t      var context, args, result;\n\t      var timeout = null;\n\t      var previous = 0;\n\t      var options = opts || {};\n\t      var later = function() {\n\t        previous = options.leading === false ? 0 : new Date().getTime();\n\t        timeout = null;\n\t        result = func.apply(context, args);\n\t        context = args = null;\n\t      };\n\t      return function() {\n\t        var now = new Date().getTime();\n\t        if (!previous && options.leading === false) {\n\t          previous = now;\n\t        }\n\t        var remaining = wait - (now - previous);\n\t        context = this;\n\t        args = arguments;\n\t        if (remaining <= 0) {\n\t          clearTimeout(timeout);\n\t          timeout = null;\n\t          previous = now;\n\t          result = func.apply(context, args);\n\t          context = args = null;\n\t        } else if (!timeout && options.trailing !== false) {\n\t          timeout = setTimeout(later, remaining);\n\t        }\n\t        return result;\n\t      };\n\t    },\n\t    /*\n\t         * other utils\n\t         */\n\t    _hasMethods: function(obj) {\n\t      var names = [],\n\t        key;\n\t\n\t      for (key in obj) {\n\t        if (!obj.hasOwnProperty(key)) {\n\t          continue;\n\t        }\n\t        if (this._isFunction(obj[key])) {\n\t          names.push(key);\n\t        }\n\t      }\n\t      return names.length > 0;\n\t    },\n\t    isValidSelector: function(selector) {\n\t      if (typeof selector !== 'string') {\n\t        return false;\n\t      }\n\t      var firstChar = selector[0];\n\t      return (\n\t        firstChar === '#' ||\n\t        firstChar === '.' ||\n\t        firstChar === firstChar.toUpperCase()\n\t      );\n\t    },\n\t    createCanvasElement: function() {\n\t      var canvas = Konva.isBrowser\n\t        ? Konva.document.createElement('canvas')\n\t        : new Konva._nodeCanvas();\n\t      // on some environments canvas.style is readonly\n\t      try {\n\t        canvas.style = canvas.style || {};\n\t      } catch (e) {}\n\t      return canvas;\n\t    },\n\t    _isInDocument: function(el) {\n\t      while ((el = el.parentNode)) {\n\t        if (el == Konva.document) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t    _simplifyArray: function(arr) {\n\t      var retArr = [],\n\t        len = arr.length,\n\t        util = Konva.Util,\n\t        n,\n\t        val;\n\t\n\t      for (n = 0; n < len; n++) {\n\t        val = arr[n];\n\t        if (util._isNumber(val)) {\n\t          val = Math.round(val * 1000) / 1000;\n\t        } else if (!util._isString(val)) {\n\t          val = val.toString();\n\t        }\n\t\n\t        retArr.push(val);\n\t      }\n\t\n\t      return retArr;\n\t    },\n\t    /*\n\t         * arg can be an image object or image data\n\t         */\n\t    _getImage: function(arg, callback) {\n\t      var imageObj, canvas;\n\t\n\t      // if arg is null or undefined\n\t      if (!arg) {\n\t        callback(null);\n\t      } else if (this._isElement(arg)) {\n\t        // if arg is already an image object\n\t        callback(arg);\n\t      } else if (this._isString(arg)) {\n\t        // if arg is a string, then it's a data url\n\t        imageObj = new Konva.window.Image();\n\t        imageObj.onload = function() {\n\t          callback(imageObj);\n\t        };\n\t        imageObj.src = arg;\n\t      } else if (arg.data) {\n\t        //if arg is an object that contains the data property, it's an image object\n\t        canvas = Konva.Util.createCanvasElement();\n\t        canvas.width = arg.width;\n\t        canvas.height = arg.height;\n\t        var _context = canvas.getContext(CONTEXT_2D);\n\t        _context.putImageData(arg, 0, 0);\n\t        this._getImage(canvas.toDataURL(), callback);\n\t      } else {\n\t        callback(null);\n\t      }\n\t    },\n\t    _getRGBAString: function(obj) {\n\t      var red = obj.red || 0,\n\t        green = obj.green || 0,\n\t        blue = obj.blue || 0,\n\t        alpha = obj.alpha || 1;\n\t\n\t      return ['rgba(', red, ',', green, ',', blue, ',', alpha, ')'].join(\n\t        EMPTY_STRING\n\t      );\n\t    },\n\t    _rgbToHex: function(r, g, b) {\n\t      return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n\t    },\n\t    _hexToRgb: function(hex) {\n\t      hex = hex.replace(HASH, EMPTY_STRING);\n\t      var bigint = parseInt(hex, 16);\n\t      return {\n\t        r: (bigint >> 16) & 255,\n\t        g: (bigint >> 8) & 255,\n\t        b: bigint & 255\n\t      };\n\t    },\n\t    /**\n\t         * return random hex color\n\t         * @method\n\t         * @memberof Konva.Util.prototype\n\t         */\n\t    getRandomColor: function() {\n\t      var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n\t      while (randColor.length < 6) {\n\t        randColor = ZERO + randColor;\n\t      }\n\t      return HASH + randColor;\n\t    },\n\t    /**\n\t         * return value with default fallback\n\t         * @method\n\t         * @memberof Konva.Util.prototype\n\t         */\n\t    get: function(val, def) {\n\t      if (val === undefined) {\n\t        return def;\n\t      } else {\n\t        return val;\n\t      }\n\t    },\n\t    /**\n\t         * get RGB components of a color\n\t         * @method\n\t         * @memberof Konva.Util.prototype\n\t         * @param {String} color\n\t         * @example\n\t         * // each of the following examples return {r:0, g:0, b:255}\n\t         * var rgb = Konva.Util.getRGB('blue');\n\t         * var rgb = Konva.Util.getRGB('#0000ff');\n\t         * var rgb = Konva.Util.getRGB('rgb(0,0,255)');\n\t         */\n\t    getRGB: function(color) {\n\t      var rgb;\n\t      // color string\n\t      if (color in COLORS) {\n\t        rgb = COLORS[color];\n\t        return {\n\t          r: rgb[0],\n\t          g: rgb[1],\n\t          b: rgb[2]\n\t        };\n\t      } else if (color[0] === HASH) {\n\t        // hex\n\t        return this._hexToRgb(color.substring(1));\n\t      } else if (color.substr(0, 4) === RGB_PAREN) {\n\t        // rgb string\n\t        rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n\t        return {\n\t          r: parseInt(rgb[1], 10),\n\t          g: parseInt(rgb[2], 10),\n\t          b: parseInt(rgb[3], 10)\n\t        };\n\t      } else {\n\t        // default\n\t        return {\n\t          r: 0,\n\t          g: 0,\n\t          b: 0\n\t        };\n\t      }\n\t    },\n\t    // convert any color string to RGBA object\n\t    // from https://github.com/component/color-parser\n\t    colorToRGBA: function(str) {\n\t      str = str || 'black';\n\t      return (\n\t        Konva.Util._namedColorToRBA(str) ||\n\t        Konva.Util._hex3ColorToRGBA(str) ||\n\t        Konva.Util._hex6ColorToRGBA(str) ||\n\t        Konva.Util._rgbColorToRGBA(str) ||\n\t        Konva.Util._rgbaColorToRGBA(str)\n\t      );\n\t    },\n\t    // Parse named css color. Like \"green\"\n\t    _namedColorToRBA: function(str) {\n\t      var c = COLORS[str.toLowerCase()];\n\t      if (!c) {\n\t        return null;\n\t      }\n\t      return {\n\t        r: c[0],\n\t        g: c[1],\n\t        b: c[2],\n\t        a: 1\n\t      };\n\t    },\n\t    // Parse rgb(n, n, n)\n\t    _rgbColorToRGBA: function(str) {\n\t      if (str.indexOf('rgb(') === 0) {\n\t        str = str.match(/rgb\\(([^)]+)\\)/)[1];\n\t        var parts = str.split(/ *, */).map(Number);\n\t        return {\n\t          r: parts[0],\n\t          g: parts[1],\n\t          b: parts[2],\n\t          a: 1\n\t        };\n\t      }\n\t    },\n\t    // Parse rgba(n, n, n, n)\n\t    _rgbaColorToRGBA: function(str) {\n\t      if (str.indexOf('rgba(') === 0) {\n\t        str = str.match(/rgba\\(([^)]+)\\)/)[1];\n\t        var parts = str.split(/ *, */).map(Number);\n\t        return {\n\t          r: parts[0],\n\t          g: parts[1],\n\t          b: parts[2],\n\t          a: parts[3]\n\t        };\n\t      }\n\t    },\n\t    // Parse #nnnnnn\n\t    _hex6ColorToRGBA: function(str) {\n\t      if (str[0] === '#' && str.length === 7) {\n\t        return {\n\t          r: parseInt(str.slice(1, 3), 16),\n\t          g: parseInt(str.slice(3, 5), 16),\n\t          b: parseInt(str.slice(5, 7), 16),\n\t          a: 1\n\t        };\n\t      }\n\t    },\n\t    // Parse #nnn\n\t    _hex3ColorToRGBA: function(str) {\n\t      if (str[0] === '#' && str.length === 4) {\n\t        return {\n\t          r: parseInt(str[1] + str[1], 16),\n\t          g: parseInt(str[2] + str[2], 16),\n\t          b: parseInt(str[3] + str[3], 16),\n\t          a: 1\n\t        };\n\t      }\n\t    },\n\t    // o1 takes precedence over o2\n\t    _merge: function(o1, o2) {\n\t      var retObj = this._clone(o2);\n\t      for (var key in o1) {\n\t        if (this._isObject(o1[key])) {\n\t          retObj[key] = this._merge(o1[key], retObj[key]);\n\t        } else {\n\t          retObj[key] = o1[key];\n\t        }\n\t      }\n\t      return retObj;\n\t    },\n\t    cloneObject: function(obj) {\n\t      var retObj = {};\n\t      for (var key in obj) {\n\t        if (this._isObject(obj[key])) {\n\t          retObj[key] = this.cloneObject(obj[key]);\n\t        } else if (this._isArray(obj[key])) {\n\t          retObj[key] = this.cloneArray(obj[key]);\n\t        } else {\n\t          retObj[key] = obj[key];\n\t        }\n\t      }\n\t      return retObj;\n\t    },\n\t    cloneArray: function(arr) {\n\t      return arr.slice(0);\n\t    },\n\t    _degToRad: function(deg) {\n\t      return deg * PI_OVER_DEG180;\n\t    },\n\t    _radToDeg: function(rad) {\n\t      return rad * DEG180_OVER_PI;\n\t    },\n\t    _capitalize: function(str) {\n\t      return str.charAt(0).toUpperCase() + str.slice(1);\n\t    },\n\t    throw: function(str) {\n\t      throw new Error(KONVA_ERROR + str);\n\t    },\n\t    error: function(str) {\n\t      console.error(KONVA_ERROR + str);\n\t    },\n\t    warn: function(str) {\n\t      /*\n\t             * IE9 on Windows7 64bit will throw a JS error\n\t             * if we don't use window.console in the conditional\n\t             */\n\t      if (Konva.global.console && console.warn && Konva.showWarnings) {\n\t        console.warn(KONVA_WARNING + str);\n\t      }\n\t    },\n\t    extend: function(child, parent) {\n\t      function Ctor() {\n\t        this.constructor = child;\n\t      }\n\t      Ctor.prototype = parent.prototype;\n\t      var oldProto = child.prototype;\n\t      child.prototype = new Ctor();\n\t      for (var key in oldProto) {\n\t        if (oldProto.hasOwnProperty(key)) {\n\t          child.prototype[key] = oldProto[key];\n\t        }\n\t      }\n\t      child.__super__ = parent.prototype;\n\t      // create reference to parent\n\t      child.super = parent;\n\t    },\n\t    /**\n\t         * adds methods to a constructor prototype\n\t         * @method\n\t         * @memberof Konva.Util.prototype\n\t         * @param {Function} constructor\n\t         * @param {Object} methods\n\t         */\n\t    addMethods: function(constructor, methods) {\n\t      var key;\n\t\n\t      for (key in methods) {\n\t        constructor.prototype[key] = methods[key];\n\t      }\n\t    },\n\t    _getControlPoints: function(x0, y0, x1, y1, x2, y2, t) {\n\t      var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),\n\t        d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n\t        fa = t * d01 / (d01 + d12),\n\t        fb = t * d12 / (d01 + d12),\n\t        p1x = x1 - fa * (x2 - x0),\n\t        p1y = y1 - fa * (y2 - y0),\n\t        p2x = x1 + fb * (x2 - x0),\n\t        p2y = y1 + fb * (y2 - y0);\n\t\n\t      return [p1x, p1y, p2x, p2y];\n\t    },\n\t    _expandPoints: function(p, tension) {\n\t      var len = p.length,\n\t        allPoints = [],\n\t        n,\n\t        cp;\n\t\n\t      for (n = 2; n < len - 2; n += 2) {\n\t        cp = Konva.Util._getControlPoints(\n\t          p[n - 2],\n\t          p[n - 1],\n\t          p[n],\n\t          p[n + 1],\n\t          p[n + 2],\n\t          p[n + 3],\n\t          tension\n\t        );\n\t        allPoints.push(cp[0]);\n\t        allPoints.push(cp[1]);\n\t        allPoints.push(p[n]);\n\t        allPoints.push(p[n + 1]);\n\t        allPoints.push(cp[2]);\n\t        allPoints.push(cp[3]);\n\t      }\n\t\n\t      return allPoints;\n\t    },\n\t    _removeLastLetter: function(str) {\n\t      return str.substring(0, str.length - 1);\n\t    },\n\t    each: function(obj, func) {\n\t      for (var key in obj) {\n\t        func(key, obj[key]);\n\t      }\n\t    },\n\t    _getProjectionToSegment: function(x1, y1, x2, y2, x3, y3) {\n\t      var x, y, dist;\n\t\n\t      var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n\t      if (pd2 == 0) {\n\t        x = x1;\n\t        y = y1;\n\t        dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n\t      } else {\n\t        var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n\t        if (u < 0) {\n\t          x = x1;\n\t          y = y1;\n\t          dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n\t        } else if (u > 1.0) {\n\t          x = x2;\n\t          y = y2;\n\t          dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n\t        } else {\n\t          x = x1 + u * (x2 - x1);\n\t          y = y1 + u * (y2 - y1);\n\t          dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n\t        }\n\t      }\n\t      return [x, y, dist];\n\t    },\n\t    // line as array of points.\n\t    // line might be closed\n\t    _getProjectionToLine: function(pt, line, isClosed) {\n\t      var pc = Konva.Util.cloneObject(pt);\n\t      var dist = Number.MAX_VALUE;\n\t      line.forEach(function(p1, i) {\n\t        if (!isClosed && i === line.length - 1) {\n\t          return;\n\t        }\n\t        var p2 = line[(i + 1) % line.length];\n\t        var proj = Konva.Util._getProjectionToSegment(\n\t          p1.x,\n\t          p1.y,\n\t          p2.x,\n\t          p2.y,\n\t          pt.x,\n\t          pt.y\n\t        );\n\t        var px = proj[0],\n\t          py = proj[1],\n\t          pdist = proj[2];\n\t        if (pdist < dist) {\n\t          pc.x = px;\n\t          pc.y = py;\n\t          dist = pdist;\n\t        }\n\t      });\n\t      return pc;\n\t    },\n\t    _prepareArrayForTween: function(startArray, endArray, isClosed) {\n\t      var n,\n\t        start = [],\n\t        end = [];\n\t      if (startArray.length > endArray.length) {\n\t        var temp = endArray;\n\t        endArray = startArray;\n\t        startArray = temp;\n\t      }\n\t      for (n = 0; n < startArray.length; n += 2) {\n\t        start.push({\n\t          x: startArray[n],\n\t          y: startArray[n + 1]\n\t        });\n\t      }\n\t      for (n = 0; n < endArray.length; n += 2) {\n\t        end.push({\n\t          x: endArray[n],\n\t          y: endArray[n + 1]\n\t        });\n\t      }\n\t\n\t      var newStart = [];\n\t      end.forEach(function(point) {\n\t        var pr = Konva.Util._getProjectionToLine(point, start, isClosed);\n\t        newStart.push(pr.x);\n\t        newStart.push(pr.y);\n\t      });\n\t      return newStart;\n\t    },\n\t    _prepareToStringify: function(obj) {\n\t      var desc;\n\t\n\t      obj.visitedByCircularReferenceRemoval = true;\n\t\n\t      for (var key in obj) {\n\t        if (\n\t          !(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')\n\t        ) {\n\t          continue;\n\t        }\n\t        desc = Object.getOwnPropertyDescriptor(obj, key);\n\t        if (\n\t          obj[key].visitedByCircularReferenceRemoval ||\n\t          Konva.Util._isElement(obj[key])\n\t        ) {\n\t          if (desc.configurable) {\n\t            delete obj[key];\n\t          } else {\n\t            return null;\n\t          }\n\t        } else if (Konva.Util._prepareToStringify(obj[key]) === null) {\n\t          if (desc.configurable) {\n\t            delete obj[key];\n\t          } else {\n\t            return null;\n\t          }\n\t        }\n\t      }\n\t\n\t      delete obj.visitedByCircularReferenceRemoval;\n\t\n\t      return obj;\n\t    }\n\t  };\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  // calculate pixel ratio\n\t\n\t  var _pixelRatio;\n\t  function getDevicePixelRatio() {\n\t    if (_pixelRatio) {\n\t      return _pixelRatio;\n\t    }\n\t    var canvas = Konva.Util.createCanvasElement();\n\t    var context = canvas.getContext('2d');\n\t    _pixelRatio = (function() {\n\t      var devicePixelRatio = Konva.window.devicePixelRatio || 1,\n\t        backingStoreRatio =\n\t          context.webkitBackingStorePixelRatio ||\n\t          context.mozBackingStorePixelRatio ||\n\t          context.msBackingStorePixelRatio ||\n\t          context.oBackingStorePixelRatio ||\n\t          context.backingStorePixelRatio ||\n\t          1;\n\t      return devicePixelRatio / backingStoreRatio;\n\t    })();\n\t    return _pixelRatio;\n\t  }\n\t\n\t  /**\n\t     * Canvas Renderer constructor\n\t     * @constructor\n\t     * @abstract\n\t     * @memberof Konva\n\t     * @param {Object} config\n\t     * @param {Number} config.width\n\t     * @param {Number} config.height\n\t     * @param {Number} config.pixelRatio KonvaJS automatically handles pixel ratio adjustments in order to render crisp drawings\n\t     *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n\t     *  of 1.  Some high end tablets and phones, like iPhones and iPads (not the mini) have a device pixel ratio\n\t     *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n\t     *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n\t     *  specified, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n\t     *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n\t     */\n\t  Konva.Canvas = function(config) {\n\t    this.init(config);\n\t  };\n\t\n\t  Konva.Canvas.prototype = {\n\t    init: function(config) {\n\t      var conf = config || {};\n\t\n\t      var pixelRatio =\n\t        conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n\t\n\t      this.pixelRatio = pixelRatio;\n\t      this._canvas = Konva.Util.createCanvasElement();\n\t\n\t      // set inline styles\n\t      this._canvas.style.padding = 0;\n\t      this._canvas.style.margin = 0;\n\t      this._canvas.style.border = 0;\n\t      this._canvas.style.background = 'transparent';\n\t      this._canvas.style.position = 'absolute';\n\t      this._canvas.style.top = 0;\n\t      this._canvas.style.left = 0;\n\t    },\n\t    /**\n\t         * get canvas context\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @returns {CanvasContext} context\n\t         */\n\t    getContext: function() {\n\t      return this.context;\n\t    },\n\t    /**\n\t         * get pixel ratio\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @returns {Number} pixel ratio\n\t         */\n\t    getPixelRatio: function() {\n\t      return this.pixelRatio;\n\t    },\n\t    /**\n\t         * get pixel ratio\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @param {Number} pixelRatio KonvaJS automatically handles pixel ratio adustments in order to render crisp drawings\n\t         *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n\t         *  of 1.  Some high end tablets and phones, like iPhones and iPads have a device pixel ratio\n\t         *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n\t         *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n\t         *  specificed, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n\t         *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n\t         */\n\t    setPixelRatio: function(pixelRatio) {\n\t      var previousRatio = this.pixelRatio;\n\t      this.pixelRatio = pixelRatio;\n\t      this.setSize(\n\t        this.getWidth() / previousRatio,\n\t        this.getHeight() / previousRatio\n\t      );\n\t    },\n\t    /**\n\t         * set width\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @param {Number} width\n\t         */\n\t    setWidth: function(width) {\n\t      // take into account pixel ratio\n\t      this.width = this._canvas.width = width * this.pixelRatio;\n\t      this._canvas.style.width = width + 'px';\n\t\n\t      var pixelRatio = this.pixelRatio,\n\t        _context = this.getContext()._context;\n\t      _context.scale(pixelRatio, pixelRatio);\n\t    },\n\t    /**\n\t         * set height\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @param {Number} height\n\t         */\n\t    setHeight: function(height) {\n\t      // take into account pixel ratio\n\t      this.height = this._canvas.height = height * this.pixelRatio;\n\t      this._canvas.style.height = height + 'px';\n\t      var pixelRatio = this.pixelRatio,\n\t        _context = this.getContext()._context;\n\t      _context.scale(pixelRatio, pixelRatio);\n\t    },\n\t    /**\n\t         * get width\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @returns {Number} width\n\t         */\n\t    getWidth: function() {\n\t      return this.width;\n\t    },\n\t    /**\n\t         * get height\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @returns {Number} height\n\t         */\n\t    getHeight: function() {\n\t      return this.height;\n\t    },\n\t    /**\n\t         * set size\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @param {Number} width\n\t         * @param {Number} height\n\t         */\n\t    setSize: function(width, height) {\n\t      this.setWidth(width);\n\t      this.setHeight(height);\n\t    },\n\t    /**\n\t         * to data url\n\t         * @method\n\t         * @memberof Konva.Canvas.prototype\n\t         * @param {String} mimeType\n\t         * @param {Number} quality between 0 and 1 for jpg mime types\n\t         * @returns {String} data url string\n\t         */\n\t    toDataURL: function(mimeType, quality) {\n\t      try {\n\t        // If this call fails (due to browser bug, like in Firefox 3.6),\n\t        // then revert to previous no-parameter image/png behavior\n\t        return this._canvas.toDataURL(mimeType, quality);\n\t      } catch (e) {\n\t        try {\n\t          return this._canvas.toDataURL();\n\t        } catch (err) {\n\t          Konva.Util.warn('Unable to get data URL. ' + err.message);\n\t          return '';\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  Konva.SceneCanvas = function(config) {\n\t    var conf = config || {};\n\t    var width = conf.width || 0,\n\t      height = conf.height || 0;\n\t\n\t    Konva.Canvas.call(this, conf);\n\t    this.context = new Konva.SceneContext(this);\n\t    this.setSize(width, height);\n\t  };\n\t\n\t  Konva.Util.extend(Konva.SceneCanvas, Konva.Canvas);\n\t\n\t  Konva.HitCanvas = function(config) {\n\t    var conf = config || {};\n\t    var width = conf.width || 0,\n\t      height = conf.height || 0;\n\t\n\t    Konva.Canvas.call(this, conf);\n\t    this.context = new Konva.HitContext(this);\n\t    this.setSize(width, height);\n\t    this.hitCanvas = true;\n\t  };\n\t  Konva.Util.extend(Konva.HitCanvas, Konva.Canvas);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  var COMMA = ',',\n\t    OPEN_PAREN = '(',\n\t    CLOSE_PAREN = ')',\n\t    OPEN_PAREN_BRACKET = '([',\n\t    CLOSE_BRACKET_PAREN = '])',\n\t    SEMICOLON = ';',\n\t    DOUBLE_PAREN = '()',\n\t    // EMPTY_STRING = '',\n\t    EQUALS = '=',\n\t    // SET = 'set',\n\t    CONTEXT_METHODS = [\n\t      'arc',\n\t      'arcTo',\n\t      'beginPath',\n\t      'bezierCurveTo',\n\t      'clearRect',\n\t      'clip',\n\t      'closePath',\n\t      'createLinearGradient',\n\t      'createPattern',\n\t      'createRadialGradient',\n\t      'drawImage',\n\t      'fill',\n\t      'fillText',\n\t      'getImageData',\n\t      'createImageData',\n\t      'lineTo',\n\t      'moveTo',\n\t      'putImageData',\n\t      'quadraticCurveTo',\n\t      'rect',\n\t      'restore',\n\t      'rotate',\n\t      'save',\n\t      'scale',\n\t      'setLineDash',\n\t      'setTransform',\n\t      'stroke',\n\t      'strokeText',\n\t      'transform',\n\t      'translate'\n\t    ];\n\t\n\t  var CONTEXT_PROPERTIES = [\n\t    'fillStyle',\n\t    'strokeStyle',\n\t    'shadowColor',\n\t    'shadowBlur',\n\t    'shadowOffsetX',\n\t    'shadowOffsetY',\n\t    'lineCap',\n\t    'lineDashOffset',\n\t    'lineJoin',\n\t    'lineWidth',\n\t    'miterLimit',\n\t    'font',\n\t    'textAlign',\n\t    'textBaseline',\n\t    'globalAlpha',\n\t    'globalCompositeOperation'\n\t  ];\n\t\n\t  /**\n\t     * Canvas Context constructor\n\t     * @constructor\n\t     * @abstract\n\t     * @memberof Konva\n\t     */\n\t  Konva.Context = function(canvas) {\n\t    this.init(canvas);\n\t  };\n\t\n\t  Konva.Context.prototype = {\n\t    init: function(canvas) {\n\t      this.canvas = canvas;\n\t      this._context = canvas._canvas.getContext('2d');\n\t\n\t      if (Konva.enableTrace) {\n\t        this.traceArr = [];\n\t        this._enableTrace();\n\t      }\n\t    },\n\t    /**\n\t         * fill shape\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @param {Konva.Shape} shape\n\t         */\n\t    fillShape: function(shape) {\n\t      if (shape.getFillEnabled()) {\n\t        this._fill(shape);\n\t      }\n\t    },\n\t    /**\n\t         * stroke shape\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @param {Konva.Shape} shape\n\t         */\n\t    strokeShape: function(shape) {\n\t      if (shape.getStrokeEnabled()) {\n\t        this._stroke(shape);\n\t      }\n\t    },\n\t    /**\n\t         * fill then stroke\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @param {Konva.Shape} shape\n\t         */\n\t    fillStrokeShape: function(shape) {\n\t      var fillEnabled = shape.getFillEnabled();\n\t      if (fillEnabled) {\n\t        this._fill(shape);\n\t      }\n\t      if (shape.getStrokeEnabled()) {\n\t        this._stroke(shape);\n\t      }\n\t    },\n\t    /**\n\t         * get context trace if trace is enabled\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @param {Boolean} relaxed if false, return strict context trace, which includes method names, method parameters\n\t         *  properties, and property values.  If true, return relaxed context trace, which only returns method names and\n\t         *  properites.\n\t         * @returns {String}\n\t         */\n\t    getTrace: function(relaxed) {\n\t      var traceArr = this.traceArr,\n\t        len = traceArr.length,\n\t        str = '',\n\t        n,\n\t        trace,\n\t        method,\n\t        args;\n\t\n\t      for (n = 0; n < len; n++) {\n\t        trace = traceArr[n];\n\t        method = trace.method;\n\t\n\t        // methods\n\t        if (method) {\n\t          args = trace.args;\n\t          str += method;\n\t          if (relaxed) {\n\t            str += DOUBLE_PAREN;\n\t          } else {\n\t            if (Konva.Util._isArray(args[0])) {\n\t              str +=\n\t                OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n\t            } else {\n\t              str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n\t            }\n\t          }\n\t        } else {\n\t          // properties\n\t          str += trace.property;\n\t          if (!relaxed) {\n\t            str += EQUALS + trace.val;\n\t          }\n\t        }\n\t\n\t        str += SEMICOLON;\n\t      }\n\t\n\t      return str;\n\t    },\n\t    /**\n\t         * clear trace if trace is enabled\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         */\n\t    clearTrace: function() {\n\t      this.traceArr = [];\n\t    },\n\t    _trace: function(str) {\n\t      var traceArr = this.traceArr, len;\n\t\n\t      traceArr.push(str);\n\t      len = traceArr.length;\n\t\n\t      if (len >= Konva.traceArrMax) {\n\t        traceArr.shift();\n\t      }\n\t    },\n\t    /**\n\t         * reset canvas context transform\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         */\n\t    reset: function() {\n\t      var pixelRatio = this.getCanvas().getPixelRatio();\n\t      this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n\t    },\n\t    /**\n\t         * get canvas\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @returns {Konva.Canvas}\n\t         */\n\t    getCanvas: function() {\n\t      return this.canvas;\n\t    },\n\t    /**\n\t         * clear canvas\n\t         * @method\n\t         * @memberof Konva.Context.prototype\n\t         * @param {Object} [bounds]\n\t         * @param {Number} [bounds.x]\n\t         * @param {Number} [bounds.y]\n\t         * @param {Number} [bounds.width]\n\t         * @param {Number} [bounds.height]\n\t         */\n\t    clear: function(bounds) {\n\t      var canvas = this.getCanvas();\n\t\n\t      if (bounds) {\n\t        this.clearRect(\n\t          bounds.x || 0,\n\t          bounds.y || 0,\n\t          bounds.width || 0,\n\t          bounds.height || 0\n\t        );\n\t      } else {\n\t        this.clearRect(\n\t          0,\n\t          0,\n\t          canvas.getWidth() / canvas.pixelRatio,\n\t          canvas.getHeight() / canvas.pixelRatio\n\t        );\n\t      }\n\t    },\n\t    _applyLineCap: function(shape) {\n\t      var lineCap = shape.getLineCap();\n\t      if (lineCap) {\n\t        this.setAttr('lineCap', lineCap);\n\t      }\n\t    },\n\t    _applyOpacity: function(shape) {\n\t      var absOpacity = shape.getAbsoluteOpacity();\n\t      if (absOpacity !== 1) {\n\t        this.setAttr('globalAlpha', absOpacity);\n\t      }\n\t    },\n\t    _applyLineJoin: function(shape) {\n\t      var lineJoin = shape.getLineJoin();\n\t      if (lineJoin) {\n\t        this.setAttr('lineJoin', lineJoin);\n\t      }\n\t    },\n\t    setAttr: function(attr, val) {\n\t      this._context[attr] = val;\n\t    },\n\t\n\t    // context pass through methods\n\t    arc: function() {\n\t      var a = arguments;\n\t      this._context.arc(a[0], a[1], a[2], a[3], a[4], a[5]);\n\t    },\n\t    beginPath: function() {\n\t      this._context.beginPath();\n\t    },\n\t    bezierCurveTo: function() {\n\t      var a = arguments;\n\t      this._context.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);\n\t    },\n\t    clearRect: function() {\n\t      var a = arguments;\n\t      this._context.clearRect(a[0], a[1], a[2], a[3]);\n\t    },\n\t    clip: function() {\n\t      this._context.clip();\n\t    },\n\t    closePath: function() {\n\t      this._context.closePath();\n\t    },\n\t    createImageData: function() {\n\t      var a = arguments;\n\t      if (a.length === 2) {\n\t        return this._context.createImageData(a[0], a[1]);\n\t      } else if (a.length === 1) {\n\t        return this._context.createImageData(a[0]);\n\t      }\n\t    },\n\t    createLinearGradient: function() {\n\t      var a = arguments;\n\t      return this._context.createLinearGradient(a[0], a[1], a[2], a[3]);\n\t    },\n\t    createPattern: function() {\n\t      var a = arguments;\n\t      return this._context.createPattern(a[0], a[1]);\n\t    },\n\t    createRadialGradient: function() {\n\t      var a = arguments;\n\t      return this._context.createRadialGradient(\n\t        a[0],\n\t        a[1],\n\t        a[2],\n\t        a[3],\n\t        a[4],\n\t        a[5]\n\t      );\n\t    },\n\t    drawImage: function() {\n\t      var a = arguments, _context = this._context;\n\t\n\t      if (a.length === 3) {\n\t        _context.drawImage(a[0], a[1], a[2]);\n\t      } else if (a.length === 5) {\n\t        _context.drawImage(a[0], a[1], a[2], a[3], a[4]);\n\t      } else if (a.length === 9) {\n\t        _context.drawImage(\n\t          a[0],\n\t          a[1],\n\t          a[2],\n\t          a[3],\n\t          a[4],\n\t          a[5],\n\t          a[6],\n\t          a[7],\n\t          a[8]\n\t        );\n\t      }\n\t    },\n\t    isPointInPath: function(x, y) {\n\t      return this._context.isPointInPath(x, y);\n\t    },\n\t    fill: function() {\n\t      this._context.fill();\n\t    },\n\t    fillRect: function(x, y, width, height) {\n\t      this._context.fillRect(x, y, width, height);\n\t    },\n\t    strokeRect: function(x, y, width, height) {\n\t      this._context.strokeRect(x, y, width, height);\n\t    },\n\t    fillText: function() {\n\t      var a = arguments;\n\t      this._context.fillText(a[0], a[1], a[2]);\n\t    },\n\t    measureText: function(text) {\n\t      return this._context.measureText(text);\n\t    },\n\t    getImageData: function() {\n\t      var a = arguments;\n\t      return this._context.getImageData(a[0], a[1], a[2], a[3]);\n\t    },\n\t    lineTo: function() {\n\t      var a = arguments;\n\t      this._context.lineTo(a[0], a[1]);\n\t    },\n\t    moveTo: function() {\n\t      var a = arguments;\n\t      this._context.moveTo(a[0], a[1]);\n\t    },\n\t    rect: function() {\n\t      var a = arguments;\n\t      this._context.rect(a[0], a[1], a[2], a[3]);\n\t    },\n\t    putImageData: function() {\n\t      var a = arguments;\n\t      this._context.putImageData(a[0], a[1], a[2]);\n\t    },\n\t    quadraticCurveTo: function() {\n\t      var a = arguments;\n\t      this._context.quadraticCurveTo(a[0], a[1], a[2], a[3]);\n\t    },\n\t    restore: function() {\n\t      this._context.restore();\n\t    },\n\t    rotate: function() {\n\t      var a = arguments;\n\t      this._context.rotate(a[0]);\n\t    },\n\t    save: function() {\n\t      this._context.save();\n\t    },\n\t    scale: function() {\n\t      var a = arguments;\n\t      this._context.scale(a[0], a[1]);\n\t    },\n\t    setLineDash: function() {\n\t      var a = arguments, _context = this._context;\n\t\n\t      // works for Chrome and IE11\n\t      if (this._context.setLineDash) {\n\t        _context.setLineDash(a[0]);\n\t      } else if ('mozDash' in _context) {\n\t        // verified that this works in firefox\n\t        _context.mozDash = a[0];\n\t      } else if ('webkitLineDash' in _context) {\n\t        // does not currently work for Safari\n\t        _context.webkitLineDash = a[0];\n\t      }\n\t\n\t      // no support for IE9 and IE10\n\t    },\n\t    getLineDash: function() {\n\t      return this._context.getLineDash();\n\t    },\n\t    setTransform: function() {\n\t      var a = arguments;\n\t      this._context.setTransform(a[0], a[1], a[2], a[3], a[4], a[5]);\n\t    },\n\t    stroke: function() {\n\t      this._context.stroke();\n\t    },\n\t    strokeText: function() {\n\t      var a = arguments;\n\t      this._context.strokeText(a[0], a[1], a[2]);\n\t    },\n\t    transform: function() {\n\t      var a = arguments;\n\t      this._context.transform(a[0], a[1], a[2], a[3], a[4], a[5]);\n\t    },\n\t    translate: function() {\n\t      var a = arguments;\n\t      this._context.translate(a[0], a[1]);\n\t    },\n\t    _enableTrace: function() {\n\t      var that = this,\n\t        len = CONTEXT_METHODS.length,\n\t        _simplifyArray = Konva.Util._simplifyArray,\n\t        origSetter = this.setAttr,\n\t        n,\n\t        args;\n\t\n\t      // to prevent creating scope function at each loop\n\t      var func = function(methodName) {\n\t        var origMethod = that[methodName], ret;\n\t\n\t        that[methodName] = function() {\n\t          args = _simplifyArray(Array.prototype.slice.call(arguments, 0));\n\t          ret = origMethod.apply(that, arguments);\n\t\n\t          that._trace({\n\t            method: methodName,\n\t            args: args\n\t          });\n\t\n\t          return ret;\n\t        };\n\t      };\n\t      // methods\n\t      for (n = 0; n < len; n++) {\n\t        func(CONTEXT_METHODS[n]);\n\t      }\n\t\n\t      // attrs\n\t      that.setAttr = function() {\n\t        origSetter.apply(that, arguments);\n\t        var prop = arguments[0];\n\t        var val = arguments[1];\n\t        if (\n\t          prop === 'shadowOffsetX' ||\n\t          prop === 'shadowOffsetY' ||\n\t          prop === 'shadowBlur'\n\t        ) {\n\t          val = val / this.canvas.getPixelRatio();\n\t        }\n\t        that._trace({\n\t          property: prop,\n\t          val: val\n\t        });\n\t      };\n\t    }\n\t  };\n\t\n\t  CONTEXT_PROPERTIES.forEach(function(prop) {\n\t    Object.defineProperty(Konva.Context.prototype, prop, {\n\t      get: function() {\n\t        return this._context[prop];\n\t      },\n\t      set: function(val) {\n\t        this._context[prop] = val;\n\t      }\n\t    });\n\t  });\n\t\n\t  Konva.SceneContext = function(canvas) {\n\t    Konva.Context.call(this, canvas);\n\t  };\n\t\n\t  Konva.SceneContext.prototype = {\n\t    _fillColor: function(shape) {\n\t      var fill = shape.fill();\n\t\n\t      this.setAttr('fillStyle', fill);\n\t      shape._fillFunc(this);\n\t    },\n\t    _fillPattern: function(shape) {\n\t      var fillPatternX = shape.getFillPatternX(),\n\t        fillPatternY = shape.getFillPatternY(),\n\t        fillPatternScale = shape.getFillPatternScale(),\n\t        fillPatternRotation = Konva.getAngle(shape.getFillPatternRotation()),\n\t        fillPatternOffset = shape.getFillPatternOffset();\n\t\n\t      if (fillPatternX || fillPatternY) {\n\t        this.translate(fillPatternX || 0, fillPatternY || 0);\n\t      }\n\t      if (fillPatternRotation) {\n\t        this.rotate(fillPatternRotation);\n\t      }\n\t      if (fillPatternScale) {\n\t        this.scale(fillPatternScale.x, fillPatternScale.y);\n\t      }\n\t      if (fillPatternOffset) {\n\t        this.translate(-1 * fillPatternOffset.x, -1 * fillPatternOffset.y);\n\t      }\n\t\n\t      this.setAttr(\n\t        'fillStyle',\n\t        this.createPattern(\n\t          shape.getFillPatternImage(),\n\t          shape.getFillPatternRepeat() || 'repeat'\n\t        )\n\t      );\n\t      this.fill();\n\t    },\n\t    _fillLinearGradient: function(shape) {\n\t      var start = shape.getFillLinearGradientStartPoint(),\n\t        end = shape.getFillLinearGradientEndPoint(),\n\t        colorStops = shape.getFillLinearGradientColorStops(),\n\t        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\t\n\t      if (colorStops) {\n\t        // build color stops\n\t        for (var n = 0; n < colorStops.length; n += 2) {\n\t          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n\t        }\n\t        this.setAttr('fillStyle', grd);\n\t        shape._fillFunc(this);\n\t      }\n\t    },\n\t    _fillRadialGradient: function(shape) {\n\t      var start = shape.getFillRadialGradientStartPoint(),\n\t        end = shape.getFillRadialGradientEndPoint(),\n\t        startRadius = shape.getFillRadialGradientStartRadius(),\n\t        endRadius = shape.getFillRadialGradientEndRadius(),\n\t        colorStops = shape.getFillRadialGradientColorStops(),\n\t        grd = this.createRadialGradient(\n\t          start.x,\n\t          start.y,\n\t          startRadius,\n\t          end.x,\n\t          end.y,\n\t          endRadius\n\t        );\n\t\n\t      // build color stops\n\t      for (var n = 0; n < colorStops.length; n += 2) {\n\t        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n\t      }\n\t      this.setAttr('fillStyle', grd);\n\t      this.fill();\n\t    },\n\t    _fill: function(shape) {\n\t      var hasColor = shape.fill(),\n\t        hasPattern = shape.getFillPatternImage(),\n\t        hasLinearGradient = shape.getFillLinearGradientColorStops(),\n\t        hasRadialGradient = shape.getFillRadialGradientColorStops(),\n\t        fillPriority = shape.getFillPriority();\n\t\n\t      // priority fills\n\t      if (hasColor && fillPriority === 'color') {\n\t        this._fillColor(shape);\n\t      } else if (hasPattern && fillPriority === 'pattern') {\n\t        this._fillPattern(shape);\n\t      } else if (hasLinearGradient && fillPriority === 'linear-gradient') {\n\t        this._fillLinearGradient(shape);\n\t      } else if (hasRadialGradient && fillPriority === 'radial-gradient') {\n\t        this._fillRadialGradient(shape);\n\t      } else if (hasColor) {\n\t        // now just try and fill with whatever is available\n\t        this._fillColor(shape);\n\t      } else if (hasPattern) {\n\t        this._fillPattern(shape);\n\t      } else if (hasLinearGradient) {\n\t        this._fillLinearGradient(shape);\n\t      } else if (hasRadialGradient) {\n\t        this._fillRadialGradient(shape);\n\t      }\n\t    },\n\t    _stroke: function(shape) {\n\t      var dash = shape.dash(),\n\t        // ignore strokeScaleEnabled for Text\n\t        strokeScaleEnabled =\n\t          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;\n\t\n\t      if (shape.hasStroke()) {\n\t        if (!strokeScaleEnabled) {\n\t          this.save();\n\t          this.setTransform(1, 0, 0, 1, 0, 0);\n\t        }\n\t\n\t        this._applyLineCap(shape);\n\t        if (dash && shape.dashEnabled()) {\n\t          this.setLineDash(dash);\n\t          this.setAttr('lineDashOffset', shape.dashOffset());\n\t        }\n\t\n\t        this.setAttr('lineWidth', shape.strokeWidth());\n\t        this.setAttr('strokeStyle', shape.stroke());\n\t\n\t        if (!shape.getShadowForStrokeEnabled()) {\n\t          this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n\t        }\n\t        shape._strokeFunc(this);\n\t\n\t        if (!strokeScaleEnabled) {\n\t          this.restore();\n\t        }\n\t      }\n\t    },\n\t    _applyShadow: function(shape) {\n\t      var util = Konva.Util,\n\t        color = util.get(shape.getShadowRGBA(), 'black'),\n\t        blur = util.get(shape.getShadowBlur(), 5),\n\t        offset = util.get(shape.getShadowOffset(), {\n\t          x: 0,\n\t          y: 0\n\t        }),\n\t        // TODO: get this info from transform??\n\t        scale = shape.getAbsoluteScale(),\n\t        ratio = this.canvas.getPixelRatio(),\n\t        scaleX = scale.x * ratio,\n\t        scaleY = scale.y * ratio;\n\t\n\t      this.setAttr('shadowColor', color);\n\t      this.setAttr(\n\t        'shadowBlur',\n\t        blur * ratio * Math.min(Math.abs(scaleX), Math.abs(scaleY))\n\t      );\n\t      this.setAttr('shadowOffsetX', offset.x * scaleX);\n\t      this.setAttr('shadowOffsetY', offset.y * scaleY);\n\t    },\n\t    _applyGlobalCompositeOperation: function(shape) {\n\t      var globalCompositeOperation = shape.getGlobalCompositeOperation();\n\t      if (globalCompositeOperation !== 'source-over') {\n\t        this.setAttr('globalCompositeOperation', globalCompositeOperation);\n\t      }\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.SceneContext, Konva.Context);\n\t\n\t  Konva.HitContext = function(canvas) {\n\t    Konva.Context.call(this, canvas);\n\t  };\n\t\n\t  Konva.HitContext.prototype = {\n\t    _fill: function(shape) {\n\t      this.save();\n\t      this.setAttr('fillStyle', shape.colorKey);\n\t      shape._fillFuncHit(this);\n\t      this.restore();\n\t    },\n\t    _stroke: function(shape) {\n\t      if (shape.hasStroke() && shape.strokeHitEnabled()) {\n\t        // ignore strokeScaleEnabled for Text\n\t        var strokeScaleEnabled =\n\t          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;\n\t        if (!strokeScaleEnabled) {\n\t          this.save();\n\t          this.setTransform(1, 0, 0, 1, 0, 0);\n\t        }\n\t        this._applyLineCap(shape);\n\t        this.setAttr('lineWidth', shape.strokeWidth());\n\t        this.setAttr('strokeStyle', shape.colorKey);\n\t        shape._strokeFuncHit(this);\n\t        if (!strokeScaleEnabled) {\n\t          this.restore();\n\t        }\n\t      }\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.HitContext, Konva.Context);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  // CONSTANTS\n\t  var GET = 'get', SET = 'set';\n\t\n\t  Konva.Factory = {\n\t    addGetterSetter: function(constructor, attr, def, validator, after) {\n\t      this.addGetter(constructor, attr, def);\n\t      this.addSetter(constructor, attr, validator, after);\n\t      this.addOverloadedGetterSetter(constructor, attr);\n\t    },\n\t    addGetter: function(constructor, attr, def) {\n\t      var method = GET + Konva.Util._capitalize(attr);\n\t\n\t      constructor.prototype[method] = function() {\n\t        var val = this.attrs[attr];\n\t        return val === undefined ? def : val;\n\t      };\n\t    },\n\t    addSetter: function(constructor, attr, validator, after) {\n\t      var method = SET + Konva.Util._capitalize(attr);\n\t\n\t      constructor.prototype[method] = function(val) {\n\t        if (validator) {\n\t          val = validator.call(this, val);\n\t        }\n\t\n\t        this._setAttr(attr, val);\n\t\n\t        if (after) {\n\t          after.call(this);\n\t        }\n\t\n\t        return this;\n\t      };\n\t    },\n\t    addComponentsGetterSetter: function(\n\t      constructor,\n\t      attr,\n\t      components,\n\t      validator,\n\t      after\n\t    ) {\n\t      var len = components.length,\n\t        capitalize = Konva.Util._capitalize,\n\t        getter = GET + capitalize(attr),\n\t        setter = SET + capitalize(attr),\n\t        n,\n\t        component;\n\t\n\t      // getter\n\t      constructor.prototype[getter] = function() {\n\t        var ret = {};\n\t\n\t        for (n = 0; n < len; n++) {\n\t          component = components[n];\n\t          ret[component] = this.getAttr(attr + capitalize(component));\n\t        }\n\t\n\t        return ret;\n\t      };\n\t\n\t      // setter\n\t      constructor.prototype[setter] = function(val) {\n\t        var oldVal = this.attrs[attr], key;\n\t\n\t        if (validator) {\n\t          val = validator.call(this, val);\n\t        }\n\t\n\t        for (key in val) {\n\t          if (!val.hasOwnProperty(key)) {\n\t            continue;\n\t          }\n\t          this._setAttr(attr + capitalize(key), val[key]);\n\t        }\n\t\n\t        this._fireChangeEvent(attr, oldVal, val);\n\t\n\t        if (after) {\n\t          after.call(this);\n\t        }\n\t\n\t        return this;\n\t      };\n\t\n\t      this.addOverloadedGetterSetter(constructor, attr);\n\t    },\n\t    addOverloadedGetterSetter: function(constructor, attr) {\n\t      var capitalizedAttr = Konva.Util._capitalize(attr),\n\t        setter = SET + capitalizedAttr,\n\t        getter = GET + capitalizedAttr;\n\t\n\t      constructor.prototype[attr] = function() {\n\t        // setting\n\t        if (arguments.length) {\n\t          this[setter](arguments[0]);\n\t          return this;\n\t        }\n\t        // getting\n\t        return this[getter]();\n\t      };\n\t    },\n\t    addDeprecatedGetterSetter: function(constructor, attr, def, validator) {\n\t      var method = GET + Konva.Util._capitalize(attr);\n\t      var message =\n\t        attr +\n\t        ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n\t      constructor.prototype[method] = function() {\n\t        Konva.Util.error(message);\n\t        var val = this.attrs[attr];\n\t        return val === undefined ? def : val;\n\t      };\n\t      this.addSetter(constructor, attr, validator, function() {\n\t        Konva.Util.error(message);\n\t      });\n\t      this.addOverloadedGetterSetter(constructor, attr);\n\t    },\n\t    backCompat: function(constructor, methods) {\n\t      Konva.Util.each(methods, function(oldMethodName, newMethodName) {\n\t        var method = constructor.prototype[newMethodName];\n\t        constructor.prototype[oldMethodName] = function() {\n\t          method.apply(this, arguments);\n\t          Konva.Util.error(\n\t            oldMethodName +\n\t              ' method is deprecated and will be removed soon. Use ' +\n\t              newMethodName +\n\t              ' instead'\n\t          );\n\t        };\n\t      });\n\t    },\n\t    afterSetFilter: function() {\n\t      this._filterUpToDate = false;\n\t    }\n\t  };\n\t\n\t  Konva.Validators = {\n\t    /**\n\t         * @return {number}\n\t         */\n\t    RGBComponent: function(val) {\n\t      if (val > 255) {\n\t        return 255;\n\t      } else if (val < 0) {\n\t        return 0;\n\t      }\n\t      return Math.round(val);\n\t    },\n\t    alphaComponent: function(val) {\n\t      if (val > 1) {\n\t        return 1;\n\t      } else if (val < 0.0001) {\n\t        // chrome does not honor alpha values of 0\n\t        return 0.0001;\n\t      }\n\t\n\t      return val;\n\t    }\n\t  };\n\t})();\n\t\n\t(function(Konva) {\n\t  'use strict';\n\t  // CONSTANTS\n\t  var ABSOLUTE_OPACITY = 'absoluteOpacity',\n\t    ABSOLUTE_TRANSFORM = 'absoluteTransform',\n\t    ABSOLUTE_SCALE = 'absoluteScale',\n\t    CHANGE = 'Change',\n\t    CHILDREN = 'children',\n\t    DOT = '.',\n\t    EMPTY_STRING = '',\n\t    GET = 'get',\n\t    ID = 'id',\n\t    KONVA = 'konva',\n\t    LISTENING = 'listening',\n\t    MOUSEENTER = 'mouseenter',\n\t    MOUSELEAVE = 'mouseleave',\n\t    NAME = 'name',\n\t    SET = 'set',\n\t    SHAPE = 'Shape',\n\t    SPACE = ' ',\n\t    STAGE = 'stage',\n\t    TRANSFORM = 'transform',\n\t    UPPER_STAGE = 'Stage',\n\t    VISIBLE = 'visible',\n\t    CLONE_BLACK_LIST = ['id'],\n\t    TRANSFORM_CHANGE_STR = [\n\t      'xChange.konva',\n\t      'yChange.konva',\n\t      'scaleXChange.konva',\n\t      'scaleYChange.konva',\n\t      'skewXChange.konva',\n\t      'skewYChange.konva',\n\t      'rotationChange.konva',\n\t      'offsetXChange.konva',\n\t      'offsetYChange.konva',\n\t      'transformsEnabledChange.konva'\n\t    ].join(SPACE),\n\t    SCALE_CHANGE_STR = ['scaleXChange.konva', 'scaleYChange.konva'].join(SPACE);\n\t\n\t  /**\n\t     * Node constructor. Nodes are entities that can be transformed, layered,\n\t     * and have bound events. The stage, layers, groups, and shapes all extend Node.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @abstract\n\t     * @param {Object} config\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     */\n\t  Konva.Node = function(config) {\n\t    this._init(config);\n\t  };\n\t\n\t  Konva.Util.addMethods(Konva.Node, {\n\t    _init: function(config) {\n\t      var that = this;\n\t      this._id = Konva.idCounter++;\n\t      this.eventListeners = {};\n\t      this.attrs = {};\n\t      this._cache = {};\n\t      this._filterUpToDate = false;\n\t      this._isUnderCache = false;\n\t      this.setAttrs(config);\n\t\n\t      // event bindings for cache handling\n\t      this.on(TRANSFORM_CHANGE_STR, function() {\n\t        this._clearCache(TRANSFORM);\n\t        that._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\t      });\n\t\n\t      this.on(SCALE_CHANGE_STR, function() {\n\t        that._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\t      });\n\t\n\t      this.on('visibleChange.konva', function() {\n\t        that._clearSelfAndDescendantCache(VISIBLE);\n\t      });\n\t      this.on('listeningChange.konva', function() {\n\t        that._clearSelfAndDescendantCache(LISTENING);\n\t      });\n\t      this.on('opacityChange.konva', function() {\n\t        that._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\t      });\n\t    },\n\t    _clearCache: function(attr) {\n\t      if (attr) {\n\t        delete this._cache[attr];\n\t      } else {\n\t        this._cache = {};\n\t      }\n\t    },\n\t    _getCache: function(attr, privateGetter) {\n\t      var cache = this._cache[attr];\n\t\n\t      // if not cached, we need to set it using the private getter method.\n\t      if (cache === undefined) {\n\t        this._cache[attr] = privateGetter.call(this);\n\t      }\n\t\n\t      return this._cache[attr];\n\t    },\n\t    /*\n\t         * when the logic for a cached result depends on ancestor propagation, use this\n\t         * method to clear self and children cache\n\t         */\n\t    _clearSelfAndDescendantCache: function(attr) {\n\t      this._clearCache(attr);\n\t\n\t      if (this.children) {\n\t        this.getChildren().each(function(node) {\n\t          node._clearSelfAndDescendantCache(attr);\n\t        });\n\t      }\n\t    },\n\t    /**\n\t        * clear cached canvas\n\t        * @method\n\t        * @memberof Konva.Node.prototype\n\t        * @returns {Konva.Node}\n\t        * @example\n\t        * node.clearCache();\n\t        */\n\t    clearCache: function() {\n\t      delete this._cache.canvas;\n\t      this._filterUpToDate = false;\n\t      return this;\n\t    },\n\t    /**\n\t        *  cache node to improve drawing performance, apply filters, or create more accurate\n\t        *  hit regions. For all basic shapes size of cache canvas will be automatically detected.\n\t        *  If you need to cache your custom `Konva.Shape` instance you have to pass shape's bounding box\n\t        *  properties. Look at [link to demo page](link to demo page) for more information.\n\t        * @method\n\t        * @memberof Konva.Node.prototype\n\t        * @param {Object} [config]\n\t        * @param {Number} [config.x]\n\t        * @param {Number} [config.y]\n\t        * @param {Number} [config.width]\n\t        * @param {Number} [config.height]\n\t        * @param {Number} [config.offset]  increase canvas size by `offset` pixel in all directions.\n\t        * @param {Boolean} [config.drawBorder] when set to true, a red border will be drawn around the cached\n\t        *  region for debugging purposes\n\t        * @param {Number} [config.pixelRatio] change quality (or pixel ratio) of cached image. pixelRatio = 2 will produce 2x sized cache.\n\t        * @returns {Konva.Node}\n\t        * @example\n\t        * // cache a shape with the x,y position of the bounding box at the center and\n\t        * // the width and height of the bounding box equal to the width and height of\n\t        * // the shape obtained from shape.width() and shape.height()\n\t        * image.cache();\n\t        *\n\t        * // cache a node and define the bounding box position and size\n\t        * node.cache({\n\t        *   x: -30,\n\t        *   y: -30,\n\t        *   width: 100,\n\t        *   height: 200\n\t        * });\n\t        *\n\t        * // cache a node and draw a red border around the bounding box\n\t        * // for debugging purposes\n\t        * node.cache({\n\t        *   x: -30,\n\t        *   y: -30,\n\t        *   width: 100,\n\t        *   height: 200,\n\t        *   offset : 10,\n\t        *   drawBorder: true\n\t        * });\n\t        */\n\t    cache: function(config) {\n\t      var conf = config || {},\n\t        rect = this.getClientRect({\n\t          skipTransform: true,\n\t          relativeTo: this.getParent()\n\t        }),\n\t        width = conf.width || rect.width,\n\t        height = conf.height || rect.height,\n\t        pixelRatio = conf.pixelRatio,\n\t        x = conf.x || rect.x,\n\t        y = conf.y || rect.y,\n\t        offset = conf.offset || 0,\n\t        drawBorder = conf.drawBorder || false;\n\t\n\t      if (!width || !height) {\n\t        // make throw async, because we don't need to stop funcion\n\t        setTimeout(function() {\n\t          Konva.Util.throw(\n\t            'Width or height of caching configuration equals 0. Caching is ignored.'\n\t          );\n\t        });\n\t        return;\n\t      }\n\t\n\t      width += offset * 2;\n\t      height += offset * 2;\n\t\n\t      x -= offset;\n\t      y -= offset;\n\t\n\t      var cachedSceneCanvas = new Konva.SceneCanvas({\n\t          pixelRatio: pixelRatio,\n\t          width: width,\n\t          height: height\n\t        }),\n\t        cachedFilterCanvas = new Konva.SceneCanvas({\n\t          pixelRatio: pixelRatio,\n\t          width: width,\n\t          height: height\n\t        }),\n\t        cachedHitCanvas = new Konva.HitCanvas({\n\t          pixelRatio: 1,\n\t          width: width,\n\t          height: height\n\t        }),\n\t        sceneContext = cachedSceneCanvas.getContext(),\n\t        hitContext = cachedHitCanvas.getContext();\n\t\n\t      cachedHitCanvas.isCache = true;\n\t\n\t      this.clearCache();\n\t\n\t      sceneContext.save();\n\t      hitContext.save();\n\t\n\t      sceneContext.translate(-x, -y);\n\t      hitContext.translate(-x, -y);\n\t\n\t      // extra flag to skip on getAbsolute opacity calc\n\t      this._isUnderCache = true;\n\t      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\t      this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\t\n\t      this.drawScene(cachedSceneCanvas, this, true);\n\t      this.drawHit(cachedHitCanvas, this, true);\n\t      this._isUnderCache = false;\n\t\n\t      sceneContext.restore();\n\t      hitContext.restore();\n\t\n\t      // this will draw a red border around the cached box for\n\t      // debugging purposes\n\t      if (drawBorder) {\n\t        sceneContext.save();\n\t        sceneContext.beginPath();\n\t        sceneContext.rect(0, 0, width, height);\n\t        sceneContext.closePath();\n\t        sceneContext.setAttr('strokeStyle', 'red');\n\t        sceneContext.setAttr('lineWidth', 5);\n\t        sceneContext.stroke();\n\t        sceneContext.restore();\n\t      }\n\t\n\t      this._cache.canvas = {\n\t        scene: cachedSceneCanvas,\n\t        filter: cachedFilterCanvas,\n\t        hit: cachedHitCanvas,\n\t        x: x,\n\t        y: y\n\t      };\n\t\n\t      return this;\n\t    },\n\t    /**\n\t         * Return client rectangle {x, y, width, height} of node. This rectangle also include all styling (strokes, shadows, etc).\n\t         * The rectangle position is relative to parent container.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} config\n\t         * @param {Boolean} [config.skipTransform] should we apply transform to node for calculating rect?\n\t         * @param {Object} [config.relativeTo] calculate client rect relative to one of the parents\n\t         * @returns {Object} rect with {x, y, width, height} properties\n\t         * @example\n\t         * var rect = new Konva.Rect({\n\t         *      width : 100,\n\t         *      height : 100,\n\t         *      x : 50,\n\t         *      y : 50,\n\t         *      strokeWidth : 4,\n\t         *      stroke : 'black',\n\t         *      offsetX : 50,\n\t         *      scaleY : 2\n\t         * });\n\t         *\n\t         * // get client rect without think off transformations (position, rotation, scale, offset, etc)\n\t         * rect.getClientRect({ skipTransform: true});\n\t         * // returns {\n\t         * //     x : -2,   // two pixels for stroke / 2\n\t         * //     y : -2,\n\t         * //     width : 104, // increased by 4 for stroke\n\t         * //     height : 104\n\t         * //}\n\t         *\n\t         * // get client rect with transformation applied\n\t         * rect.getClientRect();\n\t         * // returns Object {x: -2, y: 46, width: 104, height: 208}\n\t         */\n\t    getClientRect: function() {\n\t      // abstract method\n\t      // redefine in Container and Shape\n\t      throw new Error('abstract \"getClientRect\" method call');\n\t    },\n\t    _transformedRect: function(rect, top) {\n\t      var points = [\n\t        { x: rect.x, y: rect.y },\n\t        { x: rect.x + rect.width, y: rect.y },\n\t        { x: rect.x + rect.width, y: rect.y + rect.height },\n\t        { x: rect.x, y: rect.y + rect.height }\n\t      ];\n\t      var minX, minY, maxX, maxY;\n\t      var trans = this.getAbsoluteTransform(top);\n\t      points.forEach(function(point) {\n\t        var transformed = trans.point(point);\n\t        if (minX === undefined) {\n\t          minX = maxX = transformed.x;\n\t          minY = maxY = transformed.y;\n\t        }\n\t        minX = Math.min(minX, transformed.x);\n\t        minY = Math.min(minY, transformed.y);\n\t        maxX = Math.max(maxX, transformed.x);\n\t        maxY = Math.max(maxY, transformed.y);\n\t      });\n\t      return {\n\t        x: minX,\n\t        y: minY,\n\t        width: maxX - minX,\n\t        height: maxY - minY\n\t      };\n\t    },\n\t    _drawCachedSceneCanvas: function(context) {\n\t      context.save();\n\t      context._applyOpacity(this);\n\t      context._applyGlobalCompositeOperation(this);\n\t      context.translate(this._cache.canvas.x, this._cache.canvas.y);\n\t\n\t      var cacheCanvas = this._getCachedSceneCanvas();\n\t      var ratio = cacheCanvas.pixelRatio;\n\t\n\t      context.drawImage(\n\t        cacheCanvas._canvas,\n\t        0,\n\t        0,\n\t        cacheCanvas.width / ratio,\n\t        cacheCanvas.height / ratio\n\t      );\n\t      context.restore();\n\t    },\n\t    _drawCachedHitCanvas: function(context) {\n\t      var cachedCanvas = this._cache.canvas,\n\t        hitCanvas = cachedCanvas.hit;\n\t      context.save();\n\t      context.translate(this._cache.canvas.x, this._cache.canvas.y);\n\t      context.drawImage(hitCanvas._canvas, 0, 0);\n\t      context.restore();\n\t    },\n\t    _getCachedSceneCanvas: function() {\n\t      var filters = this.filters(),\n\t        cachedCanvas = this._cache.canvas,\n\t        sceneCanvas = cachedCanvas.scene,\n\t        filterCanvas = cachedCanvas.filter,\n\t        filterContext = filterCanvas.getContext(),\n\t        len,\n\t        imageData,\n\t        n,\n\t        filter;\n\t\n\t      if (filters) {\n\t        if (!this._filterUpToDate) {\n\t          var ratio = sceneCanvas.pixelRatio;\n\t\n\t          try {\n\t            len = filters.length;\n\t            filterContext.clear();\n\t\n\t            // copy cached canvas onto filter context\n\t            filterContext.drawImage(\n\t              sceneCanvas._canvas,\n\t              0,\n\t              0,\n\t              sceneCanvas.getWidth() / ratio,\n\t              sceneCanvas.getHeight() / ratio\n\t            );\n\t            imageData = filterContext.getImageData(\n\t              0,\n\t              0,\n\t              filterCanvas.getWidth(),\n\t              filterCanvas.getHeight()\n\t            );\n\t\n\t            // apply filters to filter context\n\t            for (n = 0; n < len; n++) {\n\t              filter = filters[n];\n\t              if (typeof filter !== 'function') {\n\t                Konva.Util.error(\n\t                  'Filter should be type of function, but got ' +\n\t                    typeof filter +\n\t                    ' insted. Please check correct filters'\n\t                );\n\t                continue;\n\t              }\n\t              filter.call(this, imageData);\n\t              filterContext.putImageData(imageData, 0, 0);\n\t            }\n\t          } catch (e) {\n\t            Konva.Util.error('Unable to apply filter. ' + e.message);\n\t          }\n\t\n\t          this._filterUpToDate = true;\n\t        }\n\t\n\t        return filterCanvas;\n\t      }\n\t      return sceneCanvas;\n\t    },\n\t    /**\n\t         * bind events to the node. KonvaJS supports mouseover, mousemove,\n\t         *  mouseout, mouseenter, mouseleave, mousedown, mouseup, wheel, click, dblclick, touchstart, touchmove,\n\t         *  touchend, tap, dbltap, dragstart, dragmove, and dragend events. The Konva Stage supports\n\t         *  contentMouseover, contentMousemove, contentMouseout, contentMousedown, contentMouseup, contentWheel, contentContextmenu\n\t         *  contentClick, contentDblclick, contentTouchstart, contentTouchmove, contentTouchend, contentTap,\n\t         *  and contentDblTap.  Pass in a string of events delimmited by a space to bind multiple events at once\n\t         *  such as 'mousedown mouseup mousemove'. Include a namespace to bind an\n\t         *  event by name such as 'click.foobar'.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', 'mousedown.foo touchstart.foo'\n\t         * @param {Function} handler The handler function is passed an event object\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // add click listener\n\t         * node.on('click', function() {\n\t         *   console.log('you clicked me!');\n\t         * });\n\t         *\n\t         * // get the target node\n\t         * node.on('click', function(evt) {\n\t         *   console.log(evt.target);\n\t         * });\n\t         *\n\t         * // stop event propagation\n\t         * node.on('click', function(evt) {\n\t         *   evt.cancelBubble = true;\n\t         * });\n\t         *\n\t         * // bind multiple listeners\n\t         * node.on('click touchstart', function() {\n\t         *   console.log('you clicked/touched me!');\n\t         * });\n\t         *\n\t         * // namespace listener\n\t         * node.on('click.foo', function() {\n\t         *   console.log('you clicked/touched me!');\n\t         * });\n\t         *\n\t         * // get the event type\n\t         * node.on('click tap', function(evt) {\n\t         *   var eventType = evt.type;\n\t         * });\n\t         *\n\t         * // get native event object\n\t         * node.on('click tap', function(evt) {\n\t         *   var nativeEvent = evt.evt;\n\t         * });\n\t         *\n\t         * // for change events, get the old and new val\n\t         * node.on('xChange', function(evt) {\n\t         *   var oldVal = evt.oldVal;\n\t         *   var newVal = evt.newVal;\n\t         * });\n\t         *\n\t         * // get event targets\n\t         * // with event delegations\n\t         * layer.on('click', 'Group', function(evt) {\n\t         *   var shape = evt.target;\n\t         *   var group = evtn.currentTarger;\n\t         * });\n\t         */\n\t    on: function(evtStr, handler) {\n\t      if (arguments.length === 3) {\n\t        return this._delegate.apply(this, arguments);\n\t      }\n\t      var events = evtStr.split(SPACE),\n\t        len = events.length,\n\t        n,\n\t        event,\n\t        parts,\n\t        baseEvent,\n\t        name;\n\t\n\t      /*\n\t             * loop through types and attach event listeners to\n\t             * each one.  eg. 'click mouseover.namespace mouseout'\n\t             * will create three event bindings\n\t             */\n\t      for (n = 0; n < len; n++) {\n\t        event = events[n];\n\t        parts = event.split(DOT);\n\t        baseEvent = parts[0];\n\t        name = parts[1] || EMPTY_STRING;\n\t\n\t        // create events array if it doesn't exist\n\t        if (!this.eventListeners[baseEvent]) {\n\t          this.eventListeners[baseEvent] = [];\n\t        }\n\t\n\t        this.eventListeners[baseEvent].push({\n\t          name: name,\n\t          handler: handler\n\t        });\n\t      }\n\t\n\t      return this;\n\t    },\n\t    /**\n\t         * remove event bindings from the node. Pass in a string of\n\t         *  event types delimmited by a space to remove multiple event\n\t         *  bindings at once such as 'mousedown mouseup mousemove'.\n\t         *  include a namespace to remove an event binding by name\n\t         *  such as 'click.foobar'. If you only give a name like '.foobar',\n\t         *  all events in that namespace will be removed.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', '.foobar'\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // remove listener\n\t         * node.off('click');\n\t         *\n\t         * // remove multiple listeners\n\t         * node.off('click touchstart');\n\t         *\n\t         * // remove listener by name\n\t         * node.off('click.foo');\n\t         */\n\t    off: function(evtStr) {\n\t      var events = (evtStr || '').split(SPACE),\n\t        len = events.length,\n\t        n,\n\t        t,\n\t        event,\n\t        parts,\n\t        baseEvent,\n\t        name;\n\t\n\t      if (!evtStr) {\n\t        // remove all events\n\t        for (t in this.eventListeners) {\n\t          this._off(t);\n\t        }\n\t      }\n\t      for (n = 0; n < len; n++) {\n\t        event = events[n];\n\t        parts = event.split(DOT);\n\t        baseEvent = parts[0];\n\t        name = parts[1];\n\t\n\t        if (baseEvent) {\n\t          if (this.eventListeners[baseEvent]) {\n\t            this._off(baseEvent, name);\n\t          }\n\t        } else {\n\t          for (t in this.eventListeners) {\n\t            this._off(t, name);\n\t          }\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t    // some event aliases for third party integration like HammerJS\n\t    dispatchEvent: function(evt) {\n\t      var e = {\n\t        target: this,\n\t        type: evt.type,\n\t        evt: evt\n\t      };\n\t      this.fire(evt.type, e);\n\t      return this;\n\t    },\n\t    addEventListener: function(type, handler) {\n\t      // we have to pass native event to handler\n\t      this.on(type, function(evt) {\n\t        handler.call(this, evt.evt);\n\t      });\n\t      return this;\n\t    },\n\t    removeEventListener: function(type) {\n\t      this.off(type);\n\t      return this;\n\t    },\n\t    // like node.on\n\t    _delegate: function(event, selector, handler) {\n\t      var stopNode = this;\n\t      this.on(event, function(evt) {\n\t        var targets = evt.target.findAncestors(selector, true, stopNode);\n\t        for (var i = 0; i < targets.length; i++) {\n\t          evt = Konva.Util.cloneObject(evt);\n\t          evt.currentTarget = targets[i];\n\t          handler.call(targets[i], evt);\n\t        }\n\t      });\n\t    },\n\t    /**\n\t         * remove self from parent, but don't destroy\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * node.remove();\n\t         */\n\t    remove: function() {\n\t      var parent = this.getParent();\n\t\n\t      if (parent && parent.children) {\n\t        parent.children.splice(this.index, 1);\n\t        parent._setChildrenIndices();\n\t        delete this.parent;\n\t      }\n\t\n\t      // every cached attr that is calculated via node tree\n\t      // traversal must be cleared when removing a node\n\t      this._clearSelfAndDescendantCache(STAGE);\n\t      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\t      this._clearSelfAndDescendantCache(VISIBLE);\n\t      this._clearSelfAndDescendantCache(LISTENING);\n\t      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\t\n\t      return this;\n\t    },\n\t    /**\n\t         * remove and destroy self\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @example\n\t         * node.destroy();\n\t         */\n\t    destroy: function() {\n\t      // remove from ids and names hashes\n\t      Konva._removeId(this.getId());\n\t\n\t      // remove all names\n\t      var names = (this.getName() || '').split(/\\s/g);\n\t      for (var i = 0; i < names.length; i++) {\n\t        var subname = names[i];\n\t        Konva._removeName(subname, this._id);\n\t      }\n\t\n\t      this.remove();\n\t      return this;\n\t    },\n\t    /**\n\t         * get attr\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} attr\n\t         * @returns {Integer|String|Object|Array}\n\t         * @example\n\t         * var x = node.getAttr('x');\n\t         */\n\t    getAttr: function(attr) {\n\t      var method = GET + Konva.Util._capitalize(attr);\n\t      if (Konva.Util._isFunction(this[method])) {\n\t        return this[method]();\n\t      }\n\t      // otherwise get directly\n\t      return this.attrs[attr];\n\t    },\n\t    /**\n\t        * get ancestors\n\t        * @method\n\t        * @memberof Konva.Node.prototype\n\t        * @returns {Konva.Collection}\n\t        * @example\n\t        * shape.getAncestors().each(function(node) {\n\t        *   console.log(node.getId());\n\t        * })\n\t        */\n\t    getAncestors: function() {\n\t      var parent = this.getParent(),\n\t        ancestors = new Konva.Collection();\n\t\n\t      while (parent) {\n\t        ancestors.push(parent);\n\t        parent = parent.getParent();\n\t      }\n\t\n\t      return ancestors;\n\t    },\n\t    /**\n\t         * get attrs object literal\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Object}\n\t         */\n\t    getAttrs: function() {\n\t      return this.attrs || {};\n\t    },\n\t    /**\n\t         * set multiple attrs at once using an object literal\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} config object containing key value pairs\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * node.setAttrs({\n\t         *   x: 5,\n\t         *   fill: 'red'\n\t         * });\n\t         */\n\t    setAttrs: function(config) {\n\t      var key, method;\n\t\n\t      if (!config) {\n\t        return this;\n\t      }\n\t      for (key in config) {\n\t        if (key === CHILDREN) {\n\t          continue;\n\t        }\n\t        method = SET + Konva.Util._capitalize(key);\n\t        // use setter if available\n\t        if (Konva.Util._isFunction(this[method])) {\n\t          this[method](config[key]);\n\t        } else {\n\t          // otherwise set directly\n\t          this._setAttr(key, config[key]);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t    /**\n\t         * determine if node is listening for events by taking into account ancestors.\n\t         *\n\t         * Parent    | Self      | isListening\n\t         * listening | listening |\n\t         * ----------+-----------+------------\n\t         * T         | T         | T\n\t         * T         | F         | F\n\t         * F         | T         | T\n\t         * F         | F         | F\n\t         * ----------+-----------+------------\n\t         * T         | I         | T\n\t         * F         | I         | F\n\t         * I         | I         | T\n\t         *\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    isListening: function() {\n\t      return this._getCache(LISTENING, this._isListening);\n\t    },\n\t    _isListening: function() {\n\t      var listening = this.getListening(),\n\t        parent = this.getParent();\n\t\n\t      // the following conditions are a simplification of the truth table above.\n\t      // please modify carefully\n\t      if (listening === 'inherit') {\n\t        if (parent) {\n\t          return parent.isListening();\n\t        } else {\n\t          return true;\n\t        }\n\t      } else {\n\t        return listening;\n\t      }\n\t    },\n\t    /**\n\t         * determine if node is visible by taking into account ancestors.\n\t         *\n\t         * Parent    | Self      | isVisible\n\t         * visible   | visible   |\n\t         * ----------+-----------+------------\n\t         * T         | T         | T\n\t         * T         | F         | F\n\t         * F         | T         | T\n\t         * F         | F         | F\n\t         * ----------+-----------+------------\n\t         * T         | I         | T\n\t         * F         | I         | F\n\t         * I         | I         | T\n\t\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    isVisible: function() {\n\t      return this._getCache(VISIBLE, this._isVisible);\n\t    },\n\t    _isVisible: function() {\n\t      var visible = this.getVisible(),\n\t        parent = this.getParent();\n\t\n\t      // the following conditions are a simplification of the truth table above.\n\t      // please modify carefully\n\t      if (visible === 'inherit') {\n\t        if (parent) {\n\t          return parent.isVisible();\n\t        } else {\n\t          return true;\n\t        }\n\t      } else {\n\t        return visible;\n\t      }\n\t    },\n\t    /**\n\t         * determine if listening is enabled by taking into account descendants.  If self or any children\n\t         * have _isListeningEnabled set to true, then self also has listening enabled.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    shouldDrawHit: function(canvas) {\n\t      var layer = this.getLayer();\n\t      return (\n\t        (canvas && canvas.isCache) ||\n\t        (layer &&\n\t          layer.hitGraphEnabled() &&\n\t          this.isListening() &&\n\t          this.isVisible())\n\t      );\n\t    },\n\t    /**\n\t         * show node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Node}\n\t         */\n\t    show: function() {\n\t      this.setVisible(true);\n\t      return this;\n\t    },\n\t    /**\n\t         * hide node.  Hidden nodes are no longer detectable\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Node}\n\t         */\n\t    hide: function() {\n\t      this.setVisible(false);\n\t      return this;\n\t    },\n\t    /**\n\t         * get zIndex relative to the node's siblings who share the same parent\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Integer}\n\t         */\n\t    getZIndex: function() {\n\t      return this.index || 0;\n\t    },\n\t    /**\n\t         * get absolute z-index which takes into account sibling\n\t         *  and ancestor indices\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Integer}\n\t         */\n\t    getAbsoluteZIndex: function() {\n\t      var depth = this.getDepth(),\n\t        that = this,\n\t        index = 0,\n\t        nodes,\n\t        len,\n\t        n,\n\t        child;\n\t\n\t      function addChildren(children) {\n\t        nodes = [];\n\t        len = children.length;\n\t        for (n = 0; n < len; n++) {\n\t          child = children[n];\n\t          index++;\n\t\n\t          if (child.nodeType !== SHAPE) {\n\t            nodes = nodes.concat(child.getChildren().toArray());\n\t          }\n\t\n\t          if (child._id === that._id) {\n\t            n = len;\n\t          }\n\t        }\n\t\n\t        if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n\t          addChildren(nodes);\n\t        }\n\t      }\n\t      if (that.nodeType !== UPPER_STAGE) {\n\t        addChildren(that.getStage().getChildren());\n\t      }\n\t\n\t      return index;\n\t    },\n\t    /**\n\t         * get node depth in node tree.  Returns an integer.\n\t         *  e.g. Stage depth will always be 0.  Layers will always be 1.  Groups and Shapes will always\n\t         *  be >= 2\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Integer}\n\t         */\n\t    getDepth: function() {\n\t      var depth = 0,\n\t        parent = this.parent;\n\t\n\t      while (parent) {\n\t        depth++;\n\t        parent = parent.parent;\n\t      }\n\t      return depth;\n\t    },\n\t    setPosition: function(pos) {\n\t      this.setX(pos.x);\n\t      this.setY(pos.y);\n\t      return this;\n\t    },\n\t    getPosition: function() {\n\t      return {\n\t        x: this.getX(),\n\t        y: this.getY()\n\t      };\n\t    },\n\t    /**\n\t         * get absolute position relative to the top left corner of the stage container div\n\t         * or relative to passed node\n\t         * @method\n\t         * @param {Object} [top] optional parent node\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Object}\n\t         */\n\t    getAbsolutePosition: function(top) {\n\t      var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n\t        absoluteTransform = new Konva.Transform(),\n\t        offset = this.offset();\n\t\n\t      // clone the matrix array\n\t      absoluteTransform.m = absoluteMatrix.slice();\n\t      absoluteTransform.translate(offset.x, offset.y);\n\t\n\t      return absoluteTransform.getTranslation();\n\t    },\n\t    /**\n\t         * set absolute position\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} pos\n\t         * @param {Number} pos.x\n\t         * @param {Number} pos.y\n\t         * @returns {Konva.Node}\n\t         */\n\t    setAbsolutePosition: function(pos) {\n\t      var origTrans = this._clearTransform(),\n\t        it;\n\t\n\t      // don't clear translation\n\t      this.attrs.x = origTrans.x;\n\t      this.attrs.y = origTrans.y;\n\t      delete origTrans.x;\n\t      delete origTrans.y;\n\t\n\t      // unravel transform\n\t      it = this.getAbsoluteTransform();\n\t\n\t      it.invert();\n\t      it.translate(pos.x, pos.y);\n\t      pos = {\n\t        x: this.attrs.x + it.getTranslation().x,\n\t        y: this.attrs.y + it.getTranslation().y\n\t      };\n\t\n\t      this.setPosition({ x: pos.x, y: pos.y });\n\t      this._setTransform(origTrans);\n\t\n\t      return this;\n\t    },\n\t    _setTransform: function(trans) {\n\t      var key;\n\t\n\t      for (key in trans) {\n\t        this.attrs[key] = trans[key];\n\t      }\n\t\n\t      this._clearCache(TRANSFORM);\n\t      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\t    },\n\t    _clearTransform: function() {\n\t      var trans = {\n\t        x: this.getX(),\n\t        y: this.getY(),\n\t        rotation: this.getRotation(),\n\t        scaleX: this.getScaleX(),\n\t        scaleY: this.getScaleY(),\n\t        offsetX: this.getOffsetX(),\n\t        offsetY: this.getOffsetY(),\n\t        skewX: this.getSkewX(),\n\t        skewY: this.getSkewY()\n\t      };\n\t\n\t      this.attrs.x = 0;\n\t      this.attrs.y = 0;\n\t      this.attrs.rotation = 0;\n\t      this.attrs.scaleX = 1;\n\t      this.attrs.scaleY = 1;\n\t      this.attrs.offsetX = 0;\n\t      this.attrs.offsetY = 0;\n\t      this.attrs.skewX = 0;\n\t      this.attrs.skewY = 0;\n\t\n\t      this._clearCache(TRANSFORM);\n\t      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\t\n\t      // return original transform\n\t      return trans;\n\t    },\n\t    /**\n\t         * move node by an amount relative to its current position\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} change\n\t         * @param {Number} change.x\n\t         * @param {Number} change.y\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // move node in x direction by 1px and y direction by 2px\n\t         * node.move({\n\t         *   x: 1,\n\t         *   y: 2)\n\t         * });\n\t         */\n\t    move: function(change) {\n\t      var changeX = change.x,\n\t        changeY = change.y,\n\t        x = this.getX(),\n\t        y = this.getY();\n\t\n\t      if (changeX !== undefined) {\n\t        x += changeX;\n\t      }\n\t\n\t      if (changeY !== undefined) {\n\t        y += changeY;\n\t      }\n\t\n\t      this.setPosition({ x: x, y: y });\n\t      return this;\n\t    },\n\t    _eachAncestorReverse: function(func, top) {\n\t      var family = [],\n\t        parent = this.getParent(),\n\t        len,\n\t        n;\n\t\n\t      // if top node is defined, and this node is top node,\n\t      // there's no need to build a family tree.  just execute\n\t      // func with this because it will be the only node\n\t      if (top && top._id === this._id) {\n\t        func(this);\n\t        return true;\n\t      }\n\t\n\t      family.unshift(this);\n\t\n\t      while (parent && (!top || parent._id !== top._id)) {\n\t        family.unshift(parent);\n\t        parent = parent.parent;\n\t      }\n\t\n\t      len = family.length;\n\t      for (n = 0; n < len; n++) {\n\t        func(family[n]);\n\t      }\n\t    },\n\t    /**\n\t         * rotate node by an amount in degrees relative to its current rotation\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Number} theta\n\t         * @returns {Konva.Node}\n\t         */\n\t    rotate: function(theta) {\n\t      this.setRotation(this.getRotation() + theta);\n\t      return this;\n\t    },\n\t    /**\n\t         * move node to the top of its siblings\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    moveToTop: function() {\n\t      if (!this.parent) {\n\t        Konva.Util.warn('Node has no parent. moveToTop function is ignored.');\n\t        return false;\n\t      }\n\t      var index = this.index;\n\t      this.parent.children.splice(index, 1);\n\t      this.parent.children.push(this);\n\t      this.parent._setChildrenIndices();\n\t      return true;\n\t    },\n\t    /**\n\t         * move node up\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean} flag is moved or not\n\t         */\n\t    moveUp: function() {\n\t      if (!this.parent) {\n\t        Konva.Util.warn('Node has no parent. moveUp function is ignored.');\n\t        return false;\n\t      }\n\t      var index = this.index,\n\t        len = this.parent.getChildren().length;\n\t      if (index < len - 1) {\n\t        this.parent.children.splice(index, 1);\n\t        this.parent.children.splice(index + 1, 0, this);\n\t        this.parent._setChildrenIndices();\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t    /**\n\t         * move node down\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    moveDown: function() {\n\t      if (!this.parent) {\n\t        Konva.Util.warn('Node has no parent. moveDown function is ignored.');\n\t        return false;\n\t      }\n\t      var index = this.index;\n\t      if (index > 0) {\n\t        this.parent.children.splice(index, 1);\n\t        this.parent.children.splice(index - 1, 0, this);\n\t        this.parent._setChildrenIndices();\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t    /**\n\t         * move node to the bottom of its siblings\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    moveToBottom: function() {\n\t      if (!this.parent) {\n\t        Konva.Util.warn(\n\t          'Node has no parent. moveToBottom function is ignored.'\n\t        );\n\t        return false;\n\t      }\n\t      var index = this.index;\n\t      if (index > 0) {\n\t        this.parent.children.splice(index, 1);\n\t        this.parent.children.unshift(this);\n\t        this.parent._setChildrenIndices();\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t    /**\n\t         * set zIndex relative to siblings\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Integer} zIndex\n\t         * @returns {Konva.Node}\n\t         */\n\t    setZIndex: function(zIndex) {\n\t      if (!this.parent) {\n\t        Konva.Util.warn('Node has no parent. zIndex parameter is ignored.');\n\t        return false;\n\t      }\n\t      var index = this.index;\n\t      this.parent.children.splice(index, 1);\n\t      this.parent.children.splice(zIndex, 0, this);\n\t      this.parent._setChildrenIndices();\n\t      return this;\n\t    },\n\t    /**\n\t         * get absolute opacity\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Number}\n\t         */\n\t    getAbsoluteOpacity: function() {\n\t      return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n\t    },\n\t    _getAbsoluteOpacity: function() {\n\t      var absOpacity = this.getOpacity();\n\t      var parent = this.getParent();\n\t      if (parent && !parent._isUnderCache) {\n\t        absOpacity *= this.getParent().getAbsoluteOpacity();\n\t      }\n\t      return absOpacity;\n\t    },\n\t    /**\n\t         * move node to another container\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Container} newContainer\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // move node from current layer into layer2\n\t         * node.moveTo(layer2);\n\t         */\n\t    moveTo: function(newContainer) {\n\t      // do nothing if new container is already parent\n\t      if (this.getParent() !== newContainer) {\n\t        // this.remove my be overrided by drag and drop\n\t        // buy we need original\n\t        (this.__originalRemove || this.remove).call(this);\n\t        newContainer.add(this);\n\t      }\n\t      return this;\n\t    },\n\t    /**\n\t         * convert Node into an object for serialization.  Returns an object.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Object}\n\t         */\n\t    toObject: function() {\n\t      var obj = {},\n\t        attrs = this.getAttrs(),\n\t        key,\n\t        val,\n\t        getter,\n\t        defaultValue;\n\t\n\t      obj.attrs = {};\n\t\n\t      for (key in attrs) {\n\t        val = attrs[key];\n\t        getter = this[key];\n\t        // remove attr value so that we can extract the default value from the getter\n\t        delete attrs[key];\n\t        defaultValue = getter ? getter.call(this) : null;\n\t        // restore attr value\n\t        attrs[key] = val;\n\t        if (defaultValue !== val) {\n\t          obj.attrs[key] = val;\n\t        }\n\t      }\n\t\n\t      obj.className = this.getClassName();\n\t      return Konva.Util._prepareToStringify(obj);\n\t    },\n\t    /**\n\t         * convert Node into a JSON string.  Returns a JSON string.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {String}}\n\t         */\n\t    toJSON: function() {\n\t      return JSON.stringify(this.toObject());\n\t    },\n\t    /**\n\t         * get parent container\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Node}\n\t         */\n\t    getParent: function() {\n\t      return this.parent;\n\t    },\n\t    /**\n\t         * get all ancestros (parent then parent of the parent, etc) of the node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} [selector] selector for search\n\t         * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n\t         * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n\t         * @returns {Array} [ancestors]\n\t         * @example\n\t         * // get one of the parent group\n\t         * var parentGroups = node.findAncestors('Group');\n\t         */\n\t    findAncestors: function(selector, includeSelf, stopNode) {\n\t      var res = [];\n\t\n\t      if (includeSelf && this._isMatch(selector)) {\n\t        res.push(this);\n\t      }\n\t      var ancestor = this.parent;\n\t      while (ancestor) {\n\t        if (ancestor === stopNode) {\n\t          return res;\n\t        }\n\t        if (ancestor._isMatch(selector)) {\n\t          res.push(ancestor);\n\t        }\n\t        ancestor = ancestor.parent;\n\t      }\n\t      return res;\n\t    },\n\t    /**\n\t         * get ancestor (parent or parent of the parent, etc) of the node that match passed selector\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} [selector] selector for search\n\t         * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n\t         * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n\t         * @returns {Konva.Node} ancestor\n\t         * @example\n\t         * // get one of the parent group\n\t         * var group = node.findAncestors('.mygroup');\n\t         */\n\t    findAncestor: function(selector, includeSelf, stopNode) {\n\t      return this.findAncestors(selector, includeSelf, stopNode)[0];\n\t    },\n\t    // is current node match passed selector?\n\t    _isMatch: function(selector) {\n\t      if (!selector) {\n\t        return false;\n\t      }\n\t      var selectorArr = selector.replace(/ /g, '').split(','),\n\t        len = selectorArr.length,\n\t        n,\n\t        sel;\n\t\n\t      for (n = 0; n < len; n++) {\n\t        sel = selectorArr[n];\n\t        if (!Konva.Util.isValidSelector(sel)) {\n\t          Konva.Util.warn(\n\t            'Selector \"' +\n\t              sel +\n\t              '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".'\n\t          );\n\t          Konva.Util.warn(\n\t            'If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".'\n\t          );\n\t          Konva.Util.warn('Konva is awesome, right?');\n\t        }\n\t        // id selector\n\t        if (sel.charAt(0) === '#') {\n\t          if (this.id() === sel.slice(1)) {\n\t            return true;\n\t          }\n\t        } else if (sel.charAt(0) === '.') {\n\t          // name selector\n\t          if (this.hasName(sel.slice(1))) {\n\t            return true;\n\t          }\n\t        } else if (this._get(sel).length !== 0) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t    /**\n\t         * get layer ancestor\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Layer}\n\t         */\n\t    getLayer: function() {\n\t      var parent = this.getParent();\n\t      return parent ? parent.getLayer() : null;\n\t    },\n\t    /**\n\t         * get stage ancestor\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Stage}\n\t         */\n\t    getStage: function() {\n\t      return this._getCache(STAGE, this._getStage);\n\t    },\n\t    _getStage: function() {\n\t      var parent = this.getParent();\n\t      if (parent) {\n\t        return parent.getStage();\n\t      } else {\n\t        return undefined;\n\t      }\n\t    },\n\t    /**\n\t         * fire event\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} eventType event type.  can be a regular event, like click, mouseover, or mouseout, or it can be a custom event, like myCustomEvent\n\t         * @param {Event} [evt] event object\n\t         * @param {Boolean} [bubble] setting the value to false, or leaving it undefined, will result in the event\n\t         *  not bubbling.  Setting the value to true will result in the event bubbling.\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // manually fire click event\n\t         * node.fire('click');\n\t         *\n\t         * // fire custom event\n\t         * node.fire('foo');\n\t         *\n\t         * // fire custom event with custom event object\n\t         * node.fire('foo', {\n\t         *   bar: 10\n\t         * });\n\t         *\n\t         * // fire click event that bubbles\n\t         * node.fire('click', null, true);\n\t         */\n\t    fire: function(eventType, evt, bubble) {\n\t      evt = evt || {};\n\t      evt.target = evt.target || this;\n\t      // bubble\n\t      if (bubble) {\n\t        this._fireAndBubble(eventType, evt);\n\t      } else {\n\t        // no bubble\n\t        this._fire(eventType, evt);\n\t      }\n\t      return this;\n\t    },\n\t    /**\n\t         * get absolute transform of the node which takes into\n\t         *  account its ancestor transforms\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Transform}\n\t         */\n\t    getAbsoluteTransform: function(top) {\n\t      // if using an argument, we can't cache the result.\n\t      if (top) {\n\t        return this._getAbsoluteTransform(top);\n\t      } else {\n\t        // if no argument, we can cache the result\n\t        return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n\t      }\n\t    },\n\t    _getAbsoluteTransform: function(top) {\n\t      var at = new Konva.Transform(),\n\t        transformsEnabled,\n\t        trans;\n\t\n\t      // start with stage and traverse downwards to self\n\t      this._eachAncestorReverse(function(node) {\n\t        transformsEnabled = node.transformsEnabled();\n\t        trans = node.getTransform();\n\t\n\t        if (transformsEnabled === 'all') {\n\t          at.multiply(trans);\n\t        } else if (transformsEnabled === 'position') {\n\t          at.translate(node.x(), node.y());\n\t        }\n\t      }, top);\n\t      return at;\n\t    },\n\t    /**\n\t         * get absolute scale of the node which takes into\n\t         *  account its ancestor scales\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Transform}\n\t         */\n\t    getAbsoluteScale: function(top) {\n\t      // if using an argument, we can't cache the result.\n\t      if (top) {\n\t        return this._getAbsoluteScale(top);\n\t      } else {\n\t        // if no argument, we can cache the result\n\t        return this._getCache(ABSOLUTE_SCALE, this._getAbsoluteScale);\n\t      }\n\t    },\n\t    _getAbsoluteScale: function(top) {\n\t      // this is special logic for caching with some shapes with shadow\n\t      var parent = this;\n\t      while (parent) {\n\t        if (parent._isUnderCache) {\n\t          top = parent;\n\t        }\n\t        parent = parent.getParent();\n\t      }\n\t\n\t      var scaleX = 1,\n\t        scaleY = 1;\n\t\n\t      // start with stage and traverse downwards to self\n\t      this._eachAncestorReverse(function(node) {\n\t        scaleX *= node.scaleX();\n\t        scaleY *= node.scaleY();\n\t      }, top);\n\t      return {\n\t        x: scaleX,\n\t        y: scaleY\n\t      };\n\t    },\n\t    /**\n\t         * get transform of the node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Transform}\n\t         */\n\t    getTransform: function() {\n\t      return this._getCache(TRANSFORM, this._getTransform);\n\t    },\n\t    _getTransform: function() {\n\t      var m = new Konva.Transform(),\n\t        x = this.getX(),\n\t        y = this.getY(),\n\t        rotation = Konva.getAngle(this.getRotation()),\n\t        scaleX = this.getScaleX(),\n\t        scaleY = this.getScaleY(),\n\t        skewX = this.getSkewX(),\n\t        skewY = this.getSkewY(),\n\t        offsetX = this.getOffsetX(),\n\t        offsetY = this.getOffsetY();\n\t\n\t      if (x !== 0 || y !== 0) {\n\t        m.translate(x, y);\n\t      }\n\t      if (rotation !== 0) {\n\t        m.rotate(rotation);\n\t      }\n\t      if (skewX !== 0 || skewY !== 0) {\n\t        m.skew(skewX, skewY);\n\t      }\n\t      if (scaleX !== 1 || scaleY !== 1) {\n\t        m.scale(scaleX, scaleY);\n\t      }\n\t      if (offsetX !== 0 || offsetY !== 0) {\n\t        m.translate(-1 * offsetX, -1 * offsetY);\n\t      }\n\t\n\t      return m;\n\t    },\n\t    /**\n\t         * clone node.  Returns a new Node instance with identical attributes.  You can also override\n\t         *  the node properties with an object literal, enabling you to use an existing node as a template\n\t         *  for another node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} obj override attrs\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // simple clone\n\t         * var clone = node.clone();\n\t         *\n\t         * // clone a node and override the x position\n\t         * var clone = rect.clone({\n\t         *   x: 5\n\t         * });\n\t         */\n\t    clone: function(obj) {\n\t      // instantiate new node\n\t      var attrs = Konva.Util.cloneObject(this.attrs),\n\t        key,\n\t        allListeners,\n\t        len,\n\t        n,\n\t        listener;\n\t      // filter black attrs\n\t      for (var i in CLONE_BLACK_LIST) {\n\t        var blockAttr = CLONE_BLACK_LIST[i];\n\t        delete attrs[blockAttr];\n\t      }\n\t      // apply attr overrides\n\t      for (key in obj) {\n\t        attrs[key] = obj[key];\n\t      }\n\t\n\t      var node = new this.constructor(attrs);\n\t      // copy over listeners\n\t      for (key in this.eventListeners) {\n\t        allListeners = this.eventListeners[key];\n\t        len = allListeners.length;\n\t        for (n = 0; n < len; n++) {\n\t          listener = allListeners[n];\n\t          /*\n\t                     * don't include konva namespaced listeners because\n\t                     *  these are generated by the constructors\n\t                     */\n\t          if (listener.name.indexOf(KONVA) < 0) {\n\t            // if listeners array doesn't exist, then create it\n\t            if (!node.eventListeners[key]) {\n\t              node.eventListeners[key] = [];\n\t            }\n\t            node.eventListeners[key].push(listener);\n\t          }\n\t        }\n\t      }\n\t      return node;\n\t    },\n\t    _toKonvaCanvas: function(config) {\n\t      config = config || {};\n\t\n\t      var stage = this.getStage(),\n\t        x = config.x || 0,\n\t        y = config.y || 0,\n\t        pixelRatio = config.pixelRatio || 1,\n\t        canvas = new Konva.SceneCanvas({\n\t          width:\n\t            config.width || this.getWidth() || (stage ? stage.getWidth() : 0),\n\t          height:\n\t            config.height ||\n\t            this.getHeight() ||\n\t            (stage ? stage.getHeight() : 0),\n\t          pixelRatio: pixelRatio\n\t        }),\n\t        context = canvas.getContext();\n\t\n\t      context.save();\n\t\n\t      if (x || y) {\n\t        context.translate(-1 * x, -1 * y);\n\t      }\n\t\n\t      this.drawScene(canvas);\n\t      context.restore();\n\t\n\t      return canvas;\n\t    },\n\t    /**\n\t         * converts node into an canvas element.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} config\n\t         * @param {Function} config.callback function executed when the composite has completed\n\t         * @param {Number} [config.x] x position of canvas section\n\t         * @param {Number} [config.y] y position of canvas section\n\t         * @param {Number} [config.width] width of canvas section\n\t         * @param {Number} [config.height] height of canvas section\n\t         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n\t         * @example\n\t         * var canvas = node.toCanvas();\n\t         */\n\t    toCanvas: function(config) {\n\t      return this._toKonvaCanvas(config)._canvas;\n\t    },\n\t    /**\n\t         * Creates a composite data URL. If MIME type is not\n\t         * specified, then \"image/png\" will result. For \"image/jpeg\", specify a quality\n\t         * level as quality (range 0.0 - 1.0)\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} config\n\t         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n\t         *  \"image/png\" is the default\n\t         * @param {Number} [config.x] x position of canvas section\n\t         * @param {Number} [config.y] y position of canvas section\n\t         * @param {Number} [config.width] width of canvas section\n\t         * @param {Number} [config.height] height of canvas section\n\t         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n\t         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n\t         *  is very high quality\n\t         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image url. Default is 1\n\t         * @returns {String}\n\t         */\n\t    toDataURL: function(config) {\n\t      config = config || {};\n\t      var mimeType = config.mimeType || null,\n\t        quality = config.quality || null;\n\t      return this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n\t    },\n\t    /**\n\t         * converts node into an image.  Since the toImage\n\t         *  method is asynchronous, a callback is required.  toImage is most commonly used\n\t         *  to cache complex drawings as an image so that they don't have to constantly be redrawn\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {Object} config\n\t         * @param {Function} config.callback function executed when the composite has completed\n\t         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n\t         *  \"image/png\" is the default\n\t         * @param {Number} [config.x] x position of canvas section\n\t         * @param {Number} [config.y] y position of canvas section\n\t         * @param {Number} [config.width] width of canvas section\n\t         * @param {Number} [config.height] height of canvas section\n\t         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n\t         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n\t         *  is very high quality\n\t         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n\t         * @example\n\t         * var image = node.toImage({\n\t         *   callback: function(img) {\n\t         *     // do stuff with img\n\t         *   }\n\t         * });\n\t         */\n\t    toImage: function(config) {\n\t      if (!config || !config.callback) {\n\t        throw 'callback required for toImage method config argument';\n\t      }\n\t      Konva.Util._getImage(this.toDataURL(config), function(img) {\n\t        config.callback(img);\n\t      });\n\t    },\n\t    setSize: function(size) {\n\t      this.setWidth(size.width);\n\t      this.setHeight(size.height);\n\t      return this;\n\t    },\n\t    getSize: function() {\n\t      return {\n\t        width: this.getWidth(),\n\t        height: this.getHeight()\n\t      };\n\t    },\n\t    getWidth: function() {\n\t      return this.attrs.width || 0;\n\t    },\n\t    getHeight: function() {\n\t      return this.attrs.height || 0;\n\t    },\n\t    /**\n\t         * get class name, which may return Stage, Layer, Group, or shape class names like Rect, Circle, Text, etc.\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {String}\n\t         */\n\t    getClassName: function() {\n\t      return this.className || this.nodeType;\n\t    },\n\t    /**\n\t         * get the node type, which may return Stage, Layer, Group, or Node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {String}\n\t         */\n\t    getType: function() {\n\t      return this.nodeType;\n\t    },\n\t    getDragDistance: function() {\n\t      // compare with undefined because we need to track 0 value\n\t      if (this.attrs.dragDistance !== undefined) {\n\t        return this.attrs.dragDistance;\n\t      } else if (this.parent) {\n\t        return this.parent.getDragDistance();\n\t      } else {\n\t        return Konva.dragDistance;\n\t      }\n\t    },\n\t    _get: function(selector) {\n\t      return this.className === selector || this.nodeType === selector\n\t        ? [this]\n\t        : [];\n\t    },\n\t    _off: function(type, name) {\n\t      var evtListeners = this.eventListeners[type],\n\t        i,\n\t        evtName;\n\t\n\t      for (i = 0; i < evtListeners.length; i++) {\n\t        evtName = evtListeners[i].name;\n\t        // the following two conditions must be true in order to remove a handler:\n\t        // 1) the current event name cannot be konva unless the event name is konva\n\t        //    this enables developers to force remove a konva specific listener for whatever reason\n\t        // 2) an event name is not specified, or if one is specified, it matches the current event name\n\t        if (\n\t          (evtName !== 'konva' || name === 'konva') &&\n\t          (!name || evtName === name)\n\t        ) {\n\t          evtListeners.splice(i, 1);\n\t          if (evtListeners.length === 0) {\n\t            delete this.eventListeners[type];\n\t            break;\n\t          }\n\t          i--;\n\t        }\n\t      }\n\t    },\n\t    _fireChangeEvent: function(attr, oldVal, newVal) {\n\t      this._fire(attr + CHANGE, {\n\t        oldVal: oldVal,\n\t        newVal: newVal\n\t      });\n\t    },\n\t    setId: function(id) {\n\t      var oldId = this.getId();\n\t\n\t      Konva._removeId(oldId);\n\t      Konva._addId(this, id);\n\t      this._setAttr(ID, id);\n\t      return this;\n\t    },\n\t    setName: function(name) {\n\t      var oldNames = (this.getName() || '').split(/\\s/g);\n\t      var newNames = (name || '').split(/\\s/g);\n\t      var subname, i;\n\t      // remove all subnames\n\t      for (i = 0; i < oldNames.length; i++) {\n\t        subname = oldNames[i];\n\t        if (newNames.indexOf(subname) === -1 && subname) {\n\t          Konva._removeName(subname, this._id);\n\t        }\n\t      }\n\t\n\t      // add new names\n\t      for (i = 0; i < newNames.length; i++) {\n\t        subname = newNames[i];\n\t        if (oldNames.indexOf(subname) === -1 && subname) {\n\t          Konva._addName(this, subname);\n\t        }\n\t      }\n\t\n\t      this._setAttr(NAME, name);\n\t      return this;\n\t    },\n\t    // naming methods\n\t    /**\n\t         * add name to node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} name\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * node.name('red');\n\t         * node.addName('selected');\n\t         * node.name(); // return 'red selected'\n\t         */\n\t    addName: function(name) {\n\t      if (!this.hasName(name)) {\n\t        var oldName = this.name();\n\t        var newName = oldName ? oldName + ' ' + name : name;\n\t        this.setName(newName);\n\t      }\n\t      return this;\n\t    },\n\t    /**\n\t         * check is node has name\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} name\n\t         * @returns {Boolean}\n\t         * @example\n\t         * node.name('red');\n\t         * node.hasName('red');   // return true\n\t         * node.hasName('selected'); // return false\n\t         */\n\t    hasName: function(name) {\n\t      var names = (this.name() || '').split(/\\s/g);\n\t      return names.indexOf(name) !== -1;\n\t    },\n\t    /**\n\t         * remove name from node\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} name\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * node.name('red selected');\n\t         * node.removeName('selected');\n\t         * node.hasName('selected'); // return false\n\t         * node.name(); // return 'red'\n\t         */\n\t    removeName: function(name) {\n\t      var names = (this.name() || '').split(/\\s/g);\n\t      var index = names.indexOf(name);\n\t      if (index !== -1) {\n\t        names.splice(index, 1);\n\t        this.setName(names.join(' '));\n\t      }\n\t      return this;\n\t    },\n\t    /**\n\t         * set attr\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @param {String} attr\n\t         * @param {*} val\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * node.setAttr('x', 5);\n\t         */\n\t    setAttr: function(attr, val) {\n\t      var method = SET + Konva.Util._capitalize(attr),\n\t        func = this[method];\n\t\n\t      if (Konva.Util._isFunction(func)) {\n\t        func.call(this, val);\n\t      } else {\n\t        // otherwise set directly\n\t        this._setAttr(attr, val);\n\t      }\n\t      return this;\n\t    },\n\t    _setAttr: function(key, val) {\n\t      var oldVal;\n\t      oldVal = this.attrs[key];\n\t      if (oldVal === val) {\n\t        return;\n\t      }\n\t      if (val === undefined || val === null) {\n\t        delete this.attrs[key];\n\t      } else {\n\t        this.attrs[key] = val;\n\t      }\n\t      this._fireChangeEvent(key, oldVal, val);\n\t    },\n\t    _setComponentAttr: function(key, component, val) {\n\t      var oldVal;\n\t      if (val !== undefined) {\n\t        oldVal = this.attrs[key];\n\t\n\t        if (!oldVal) {\n\t          // set value to default value using getAttr\n\t          this.attrs[key] = this.getAttr(key);\n\t        }\n\t\n\t        this.attrs[key][component] = val;\n\t        this._fireChangeEvent(key, oldVal, val);\n\t      }\n\t    },\n\t    _fireAndBubble: function(eventType, evt, compareShape) {\n\t      var okayToRun = true;\n\t\n\t      if (evt && this.nodeType === SHAPE) {\n\t        evt.target = this;\n\t      }\n\t\n\t      if (\n\t        eventType === MOUSEENTER &&\n\t        compareShape &&\n\t        (this._id === compareShape._id ||\n\t          (this.isAncestorOf && this.isAncestorOf(compareShape)))\n\t      ) {\n\t        okayToRun = false;\n\t      } else if (\n\t        eventType === MOUSELEAVE &&\n\t        compareShape &&\n\t        (this._id === compareShape._id ||\n\t          (this.isAncestorOf && this.isAncestorOf(compareShape)))\n\t      ) {\n\t        okayToRun = false;\n\t      }\n\t      if (okayToRun) {\n\t        this._fire(eventType, evt);\n\t\n\t        // simulate event bubbling\n\t        var stopBubble =\n\t          (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n\t          (compareShape &&\n\t            compareShape.isAncestorOf &&\n\t            compareShape.isAncestorOf(this) &&\n\t            !compareShape.isAncestorOf(this.parent));\n\t        if (\n\t          ((evt && !evt.cancelBubble) || !evt) &&\n\t          this.parent &&\n\t          this.parent.isListening() &&\n\t          !stopBubble\n\t        ) {\n\t          if (compareShape && compareShape.parent) {\n\t            this._fireAndBubble.call(\n\t              this.parent,\n\t              eventType,\n\t              evt,\n\t              compareShape.parent\n\t            );\n\t          } else {\n\t            this._fireAndBubble.call(this.parent, eventType, evt);\n\t          }\n\t        }\n\t      }\n\t    },\n\t    _fire: function(eventType, evt) {\n\t      var events = this.eventListeners[eventType],\n\t        i;\n\t\n\t      evt = evt || {};\n\t      evt.currentTarget = this;\n\t      evt.type = eventType;\n\t\n\t      if (events) {\n\t        for (i = 0; i < events.length; i++) {\n\t          events[i].handler.call(this, evt);\n\t        }\n\t      }\n\t    },\n\t    /**\n\t         * draw both scene and hit graphs.  If the node being drawn is the stage, all of the layers will be cleared and redrawn\n\t         * @method\n\t         * @memberof Konva.Node.prototype\n\t         * @returns {Konva.Node}\n\t         */\n\t    draw: function() {\n\t      this.drawScene();\n\t      this.drawHit();\n\t      return this;\n\t    }\n\t  });\n\t\n\t  /**\n\t     * create node with JSON string or an Object.  De-serializtion does not generate custom\n\t     *  shape drawing functions, images, or event handlers (this would make the\n\t     *  serialized object huge).  If your app uses custom shapes, images, and\n\t     *  event handlers (it probably does), then you need to select the appropriate\n\t     *  shapes after loading the stage and set these properties via on(), setDrawFunc(),\n\t     *  and setImage() methods\n\t     * @method\n\t     * @memberof Konva.Node\n\t     * @param {String|Object} json string or object\n\t     * @param {Element} [container] optional container dom element used only if you're\n\t     *  creating a stage node\n\t     */\n\t  Konva.Node.create = function(data, container) {\n\t    if (Konva.Util._isString(data)) {\n\t      data = JSON.parse(data);\n\t    }\n\t    return this._createNode(data, container);\n\t  };\n\t  Konva.Node._createNode = function(obj, container) {\n\t    var className = Konva.Node.prototype.getClassName.call(obj),\n\t      children = obj.children,\n\t      no,\n\t      len,\n\t      n;\n\t\n\t    // if container was passed in, add it to attrs\n\t    if (container) {\n\t      obj.attrs.container = container;\n\t    }\n\t\n\t    no = new Konva[className](obj.attrs);\n\t    if (children) {\n\t      len = children.length;\n\t      for (n = 0; n < len; n++) {\n\t        no.add(this._createNode(children[n]));\n\t      }\n\t    }\n\t\n\t    return no;\n\t  };\n\t\n\t  // =========================== add getters setters ===========================\n\t\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'position');\n\t  /**\n\t     * get/set node position relative to parent\n\t     * @name position\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Object} pos\n\t     * @param {Number} pos.x\n\t     * @param {Number} pos.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get position\n\t     * var position = node.position();\n\t     *\n\t     * // set position\n\t     * node.position({\n\t     *   x: 5\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'x', 0);\n\t\n\t  /**\n\t     * get/set x position\n\t     * @name x\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} x\n\t     * @returns {Object}\n\t     * @example\n\t     * // get x\n\t     * var x = node.x();\n\t     *\n\t     * // set x\n\t     * node.x(5);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'y', 0);\n\t\n\t  /**\n\t     * get/set y position\n\t     * @name y\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} y\n\t     * @returns {Integer}\n\t     * @example\n\t     * // get y\n\t     * var y = node.y();\n\t     *\n\t     * // set y\n\t     * node.y(5);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'globalCompositeOperation',\n\t    'source-over'\n\t  );\n\t\n\t  /**\n\t     * get/set globalCompositeOperation of a shape\n\t     * @name globalCompositeOperation\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} blur\n\t     * @returns {Number}\n\t     * @example\n\t     * // get shadow blur\n\t     * var globalCompositeOperation = shape.globalCompositeOperation();\n\t     *\n\t     * // set shadow blur\n\t     * shape.globalCompositeOperation('source-in');\n\t     */\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'opacity', 1);\n\t\n\t  /**\n\t     * get/set opacity.  Opacity values range from 0 to 1.\n\t     *  A node with an opacity of 0 is fully transparent, and a node\n\t     *  with an opacity of 1 is fully opaque\n\t     * @name opacity\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Object} opacity\n\t     * @returns {Number}\n\t     * @example\n\t     * // get opacity\n\t     * var opacity = node.opacity();\n\t     *\n\t     * // set opacity\n\t     * node.opacity(0.5);\n\t     */\n\t\n\t  Konva.Factory.addGetter(Konva.Node, 'name');\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'name');\n\t\n\t  /**\n\t     * get/set name\n\t     * @name name\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {String} name\n\t     * @returns {String}\n\t     * @example\n\t     * // get name\n\t     * var name = node.name();\n\t     *\n\t     * // set name\n\t     * node.name('foo');\n\t     *\n\t     * // also node may have multiple names (as css classes)\n\t     * node.name('foo bar');\n\t     */\n\t\n\t  Konva.Factory.addGetter(Konva.Node, 'id');\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'id');\n\t\n\t  /**\n\t     * get/set id. Id is global for whole page.\n\t     * @name id\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {String} id\n\t     * @returns {String}\n\t     * @example\n\t     * // get id\n\t     * var name = node.id();\n\t     *\n\t     * // set id\n\t     * node.id('foo');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'rotation', 0);\n\t\n\t  /**\n\t     * get/set rotation in degrees\n\t     * @name rotation\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} rotation\n\t     * @returns {Number}\n\t     * @example\n\t     * // get rotation in degrees\n\t     * var rotation = node.rotation();\n\t     *\n\t     * // set rotation in degrees\n\t     * node.rotation(45);\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'scale', ['x', 'y']);\n\t\n\t  /**\n\t     * get/set scale\n\t     * @name scale\n\t     * @param {Object} scale\n\t     * @param {Number} scale.x\n\t     * @param {Number} scale.y\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Object}\n\t     * @example\n\t     * // get scale\n\t     * var scale = node.scale();\n\t     *\n\t     * // set scale\n\t     * shape.scale({\n\t     *   x: 2\n\t     *   y: 3\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'scaleX', 1);\n\t\n\t  /**\n\t     * get/set scale x\n\t     * @name scaleX\n\t     * @param {Number} x\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Number}\n\t     * @example\n\t     * // get scale x\n\t     * var scaleX = node.scaleX();\n\t     *\n\t     * // set scale x\n\t     * node.scaleX(2);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'scaleY', 1);\n\t\n\t  /**\n\t     * get/set scale y\n\t     * @name scaleY\n\t     * @param {Number} y\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Number}\n\t     * @example\n\t     * // get scale y\n\t     * var scaleY = node.scaleY();\n\t     *\n\t     * // set scale y\n\t     * node.scaleY(2);\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'skew', ['x', 'y']);\n\t\n\t  /**\n\t     * get/set skew\n\t     * @name skew\n\t     * @param {Object} skew\n\t     * @param {Number} skew.x\n\t     * @param {Number} skew.y\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Object}\n\t     * @example\n\t     * // get skew\n\t     * var skew = node.skew();\n\t     *\n\t     * // set skew\n\t     * node.skew({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'skewX', 0);\n\t\n\t  /**\n\t     * get/set skew x\n\t     * @name skewX\n\t     * @param {Number} x\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Number}\n\t     * @example\n\t     * // get skew x\n\t     * var skewX = node.skewX();\n\t     *\n\t     * // set skew x\n\t     * node.skewX(3);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'skewY', 0);\n\t\n\t  /**\n\t     * get/set skew y\n\t     * @name skewY\n\t     * @param {Number} y\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @returns {Number}\n\t     * @example\n\t     * // get skew y\n\t     * var skewY = node.skewY();\n\t     *\n\t     * // set skew y\n\t     * node.skewY(3);\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'offset', ['x', 'y']);\n\t\n\t  /**\n\t     * get/set offset.  Offsets the default position and rotation point\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Object} offset\n\t     * @param {Number} offset.x\n\t     * @param {Number} offset.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get offset\n\t     * var offset = node.offset();\n\t     *\n\t     * // set offset\n\t     * node.offset({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'offsetX', 0);\n\t\n\t  /**\n\t     * get/set offset x\n\t     * @name offsetX\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get offset x\n\t     * var offsetX = node.offsetX();\n\t     *\n\t     * // set offset x\n\t     * node.offsetX(3);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'offsetY', 0);\n\t\n\t  /**\n\t     * get/set offset y\n\t     * @name offsetY\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get offset y\n\t     * var offsetY = node.offsetY();\n\t     *\n\t     * // set offset y\n\t     * node.offsetY(3);\n\t     */\n\t\n\t  Konva.Factory.addSetter(Konva.Node, 'dragDistance');\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'dragDistance');\n\t\n\t  /**\n\t     * get/set drag distance\n\t     * @name dragDistance\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} distance\n\t     * @returns {Number}\n\t     * @example\n\t     * // get drag distance\n\t     * var dragDistance = node.dragDistance();\n\t     *\n\t     * // set distance\n\t     * // node starts dragging only if pointer moved more then 3 pixels\n\t     * node.dragDistance(3);\n\t     * // or set globally\n\t     * Konva.dragDistance = 3;\n\t     */\n\t\n\t  Konva.Factory.addSetter(Konva.Node, 'width', 0);\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'width');\n\t  /**\n\t     * get/set width\n\t     * @name width\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} width\n\t     * @returns {Number}\n\t     * @example\n\t     * // get width\n\t     * var width = node.width();\n\t     *\n\t     * // set width\n\t     * node.width(100);\n\t     */\n\t\n\t  Konva.Factory.addSetter(Konva.Node, 'height', 0);\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'height');\n\t  /**\n\t     * get/set height\n\t     * @name height\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Number} height\n\t     * @returns {Number}\n\t     * @example\n\t     * // get height\n\t     * var height = node.height();\n\t     *\n\t     * // set height\n\t     * node.height(100);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'listening', 'inherit');\n\t  /**\n\t     * get/set listenig attr.  If you need to determine if a node is listening or not\n\t     *   by taking into account its parents, use the isListening() method\n\t     * @name listening\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Boolean|String} listening Can be \"inherit\", true, or false.  The default is \"inherit\".\n\t     * @returns {Boolean|String}\n\t     * @example\n\t     * // get listening attr\n\t     * var listening = node.listening();\n\t     *\n\t     * // stop listening for events\n\t     * node.listening(false);\n\t     *\n\t     * // listen for events\n\t     * node.listening(true);\n\t     *\n\t     * // listen to events according to the parent\n\t     * node.listening('inherit');\n\t     */\n\t\n\t  /**\n\t      * get/set preventDefault\n\t      * By default all shapes will prevent default behaviour\n\t      * of a browser on a pointer move or tap.\n\t      * that will prevent native scrolling when you are trying to drag&drop a node\n\t      * but sometimes you may need to enable default actions\n\t      * in that case you can set the property to false\n\t      * @name preventDefault\n\t      * @method\n\t      * @memberof Konva.Node.prototype\n\t      * @param {Number} preventDefault\n\t      * @returns {Number}\n\t      * @example\n\t      * // get preventDefault\n\t      * var shouldPrevent = shape.preventDefault();\n\t      *\n\t      * // set preventDefault\n\t      * shape.preventDefault(false);\n\t      */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'preventDefault', true);\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'filters', undefined, function(\n\t    val\n\t  ) {\n\t    this._filterUpToDate = false;\n\t    return val;\n\t  });\n\t  /**\n\t     * get/set filters.  Filters are applied to cached canvases\n\t     * @name filters\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Array} filters array of filters\n\t     * @returns {Array}\n\t     * @example\n\t     * // get filters\n\t     * var filters = node.filters();\n\t     *\n\t     * // set a single filter\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Blur]);\n\t     *\n\t     * // set multiple filters\n\t     * node.cache();\n\t     * node.filters([\n\t     *   Konva.Filters.Blur,\n\t     *   Konva.Filters.Sepia,\n\t     *   Konva.Filters.Invert\n\t     * ]);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'visible', 'inherit');\n\t  /**\n\t     * get/set visible attr.  Can be \"inherit\", true, or false.  The default is \"inherit\".\n\t     *   If you need to determine if a node is visible or not\n\t     *   by taking into account its parents, use the isVisible() method\n\t     * @name visible\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Boolean|String} visible\n\t     * @returns {Boolean|String}\n\t     * @example\n\t     * // get visible attr\n\t     * var visible = node.visible();\n\t     *\n\t     * // make invisible\n\t     * node.visible(false);\n\t     *\n\t     * // make visible\n\t     * node.visible(true);\n\t     *\n\t     * // make visible according to the parent\n\t     * node.visible('inherit');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'transformsEnabled', 'all');\n\t\n\t  /**\n\t     * get/set transforms that are enabled.  Can be \"all\", \"none\", or \"position\".  The default\n\t     *  is \"all\"\n\t     * @name transformsEnabled\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {String} enabled\n\t     * @returns {String}\n\t     * @example\n\t     * // enable position transform only to improve draw performance\n\t     * node.transformsEnabled('position');\n\t     *\n\t     * // enable all transforms\n\t     * node.transformsEnabled('all');\n\t     */\n\t\n\t  /**\n\t     * get/set node size\n\t     * @name size\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Object} size\n\t     * @param {Number} size.width\n\t     * @param {Number} size.height\n\t     * @returns {Object}\n\t     * @example\n\t     * // get node size\n\t     * var size = node.size();\n\t     * var x = size.x;\n\t     * var y = size.y;\n\t     *\n\t     * // set size\n\t     * node.size({\n\t     *   width: 100,\n\t     *   height: 200\n\t     * });\n\t     */\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'size');\n\t\n\t  Konva.Factory.backCompat(Konva.Node, {\n\t    rotateDeg: 'rotate',\n\t    setRotationDeg: 'setRotation',\n\t    getRotationDeg: 'getRotation'\n\t  });\n\t\n\t  Konva.Collection.mapMethods(Konva.Node);\n\t})(Konva);\n\t\n\t(function() {\r\n\t  'use strict';\r\n\t  /**\r\n\t    * Grayscale Filter\r\n\t    * @function\r\n\t    * @memberof Konva.Filters\r\n\t    * @param {Object} imageData\r\n\t    * @example\r\n\t    * node.cache();\r\n\t    * node.filters([Konva.Filters.Grayscale]);\r\n\t    */\r\n\t  Konva.Filters.Grayscale = function(imageData) {\r\n\t    var data = imageData.data, len = data.length, i, brightness;\r\n\t\r\n\t    for (i = 0; i < len; i += 4) {\r\n\t      brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\r\n\t      // red\r\n\t      data[i] = brightness;\r\n\t      // green\r\n\t      data[i + 1] = brightness;\r\n\t      // blue\r\n\t      data[i + 2] = brightness;\r\n\t    }\r\n\t  };\r\n\t})();\r\n\t\n\t(function(Konva) {\n\t  'use strict';\n\t  /**\n\t     * Brighten Filter.\n\t     * @function\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Brighten]);\n\t     * node.brightness(0.8);\n\t     */\n\t  Konva.Filters.Brighten = function(imageData) {\n\t    var brightness = this.brightness() * 255,\n\t      data = imageData.data,\n\t      len = data.length,\n\t      i;\n\t\n\t    for (i = 0; i < len; i += 4) {\n\t      // red\n\t      data[i] += brightness;\n\t      // green\n\t      data[i + 1] += brightness;\n\t      // blue\n\t      data[i + 2] += brightness;\n\t    }\n\t  };\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'brightness',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set filter brightness.  The brightness is a number between -1 and 1.&nbsp; Positive values\n\t    *  brighten the pixels and negative values darken them. Use with {@link Konva.Filters.Brighten} filter.\n\t    * @name brightness\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} brightness value between -1 and 1\n\t    * @returns {Number}\n\t    */\n\t})(Konva);\n\t\n\t(function() {\r\n\t  'use strict';\r\n\t  /**\r\n\t    * Invert Filter\r\n\t    * @function\r\n\t    * @memberof Konva.Filters\r\n\t    * @param {Object} imageData\r\n\t    * @example\r\n\t    * node.cache();\r\n\t    * node.filters([Konva.Filters.Invert]);\r\n\t    */\r\n\t  Konva.Filters.Invert = function(imageData) {\r\n\t    var data = imageData.data, len = data.length, i;\r\n\t\r\n\t    for (i = 0; i < len; i += 4) {\r\n\t      // red\r\n\t      data[i] = 255 - data[i];\r\n\t      // green\r\n\t      data[i + 1] = 255 - data[i + 1];\r\n\t      // blue\r\n\t      data[i + 2] = 255 - data[i + 2];\r\n\t    }\r\n\t  };\r\n\t})();\r\n\t\n\t/*\n\t the Gauss filter\n\t master repo: https://github.com/pavelpower/kineticjsGaussFilter\n\t*/\n\t(function(Konva) {\n\t  'use strict';\n\t  /*\n\t\n\t     StackBlur - a fast almost Gaussian Blur For Canvas\n\t\n\t     Version:   0.5\n\t     Author:    Mario Klingemann\n\t     Contact:   mario@quasimondo.com\n\t     Website:   http://www.quasimondo.com/StackBlurForCanvas\n\t     Twitter:   @quasimondo\n\t\n\t     In case you find this class useful - especially in commercial projects -\n\t     I am not totally unhappy for a small donation to my PayPal account\n\t     mario@quasimondo.de\n\t\n\t     Or support me on flattr:\n\t     https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\t\n\t     Copyright (c) 2010 Mario Klingemann\n\t\n\t     Permission is hereby granted, free of charge, to any person\n\t     obtaining a copy of this software and associated documentation\n\t     files (the \"Software\"), to deal in the Software without\n\t     restriction, including without limitation the rights to use,\n\t     copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t     copies of the Software, and to permit persons to whom the\n\t     Software is furnished to do so, subject to the following\n\t     conditions:\n\t\n\t     The above copyright notice and this permission notice shall be\n\t     included in all copies or substantial portions of the Software.\n\t\n\t     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t     OTHER DEALINGS IN THE SOFTWARE.\n\t     */\n\t\n\t  function BlurStack() {\n\t    this.r = 0;\n\t    this.g = 0;\n\t    this.b = 0;\n\t    this.a = 0;\n\t    this.next = null;\n\t  }\n\t\n\t  var mul_table = [\n\t    512,\n\t    512,\n\t    456,\n\t    512,\n\t    328,\n\t    456,\n\t    335,\n\t    512,\n\t    405,\n\t    328,\n\t    271,\n\t    456,\n\t    388,\n\t    335,\n\t    292,\n\t    512,\n\t    454,\n\t    405,\n\t    364,\n\t    328,\n\t    298,\n\t    271,\n\t    496,\n\t    456,\n\t    420,\n\t    388,\n\t    360,\n\t    335,\n\t    312,\n\t    292,\n\t    273,\n\t    512,\n\t    482,\n\t    454,\n\t    428,\n\t    405,\n\t    383,\n\t    364,\n\t    345,\n\t    328,\n\t    312,\n\t    298,\n\t    284,\n\t    271,\n\t    259,\n\t    496,\n\t    475,\n\t    456,\n\t    437,\n\t    420,\n\t    404,\n\t    388,\n\t    374,\n\t    360,\n\t    347,\n\t    335,\n\t    323,\n\t    312,\n\t    302,\n\t    292,\n\t    282,\n\t    273,\n\t    265,\n\t    512,\n\t    497,\n\t    482,\n\t    468,\n\t    454,\n\t    441,\n\t    428,\n\t    417,\n\t    405,\n\t    394,\n\t    383,\n\t    373,\n\t    364,\n\t    354,\n\t    345,\n\t    337,\n\t    328,\n\t    320,\n\t    312,\n\t    305,\n\t    298,\n\t    291,\n\t    284,\n\t    278,\n\t    271,\n\t    265,\n\t    259,\n\t    507,\n\t    496,\n\t    485,\n\t    475,\n\t    465,\n\t    456,\n\t    446,\n\t    437,\n\t    428,\n\t    420,\n\t    412,\n\t    404,\n\t    396,\n\t    388,\n\t    381,\n\t    374,\n\t    367,\n\t    360,\n\t    354,\n\t    347,\n\t    341,\n\t    335,\n\t    329,\n\t    323,\n\t    318,\n\t    312,\n\t    307,\n\t    302,\n\t    297,\n\t    292,\n\t    287,\n\t    282,\n\t    278,\n\t    273,\n\t    269,\n\t    265,\n\t    261,\n\t    512,\n\t    505,\n\t    497,\n\t    489,\n\t    482,\n\t    475,\n\t    468,\n\t    461,\n\t    454,\n\t    447,\n\t    441,\n\t    435,\n\t    428,\n\t    422,\n\t    417,\n\t    411,\n\t    405,\n\t    399,\n\t    394,\n\t    389,\n\t    383,\n\t    378,\n\t    373,\n\t    368,\n\t    364,\n\t    359,\n\t    354,\n\t    350,\n\t    345,\n\t    341,\n\t    337,\n\t    332,\n\t    328,\n\t    324,\n\t    320,\n\t    316,\n\t    312,\n\t    309,\n\t    305,\n\t    301,\n\t    298,\n\t    294,\n\t    291,\n\t    287,\n\t    284,\n\t    281,\n\t    278,\n\t    274,\n\t    271,\n\t    268,\n\t    265,\n\t    262,\n\t    259,\n\t    257,\n\t    507,\n\t    501,\n\t    496,\n\t    491,\n\t    485,\n\t    480,\n\t    475,\n\t    470,\n\t    465,\n\t    460,\n\t    456,\n\t    451,\n\t    446,\n\t    442,\n\t    437,\n\t    433,\n\t    428,\n\t    424,\n\t    420,\n\t    416,\n\t    412,\n\t    408,\n\t    404,\n\t    400,\n\t    396,\n\t    392,\n\t    388,\n\t    385,\n\t    381,\n\t    377,\n\t    374,\n\t    370,\n\t    367,\n\t    363,\n\t    360,\n\t    357,\n\t    354,\n\t    350,\n\t    347,\n\t    344,\n\t    341,\n\t    338,\n\t    335,\n\t    332,\n\t    329,\n\t    326,\n\t    323,\n\t    320,\n\t    318,\n\t    315,\n\t    312,\n\t    310,\n\t    307,\n\t    304,\n\t    302,\n\t    299,\n\t    297,\n\t    294,\n\t    292,\n\t    289,\n\t    287,\n\t    285,\n\t    282,\n\t    280,\n\t    278,\n\t    275,\n\t    273,\n\t    271,\n\t    269,\n\t    267,\n\t    265,\n\t    263,\n\t    261,\n\t    259\n\t  ];\n\t\n\t  var shg_table = [\n\t    9,\n\t    11,\n\t    12,\n\t    13,\n\t    13,\n\t    14,\n\t    14,\n\t    15,\n\t    15,\n\t    15,\n\t    15,\n\t    16,\n\t    16,\n\t    16,\n\t    16,\n\t    17,\n\t    17,\n\t    17,\n\t    17,\n\t    17,\n\t    17,\n\t    17,\n\t    18,\n\t    18,\n\t    18,\n\t    18,\n\t    18,\n\t    18,\n\t    18,\n\t    18,\n\t    18,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    19,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    20,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    21,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    22,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    23,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24,\n\t    24\n\t  ];\n\t\n\t  function filterGaussBlurRGBA(imageData, radius) {\n\t    var pixels = imageData.data,\n\t      width = imageData.width,\n\t      height = imageData.height;\n\t\n\t    var x,\n\t      y,\n\t      i,\n\t      p,\n\t      yp,\n\t      yi,\n\t      yw,\n\t      r_sum,\n\t      g_sum,\n\t      b_sum,\n\t      a_sum,\n\t      r_out_sum,\n\t      g_out_sum,\n\t      b_out_sum,\n\t      a_out_sum,\n\t      r_in_sum,\n\t      g_in_sum,\n\t      b_in_sum,\n\t      a_in_sum,\n\t      pr,\n\t      pg,\n\t      pb,\n\t      pa,\n\t      rbs;\n\t\n\t    var div = radius + radius + 1,\n\t      widthMinus1 = width - 1,\n\t      heightMinus1 = height - 1,\n\t      radiusPlus1 = radius + 1,\n\t      sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2,\n\t      stackStart = new BlurStack(),\n\t      stackEnd = null,\n\t      stack = stackStart,\n\t      stackIn = null,\n\t      stackOut = null,\n\t      mul_sum = mul_table[radius],\n\t      shg_sum = shg_table[radius];\n\t\n\t    for (i = 1; i < div; i++) {\n\t      stack = stack.next = new BlurStack();\n\t      if (i === radiusPlus1) {\n\t        stackEnd = stack;\n\t      }\n\t    }\n\t\n\t    stack.next = stackStart;\n\t\n\t    yw = yi = 0;\n\t\n\t    for (y = 0; y < height; y++) {\n\t      r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n\t\n\t      r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n\t      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n\t      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n\t      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\t\n\t      r_sum += sumFactor * pr;\n\t      g_sum += sumFactor * pg;\n\t      b_sum += sumFactor * pb;\n\t      a_sum += sumFactor * pa;\n\t\n\t      stack = stackStart;\n\t\n\t      for (i = 0; i < radiusPlus1; i++) {\n\t        stack.r = pr;\n\t        stack.g = pg;\n\t        stack.b = pb;\n\t        stack.a = pa;\n\t        stack = stack.next;\n\t      }\n\t\n\t      for (i = 1; i < radiusPlus1; i++) {\n\t        p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n\t        r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n\t        g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n\t        b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n\t        a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n\t\n\t        r_in_sum += pr;\n\t        g_in_sum += pg;\n\t        b_in_sum += pb;\n\t        a_in_sum += pa;\n\t\n\t        stack = stack.next;\n\t      }\n\t\n\t      stackIn = stackStart;\n\t      stackOut = stackEnd;\n\t      for (x = 0; x < width; x++) {\n\t        pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n\t        if (pa !== 0) {\n\t          pa = 255 / pa;\n\t          pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n\t          pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n\t          pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n\t        } else {\n\t          pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n\t        }\n\t\n\t        r_sum -= r_out_sum;\n\t        g_sum -= g_out_sum;\n\t        b_sum -= b_out_sum;\n\t        a_sum -= a_out_sum;\n\t\n\t        r_out_sum -= stackIn.r;\n\t        g_out_sum -= stackIn.g;\n\t        b_out_sum -= stackIn.b;\n\t        a_out_sum -= stackIn.a;\n\t\n\t        p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n\t\n\t        r_in_sum += stackIn.r = pixels[p];\n\t        g_in_sum += stackIn.g = pixels[p + 1];\n\t        b_in_sum += stackIn.b = pixels[p + 2];\n\t        a_in_sum += stackIn.a = pixels[p + 3];\n\t\n\t        r_sum += r_in_sum;\n\t        g_sum += g_in_sum;\n\t        b_sum += b_in_sum;\n\t        a_sum += a_in_sum;\n\t\n\t        stackIn = stackIn.next;\n\t\n\t        r_out_sum += pr = stackOut.r;\n\t        g_out_sum += pg = stackOut.g;\n\t        b_out_sum += pb = stackOut.b;\n\t        a_out_sum += pa = stackOut.a;\n\t\n\t        r_in_sum -= pr;\n\t        g_in_sum -= pg;\n\t        b_in_sum -= pb;\n\t        a_in_sum -= pa;\n\t\n\t        stackOut = stackOut.next;\n\t\n\t        yi += 4;\n\t      }\n\t      yw += width;\n\t    }\n\t\n\t    for (x = 0; x < width; x++) {\n\t      g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n\t\n\t      yi = x << 2;\n\t      r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n\t      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n\t      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n\t      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\t\n\t      r_sum += sumFactor * pr;\n\t      g_sum += sumFactor * pg;\n\t      b_sum += sumFactor * pb;\n\t      a_sum += sumFactor * pa;\n\t\n\t      stack = stackStart;\n\t\n\t      for (i = 0; i < radiusPlus1; i++) {\n\t        stack.r = pr;\n\t        stack.g = pg;\n\t        stack.b = pb;\n\t        stack.a = pa;\n\t        stack = stack.next;\n\t      }\n\t\n\t      yp = width;\n\t\n\t      for (i = 1; i <= radius; i++) {\n\t        yi = (yp + x) << 2;\n\t\n\t        r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n\t        g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n\t        b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n\t        a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n\t\n\t        r_in_sum += pr;\n\t        g_in_sum += pg;\n\t        b_in_sum += pb;\n\t        a_in_sum += pa;\n\t\n\t        stack = stack.next;\n\t\n\t        if (i < heightMinus1) {\n\t          yp += width;\n\t        }\n\t      }\n\t\n\t      yi = x;\n\t      stackIn = stackStart;\n\t      stackOut = stackEnd;\n\t      for (y = 0; y < height; y++) {\n\t        p = yi << 2;\n\t        pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n\t        if (pa > 0) {\n\t          pa = 255 / pa;\n\t          pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n\t          pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n\t          pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n\t        } else {\n\t          pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n\t        }\n\t\n\t        r_sum -= r_out_sum;\n\t        g_sum -= g_out_sum;\n\t        b_sum -= b_out_sum;\n\t        a_sum -= a_out_sum;\n\t\n\t        r_out_sum -= stackIn.r;\n\t        g_out_sum -= stackIn.g;\n\t        b_out_sum -= stackIn.b;\n\t        a_out_sum -= stackIn.a;\n\t\n\t        p =\n\t          (x +\n\t            ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) *\n\t              width) <<\n\t          2;\n\t\n\t        r_sum += r_in_sum += stackIn.r = pixels[p];\n\t        g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n\t        b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n\t        a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n\t\n\t        stackIn = stackIn.next;\n\t\n\t        r_out_sum += pr = stackOut.r;\n\t        g_out_sum += pg = stackOut.g;\n\t        b_out_sum += pb = stackOut.b;\n\t        a_out_sum += pa = stackOut.a;\n\t\n\t        r_in_sum -= pr;\n\t        g_in_sum -= pg;\n\t        b_in_sum -= pb;\n\t        a_in_sum -= pa;\n\t\n\t        stackOut = stackOut.next;\n\t\n\t        yi += width;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t     * Blur Filter\n\t     * @function\n\t     * @name Blur\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Blur]);\n\t     * node.blurRadius(10);\n\t     */\n\t  Konva.Filters.Blur = function Blur(imageData) {\n\t    var radius = Math.round(this.blurRadius());\n\t\n\t    if (radius > 0) {\n\t      filterGaussBlurRGBA(imageData, radius);\n\t    }\n\t  };\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'blurRadius',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t\n\t  /**\n\t    * get/set blur radius. Use with {@link Konva.Filters.Blur} filter\n\t    * @name blurRadius\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} radius\n\t    * @returns {Integer}\n\t    */\n\t})(Konva);\n\t\n\t/*eslint-disable  max-depth */\n\t(function() {\n\t  'use strict';\n\t  function pixelAt(idata, x, y) {\n\t    var idx = (y * idata.width + x) * 4;\n\t    var d = [];\n\t    d.push(\n\t      idata.data[idx++],\n\t      idata.data[idx++],\n\t      idata.data[idx++],\n\t      idata.data[idx++]\n\t    );\n\t    return d;\n\t  }\n\t\n\t  function rgbDistance(p1, p2) {\n\t    return Math.sqrt(\n\t      Math.pow(p1[0] - p2[0], 2) +\n\t        Math.pow(p1[1] - p2[1], 2) +\n\t        Math.pow(p1[2] - p2[2], 2)\n\t    );\n\t  }\n\t\n\t  function rgbMean(pTab) {\n\t    var m = [0, 0, 0];\n\t\n\t    for (var i = 0; i < pTab.length; i++) {\n\t      m[0] += pTab[i][0];\n\t      m[1] += pTab[i][1];\n\t      m[2] += pTab[i][2];\n\t    }\n\t\n\t    m[0] /= pTab.length;\n\t    m[1] /= pTab.length;\n\t    m[2] /= pTab.length;\n\t\n\t    return m;\n\t  }\n\t\n\t  function backgroundMask(idata, threshold) {\n\t    var rgbv_no = pixelAt(idata, 0, 0);\n\t    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n\t    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n\t    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n\t\n\t    var thres = threshold || 10;\n\t    if (\n\t      rgbDistance(rgbv_no, rgbv_ne) < thres &&\n\t      rgbDistance(rgbv_ne, rgbv_se) < thres &&\n\t      rgbDistance(rgbv_se, rgbv_so) < thres &&\n\t      rgbDistance(rgbv_so, rgbv_no) < thres\n\t    ) {\n\t      // Mean color\n\t      var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n\t\n\t      // Mask based on color distance\n\t      var mask = [];\n\t      for (var i = 0; i < idata.width * idata.height; i++) {\n\t        var d = rgbDistance(mean, [\n\t          idata.data[i * 4],\n\t          idata.data[i * 4 + 1],\n\t          idata.data[i * 4 + 2]\n\t        ]);\n\t        mask[i] = d < thres ? 0 : 255;\n\t      }\n\t\n\t      return mask;\n\t    }\n\t  }\n\t\n\t  function applyMask(idata, mask) {\n\t    for (var i = 0; i < idata.width * idata.height; i++) {\n\t      idata.data[4 * i + 3] = mask[i];\n\t    }\n\t  }\n\t\n\t  function erodeMask(mask, sw, sh) {\n\t    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n\t    var side = Math.round(Math.sqrt(weights.length));\n\t    var halfSide = Math.floor(side / 2);\n\t\n\t    var maskResult = [];\n\t    for (var y = 0; y < sh; y++) {\n\t      for (var x = 0; x < sw; x++) {\n\t        var so = y * sw + x;\n\t        var a = 0;\n\t        for (var cy = 0; cy < side; cy++) {\n\t          for (var cx = 0; cx < side; cx++) {\n\t            var scy = y + cy - halfSide;\n\t            var scx = x + cx - halfSide;\n\t\n\t            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n\t              var srcOff = scy * sw + scx;\n\t              var wt = weights[cy * side + cx];\n\t\n\t              a += mask[srcOff] * wt;\n\t            }\n\t          }\n\t        }\n\t\n\t        maskResult[so] = a === 255 * 8 ? 255 : 0;\n\t      }\n\t    }\n\t\n\t    return maskResult;\n\t  }\n\t\n\t  function dilateMask(mask, sw, sh) {\n\t    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n\t    var side = Math.round(Math.sqrt(weights.length));\n\t    var halfSide = Math.floor(side / 2);\n\t\n\t    var maskResult = [];\n\t    for (var y = 0; y < sh; y++) {\n\t      for (var x = 0; x < sw; x++) {\n\t        var so = y * sw + x;\n\t        var a = 0;\n\t        for (var cy = 0; cy < side; cy++) {\n\t          for (var cx = 0; cx < side; cx++) {\n\t            var scy = y + cy - halfSide;\n\t            var scx = x + cx - halfSide;\n\t\n\t            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n\t              var srcOff = scy * sw + scx;\n\t              var wt = weights[cy * side + cx];\n\t\n\t              a += mask[srcOff] * wt;\n\t            }\n\t          }\n\t        }\n\t\n\t        maskResult[so] = a >= 255 * 4 ? 255 : 0;\n\t      }\n\t    }\n\t\n\t    return maskResult;\n\t  }\n\t\n\t  function smoothEdgeMask(mask, sw, sh) {\n\t    var weights = [\n\t      1 / 9,\n\t      1 / 9,\n\t      1 / 9,\n\t      1 / 9,\n\t      1 / 9,\n\t      1 / 9,\n\t      1 / 9,\n\t      1 / 9,\n\t      1 / 9\n\t    ];\n\t    var side = Math.round(Math.sqrt(weights.length));\n\t    var halfSide = Math.floor(side / 2);\n\t\n\t    var maskResult = [];\n\t    for (var y = 0; y < sh; y++) {\n\t      for (var x = 0; x < sw; x++) {\n\t        var so = y * sw + x;\n\t        var a = 0;\n\t        for (var cy = 0; cy < side; cy++) {\n\t          for (var cx = 0; cx < side; cx++) {\n\t            var scy = y + cy - halfSide;\n\t            var scx = x + cx - halfSide;\n\t\n\t            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n\t              var srcOff = scy * sw + scx;\n\t              var wt = weights[cy * side + cx];\n\t\n\t              a += mask[srcOff] * wt;\n\t            }\n\t          }\n\t        }\n\t\n\t        maskResult[so] = a;\n\t      }\n\t    }\n\t\n\t    return maskResult;\n\t  }\n\t\n\t  /**\n\t\t * Mask Filter\n\t\t * @function\n\t\t * @name Mask\n\t\t * @memberof Konva.Filters\n\t\t * @param {Object} imageData\n\t\t * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Mask]);\n\t     * node.threshold(200);\n\t\t */\n\t  Konva.Filters.Mask = function(imageData) {\n\t    // Detect pixels close to the background color\n\t    var threshold = this.threshold(),\n\t      mask = backgroundMask(imageData, threshold);\n\t    if (mask) {\n\t      // Erode\n\t      mask = erodeMask(mask, imageData.width, imageData.height);\n\t\n\t      // Dilate\n\t      mask = dilateMask(mask, imageData.width, imageData.height);\n\t\n\t      // Gradient\n\t      mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n\t\n\t      // Apply mask\n\t      applyMask(imageData, mask);\n\t\n\t      // todo : Update hit region function according to mask\n\t    }\n\t\n\t    return imageData;\n\t  };\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'threshold',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * RGB Filter\n\t     * @function\n\t     * @name RGB\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @author ippo615\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.RGB]);\n\t     * node.blue(120);\n\t     * node.green(200);\n\t     */\n\t  Konva.Filters.RGB = function(imageData) {\n\t    var data = imageData.data,\n\t      nPixels = data.length,\n\t      red = this.red(),\n\t      green = this.green(),\n\t      blue = this.blue(),\n\t      i,\n\t      brightness;\n\t\n\t    for (i = 0; i < nPixels; i += 4) {\n\t      brightness =\n\t        (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n\t      data[i] = brightness * red; // r\n\t      data[i + 1] = brightness * green; // g\n\t      data[i + 2] = brightness * blue; // b\n\t      data[i + 3] = data[i + 3]; // alpha\n\t    }\n\t  };\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n\t    this._filterUpToDate = false;\n\t    if (val > 255) {\n\t      return 255;\n\t    } else if (val < 0) {\n\t      return 0;\n\t    } else {\n\t      return Math.round(val);\n\t    }\n\t  });\n\t  /**\n\t    * get/set filter red value. Use with {@link Konva.Filters.RGB} filter.\n\t    * @name red\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} red value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n\t    this._filterUpToDate = false;\n\t    if (val > 255) {\n\t      return 255;\n\t    } else if (val < 0) {\n\t      return 0;\n\t    } else {\n\t      return Math.round(val);\n\t    }\n\t  });\n\t  /**\n\t    * get/set filter green value. Use with {@link Konva.Filters.RGB} filter.\n\t    * @name green\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} green value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'blue',\n\t    0,\n\t    Konva.Validators.RGBComponent,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set filter blue value. Use with {@link Konva.Filters.RGB} filter.\n\t    * @name blue\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} blue value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * RGBA Filter\n\t     * @function\n\t     * @name RGBA\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @author codefo\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.RGBA]);\n\t     * node.blue(120);\n\t     * node.green(200);\n\t     * node.alpha(0.3);\n\t     */\n\t  Konva.Filters.RGBA = function(imageData) {\n\t    var data = imageData.data,\n\t      nPixels = data.length,\n\t      red = this.red(),\n\t      green = this.green(),\n\t      blue = this.blue(),\n\t      alpha = this.alpha(),\n\t      i,\n\t      ia;\n\t\n\t    for (i = 0; i < nPixels; i += 4) {\n\t      ia = 1 - alpha;\n\t\n\t      data[i] = red * alpha + data[i] * ia; // r\n\t      data[i + 1] = green * alpha + data[i + 1] * ia; // g\n\t      data[i + 2] = blue * alpha + data[i + 2] * ia; // b\n\t    }\n\t  };\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n\t    this._filterUpToDate = false;\n\t    if (val > 255) {\n\t      return 255;\n\t    } else if (val < 0) {\n\t      return 0;\n\t    } else {\n\t      return Math.round(val);\n\t    }\n\t  });\n\t  /**\n\t    * get/set filter red value. Use with {@link Konva.Filters.RGBA} filter.\n\t    * @name red\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} red value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n\t    this._filterUpToDate = false;\n\t    if (val > 255) {\n\t      return 255;\n\t    } else if (val < 0) {\n\t      return 0;\n\t    } else {\n\t      return Math.round(val);\n\t    }\n\t  });\n\t  /**\n\t    * get/set filter green value. Use with {@link Konva.Filters.RGBA} filter.\n\t    * @name green\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} green value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'blue',\n\t    0,\n\t    Konva.Validators.RGBComponent,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set filter blue value. Use with {@link Konva.Filters.RGBA} filter.\n\t    * @name blue\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} blue value between 0 and 255\n\t    * @returns {Integer}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'alpha', 1, function(val) {\n\t    this._filterUpToDate = false;\n\t    if (val > 1) {\n\t      return 1;\n\t    } else if (val < 0) {\n\t      return 0;\n\t    } else {\n\t      return val;\n\t    }\n\t  });\n\t  /**\n\t     * get/set filter alpha value. Use with {@link Konva.Filters.RGBA} filter.\n\t     * @name alpha\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Float} alpha value between 0 and 1\n\t     * @returns {Float}\n\t     */\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t    * HSV Filter. Adjusts the hue, saturation and value\n\t    * @function\n\t    * @name HSV\n\t    * @memberof Konva.Filters\n\t    * @param {Object} imageData\n\t    * @author ippo615\n\t    * @example\n\t    * image.filters([Konva.Filters.HSV]);\n\t    * image.value(200);\n\t    */\n\t\n\t  Konva.Filters.HSV = function(imageData) {\n\t    var data = imageData.data,\n\t      nPixels = data.length,\n\t      v = Math.pow(2, this.value()),\n\t      s = Math.pow(2, this.saturation()),\n\t      h = Math.abs(this.hue() + 360) % 360,\n\t      i;\n\t\n\t    // Basis for the technique used:\n\t    // http://beesbuzz.biz/code/hsv_color_transforms.php\n\t    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n\t    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n\t    // H is the hue shift in degrees (0 to 360)\n\t    // vsu = V*S*cos(H*PI/180);\n\t    // vsw = V*S*sin(H*PI/180);\n\t    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n\t    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n\t    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\t\n\t    // Precompute the values in the matrix:\n\t    var vsu = v * s * Math.cos(h * Math.PI / 180),\n\t      vsw = v * s * Math.sin(h * Math.PI / 180);\n\t    // (result spot)(source spot)\n\t    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n\t      rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,\n\t      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n\t    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n\t      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n\t      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n\t    var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,\n\t      bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,\n\t      bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;\n\t\n\t    var r, g, b, a;\n\t\n\t    for (i = 0; i < nPixels; i += 4) {\n\t      r = data[i + 0];\n\t      g = data[i + 1];\n\t      b = data[i + 2];\n\t      a = data[i + 3];\n\t\n\t      data[i + 0] = rr * r + rg * g + rb * b;\n\t      data[i + 1] = gr * r + gg * g + gb * b;\n\t      data[i + 2] = br * r + bg * g + bb * b;\n\t      data[i + 3] = a; // alpha\n\t    }\n\t  };\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'hue',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n\t    * @name hue\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} hue value between 0 and 359\n\t    * @returns {Number}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'saturation',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n\t    * @name saturation\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n\t    * @returns {Number}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'value',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set hsv value. Use with {@link Konva.Filters.HSV} filter.\n\t    * @name value\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n\t    * @returns {Number}\n\t    */\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'hue',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n\t    * @name hue\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} hue value between 0 and 359\n\t    * @returns {Number}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'saturation',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n\t    * @name saturation\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n\t    * @returns {Number}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'luminance',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set hsl luminance. Use with {@link Konva.Filters.HSL} filter.\n\t    * @name value\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n\t    * @returns {Number}\n\t    */\n\t\n\t  /**\n\t    * HSL Filter. Adjusts the hue, saturation and luminance (or lightness)\n\t    * @function\n\t    * @memberof Konva.Filters\n\t    * @param {Object} imageData\n\t    * @author ippo615\n\t    * @example\n\t    * image.filters([Konva.Filters.HSL]);\n\t    * image.luminance(200);\n\t    */\n\t\n\t  Konva.Filters.HSL = function(imageData) {\n\t    var data = imageData.data,\n\t      nPixels = data.length,\n\t      v = 1,\n\t      s = Math.pow(2, this.saturation()),\n\t      h = Math.abs(this.hue() + 360) % 360,\n\t      l = this.luminance() * 127,\n\t      i;\n\t\n\t    // Basis for the technique used:\n\t    // http://beesbuzz.biz/code/hsv_color_transforms.php\n\t    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n\t    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n\t    // H is the hue shift in degrees (0 to 360)\n\t    // vsu = V*S*cos(H*PI/180);\n\t    // vsw = V*S*sin(H*PI/180);\n\t    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n\t    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n\t    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\t\n\t    // Precompute the values in the matrix:\n\t    var vsu = v * s * Math.cos(h * Math.PI / 180),\n\t      vsw = v * s * Math.sin(h * Math.PI / 180);\n\t    // (result spot)(source spot)\n\t    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n\t      rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,\n\t      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n\t    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n\t      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n\t      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n\t    var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,\n\t      bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,\n\t      bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;\n\t\n\t    var r, g, b, a;\n\t\n\t    for (i = 0; i < nPixels; i += 4) {\n\t      r = data[i + 0];\n\t      g = data[i + 1];\n\t      b = data[i + 2];\n\t      a = data[i + 3];\n\t\n\t      data[i + 0] = rr * r + rg * g + rb * b + l;\n\t      data[i + 1] = gr * r + gg * g + gb * b + l;\n\t      data[i + 2] = br * r + bg * g + bb * b + l;\n\t      data[i + 3] = a; // alpha\n\t    }\n\t  };\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Emboss Filter.\n\t     * Pixastic Lib - Emboss filter - v0.1.0\n\t     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n\t     * License: [http://www.pixastic.com/lib/license.txt]\n\t     * @function\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Emboss]);\n\t     * node.embossStrength(0.8);\n\t     * node.embossWhiteLevel(0.3);\n\t     * node.embossDirection('right');\n\t     * node.embossBlend(true);\n\t     */\n\t  Konva.Filters.Emboss = function(imageData) {\n\t    // pixastic strength is between 0 and 10.  I want it between 0 and 1\n\t    // pixastic greyLevel is between 0 and 255.  I want it between 0 and 1.  Also,\n\t    // a max value of greyLevel yields a white emboss, and the min value yields a black\n\t    // emboss.  Therefore, I changed greyLevel to whiteLevel\n\t    var strength = this.embossStrength() * 10,\n\t      greyLevel = this.embossWhiteLevel() * 255,\n\t      direction = this.embossDirection(),\n\t      blend = this.embossBlend(),\n\t      dirY = 0,\n\t      dirX = 0,\n\t      data = imageData.data,\n\t      w = imageData.width,\n\t      h = imageData.height,\n\t      w4 = w * 4,\n\t      y = h;\n\t\n\t    switch (direction) {\n\t      case 'top-left':\n\t        dirY = -1;\n\t        dirX = -1;\n\t        break;\n\t      case 'top':\n\t        dirY = -1;\n\t        dirX = 0;\n\t        break;\n\t      case 'top-right':\n\t        dirY = -1;\n\t        dirX = 1;\n\t        break;\n\t      case 'right':\n\t        dirY = 0;\n\t        dirX = 1;\n\t        break;\n\t      case 'bottom-right':\n\t        dirY = 1;\n\t        dirX = 1;\n\t        break;\n\t      case 'bottom':\n\t        dirY = 1;\n\t        dirX = 0;\n\t        break;\n\t      case 'bottom-left':\n\t        dirY = 1;\n\t        dirX = -1;\n\t        break;\n\t      case 'left':\n\t        dirY = 0;\n\t        dirX = -1;\n\t        break;\n\t      default:\n\t        Konva.Util.error('Unknown emboss direction: ' + direction);\n\t    }\n\t\n\t    do {\n\t      var offsetY = (y - 1) * w4;\n\t\n\t      var otherY = dirY;\n\t      if (y + otherY < 1) {\n\t        otherY = 0;\n\t      }\n\t      if (y + otherY > h) {\n\t        otherY = 0;\n\t      }\n\t\n\t      var offsetYOther = (y - 1 + otherY) * w * 4;\n\t\n\t      var x = w;\n\t      do {\n\t        var offset = offsetY + (x - 1) * 4;\n\t\n\t        var otherX = dirX;\n\t        if (x + otherX < 1) {\n\t          otherX = 0;\n\t        }\n\t        if (x + otherX > w) {\n\t          otherX = 0;\n\t        }\n\t\n\t        var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n\t\n\t        var dR = data[offset] - data[offsetOther];\n\t        var dG = data[offset + 1] - data[offsetOther + 1];\n\t        var dB = data[offset + 2] - data[offsetOther + 2];\n\t\n\t        var dif = dR;\n\t        var absDif = dif > 0 ? dif : -dif;\n\t\n\t        var absG = dG > 0 ? dG : -dG;\n\t        var absB = dB > 0 ? dB : -dB;\n\t\n\t        if (absG > absDif) {\n\t          dif = dG;\n\t        }\n\t        if (absB > absDif) {\n\t          dif = dB;\n\t        }\n\t\n\t        dif *= strength;\n\t\n\t        if (blend) {\n\t          var r = data[offset] + dif;\n\t          var g = data[offset + 1] + dif;\n\t          var b = data[offset + 2] + dif;\n\t\n\t          data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n\t          data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n\t          data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n\t        } else {\n\t          var grey = greyLevel - dif;\n\t          if (grey < 0) {\n\t            grey = 0;\n\t          } else if (grey > 255) {\n\t            grey = 255;\n\t          }\n\t\n\t          data[offset] = data[offset + 1] = data[offset + 2] = grey;\n\t        }\n\t      } while (--x);\n\t    } while (--y);\n\t  };\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'embossStrength',\n\t    0.5,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set emboss strength. Use with {@link Konva.Filters.Emboss} filter.\n\t    * @name embossStrength\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} level between 0 and 1.  Default is 0.5\n\t    * @returns {Number}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'embossWhiteLevel',\n\t    0.5,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set emboss white level. Use with {@link Konva.Filters.Emboss} filter.\n\t    * @name embossWhiteLevel\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} embossWhiteLevel between 0 and 1.  Default is 0.5\n\t    * @returns {Number}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'embossDirection',\n\t    'top-left',\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set emboss direction. Use with {@link Konva.Filters.Emboss} filter.\n\t    * @name embossDirection\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {String} embossDirection can be top-left, top, top-right, right, bottom-right, bottom, bottom-left or left\n\t    *   The default is top-left\n\t    * @returns {String}\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'embossBlend',\n\t    false,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t  /**\n\t    * get/set emboss blend. Use with {@link Konva.Filters.Emboss} filter.\n\t    * @name embossBlend\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Boolean} embossBlend\n\t    * @returns {Boolean}\n\t    */\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  function remap(fromValue, fromMin, fromMax, toMin, toMax) {\n\t    // Compute the range of the data\n\t    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n\t\n\t    // If either range is 0, then the value can only be mapped to 1 value\n\t    if (fromRange === 0) {\n\t      return toMin + toRange / 2;\n\t    }\n\t    if (toRange === 0) {\n\t      return toMin;\n\t    }\n\t\n\t    // (1) untranslate, (2) unscale, (3) rescale, (4) retranslate\n\t    toValue = (fromValue - fromMin) / fromRange;\n\t    toValue = toRange * toValue + toMin;\n\t\n\t    return toValue;\n\t  }\n\t\n\t  /**\n\t    * Enhance Filter. Adjusts the colors so that they span the widest\n\t    *  possible range (ie 0-255). Performs w*h pixel reads and w*h pixel\n\t    *  writes.\n\t    * @function\n\t    * @name Enhance\n\t    * @memberof Konva.Filters\n\t    * @param {Object} imageData\n\t    * @author ippo615\n\t    * @example\n\t    * node.cache();\n\t    * node.filters([Konva.Filters.Enhance]);\n\t    * node.enhance(0.4);\n\t    */\n\t  Konva.Filters.Enhance = function(imageData) {\n\t    var data = imageData.data,\n\t      nSubPixels = data.length,\n\t      rMin = data[0],\n\t      rMax = rMin,\n\t      r,\n\t      gMin = data[1],\n\t      gMax = gMin,\n\t      g,\n\t      bMin = data[2],\n\t      bMax = bMin,\n\t      b,\n\t      i;\n\t\n\t    // If we are not enhancing anything - don't do any computation\n\t    var enhanceAmount = this.enhance();\n\t    if (enhanceAmount === 0) {\n\t      return;\n\t    }\n\t\n\t    // 1st Pass - find the min and max for each channel:\n\t    for (i = 0; i < nSubPixels; i += 4) {\n\t      r = data[i + 0];\n\t      if (r < rMin) {\n\t        rMin = r;\n\t      } else if (r > rMax) {\n\t        rMax = r;\n\t      }\n\t      g = data[i + 1];\n\t      if (g < gMin) {\n\t        gMin = g;\n\t      } else if (g > gMax) {\n\t        gMax = g;\n\t      }\n\t      b = data[i + 2];\n\t      if (b < bMin) {\n\t        bMin = b;\n\t      } else if (b > bMax) {\n\t        bMax = b;\n\t      }\n\t      //a = data[i + 3];\n\t      //if (a < aMin) { aMin = a; } else\n\t      //if (a > aMax) { aMax = a; }\n\t    }\n\t\n\t    // If there is only 1 level - don't remap\n\t    if (rMax === rMin) {\n\t      rMax = 255;\n\t      rMin = 0;\n\t    }\n\t    if (gMax === gMin) {\n\t      gMax = 255;\n\t      gMin = 0;\n\t    }\n\t    if (bMax === bMin) {\n\t      bMax = 255;\n\t      bMin = 0;\n\t    }\n\t\n\t    var rMid,\n\t      rGoalMax,\n\t      rGoalMin,\n\t      gMid,\n\t      gGoalMax,\n\t      gGoalMin,\n\t      bMid,\n\t      bGoalMax,\n\t      bGoalMin;\n\t\n\t    // If the enhancement is positive - stretch the histogram\n\t    if (enhanceAmount > 0) {\n\t      rGoalMax = rMax + enhanceAmount * (255 - rMax);\n\t      rGoalMin = rMin - enhanceAmount * (rMin - 0);\n\t      gGoalMax = gMax + enhanceAmount * (255 - gMax);\n\t      gGoalMin = gMin - enhanceAmount * (gMin - 0);\n\t      bGoalMax = bMax + enhanceAmount * (255 - bMax);\n\t      bGoalMin = bMin - enhanceAmount * (bMin - 0);\n\t      // If the enhancement is negative -   compress the histogram\n\t    } else {\n\t      rMid = (rMax + rMin) * 0.5;\n\t      rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n\t      rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n\t      gMid = (gMax + gMin) * 0.5;\n\t      gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n\t      gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n\t      bMid = (bMax + bMin) * 0.5;\n\t      bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n\t      bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n\t    }\n\t\n\t    // Pass 2 - remap everything, except the alpha\n\t    for (i = 0; i < nSubPixels; i += 4) {\n\t      data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n\t      data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n\t      data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n\t      //data[i + 3] = remap(data[i + 3], aMin, aMax, aGoalMin, aGoalMax);\n\t    }\n\t  };\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'enhance',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t\n\t  /**\n\t    * get/set enhance. Use with {@link Konva.Filters.Enhance} filter.\n\t    * @name enhance\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Float} amount\n\t    * @returns {Float}\n\t    */\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Posterize Filter. Adjusts the channels so that there are no more\n\t     *  than n different values for that channel. This is also applied\n\t     *  to the alpha channel.\n\t     * @function\n\t     * @name Posterize\n\t     * @author ippo615\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Posterize]);\n\t     * node.levels(0.8); // between 0 and 1\n\t     */\n\t\n\t  Konva.Filters.Posterize = function(imageData) {\n\t    // level must be between 1 and 255\n\t    var levels = Math.round(this.levels() * 254) + 1,\n\t      data = imageData.data,\n\t      len = data.length,\n\t      scale = 255 / levels,\n\t      i;\n\t\n\t    for (i = 0; i < len; i += 1) {\n\t      data[i] = Math.floor(data[i] / scale) * scale;\n\t    }\n\t  };\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'levels',\n\t    0.5,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t\n\t  /**\n\t    * get/set levels.  Must be a number between 0 and 1.  Use with {@link Konva.Filters.Posterize} filter.\n\t    * @name levels\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Number} level between 0 and 1\n\t    * @returns {Number}\n\t    */\n\t})();\n\t\n\t(function() {\r\n\t  'use strict';\r\n\t  /**\r\n\t     * Noise Filter. Randomly adds or substracts to the color channels\r\n\t     * @function\r\n\t     * @name Noise\r\n\t     * @memberof Konva.Filters\r\n\t     * @param {Object} imageData\r\n\t     * @author ippo615\r\n\t     * @example\r\n\t     * node.cache();\r\n\t     * node.filters([Konva.Filters.Noise]);\r\n\t     * node.noise(0.8);\r\n\t     */\r\n\t  Konva.Filters.Noise = function(imageData) {\r\n\t    var amount = this.noise() * 255,\r\n\t      data = imageData.data,\r\n\t      nPixels = data.length,\r\n\t      half = amount / 2,\r\n\t      i;\r\n\t\r\n\t    for (i = 0; i < nPixels; i += 4) {\r\n\t      data[i + 0] += half - 2 * half * Math.random();\r\n\t      data[i + 1] += half - 2 * half * Math.random();\r\n\t      data[i + 2] += half - 2 * half * Math.random();\r\n\t    }\r\n\t  };\r\n\t\r\n\t  Konva.Factory.addGetterSetter(\r\n\t    Konva.Node,\r\n\t    'noise',\r\n\t    0.2,\r\n\t    null,\r\n\t    Konva.Factory.afterSetFilter\r\n\t  );\r\n\t  /**\r\n\t    * get/set noise amount.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Noise} filter.\r\n\t    * @name noise\r\n\t    * @method\r\n\t    * @memberof Konva.Node.prototype\r\n\t    * @param {Number} noise\r\n\t    * @returns {Number}\r\n\t    */\r\n\t})();\r\n\t\n\t/*eslint-disable max-depth */\r\n\t(function() {\r\n\t  'use strict';\r\n\t  /**\r\n\t     * Pixelate Filter. Averages groups of pixels and redraws\r\n\t     *  them as larger pixels\r\n\t     * @function\r\n\t     * @name Pixelate\r\n\t     * @memberof Konva.Filters\r\n\t     * @param {Object} imageData\r\n\t     * @author ippo615\r\n\t     * @example\r\n\t     * node.cache();\r\n\t     * node.filters([Konva.Filters.Pixelate]);\r\n\t     * node.pixelSize(10);\r\n\t     */\r\n\t\r\n\t  Konva.Filters.Pixelate = function(imageData) {\r\n\t    var pixelSize = Math.ceil(this.pixelSize()),\r\n\t      width = imageData.width,\r\n\t      height = imageData.height,\r\n\t      x,\r\n\t      y,\r\n\t      i,\r\n\t      //pixelsPerBin = pixelSize * pixelSize,\r\n\t      red,\r\n\t      green,\r\n\t      blue,\r\n\t      alpha,\r\n\t      nBinsX = Math.ceil(width / pixelSize),\r\n\t      nBinsY = Math.ceil(height / pixelSize),\r\n\t      xBinStart,\r\n\t      xBinEnd,\r\n\t      yBinStart,\r\n\t      yBinEnd,\r\n\t      xBin,\r\n\t      yBin,\r\n\t      pixelsInBin;\r\n\t    imageData = imageData.data;\r\n\t\r\n\t    if (pixelSize <= 0) {\r\n\t      Konva.Util.error('pixelSize value can not be <= 0');\r\n\t      return;\r\n\t    }\r\n\t\r\n\t    for (xBin = 0; xBin < nBinsX; xBin += 1) {\r\n\t      for (yBin = 0; yBin < nBinsY; yBin += 1) {\r\n\t        // Initialize the color accumlators to 0\r\n\t        red = 0;\r\n\t        green = 0;\r\n\t        blue = 0;\r\n\t        alpha = 0;\r\n\t\r\n\t        // Determine which pixels are included in this bin\r\n\t        xBinStart = xBin * pixelSize;\r\n\t        xBinEnd = xBinStart + pixelSize;\r\n\t        yBinStart = yBin * pixelSize;\r\n\t        yBinEnd = yBinStart + pixelSize;\r\n\t\r\n\t        // Add all of the pixels to this bin!\r\n\t        pixelsInBin = 0;\r\n\t        for (x = xBinStart; x < xBinEnd; x += 1) {\r\n\t          if (x >= width) {\r\n\t            continue;\r\n\t          }\r\n\t          for (y = yBinStart; y < yBinEnd; y += 1) {\r\n\t            if (y >= height) {\r\n\t              continue;\r\n\t            }\r\n\t            i = (width * y + x) * 4;\r\n\t            red += imageData[i + 0];\r\n\t            green += imageData[i + 1];\r\n\t            blue += imageData[i + 2];\r\n\t            alpha += imageData[i + 3];\r\n\t            pixelsInBin += 1;\r\n\t          }\r\n\t        }\r\n\t\r\n\t        // Make sure the channels are between 0-255\r\n\t        red = red / pixelsInBin;\r\n\t        green = green / pixelsInBin;\r\n\t        blue = blue / pixelsInBin;\r\n\t\r\n\t        // Draw this bin\r\n\t        for (x = xBinStart; x < xBinEnd; x += 1) {\r\n\t          if (x >= width) {\r\n\t            continue;\r\n\t          }\r\n\t          for (y = yBinStart; y < yBinEnd; y += 1) {\r\n\t            if (y >= height) {\r\n\t              continue;\r\n\t            }\r\n\t            i = (width * y + x) * 4;\r\n\t            imageData[i + 0] = red;\r\n\t            imageData[i + 1] = green;\r\n\t            imageData[i + 2] = blue;\r\n\t            imageData[i + 3] = alpha;\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  };\r\n\t\r\n\t  Konva.Factory.addGetterSetter(\r\n\t    Konva.Node,\r\n\t    'pixelSize',\r\n\t    8,\r\n\t    null,\r\n\t    Konva.Factory.afterSetFilter\r\n\t  );\r\n\t  /**\r\n\t    * get/set pixel size. Use with {@link Konva.Filters.Pixelate} filter.\r\n\t    * @name pixelSize\r\n\t    * @method\r\n\t    * @memberof Konva.Node.prototype\r\n\t    * @param {Integer} pixelSize\r\n\t    * @returns {Integer}\r\n\t    */\r\n\t})();\r\n\t\n\t(function() {\r\n\t  'use strict';\r\n\t  /**\r\n\t     * Threshold Filter. Pushes any value above the mid point to\r\n\t     *  the max and any value below the mid point to the min.\r\n\t     *  This affects the alpha channel.\r\n\t     * @function\r\n\t     * @name Threshold\r\n\t     * @memberof Konva.Filters\r\n\t     * @param {Object} imageData\r\n\t     * @author ippo615\r\n\t     * @example\r\n\t     * node.cache();\r\n\t     * node.filters([Konva.Filters.Threshold]);\r\n\t     * node.threshold(0.1);\r\n\t     */\r\n\t\r\n\t  Konva.Filters.Threshold = function(imageData) {\r\n\t    var level = this.threshold() * 255,\r\n\t      data = imageData.data,\r\n\t      len = data.length,\r\n\t      i;\r\n\t\r\n\t    for (i = 0; i < len; i += 1) {\r\n\t      data[i] = data[i] < level ? 0 : 255;\r\n\t    }\r\n\t  };\r\n\t\r\n\t  Konva.Factory.addGetterSetter(\r\n\t    Konva.Node,\r\n\t    'threshold',\r\n\t    0.5,\r\n\t    null,\r\n\t    Konva.Factory.afterSetFilter\r\n\t  );\r\n\t  /**\r\n\t    * get/set threshold.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Threshold} or {@link Konva.Filters.Mask} filter.\r\n\t    * @name threshold\r\n\t    * @method\r\n\t    * @memberof Konva.Node.prototype\r\n\t    * @param {Number} threshold\r\n\t    * @returns {Number}\r\n\t    */\r\n\t})();\r\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Sepia Filter\n\t     * Based on: Pixastic Lib - Sepia filter - v0.1.0\n\t     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n\t     * @function\n\t     * @name Sepia\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @author Jacob Seidelin <jseidelin@nihilogic.dk>\n\t     * @license MPL v1.1 [http://www.pixastic.com/lib/license.txt]\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Sepia]);\n\t     */\n\t  Konva.Filters.Sepia = function(imageData) {\n\t    var data = imageData.data,\n\t      w = imageData.width,\n\t      y = imageData.height,\n\t      w4 = w * 4,\n\t      offsetY,\n\t      x,\n\t      offset,\n\t      or,\n\t      og,\n\t      ob,\n\t      r,\n\t      g,\n\t      b;\n\t\n\t    do {\n\t      offsetY = (y - 1) * w4;\n\t      x = w;\n\t      do {\n\t        offset = offsetY + (x - 1) * 4;\n\t\n\t        or = data[offset];\n\t        og = data[offset + 1];\n\t        ob = data[offset + 2];\n\t\n\t        r = or * 0.393 + og * 0.769 + ob * 0.189;\n\t        g = or * 0.349 + og * 0.686 + ob * 0.168;\n\t        b = or * 0.272 + og * 0.534 + ob * 0.131;\n\t\n\t        data[offset] = r > 255 ? 255 : r;\n\t        data[offset + 1] = g > 255 ? 255 : g;\n\t        data[offset + 2] = b > 255 ? 255 : b;\n\t        data[offset + 3] = data[offset + 3];\n\t      } while (--x);\n\t    } while (--y);\n\t  };\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Solarize Filter\n\t     * Pixastic Lib - Solarize filter - v0.1.0\n\t     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n\t     * License: [http://www.pixastic.com/lib/license.txt]\n\t     * @function\n\t     * @name Solarize\n\t     * @memberof Konva.Filters\n\t     * @param {Object} imageData\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Solarize]);\n\t     */\n\t  Konva.Filters.Solarize = function(imageData) {\n\t    var data = imageData.data,\n\t      w = imageData.width,\n\t      h = imageData.height,\n\t      w4 = w * 4,\n\t      y = h;\n\t\n\t    do {\n\t      var offsetY = (y - 1) * w4;\n\t      var x = w;\n\t      do {\n\t        var offset = offsetY + (x - 1) * 4;\n\t        var r = data[offset];\n\t        var g = data[offset + 1];\n\t        var b = data[offset + 2];\n\t\n\t        if (r > 127) {\n\t          r = 255 - r;\n\t        }\n\t        if (g > 127) {\n\t          g = 255 - g;\n\t        }\n\t        if (b > 127) {\n\t          b = 255 - b;\n\t        }\n\t\n\t        data[offset] = r;\n\t        data[offset + 1] = g;\n\t        data[offset + 2] = b;\n\t      } while (--x);\n\t    } while (--y);\n\t  };\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /*\n\t   * ToPolar Filter. Converts image data to polar coordinates. Performs\n\t   *  w*h*4 pixel reads and w*h pixel writes. The r axis is placed along\n\t   *  what would be the y axis and the theta axis along the x axis.\n\t   * @function\n\t   * @author ippo615\n\t   * @memberof Konva.Filters\n\t   * @param {ImageData} src, the source image data (what will be transformed)\n\t   * @param {ImageData} dst, the destination image data (where it will be saved)\n\t   * @param {Object} opt\n\t   * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n\t   *  default is in the middle\n\t   * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n\t   *  default is in the middle\n\t   */\n\t\n\t  var ToPolar = function(src, dst, opt) {\n\t    var srcPixels = src.data,\n\t      dstPixels = dst.data,\n\t      xSize = src.width,\n\t      ySize = src.height,\n\t      xMid = opt.polarCenterX || xSize / 2,\n\t      yMid = opt.polarCenterY || ySize / 2,\n\t      i,\n\t      x,\n\t      y,\n\t      r = 0,\n\t      g = 0,\n\t      b = 0,\n\t      a = 0;\n\t\n\t    // Find the largest radius\n\t    var rad,\n\t      rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n\t    x = xSize - xMid;\n\t    y = ySize - yMid;\n\t    rad = Math.sqrt(x * x + y * y);\n\t    rMax = rad > rMax ? rad : rMax;\n\t\n\t    // We'll be uisng y as the radius, and x as the angle (theta=t)\n\t    var rSize = ySize,\n\t      tSize = xSize,\n\t      radius,\n\t      theta;\n\t\n\t    // We want to cover all angles (0-360) and we need to convert to\n\t    // radians (*PI/180)\n\t    var conversion = 360 / tSize * Math.PI / 180,\n\t      sin,\n\t      cos;\n\t\n\t    // var x1, x2, x1i, x2i, y1, y2, y1i, y2i, scale;\n\t\n\t    for (theta = 0; theta < tSize; theta += 1) {\n\t      sin = Math.sin(theta * conversion);\n\t      cos = Math.cos(theta * conversion);\n\t      for (radius = 0; radius < rSize; radius += 1) {\n\t        x = Math.floor(xMid + rMax * radius / rSize * cos);\n\t        y = Math.floor(yMid + rMax * radius / rSize * sin);\n\t        i = (y * xSize + x) * 4;\n\t        r = srcPixels[i + 0];\n\t        g = srcPixels[i + 1];\n\t        b = srcPixels[i + 2];\n\t        a = srcPixels[i + 3];\n\t\n\t        // Store it\n\t        //i = (theta * xSize  +  radius) * 4;\n\t        i = (theta + radius * xSize) * 4;\n\t        dstPixels[i + 0] = r;\n\t        dstPixels[i + 1] = g;\n\t        dstPixels[i + 2] = b;\n\t        dstPixels[i + 3] = a;\n\t      }\n\t    }\n\t  };\n\t\n\t  /*\n\t     * FromPolar Filter. Converts image data from polar coordinates back to rectangular.\n\t     *  Performs w*h*4 pixel reads and w*h pixel writes.\n\t     * @function\n\t     * @author ippo615\n\t     * @memberof Konva.Filters\n\t     * @param {ImageData} src, the source image data (what will be transformed)\n\t     * @param {ImageData} dst, the destination image data (where it will be saved)\n\t     * @param {Object} opt\n\t     * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n\t     *  default is in the middle\n\t     * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n\t     *  default is in the middle\n\t     * @param {Number} [opt.polarRotation] amount to rotate the image counterclockwis,\n\t     *  0 is no rotation, 360 degrees is a full rotation\n\t     */\n\t\n\t  var FromPolar = function(src, dst, opt) {\n\t    var srcPixels = src.data,\n\t      dstPixels = dst.data,\n\t      xSize = src.width,\n\t      ySize = src.height,\n\t      xMid = opt.polarCenterX || xSize / 2,\n\t      yMid = opt.polarCenterY || ySize / 2,\n\t      i,\n\t      x,\n\t      y,\n\t      dx,\n\t      dy,\n\t      r = 0,\n\t      g = 0,\n\t      b = 0,\n\t      a = 0;\n\t\n\t    // Find the largest radius\n\t    var rad,\n\t      rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n\t    x = xSize - xMid;\n\t    y = ySize - yMid;\n\t    rad = Math.sqrt(x * x + y * y);\n\t    rMax = rad > rMax ? rad : rMax;\n\t\n\t    // We'll be uisng x as the radius, and y as the angle (theta=t)\n\t    var rSize = ySize,\n\t      tSize = xSize,\n\t      radius,\n\t      theta,\n\t      phaseShift = opt.polarRotation || 0;\n\t\n\t    // We need to convert to degrees and we need to make sure\n\t    // it's between (0-360)\n\t    // var conversion = tSize/360*180/Math.PI;\n\t    //var conversion = tSize/360*180/Math.PI;\n\t\n\t    var x1, y1;\n\t\n\t    for (x = 0; x < xSize; x += 1) {\n\t      for (y = 0; y < ySize; y += 1) {\n\t        dx = x - xMid;\n\t        dy = y - yMid;\n\t        radius = Math.sqrt(dx * dx + dy * dy) * rSize / rMax;\n\t        theta = (Math.atan2(dy, dx) * 180 / Math.PI + 360 + phaseShift) % 360;\n\t        theta = theta * tSize / 360;\n\t        x1 = Math.floor(theta);\n\t        y1 = Math.floor(radius);\n\t        i = (y1 * xSize + x1) * 4;\n\t        r = srcPixels[i + 0];\n\t        g = srcPixels[i + 1];\n\t        b = srcPixels[i + 2];\n\t        a = srcPixels[i + 3];\n\t\n\t        // Store it\n\t        i = (y * xSize + x) * 4;\n\t        dstPixels[i + 0] = r;\n\t        dstPixels[i + 1] = g;\n\t        dstPixels[i + 2] = b;\n\t        dstPixels[i + 3] = a;\n\t      }\n\t    }\n\t  };\n\t\n\t  //Konva.Filters.ToPolar = Konva.Util._FilterWrapDoubleBuffer(ToPolar);\n\t  //Konva.Filters.FromPolar = Konva.Util._FilterWrapDoubleBuffer(FromPolar);\n\t\n\t  // create a temporary canvas for working - shared between multiple calls\n\t\n\t  /*\n\t     * Kaleidoscope Filter.\n\t     * @function\n\t     * @name Kaleidoscope\n\t     * @author ippo615\n\t     * @memberof Konva.Filters\n\t     * @example\n\t     * node.cache();\n\t     * node.filters([Konva.Filters.Kaleidoscope]);\n\t     * node.kaleidoscopePower(3);\n\t     * node.kaleidoscopeAngle(45);\n\t     */\n\t  Konva.Filters.Kaleidoscope = function(imageData) {\n\t    var xSize = imageData.width,\n\t      ySize = imageData.height;\n\t\n\t    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n\t    var power = Math.round(this.kaleidoscopePower());\n\t    var angle = Math.round(this.kaleidoscopeAngle());\n\t    var offset = Math.floor(xSize * (angle % 360) / 360);\n\t\n\t    if (power < 1) {\n\t      return;\n\t    }\n\t\n\t    // Work with our shared buffer canvas\n\t    var tempCanvas = Konva.Util.createCanvasElement();\n\t    tempCanvas.width = xSize;\n\t    tempCanvas.height = ySize;\n\t    var scratchData = tempCanvas\n\t      .getContext('2d')\n\t      .getImageData(0, 0, xSize, ySize);\n\t\n\t    // Convert thhe original to polar coordinates\n\t    ToPolar(imageData, scratchData, {\n\t      polarCenterX: xSize / 2,\n\t      polarCenterY: ySize / 2\n\t    });\n\t\n\t    // Determine how big each section will be, if it's too small\n\t    // make it bigger\n\t    var minSectionSize = xSize / Math.pow(2, power);\n\t    while (minSectionSize <= 8) {\n\t      minSectionSize = minSectionSize * 2;\n\t      power -= 1;\n\t    }\n\t    minSectionSize = Math.ceil(minSectionSize);\n\t    var sectionSize = minSectionSize;\n\t\n\t    // Copy the offset region to 0\n\t    // Depending on the size of filter and location of the offset we may need\n\t    // to copy the section backwards to prevent it from rewriting itself\n\t    var xStart = 0,\n\t      xEnd = sectionSize,\n\t      xDelta = 1;\n\t    if (offset + minSectionSize > xSize) {\n\t      xStart = sectionSize;\n\t      xEnd = 0;\n\t      xDelta = -1;\n\t    }\n\t    for (y = 0; y < ySize; y += 1) {\n\t      for (x = xStart; x !== xEnd; x += xDelta) {\n\t        xoff = Math.round(x + offset) % xSize;\n\t        srcPos = (xSize * y + xoff) * 4;\n\t        r = scratchData.data[srcPos + 0];\n\t        g = scratchData.data[srcPos + 1];\n\t        b = scratchData.data[srcPos + 2];\n\t        a = scratchData.data[srcPos + 3];\n\t        dstPos = (xSize * y + x) * 4;\n\t        scratchData.data[dstPos + 0] = r;\n\t        scratchData.data[dstPos + 1] = g;\n\t        scratchData.data[dstPos + 2] = b;\n\t        scratchData.data[dstPos + 3] = a;\n\t      }\n\t    }\n\t\n\t    // Perform the actual effect\n\t    for (y = 0; y < ySize; y += 1) {\n\t      sectionSize = Math.floor(minSectionSize);\n\t      for (i = 0; i < power; i += 1) {\n\t        for (x = 0; x < sectionSize + 1; x += 1) {\n\t          srcPos = (xSize * y + x) * 4;\n\t          r = scratchData.data[srcPos + 0];\n\t          g = scratchData.data[srcPos + 1];\n\t          b = scratchData.data[srcPos + 2];\n\t          a = scratchData.data[srcPos + 3];\n\t          dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n\t          scratchData.data[dstPos + 0] = r;\n\t          scratchData.data[dstPos + 1] = g;\n\t          scratchData.data[dstPos + 2] = b;\n\t          scratchData.data[dstPos + 3] = a;\n\t        }\n\t        sectionSize *= 2;\n\t      }\n\t    }\n\t\n\t    // Convert back from polar coordinates\n\t    FromPolar(scratchData, imageData, { polarRotation: 0 });\n\t  };\n\t\n\t  /**\n\t    * get/set kaleidoscope power. Use with {@link Konva.Filters.Kaleidoscope} filter.\n\t    * @name kaleidoscopePower\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} power of kaleidoscope\n\t    * @returns {Integer}\n\t    */\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'kaleidoscopePower',\n\t    2,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t\n\t  /**\n\t    * get/set kaleidoscope angle. Use with {@link Konva.Filters.Kaleidoscope} filter.\n\t    * @name kaleidoscopeAngle\n\t    * @method\n\t    * @memberof Konva.Node.prototype\n\t    * @param {Integer} degrees\n\t    * @returns {Integer}\n\t    */\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Node,\n\t    'kaleidoscopeAngle',\n\t    0,\n\t    null,\n\t    Konva.Factory.afterSetFilter\n\t  );\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Container constructor.&nbsp; Containers are used to contain nodes or other containers\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Node\n\t     * @abstract\n\t     * @param {Object} config\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * * @param {Object} [config.clip] set clip\n\t     * @param {Number} [config.clipX] set clip x\n\t     * @param {Number} [config.clipY] set clip y\n\t     * @param {Number} [config.clipWidth] set clip width\n\t     * @param {Number} [config.clipHeight] set clip height\n\t     * @param {Function} [config.clipFunc] set clip func\n\t\n\t     */\n\t  Konva.Container = function(config) {\n\t    this.__init(config);\n\t  };\n\t\n\t  Konva.Util.addMethods(Konva.Container, {\n\t    __init: function(config) {\n\t      this.children = new Konva.Collection();\n\t      Konva.Node.call(this, config);\n\t    },\n\t    /**\n\t         * returns a {@link Konva.Collection} of direct descendant nodes\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {Function} [filterFunc] filter function\n\t         * @returns {Konva.Collection}\n\t         * @example\n\t         * // get all children\n\t         * var children = layer.getChildren();\n\t         *\n\t         * // get only circles\n\t         * var circles = layer.getChildren(function(node){\n\t         *    return node.getClassName() === 'Circle';\n\t         * });\n\t         */\n\t    getChildren: function(filterFunc) {\n\t      if (!filterFunc) {\n\t        return this.children;\n\t      }\n\t\n\t      var results = new Konva.Collection();\n\t      this.children.each(function(child) {\n\t        if (filterFunc(child)) {\n\t          results.push(child);\n\t        }\n\t      });\n\t      return results;\n\t    },\n\t    /**\n\t         * determine if node has children\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    hasChildren: function() {\n\t      return this.getChildren().length > 0;\n\t    },\n\t    /**\n\t         * remove all children\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         */\n\t    removeChildren: function() {\n\t      var children = Konva.Collection.toCollection(this.children);\n\t      var child;\n\t      for (var i = 0; i < children.length; i++) {\n\t        child = children[i];\n\t        // reset parent to prevent many _setChildrenIndices calls\n\t        delete child.parent;\n\t        child.index = 0;\n\t        child.remove();\n\t      }\n\t      children = null;\n\t      this.children = new Konva.Collection();\n\t      return this;\n\t    },\n\t    /**\n\t         * destroy all children\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         */\n\t    destroyChildren: function() {\n\t      var children = Konva.Collection.toCollection(this.children);\n\t      var child;\n\t      for (var i = 0; i < children.length; i++) {\n\t        child = children[i];\n\t        // reset parent to prevent many _setChildrenIndices calls\n\t        delete child.parent;\n\t        child.index = 0;\n\t        child.destroy();\n\t      }\n\t      children = null;\n\t      this.children = new Konva.Collection();\n\t      return this;\n\t    },\n\t    /**\n\t         * Add node or nodes to container.\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {...Konva.Node} child\n\t         * @returns {Container}\n\t         * @example\n\t         * layer.add(shape1, shape2, shape3);\n\t         */\n\t    add: function(child) {\n\t      if (arguments.length > 1) {\n\t        for (var i = 0; i < arguments.length; i++) {\n\t          this.add(arguments[i]);\n\t        }\n\t        return this;\n\t      }\n\t      if (child.getParent()) {\n\t        child.moveTo(this);\n\t        return this;\n\t      }\n\t      var children = this.children;\n\t      this._validateAdd(child);\n\t      child.index = children.length;\n\t      child.parent = this;\n\t      children.push(child);\n\t      this._fire('add', {\n\t        child: child\n\t      });\n\t\n\t      // if node under drag we need to update drag animation\n\t      if (Konva.DD && child.isDragging()) {\n\t        Konva.DD.anim.setLayers(child.getLayer());\n\t      }\n\t\n\t      // chainable\n\t      return this;\n\t    },\n\t    destroy: function() {\n\t      // destroy children\n\t      if (this.hasChildren()) {\n\t        this.destroyChildren();\n\t      }\n\t      // then destroy self\n\t      Konva.Node.prototype.destroy.call(this);\n\t      return this;\n\t    },\n\t    /**\n\t         * return a {@link Konva.Collection} of nodes that match the selector.  Use '#' for id selections\n\t         * and '.' for name selections.  You can also select by type or class name. Pass multiple selectors\n\t         * separated by a space.\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {String} selector\n\t         * @returns {Collection}\n\t         * @example\n\t         * // select node with id foo\n\t         * var node = stage.find('#foo');\n\t         *\n\t         * // select nodes with name bar inside layer\n\t         * var nodes = layer.find('.bar');\n\t         *\n\t         * // select all groups inside layer\n\t         * var nodes = layer.find('Group');\n\t         *\n\t         * // select all rectangles inside layer\n\t         * var nodes = layer.find('Rect');\n\t         *\n\t         * // select node with an id of foo or a name of bar inside layer\n\t         * var nodes = layer.find('#foo, .bar');\n\t         */\n\t    find: function(selector) {\n\t      var retArr = [],\n\t        selectorArr = selector.replace(/ /g, '').split(','),\n\t        len = selectorArr.length,\n\t        n,\n\t        i,\n\t        sel,\n\t        arr,\n\t        node,\n\t        children,\n\t        clen;\n\t\n\t      for (n = 0; n < len; n++) {\n\t        sel = selectorArr[n];\n\t        if (!Konva.Util.isValidSelector(sel)) {\n\t          Konva.Util.warn(\n\t            'Selector \"' +\n\t              sel +\n\t              '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".'\n\t          );\n\t          Konva.Util.warn(\n\t            'If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".'\n\t          );\n\t          Konva.Util.warn('Konva is awesome, right?');\n\t        }\n\t        // id selector\n\t        if (sel.charAt(0) === '#') {\n\t          node = this._getNodeById(sel.slice(1));\n\t          if (node) {\n\t            retArr.push(node);\n\t          }\n\t        } else if (sel.charAt(0) === '.') {\n\t          // name selector\n\t          arr = this._getNodesByName(sel.slice(1));\n\t          retArr = retArr.concat(arr);\n\t        } else {\n\t          // unrecognized selector, pass to children\n\t          children = this.getChildren();\n\t          clen = children.length;\n\t          for (i = 0; i < clen; i++) {\n\t            retArr = retArr.concat(children[i]._get(sel));\n\t          }\n\t        }\n\t      }\n\t\n\t      return Konva.Collection.toCollection(retArr);\n\t    },\n\t    /**\n\t         * return a first node from `find` method\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {String} selector\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * // select node with id foo\n\t         * var node = stage.findOne('#foo');\n\t         *\n\t         * // select node with name bar inside layer\n\t         * var nodes = layer.findOne('.bar');\n\t         */\n\t    findOne: function(selector) {\n\t      return this.find(selector)[0];\n\t    },\n\t    _getNodeById: function(key) {\n\t      var node = Konva.ids[key];\n\t\n\t      if (node !== undefined && this.isAncestorOf(node)) {\n\t        return node;\n\t      }\n\t      return null;\n\t    },\n\t    _getNodesByName: function(key) {\n\t      var arr = Konva.names[key] || [];\n\t      return this._getDescendants(arr);\n\t    },\n\t    _get: function(selector) {\n\t      var retArr = Konva.Node.prototype._get.call(this, selector);\n\t      var children = this.getChildren();\n\t      var len = children.length;\n\t      for (var n = 0; n < len; n++) {\n\t        retArr = retArr.concat(children[n]._get(selector));\n\t      }\n\t      return retArr;\n\t    },\n\t    // extenders\n\t    toObject: function() {\n\t      var obj = Konva.Node.prototype.toObject.call(this);\n\t\n\t      obj.children = [];\n\t\n\t      var children = this.getChildren();\n\t      var len = children.length;\n\t      for (var n = 0; n < len; n++) {\n\t        var child = children[n];\n\t        obj.children.push(child.toObject());\n\t      }\n\t\n\t      return obj;\n\t    },\n\t    _getDescendants: function(arr) {\n\t      var retArr = [];\n\t      var len = arr.length;\n\t      for (var n = 0; n < len; n++) {\n\t        var node = arr[n];\n\t        if (this.isAncestorOf(node)) {\n\t          retArr.push(node);\n\t        }\n\t      }\n\t\n\t      return retArr;\n\t    },\n\t    /**\n\t         * determine if node is an ancestor\n\t         * of descendant\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {Konva.Node} node\n\t         */\n\t    isAncestorOf: function(node) {\n\t      var parent = node.getParent();\n\t      while (parent) {\n\t        if (parent._id === this._id) {\n\t          return true;\n\t        }\n\t        parent = parent.getParent();\n\t      }\n\t\n\t      return false;\n\t    },\n\t    clone: function(obj) {\n\t      // call super method\n\t      var node = Konva.Node.prototype.clone.call(this, obj);\n\t\n\t      this.getChildren().each(function(no) {\n\t        node.add(no.clone());\n\t      });\n\t      return node;\n\t    },\n\t    /**\n\t         * get all shapes that intersect a point.  Note: because this method must clear a temporary\n\t         * canvas and redraw every shape inside the container, it should only be used for special sitations\n\t         * because it performs very poorly.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n\t         * because it performs much better\n\t         * @method\n\t         * @memberof Konva.Container.prototype\n\t         * @param {Object} pos\n\t         * @param {Number} pos.x\n\t         * @param {Number} pos.y\n\t         * @returns {Array} array of shapes\n\t         */\n\t    getAllIntersections: function(pos) {\n\t      var arr = [];\n\t\n\t      this.find('Shape').each(function(shape) {\n\t        if (shape.isVisible() && shape.intersects(pos)) {\n\t          arr.push(shape);\n\t        }\n\t      });\n\t\n\t      return arr;\n\t    },\n\t    _setChildrenIndices: function() {\n\t      this.children.each(function(child, n) {\n\t        child.index = n;\n\t      });\n\t    },\n\t    drawScene: function(can, top, caching) {\n\t      var layer = this.getLayer(),\n\t        canvas = can || (layer && layer.getCanvas()),\n\t        context = canvas && canvas.getContext(),\n\t        cachedCanvas = this._cache.canvas,\n\t        cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\t\n\t      if (this.isVisible()) {\n\t        if (!caching && cachedSceneCanvas) {\n\t          context.save();\n\t          layer._applyTransform(this, context, top);\n\t          this._drawCachedSceneCanvas(context);\n\t          context.restore();\n\t        } else {\n\t          this._drawChildren(canvas, 'drawScene', top, false, caching);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t    drawHit: function(can, top, caching) {\n\t      var layer = this.getLayer(),\n\t        canvas = can || (layer && layer.hitCanvas),\n\t        context = canvas && canvas.getContext(),\n\t        cachedCanvas = this._cache.canvas,\n\t        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\t\n\t      if (this.shouldDrawHit(canvas)) {\n\t        if (layer) {\n\t          layer.clearHitCache();\n\t        }\n\t        if (!caching && cachedHitCanvas) {\n\t          context.save();\n\t          layer._applyTransform(this, context, top);\n\t          this._drawCachedHitCanvas(context);\n\t          context.restore();\n\t        } else {\n\t          this._drawChildren(canvas, 'drawHit', top);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t    _drawChildren: function(canvas, drawMethod, top, caching, skipBuffer) {\n\t      var layer = this.getLayer(),\n\t        context = canvas && canvas.getContext(),\n\t        clipWidth = this.getClipWidth(),\n\t        clipHeight = this.getClipHeight(),\n\t        clipFunc = this.getClipFunc(),\n\t        hasClip = (clipWidth && clipHeight) || clipFunc,\n\t        clipX,\n\t        clipY;\n\t\n\t      if (hasClip && layer) {\n\t        context.save();\n\t        var transform = this.getAbsoluteTransform(top);\n\t        var m = transform.getMatrix();\n\t        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\t        context.beginPath();\n\t        if (clipFunc) {\n\t          clipFunc.call(this, context, this);\n\t        } else {\n\t          clipX = this.getClipX();\n\t          clipY = this.getClipY();\n\t          context.rect(clipX, clipY, clipWidth, clipHeight);\n\t        }\n\t        context.clip();\n\t        m = transform.copy().invert().getMatrix();\n\t        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\t      }\n\t\n\t      this.children.each(function(child) {\n\t        child[drawMethod](canvas, top, caching, skipBuffer);\n\t      });\n\t\n\t      if (hasClip) {\n\t        context.restore();\n\t      }\n\t    },\n\t    shouldDrawHit: function(canvas) {\n\t      var layer = this.getLayer();\n\t      var dd = Konva.DD;\n\t      var layerUnderDrag =\n\t        dd &&\n\t        Konva.isDragging() &&\n\t        Konva.DD.anim.getLayers().indexOf(layer) !== -1;\n\t      return (\n\t        (canvas && canvas.isCache) ||\n\t        (layer &&\n\t          layer.hitGraphEnabled() &&\n\t          this.isVisible() &&\n\t          !layerUnderDrag)\n\t      );\n\t    },\n\t    getClientRect: function(attrs) {\n\t      attrs = attrs || {};\n\t      var skipTransform = attrs.skipTransform;\n\t      var relativeTo = attrs.relativeTo;\n\t\n\t      var minX, minY, maxX, maxY;\n\t      var selfRect = {\n\t        x: 0,\n\t        y: 0,\n\t        width: 0,\n\t        height: 0\n\t      };\n\t      var that = this;\n\t      this.children.each(function(child) {\n\t        // skip invisible children\n\t        if (!child.isVisible()) {\n\t          return;\n\t        }\n\t        var rect = child.getClientRect({ relativeTo: that });\n\t\n\t        // skip invisible children (like empty groups)\n\t        // or don't skip... hmmm...\n\t        // if (rect.width === 0 && rect.height === 0) {\n\t        //     return;\n\t        // }\n\t\n\t        if (minX === undefined) {\n\t          // initial value for first child\n\t          minX = rect.x;\n\t          minY = rect.y;\n\t          maxX = rect.x + rect.width;\n\t          maxY = rect.y + rect.height;\n\t        } else {\n\t          minX = Math.min(minX, rect.x);\n\t          minY = Math.min(minY, rect.y);\n\t          maxX = Math.max(maxX, rect.x + rect.width);\n\t          maxY = Math.max(maxY, rect.y + rect.height);\n\t        }\n\t      });\n\t\n\t      if (this.children.length !== 0) {\n\t        selfRect = {\n\t          x: minX,\n\t          y: minY,\n\t          width: maxX - minX,\n\t          height: maxY - minY\n\t        };\n\t      }\n\t\n\t      if (!skipTransform) {\n\t        return this._transformedRect(selfRect, relativeTo);\n\t      }\n\t      return selfRect;\n\t    }\n\t  });\n\t\n\t  Konva.Util.extend(Konva.Container, Konva.Node);\n\t  // deprecated methods\n\t  Konva.Container.prototype.get = Konva.Container.prototype.find;\n\t\n\t  // add getters setters\n\t  Konva.Factory.addComponentsGetterSetter(Konva.Container, 'clip', [\n\t    'x',\n\t    'y',\n\t    'width',\n\t    'height'\n\t  ]);\n\t  /**\n\t     * get/set clip\n\t     * @method\n\t     * @name clip\n\t     * @memberof Konva.Container.prototype\n\t     * @param {Object} clip\n\t     * @param {Number} clip.x\n\t     * @param {Number} clip.y\n\t     * @param {Number} clip.width\n\t     * @param {Number} clip.height\n\t     * @returns {Object}\n\t     * @example\n\t     * // get clip\n\t     * var clip = container.clip();\n\t     *\n\t     * // set clip\n\t     * container.setClip({\n\t     *   x: 20,\n\t     *   y: 20,\n\t     *   width: 20,\n\t     *   height: 20\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Container, 'clipX');\n\t  /**\n\t     * get/set clip x\n\t     * @name clipX\n\t     * @method\n\t     * @memberof Konva.Container.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get clip x\n\t     * var clipX = container.clipX();\n\t     *\n\t     * // set clip x\n\t     * container.clipX(10);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Container, 'clipY');\n\t  /**\n\t     * get/set clip y\n\t     * @name clipY\n\t     * @method\n\t     * @memberof Konva.Container.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get clip y\n\t     * var clipY = container.clipY();\n\t     *\n\t     * // set clip y\n\t     * container.clipY(10);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Container, 'clipWidth');\n\t  /**\n\t     * get/set clip width\n\t     * @name clipWidth\n\t     * @method\n\t     * @memberof Konva.Container.prototype\n\t     * @param {Number} width\n\t     * @returns {Number}\n\t     * @example\n\t     * // get clip width\n\t     * var clipWidth = container.clipWidth();\n\t     *\n\t     * // set clip width\n\t     * container.clipWidth(100);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Container, 'clipHeight');\n\t  /**\n\t     * get/set clip height\n\t     * @name clipHeight\n\t     * @method\n\t     * @memberof Konva.Container.prototype\n\t     * @param {Number} height\n\t     * @returns {Number}\n\t     * @example\n\t     * // get clip height\n\t     * var clipHeight = container.clipHeight();\n\t     *\n\t     * // set clip height\n\t     * container.clipHeight(100);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Container, 'clipFunc');\n\t  /**\n\t      * get/set clip function\n\t      * @name clipFunc\n\t      * @method\n\t      * @memberof Konva.Container.prototype\n\t      * @param {Function} function\n\t      * @returns {Function}\n\t      * @example\n\t      * // get clip function\n\t      * var clipFunction = container.clipFunc();\n\t      *\n\t      * // set clip height\n\t      * container.clipFunc(function(ctx) {\n\t      *   ctx.rect(0, 0, 100, 100);\n\t      * });\n\t      */\n\t\n\t  Konva.Collection.mapMethods(Konva.Container);\n\t})();\n\t\n\t(function(Konva) {\n\t  'use strict';\n\t  var HAS_SHADOW = 'hasShadow';\n\t  var SHADOW_RGBA = 'shadowRGBA';\n\t\n\t  function _fillFunc(context) {\n\t    context.fill();\n\t  }\n\t  function _strokeFunc(context) {\n\t    context.stroke();\n\t  }\n\t  function _fillFuncHit(context) {\n\t    context.fill();\n\t  }\n\t  function _strokeFuncHit(context) {\n\t    context.stroke();\n\t  }\n\t\n\t  function _clearHasShadowCache() {\n\t    this._clearCache(HAS_SHADOW);\n\t  }\n\t\n\t  function _clearGetShadowRGBACache() {\n\t    this._clearCache(SHADOW_RGBA);\n\t  }\n\t\n\t  /**\n\t     * Shape constructor.  Shapes are primitive objects such as rectangles,\n\t     *  circles, text, lines, etc.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Node\n\t     * @param {Object} config\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var customShape = new Konva.Shape({\n\t         *   x: 5,\n\t         *   y: 10,\n\t         *   fill: 'red',\n\t         *   // a Konva.Canvas renderer is passed into the drawFunc function\n\t         *   drawFunc: function(context) {\n\t         *     context.beginPath();\n\t         *     context.moveTo(200, 50);\n\t         *     context.lineTo(420, 80);\n\t         *     context.quadraticCurveTo(300, 100, 260, 170);\n\t         *     context.closePath();\n\t         *     context.fillStrokeShape(this);\n\t         *   }\n\t         *});\n\t     */\n\t  Konva.Shape = function(config) {\n\t    this.__init(config);\n\t  };\n\t\n\t  Konva.Util.addMethods(Konva.Shape, {\n\t    __init: function(config) {\n\t      this.nodeType = 'Shape';\n\t      this._fillFunc = _fillFunc;\n\t      this._strokeFunc = _strokeFunc;\n\t      this._fillFuncHit = _fillFuncHit;\n\t      this._strokeFuncHit = _strokeFuncHit;\n\t\n\t      // set colorKey\n\t      var shapes = Konva.shapes;\n\t      var key;\n\t\n\t      while (true) {\n\t        key = Konva.Util.getRandomColor();\n\t        if (key && !(key in shapes)) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      this.colorKey = key;\n\t      shapes[key] = this;\n\t\n\t      // call super constructor\n\t      Konva.Node.call(this, config);\n\t\n\t      this.on(\n\t        'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',\n\t        _clearHasShadowCache\n\t      );\n\t\n\t      this.on(\n\t        'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',\n\t        _clearGetShadowRGBACache\n\t      );\n\t    },\n\t    hasChildren: function() {\n\t      return false;\n\t    },\n\t    getChildren: function() {\n\t      return [];\n\t    },\n\t    /**\n\t         * get canvas context tied to the layer\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Konva.Context}\n\t         */\n\t    getContext: function() {\n\t      return this.getLayer().getContext();\n\t    },\n\t    /**\n\t         * get canvas renderer tied to the layer.  Note that this returns a canvas renderer, not a canvas element\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Konva.Canvas}\n\t         */\n\t    getCanvas: function() {\n\t      return this.getLayer().getCanvas();\n\t    },\n\t    /**\n\t         * returns whether or not a shadow will be rendered\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    hasShadow: function() {\n\t      return this._getCache(HAS_SHADOW, this._hasShadow);\n\t    },\n\t    _hasShadow: function() {\n\t      return (\n\t        this.getShadowEnabled() &&\n\t        (this.getShadowOpacity() !== 0 &&\n\t          !!(this.getShadowColor() ||\n\t            this.getShadowBlur() ||\n\t            this.getShadowOffsetX() ||\n\t            this.getShadowOffsetY()))\n\t      );\n\t    },\n\t    getShadowRGBA: function() {\n\t      return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n\t    },\n\t    _getShadowRGBA: function() {\n\t      if (this.hasShadow()) {\n\t        var rgba = Konva.Util.colorToRGBA(this.shadowColor());\n\t        return (\n\t          'rgba(' +\n\t          rgba.r +\n\t          ',' +\n\t          rgba.g +\n\t          ',' +\n\t          rgba.b +\n\t          ',' +\n\t          rgba.a * (this.getShadowOpacity() || 1) +\n\t          ')'\n\t        );\n\t      }\n\t    },\n\t    /**\n\t         * returns whether or not the shape will be filled\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    hasFill: function() {\n\t      return !!(this.getFill() ||\n\t        this.getFillPatternImage() ||\n\t        this.getFillLinearGradientColorStops() ||\n\t        this.getFillRadialGradientColorStops());\n\t    },\n\t    /**\n\t         * returns whether or not the shape will be stroked\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    hasStroke: function() {\n\t      return this.strokeEnabled() && !!this.stroke();\n\t    },\n\t    /**\n\t         * determines if point is in the shape, regardless if other shapes are on top of it.  Note: because\n\t         *  this method clears a temporary canvas and then redraws the shape, it performs very poorly if executed many times\n\t         *  consecutively.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n\t         *  because it performs much better\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @param {Object} point\n\t         * @param {Number} point.x\n\t         * @param {Number} point.y\n\t         * @returns {Boolean}\n\t         */\n\t    intersects: function(point) {\n\t      var stage = this.getStage(), bufferHitCanvas = stage.bufferHitCanvas, p;\n\t\n\t      bufferHitCanvas.getContext().clear();\n\t      this.drawHit(bufferHitCanvas);\n\t      p = bufferHitCanvas.context.getImageData(\n\t        Math.round(point.x),\n\t        Math.round(point.y),\n\t        1,\n\t        1\n\t      ).data;\n\t      return p[3] > 0;\n\t    },\n\t    // extends Node.prototype.destroy\n\t    destroy: function() {\n\t      Konva.Node.prototype.destroy.call(this);\n\t      delete Konva.shapes[this.colorKey];\n\t      return this;\n\t    },\n\t    _useBufferCanvas: function(caching) {\n\t      return (\n\t        (!caching &&\n\t          (this.perfectDrawEnabled() &&\n\t            this.getAbsoluteOpacity() !== 1 &&\n\t            this.hasFill() &&\n\t            this.hasStroke() &&\n\t            this.getStage())) ||\n\t        (this.perfectDrawEnabled() &&\n\t          this.hasShadow() &&\n\t          this.getAbsoluteOpacity() !== 1 &&\n\t          this.hasFill() &&\n\t          this.hasStroke() &&\n\t          this.getStage())\n\t      );\n\t    },\n\t    /**\n\t         * return self rectangle (x, y, width, height) of shape.\n\t         * This method are not taken into account transformation and styles.\n\t         * @method\n\t         * @memberof Konva.Shape.prototype\n\t         * @returns {Object} rect with {x, y, width, height} properties\n\t         * @example\n\t         *\n\t         * rect.getSelfRect();  // return {x:0, y:0, width:rect.width(), height:rect.height()}\n\t         * circle.getSelfRect();  // return {x: - circle.width() / 2, y: - circle.height() / 2, width:circle.width(), height:circle.height()}\n\t         *\n\t         */\n\t    getSelfRect: function() {\n\t      var size = this.getSize();\n\t      return {\n\t        x: this._centroid ? Math.round(-size.width / 2) : 0,\n\t        y: this._centroid ? Math.round(-size.height / 2) : 0,\n\t        width: size.width,\n\t        height: size.height\n\t      };\n\t    },\n\t    getClientRect: function(attrs) {\n\t      attrs = attrs || {};\n\t      var skipTransform = attrs.skipTransform;\n\t      var relativeTo = attrs.relativeTo;\n\t\n\t      var fillRect = this.getSelfRect();\n\t\n\t      var strokeWidth = (this.hasStroke() && this.strokeWidth()) || 0;\n\t      var fillAndStrokeWidth = fillRect.width + strokeWidth;\n\t      var fillAndStrokeHeight = fillRect.height + strokeWidth;\n\t\n\t      var shadowOffsetX = this.hasShadow() ? this.shadowOffsetX() : 0;\n\t      var shadowOffsetY = this.hasShadow() ? this.shadowOffsetY() : 0;\n\t\n\t      var preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n\t      var preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n\t\n\t      var blurRadius = (this.hasShadow() && this.shadowBlur()) || 0;\n\t\n\t      var width = preWidth + blurRadius * 2;\n\t      var height = preHeight + blurRadius * 2;\n\t\n\t      // if stroke, for example = 3\n\t      // we need to set x to 1.5, but after Math.round it will be 2\n\t      // as we have additional offset we need to increase width and height by 1 pixel\n\t      var roundingOffset = 0;\n\t      if (Math.round(strokeWidth / 2) !== strokeWidth / 2) {\n\t        roundingOffset = 1;\n\t      }\n\t      var rect = {\n\t        width: width + roundingOffset,\n\t        height: height + roundingOffset,\n\t        x: -Math.round(strokeWidth / 2 + blurRadius) +\n\t          Math.min(shadowOffsetX, 0) +\n\t          fillRect.x,\n\t        y: -Math.round(strokeWidth / 2 + blurRadius) +\n\t          Math.min(shadowOffsetY, 0) +\n\t          fillRect.y\n\t      };\n\t      if (!skipTransform) {\n\t        return this._transformedRect(rect, relativeTo);\n\t      }\n\t      return rect;\n\t    },\n\t    drawScene: function(can, top, caching, skipBuffer) {\n\t      var layer = this.getLayer(),\n\t        canvas = can || layer.getCanvas(),\n\t        context = canvas.getContext(),\n\t        cachedCanvas = this._cache.canvas,\n\t        drawFunc = this.sceneFunc(),\n\t        hasShadow = this.hasShadow(),\n\t        hasStroke = this.hasStroke(),\n\t        stage,\n\t        bufferCanvas,\n\t        bufferContext;\n\t\n\t      if (!this.isVisible()) {\n\t        return this;\n\t      }\n\t      if (cachedCanvas) {\n\t        context.save();\n\t        layer._applyTransform(this, context, top);\n\t        this._drawCachedSceneCanvas(context);\n\t        context.restore();\n\t        return this;\n\t      }\n\t      if (!drawFunc) {\n\t        return this;\n\t      }\n\t      context.save();\n\t      // if buffer canvas is needed\n\t      if (this._useBufferCanvas(caching) && !skipBuffer) {\n\t        stage = this.getStage();\n\t        bufferCanvas = stage.bufferCanvas;\n\t        bufferContext = bufferCanvas.getContext();\n\t        bufferContext.clear();\n\t        bufferContext.save();\n\t        bufferContext._applyLineJoin(this);\n\t        // layer might be undefined if we are using cache before adding to layer\n\t        if (!caching) {\n\t          if (layer) {\n\t            layer._applyTransform(this, bufferContext, top);\n\t          } else {\n\t            var m = this.getAbsoluteTransform(top).getMatrix();\n\t            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\t          }\n\t        }\n\t\n\t        drawFunc.call(this, bufferContext);\n\t        bufferContext.restore();\n\t\n\t        var ratio = bufferCanvas.pixelRatio;\n\t        if (hasShadow && !canvas.hitCanvas) {\n\t          context.save();\n\t\n\t          context._applyShadow(this);\n\t          context._applyOpacity(this);\n\t          context._applyGlobalCompositeOperation(this);\n\t          context.drawImage(\n\t            bufferCanvas._canvas,\n\t            0,\n\t            0,\n\t            bufferCanvas.width / ratio,\n\t            bufferCanvas.height / ratio\n\t          );\n\t          context.restore();\n\t        } else {\n\t          context._applyOpacity(this);\n\t          context._applyGlobalCompositeOperation(this);\n\t          context.drawImage(\n\t            bufferCanvas._canvas,\n\t            0,\n\t            0,\n\t            bufferCanvas.width / ratio,\n\t            bufferCanvas.height / ratio\n\t          );\n\t        }\n\t      } else {\n\t        // if buffer canvas is not needed\n\t        context._applyLineJoin(this);\n\t        // layer might be undefined if we are using cache before adding to layer\n\t        if (!caching) {\n\t          if (layer) {\n\t            layer._applyTransform(this, context, top);\n\t          } else {\n\t            var o = this.getAbsoluteTransform(top).getMatrix();\n\t            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n\t          }\n\t        }\n\t\n\t        if (hasShadow && hasStroke && !canvas.hitCanvas) {\n\t          context.save();\n\t          // apply shadow\n\t          if (!caching) {\n\t            context._applyOpacity(this);\n\t            context._applyGlobalCompositeOperation(this);\n\t          }\n\t          context._applyShadow(this);\n\t\n\t          drawFunc.call(this, context);\n\t          context.restore();\n\t          // if shape has stroke we need to redraw shape\n\t          // otherwise we will see a shadow under stroke (and over fill)\n\t          // but I think this is unexpected behavior\n\t          if (this.hasFill() && this.getShadowForStrokeEnabled()) {\n\t            drawFunc.call(this, context);\n\t          }\n\t        } else if (hasShadow && !canvas.hitCanvas) {\n\t          context.save();\n\t          if (!caching) {\n\t            context._applyOpacity(this);\n\t            context._applyGlobalCompositeOperation(this);\n\t          }\n\t          context._applyShadow(this);\n\t          drawFunc.call(this, context);\n\t          context.restore();\n\t        } else {\n\t          if (!caching) {\n\t            context._applyOpacity(this);\n\t            context._applyGlobalCompositeOperation(this);\n\t          }\n\t          drawFunc.call(this, context);\n\t        }\n\t      }\n\t      context.restore();\n\t      return this;\n\t    },\n\t    drawHit: function(can, top, caching) {\n\t      var layer = this.getLayer(),\n\t        canvas = can || layer.hitCanvas,\n\t        context = canvas.getContext(),\n\t        drawFunc = this.hitFunc() || this.sceneFunc(),\n\t        cachedCanvas = this._cache.canvas,\n\t        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\t\n\t      if (!this.shouldDrawHit(canvas)) {\n\t        return this;\n\t      }\n\t      if (layer) {\n\t        layer.clearHitCache();\n\t      }\n\t      if (cachedHitCanvas) {\n\t        context.save();\n\t        layer._applyTransform(this, context, top);\n\t        this._drawCachedHitCanvas(context);\n\t        context.restore();\n\t        return this;\n\t      }\n\t      if (!drawFunc) {\n\t        return this;\n\t      }\n\t      context.save();\n\t      context._applyLineJoin(this);\n\t      if (!caching) {\n\t        if (layer) {\n\t          layer._applyTransform(this, context, top);\n\t        } else {\n\t          var o = this.getAbsoluteTransform(top).getMatrix();\n\t          context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n\t        }\n\t      }\n\t      drawFunc.call(this, context);\n\t      context.restore();\n\t      return this;\n\t    },\n\t    /**\n\t        * draw hit graph using the cached scene canvas\n\t        * @method\n\t        * @memberof Konva.Shape.prototype\n\t        * @param {Integer} alphaThreshold alpha channel threshold that determines whether or not\n\t        *  a pixel should be drawn onto the hit graph.  Must be a value between 0 and 255.\n\t        *  The default is 0\n\t        * @returns {Konva.Shape}\n\t        * @example\n\t        * shape.cache();\n\t        * shape.drawHitFromCache();\n\t        */\n\t    drawHitFromCache: function(alphaThreshold) {\n\t      var threshold = alphaThreshold || 0,\n\t        cachedCanvas = this._cache.canvas,\n\t        sceneCanvas = this._getCachedSceneCanvas(),\n\t        hitCanvas = cachedCanvas.hit,\n\t        hitContext = hitCanvas.getContext(),\n\t        hitWidth = hitCanvas.getWidth(),\n\t        hitHeight = hitCanvas.getHeight(),\n\t        hitImageData,\n\t        hitData,\n\t        len,\n\t        rgbColorKey,\n\t        i,\n\t        alpha;\n\t\n\t      hitContext.clear();\n\t      hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n\t\n\t      try {\n\t        hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n\t        hitData = hitImageData.data;\n\t        len = hitData.length;\n\t        rgbColorKey = Konva.Util._hexToRgb(this.colorKey);\n\t\n\t        // replace non transparent pixels with color key\n\t        for (i = 0; i < len; i += 4) {\n\t          alpha = hitData[i + 3];\n\t          if (alpha > threshold) {\n\t            hitData[i] = rgbColorKey.r;\n\t            hitData[i + 1] = rgbColorKey.g;\n\t            hitData[i + 2] = rgbColorKey.b;\n\t            hitData[i + 3] = 255;\n\t          } else {\n\t            hitData[i + 3] = 0;\n\t          }\n\t        }\n\t        hitContext.putImageData(hitImageData, 0, 0);\n\t      } catch (e) {\n\t        Konva.Util.error(\n\t          'Unable to draw hit graph from cached scene canvas. ' + e.message\n\t        );\n\t      }\n\t\n\t      return this;\n\t    }\n\t  });\n\t  Konva.Util.extend(Konva.Shape, Konva.Node);\n\t\n\t  // add getters and setters\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'stroke');\n\t\n\t  /**\n\t     * get/set stroke color\n\t     * @name stroke\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} color\n\t     * @returns {String}\n\t     * @example\n\t     * // get stroke color\n\t     * var stroke = shape.stroke();\n\t     *\n\t     * // set stroke color with color string\n\t     * shape.stroke('green');\n\t     *\n\t     * // set stroke color with hex\n\t     * shape.stroke('#00ff00');\n\t     *\n\t     * // set stroke color with rgb\n\t     * shape.stroke('rgb(0,255,0)');\n\t     *\n\t     * // set stroke color with rgba and make it 50% opaque\n\t     * shape.stroke('rgba(0,255,0,0.5');\n\t     */\n\t\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'strokeRed',\n\t    0,\n\t    Konva.Validators.RGBComponent\n\t  );\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'strokeGreen',\n\t    0,\n\t    Konva.Validators.RGBComponent\n\t  );\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'strokeBlue',\n\t    0,\n\t    Konva.Validators.RGBComponent\n\t  );\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'strokeAlpha',\n\t    1,\n\t    Konva.Validators.alphaComponent\n\t  );\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeWidth', 2);\n\t\n\t  /**\n\t     * get/set stroke width\n\t     * @name strokeWidth\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} strokeWidth\n\t     * @returns {Number}\n\t     * @example\n\t     * // get stroke width\n\t     * var strokeWidth = shape.strokeWidth();\n\t     *\n\t     * // set stroke width\n\t     * shape.strokeWidth();\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeHitEnabled', true);\n\t\n\t  /**\n\t     * get/set strokeHitEnabled property. Useful for performance optimization.\n\t     * You may set `shape.strokeHitEnabled(false)`. In this case stroke will be no draw on hit canvas, so hit area\n\t     * of shape will be decreased (by lineWidth / 2). Remember that non closed line with `strokeHitEnabled = false`\n\t     * will be not drawn on hit canvas, that is mean line will no trigger pointer events (like mouseover)\n\t     * Default value is true\n\t     * @name strokeHitEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} strokeHitEnabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get strokeHitEnabled\n\t     * var strokeHitEnabled = shape.strokeHitEnabled();\n\t     *\n\t     * // set strokeHitEnabled\n\t     * shape.strokeHitEnabled();\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'perfectDrawEnabled', true);\n\t\n\t  /**\n\t     * get/set perfectDrawEnabled. If a shape has fill, stroke and opacity you may set `perfectDrawEnabled` to false to improve performance.\n\t     * See http://konvajs.github.io/docs/performance/Disable_Perfect_Draw.html for more information.\n\t     * Default value is true\n\t     * @name perfectDrawEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} perfectDrawEnabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get perfectDrawEnabled\n\t     * var perfectDrawEnabled = shape.perfectDrawEnabled();\n\t     *\n\t     * // set perfectDrawEnabled\n\t     * shape.perfectDrawEnabled();\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowForStrokeEnabled', true);\n\t\n\t  /**\n\t     * get/set shadowForStrokeEnabled. Useful for performance optimization.\n\t     * You may set `shape.shadowForStrokeEnabled(false)`. In this case stroke will be no draw shadow for stroke.\n\t     * Remember if you set `shadowForStrokeEnabled = false` for non closed line - that line with have no shadow!.\n\t     * Default value is true\n\t     * @name shadowForStrokeEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} shadowForStrokeEnabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get shadowForStrokeEnabled\n\t     * var shadowForStrokeEnabled = shape.shadowForStrokeEnabled();\n\t     *\n\t     * // set shadowForStrokeEnabled\n\t     * shape.shadowForStrokeEnabled();\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'lineJoin');\n\t\n\t  /**\n\t     * get/set line join.  Can be miter, round, or bevel.  The\n\t     *  default is miter\n\t     * @name lineJoin\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} lineJoin\n\t     * @returns {String}\n\t     * @example\n\t     * // get line join\n\t     * var lineJoin = shape.lineJoin();\n\t     *\n\t     * // set line join\n\t     * shape.lineJoin('round');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'lineCap');\n\t\n\t  /**\n\t     * get/set line cap.  Can be butt, round, or square\n\t     * @name lineCap\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} lineCap\n\t     * @returns {String}\n\t     * @example\n\t     * // get line cap\n\t     * var lineCap = shape.lineCap();\n\t     *\n\t     * // set line cap\n\t     * shape.lineCap('round');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'sceneFunc');\n\t\n\t  /**\n\t     * get/set scene draw function\n\t     * @name sceneFunc\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Function} drawFunc drawing function\n\t     * @returns {Function}\n\t     * @example\n\t     * // get scene draw function\n\t     * var sceneFunc = shape.sceneFunc();\n\t     *\n\t     * // set scene draw function\n\t     * shape.sceneFunc(function(context) {\n\t     *   context.beginPath();\n\t     *   context.rect(0, 0, this.width(), this.height());\n\t     *   context.closePath();\n\t     *   context.fillStrokeShape(this);\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'hitFunc');\n\t\n\t  /**\n\t     * get/set hit draw function\n\t     * @name hitFunc\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Function} drawFunc drawing function\n\t     * @returns {Function}\n\t     * @example\n\t     * // get hit draw function\n\t     * var hitFunc = shape.hitFunc();\n\t     *\n\t     * // set hit draw function\n\t     * shape.hitFunc(function(context) {\n\t     *   context.beginPath();\n\t     *   context.rect(0, 0, this.width(), this.height());\n\t     *   context.closePath();\n\t     *   context.fillStrokeShape(this);\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'dash');\n\t\n\t  /**\n\t     * get/set dash array for stroke.\n\t     * @name dash\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Array} dash\n\t     * @returns {Array}\n\t     * @example\n\t     *  // apply dashed stroke that is 10px long and 5 pixels apart\n\t     *  line.dash([10, 5]);\n\t     *  // apply dashed stroke that is made up of alternating dashed\n\t     *  // lines that are 10px long and 20px apart, and dots that have\n\t     *  // a radius of 5px and are 20px apart\n\t     *  line.dash([10, 20, 0.001, 20]);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'dashOffset', 0);\n\t\n\t  /**\n\t     * get/set dash offset for stroke.\n\t     * @name dash\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} dash offset\n\t     * @returns {Number}\n\t     * @example\n\t     *  // apply dashed stroke that is 10px long and 5 pixels apart with an offset of 5px\n\t     *  line.dash([10, 5]);\n\t     *  line.dashOffset(5);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowColor');\n\t\n\t  /**\n\t     * get/set shadow color\n\t     * @name shadowColor\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} color\n\t     * @returns {String}\n\t     * @example\n\t     * // get shadow color\n\t     * var shadow = shape.shadowColor();\n\t     *\n\t     * // set shadow color with color string\n\t     * shape.shadowColor('green');\n\t     *\n\t     * // set shadow color with hex\n\t     * shape.shadowColor('#00ff00');\n\t     *\n\t     * // set shadow color with rgb\n\t     * shape.shadowColor('rgb(0,255,0)');\n\t     *\n\t     * // set shadow color with rgba and make it 50% opaque\n\t     * shape.shadowColor('rgba(0,255,0,0.5');\n\t     */\n\t\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'shadowRed',\n\t    0,\n\t    Konva.Validators.RGBComponent\n\t  );\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'shadowGreen',\n\t    0,\n\t    Konva.Validators.RGBComponent\n\t  );\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'shadowBlue',\n\t    0,\n\t    Konva.Validators.RGBComponent\n\t  );\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'shadowAlpha',\n\t    1,\n\t    Konva.Validators.alphaComponent\n\t  );\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowBlur');\n\t\n\t  /**\n\t     * get/set shadow blur\n\t     * @name shadowBlur\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} blur\n\t     * @returns {Number}\n\t     * @example\n\t     * // get shadow blur\n\t     * var shadowBlur = shape.shadowBlur();\n\t     *\n\t     * // set shadow blur\n\t     * shape.shadowBlur(10);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOpacity');\n\t\n\t  /**\n\t     * get/set shadow opacity.  must be a value between 0 and 1\n\t     * @name shadowOpacity\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} opacity\n\t     * @returns {Number}\n\t     * @example\n\t     * // get shadow opacity\n\t     * var shadowOpacity = shape.shadowOpacity();\n\t     *\n\t     * // set shadow opacity\n\t     * shape.shadowOpacity(0.5);\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'shadowOffset', [\n\t    'x',\n\t    'y'\n\t  ]);\n\t\n\t  /**\n\t     * get/set shadow offset\n\t     * @name shadowOffset\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} offset\n\t     * @param {Number} offset.x\n\t     * @param {Number} offset.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get shadow offset\n\t     * var shadowOffset = shape.shadowOffset();\n\t     *\n\t     * // set shadow offset\n\t     * shape.shadowOffset({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetX', 0);\n\t\n\t  /**\n\t     * get/set shadow offset x\n\t     * @name shadowOffsetX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get shadow offset x\n\t     * var shadowOffsetX = shape.shadowOffsetX();\n\t     *\n\t     * // set shadow offset x\n\t     * shape.shadowOffsetX(5);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetY', 0);\n\t\n\t  /**\n\t     * get/set shadow offset y\n\t     * @name shadowOffsetY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get shadow offset y\n\t     * var shadowOffsetY = shape.shadowOffsetY();\n\t     *\n\t     * // set shadow offset y\n\t     * shape.shadowOffsetY(5);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternImage');\n\t\n\t  /**\n\t     * get/set fill pattern image\n\t     * @name fillPatternImage\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Image} image object\n\t     * @returns {Image}\n\t     * @example\n\t     * // get fill pattern image\n\t     * var fillPatternImage = shape.fillPatternImage();\n\t     *\n\t     * // set fill pattern image\n\t     * var imageObj = new Image();\n\t     * imageObj.onload = function() {\n\t     *   shape.fillPatternImage(imageObj);\n\t     * };\n\t     * imageObj.src = 'path/to/image/jpg';\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fill');\n\t\n\t  /**\n\t     * get/set fill color\n\t     * @name fill\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} color\n\t     * @returns {String}\n\t     * @example\n\t     * // get fill color\n\t     * var fill = shape.fill();\n\t     *\n\t     * // set fill color with color string\n\t     * shape.fill('green');\n\t     *\n\t     * // set fill color with hex\n\t     * shape.fill('#00ff00');\n\t     *\n\t     * // set fill color with rgb\n\t     * shape.fill('rgb(0,255,0)');\n\t     *\n\t     * // set fill color with rgba and make it 50% opaque\n\t     * shape.fill('rgba(0,255,0,0.5');\n\t     *\n\t     * // shape without fill\n\t     * shape.fill(null);\n\t     */\n\t\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'fillRed',\n\t    0,\n\t    Konva.Validators.RGBComponent\n\t  );\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'fillGreen',\n\t    0,\n\t    Konva.Validators.RGBComponent\n\t  );\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'fillBlue',\n\t    0,\n\t    Konva.Validators.RGBComponent\n\t  );\n\t  Konva.Factory.addDeprecatedGetterSetter(\n\t    Konva.Shape,\n\t    'fillAlpha',\n\t    1,\n\t    Konva.Validators.alphaComponent\n\t  );\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternX', 0);\n\t\n\t  /**\n\t     * get/set fill pattern x\n\t     * @name fillPatternX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern x\n\t     * var fillPatternX = shape.fillPatternX();\n\t     * // set fill pattern x\n\t     * shape.fillPatternX(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternY', 0);\n\t\n\t  /**\n\t     * get/set fill pattern y\n\t     * @name fillPatternY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern y\n\t     * var fillPatternY = shape.fillPatternY();\n\t     * // set fill pattern y\n\t     * shape.fillPatternY(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientColorStops');\n\t\n\t  /**\n\t     * get/set fill linear gradient color stops\n\t     * @name fillLinearGradientColorStops\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Array} colorStops\n\t     * @returns {Array} colorStops\n\t     * @example\n\t     * // get fill linear gradient color stops\n\t     * var colorStops = shape.fillLinearGradientColorStops();\n\t     *\n\t     * // create a linear gradient that starts with red, changes to blue\n\t     * // halfway through, and then changes to green\n\t     * shape.fillLinearGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Shape,\n\t    'fillRadialGradientStartRadius',\n\t    0\n\t  );\n\t\n\t  /**\n\t     * get/set fill radial gradient start radius\n\t     * @name fillRadialGradientStartRadius\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} radius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radial gradient start radius\n\t     * var startRadius = shape.fillRadialGradientStartRadius();\n\t     *\n\t     * // set radial gradient start radius\n\t     * shape.fillRadialGradientStartRadius(0);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndRadius', 0);\n\t\n\t  /**\n\t     * get/set fill radial gradient end radius\n\t     * @name fillRadialGradientEndRadius\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} radius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radial gradient end radius\n\t     * var endRadius = shape.fillRadialGradientEndRadius();\n\t     *\n\t     * // set radial gradient end radius\n\t     * shape.fillRadialGradientEndRadius(100);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientColorStops');\n\t\n\t  /**\n\t     * get/set fill radial gradient color stops\n\t     * @name fillRadialGradientColorStops\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} colorStops\n\t     * @returns {Array}\n\t     * @example\n\t     * // get fill radial gradient color stops\n\t     * var colorStops = shape.fillRadialGradientColorStops();\n\t     *\n\t     * // create a radial gradient that starts with red, changes to blue\n\t     * // halfway through, and then changes to green\n\t     * shape.fillRadialGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRepeat', 'repeat');\n\t\n\t  /**\n\t     * get/set fill pattern repeat.  Can be 'repeat', 'repeat-x', 'repeat-y', or 'no-repeat'.  The default is 'repeat'\n\t     * @name fillPatternRepeat\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} repeat\n\t     * @returns {String}\n\t     * @example\n\t     * // get fill pattern repeat\n\t     * var repeat = shape.fillPatternRepeat();\n\t     *\n\t     * // repeat pattern in x direction only\n\t     * shape.fillPatternRepeat('repeat-x');\n\t     *\n\t     * // do not repeat the pattern\n\t     * shape.fillPatternRepeat('no repeat');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillEnabled', true);\n\t\n\t  /**\n\t     * get/set fill enabled flag\n\t     * @name fillEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get fill enabled flag\n\t     * var fillEnabled = shape.fillEnabled();\n\t     *\n\t     * // disable fill\n\t     * shape.fillEnabled(false);\n\t     *\n\t     * // enable fill\n\t     * shape.fillEnabled(true);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeEnabled', true);\n\t\n\t  /**\n\t     * get/set stroke enabled flag\n\t     * @name strokeEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get stroke enabled flag\n\t     * var strokeEnabled = shape.strokeEnabled();\n\t     *\n\t     * // disable stroke\n\t     * shape.strokeEnabled(false);\n\t     *\n\t     * // enable stroke\n\t     * shape.strokeEnabled(true);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowEnabled', true);\n\t\n\t  /**\n\t     * get/set shadow enabled flag\n\t     * @name shadowEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get shadow enabled flag\n\t     * var shadowEnabled = shape.shadowEnabled();\n\t     *\n\t     * // disable shadow\n\t     * shape.shadowEnabled(false);\n\t     *\n\t     * // enable shadow\n\t     * shape.shadowEnabled(true);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'dashEnabled', true);\n\t\n\t  /**\n\t     * get/set dash enabled flag\n\t     * @name dashEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get dash enabled flag\n\t     * var dashEnabled = shape.dashEnabled();\n\t     *\n\t     * // disable dash\n\t     * shape.dashEnabled(false);\n\t     *\n\t     * // enable dash\n\t     * shape.dashEnabled(true);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeScaleEnabled', true);\n\t\n\t  /**\n\t     * get/set strokeScale enabled flag\n\t     * @name strokeScaleEnabled\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get stroke scale enabled flag\n\t     * var strokeScaleEnabled = shape.strokeScaleEnabled();\n\t     *\n\t     * // disable stroke scale\n\t     * shape.strokeScaleEnabled(false);\n\t     *\n\t     * // enable stroke scale\n\t     * shape.strokeScaleEnabled(true);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPriority', 'color');\n\t\n\t  /**\n\t     * get/set fill priority.  can be color, pattern, linear-gradient, or radial-gradient.  The default is color.\n\t     *   This is handy if you want to toggle between different fill types.\n\t     * @name fillPriority\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {String} priority\n\t     * @returns {String}\n\t     * @example\n\t     * // get fill priority\n\t     * var fillPriority = shape.fillPriority();\n\t     *\n\t     * // set fill priority\n\t     * shape.fillPriority('linear-gradient');\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternOffset', [\n\t    'x',\n\t    'y'\n\t  ]);\n\t\n\t  /**\n\t     * get/set fill pattern offset\n\t     * @name fillPatternOffset\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} offset\n\t     * @param {Number} offset.x\n\t     * @param {Number} offset.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill pattern offset\n\t     * var patternOffset = shape.fillPatternOffset();\n\t     *\n\t     * // set fill pattern offset\n\t     * shape.fillPatternOffset({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetX', 0);\n\t  /**\n\t     * get/set fill pattern offset x\n\t     * @name fillPatternOffsetX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern offset x\n\t     * var patternOffsetX = shape.fillPatternOffsetX();\n\t     *\n\t     * // set fill pattern offset x\n\t     * shape.fillPatternOffsetX(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetY', 0);\n\t  /**\n\t     * get/set fill pattern offset y\n\t     * @name fillPatternOffsetY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern offset y\n\t     * var patternOffsetY = shape.fillPatternOffsetY();\n\t     *\n\t     * // set fill pattern offset y\n\t     * shape.fillPatternOffsetY(10);\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternScale', [\n\t    'x',\n\t    'y'\n\t  ]);\n\t\n\t  /**\n\t     * get/set fill pattern scale\n\t     * @name fillPatternScale\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} scale\n\t     * @param {Number} scale.x\n\t     * @param {Number} scale.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill pattern scale\n\t     * var patternScale = shape.fillPatternScale();\n\t     *\n\t     * // set fill pattern scale\n\t     * shape.fillPatternScale({\n\t     *   x: 2\n\t     *   y: 2\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleX', 1);\n\t  /**\n\t     * get/set fill pattern scale x\n\t     * @name fillPatternScaleX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern scale x\n\t     * var patternScaleX = shape.fillPatternScaleX();\n\t     *\n\t     * // set fill pattern scale x\n\t     * shape.fillPatternScaleX(2);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleY', 1);\n\t  /**\n\t     * get/set fill pattern scale y\n\t     * @name fillPatternScaleY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill pattern scale y\n\t     * var patternScaleY = shape.fillPatternScaleY();\n\t     *\n\t     * // set fill pattern scale y\n\t     * shape.fillPatternScaleY(2);\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(\n\t    Konva.Shape,\n\t    'fillLinearGradientStartPoint',\n\t    ['x', 'y']\n\t  );\n\t\n\t  /**\n\t     * get/set fill linear gradient start point\n\t     * @name fillLinearGradientStartPoint\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} startPoint\n\t     * @param {Number} startPoint.x\n\t     * @param {Number} startPoint.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill linear gradient start point\n\t     * var startPoint = shape.fillLinearGradientStartPoint();\n\t     *\n\t     * // set fill linear gradient start point\n\t     * shape.fillLinearGradientStartPoint({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Shape,\n\t    'fillLinearGradientStartPointX',\n\t    0\n\t  );\n\t  /**\n\t     * get/set fill linear gradient start point x\n\t     * @name fillLinearGradientStartPointX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill linear gradient start point x\n\t     * var startPointX = shape.fillLinearGradientStartPointX();\n\t     *\n\t     * // set fill linear gradient start point x\n\t     * shape.fillLinearGradientStartPointX(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Shape,\n\t    'fillLinearGradientStartPointY',\n\t    0\n\t  );\n\t  /**\n\t     * get/set fill linear gradient start point y\n\t     * @name fillLinearGradientStartPointY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill linear gradient start point y\n\t     * var startPointY = shape.fillLinearGradientStartPointY();\n\t     *\n\t     * // set fill linear gradient start point y\n\t     * shape.fillLinearGradientStartPointY(20);\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(\n\t    Konva.Shape,\n\t    'fillLinearGradientEndPoint',\n\t    ['x', 'y']\n\t  );\n\t\n\t  /**\n\t     * get/set fill linear gradient end point\n\t     * @name fillLinearGradientEndPoint\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} endPoint\n\t     * @param {Number} endPoint.x\n\t     * @param {Number} endPoint.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill linear gradient end point\n\t     * var endPoint = shape.fillLinearGradientEndPoint();\n\t     *\n\t     * // set fill linear gradient end point\n\t     * shape.fillLinearGradientEndPoint({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointX', 0);\n\t  /**\n\t     * get/set fill linear gradient end point x\n\t     * @name fillLinearGradientEndPointX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill linear gradient end point x\n\t     * var endPointX = shape.fillLinearGradientEndPointX();\n\t     *\n\t     * // set fill linear gradient end point x\n\t     * shape.fillLinearGradientEndPointX(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointY', 0);\n\t  /**\n\t     * get/set fill linear gradient end point y\n\t     * @name fillLinearGradientEndPointY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill linear gradient end point y\n\t     * var endPointY = shape.fillLinearGradientEndPointY();\n\t     *\n\t     * // set fill linear gradient end point y\n\t     * shape.fillLinearGradientEndPointY(20);\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(\n\t    Konva.Shape,\n\t    'fillRadialGradientStartPoint',\n\t    ['x', 'y']\n\t  );\n\t\n\t  /**\n\t     * get/set fill radial gradient start point\n\t     * @name fillRadialGradientStartPoint\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} startPoint\n\t     * @param {Number} startPoint.x\n\t     * @param {Number} startPoint.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill radial gradient start point\n\t     * var startPoint = shape.fillRadialGradientStartPoint();\n\t     *\n\t     * // set fill radial gradient start point\n\t     * shape.fillRadialGradientStartPoint({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Shape,\n\t    'fillRadialGradientStartPointX',\n\t    0\n\t  );\n\t  /**\n\t     * get/set fill radial gradient start point x\n\t     * @name fillRadialGradientStartPointX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill radial gradient start point x\n\t     * var startPointX = shape.fillRadialGradientStartPointX();\n\t     *\n\t     * // set fill radial gradient start point x\n\t     * shape.fillRadialGradientStartPointX(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(\n\t    Konva.Shape,\n\t    'fillRadialGradientStartPointY',\n\t    0\n\t  );\n\t  /**\n\t     * get/set fill radial gradient start point y\n\t     * @name fillRadialGradientStartPointY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill radial gradient start point y\n\t     * var startPointY = shape.fillRadialGradientStartPointY();\n\t     *\n\t     * // set fill radial gradient start point y\n\t     * shape.fillRadialGradientStartPointY(20);\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(\n\t    Konva.Shape,\n\t    'fillRadialGradientEndPoint',\n\t    ['x', 'y']\n\t  );\n\t\n\t  /**\n\t     * get/set fill radial gradient end point\n\t     * @name fillRadialGradientEndPoint\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Object} endPoint\n\t     * @param {Number} endPoint.x\n\t     * @param {Number} endPoint.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get fill radial gradient end point\n\t     * var endPoint = shape.fillRadialGradientEndPoint();\n\t     *\n\t     * // set fill radial gradient end point\n\t     * shape.fillRadialGradientEndPoint({\n\t     *   x: 20\n\t     *   y: 10\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointX', 0);\n\t  /**\n\t     * get/set fill radial gradient end point x\n\t     * @name fillRadialGradientEndPointX\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill radial gradient end point x\n\t     * var endPointX = shape.fillRadialGradientEndPointX();\n\t     *\n\t     * // set fill radial gradient end point x\n\t     * shape.fillRadialGradientEndPointX(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointY', 0);\n\t  /**\n\t     * get/set fill radial gradient end point y\n\t     * @name fillRadialGradientEndPointY\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get fill radial gradient end point y\n\t     * var endPointY = shape.fillRadialGradientEndPointY();\n\t     *\n\t     * // set fill radial gradient end point y\n\t     * shape.fillRadialGradientEndPointY(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRotation', 0);\n\t\n\t  /**\n\t     * get/set fill pattern rotation in degrees\n\t     * @name fillPatternRotation\n\t     * @method\n\t     * @memberof Konva.Shape.prototype\n\t     * @param {Number} rotation\n\t     * @returns {Konva.Shape}\n\t     * @example\n\t     * // get fill pattern rotation\n\t     * var patternRotation = shape.fillPatternRotation();\n\t     *\n\t     * // set fill pattern rotation\n\t     * shape.fillPatternRotation(20);\n\t     */\n\t\n\t  Konva.Factory.backCompat(Konva.Shape, {\n\t    dashArray: 'dash',\n\t    getDashArray: 'getDash',\n\t    setDashArray: 'getDash',\n\t\n\t    drawFunc: 'sceneFunc',\n\t    getDrawFunc: 'getSceneFunc',\n\t    setDrawFunc: 'setSceneFunc',\n\t\n\t    drawHitFunc: 'hitFunc',\n\t    getDrawHitFunc: 'getHitFunc',\n\t    setDrawHitFunc: 'setHitFunc'\n\t  });\n\t\n\t  Konva.Collection.mapMethods(Konva.Shape);\n\t})(Konva);\n\t\n\t(function() {\n\t  'use strict';\n\t  // CONSTANTS\n\t  var STAGE = 'Stage',\n\t    STRING = 'string',\n\t    PX = 'px',\n\t    MOUSEOUT = 'mouseout',\n\t    MOUSELEAVE = 'mouseleave',\n\t    MOUSEOVER = 'mouseover',\n\t    MOUSEENTER = 'mouseenter',\n\t    MOUSEMOVE = 'mousemove',\n\t    MOUSEDOWN = 'mousedown',\n\t    MOUSEUP = 'mouseup',\n\t    CONTEXTMENU = 'contextmenu',\n\t    CLICK = 'click',\n\t    DBL_CLICK = 'dblclick',\n\t    TOUCHSTART = 'touchstart',\n\t    TOUCHEND = 'touchend',\n\t    TAP = 'tap',\n\t    DBL_TAP = 'dbltap',\n\t    TOUCHMOVE = 'touchmove',\n\t    WHEEL = 'wheel',\n\t    CONTENT_MOUSEOUT = 'contentMouseout',\n\t    CONTENT_MOUSEOVER = 'contentMouseover',\n\t    CONTENT_MOUSEMOVE = 'contentMousemove',\n\t    CONTENT_MOUSEDOWN = 'contentMousedown',\n\t    CONTENT_MOUSEUP = 'contentMouseup',\n\t    CONTENT_CONTEXTMENU = 'contentContextmenu',\n\t    CONTENT_CLICK = 'contentClick',\n\t    CONTENT_DBL_CLICK = 'contentDblclick',\n\t    CONTENT_TOUCHSTART = 'contentTouchstart',\n\t    CONTENT_TOUCHEND = 'contentTouchend',\n\t    CONTENT_DBL_TAP = 'contentDbltap',\n\t    CONTENT_TAP = 'contentTap',\n\t    CONTENT_TOUCHMOVE = 'contentTouchmove',\n\t    CONTENT_WHEEL = 'contentWheel',\n\t    DIV = 'div',\n\t    RELATIVE = 'relative',\n\t    KONVA_CONTENT = 'konvajs-content',\n\t    SPACE = ' ',\n\t    UNDERSCORE = '_',\n\t    CONTAINER = 'container',\n\t    EMPTY_STRING = '',\n\t    EVENTS = [\n\t      MOUSEDOWN,\n\t      MOUSEMOVE,\n\t      MOUSEUP,\n\t      MOUSEOUT,\n\t      TOUCHSTART,\n\t      TOUCHMOVE,\n\t      TOUCHEND,\n\t      MOUSEOVER,\n\t      WHEEL,\n\t      CONTEXTMENU\n\t    ],\n\t    // cached variables\n\t    eventsLength = EVENTS.length;\n\t\n\t  function addEvent(ctx, eventName) {\n\t    ctx.content.addEventListener(\n\t      eventName,\n\t      function(evt) {\n\t        ctx[UNDERSCORE + eventName](evt);\n\t      },\n\t      false\n\t    );\n\t  }\n\t\n\t  /**\n\t     * Stage constructor.  A stage is used to contain multiple layers\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Container\n\t     * @param {Object} config\n\t     * @param {String|Element} config.container Container selector or DOM element\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var stage = new Konva.Stage({\n\t         *   width: 500,\n\t         *   height: 800,\n\t         *   container: 'containerId' // or \"#containerId\" or \".containerClass\"\n\t         * });\n\t     */\n\t  Konva.Stage = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Util.addMethods(Konva.Stage, {\n\t    ___init: function(config) {\n\t      this.nodeType = STAGE;\n\t      // call super constructor\n\t      Konva.Container.call(this, config);\n\t      this._id = Konva.idCounter++;\n\t      this._buildDOM();\n\t      this._bindContentEvents();\n\t      this._enableNestedTransforms = false;\n\t      Konva.stages.push(this);\n\t    },\n\t    _validateAdd: function(child) {\n\t      if (child.getType() !== 'Layer') {\n\t        Konva.Util.throw('You may only add layers to the stage.');\n\t      }\n\t    },\n\t    /**\n\t         * set container dom element which contains the stage wrapper div element\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {DomElement} container can pass in a dom element or id string\n\t         */\n\t    setContainer: function(container) {\n\t      if (typeof container === STRING) {\n\t        if (container.charAt(0) === '.') {\n\t          var className = container.slice(1);\n\t          container = Konva.document.getElementsByClassName(className)[0];\n\t        } else {\n\t          var id;\n\t          if (container.charAt(0) !== '#') {\n\t            id = container;\n\t          } else {\n\t            id = container.slice(1);\n\t          }\n\t          container = Konva.document.getElementById(id);\n\t        }\n\t        if (!container) {\n\t          throw 'Can not find container in document with id ' + id;\n\t        }\n\t      }\n\t      this._setAttr(CONTAINER, container);\n\t      return this;\n\t    },\n\t    shouldDrawHit: function() {\n\t      return true;\n\t    },\n\t    draw: function() {\n\t      Konva.Node.prototype.draw.call(this);\n\t      return this;\n\t    },\n\t    /**\n\t         * draw layer scene graphs\n\t         * @name draw\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t\n\t    /**\n\t         * draw layer hit graphs\n\t         * @name drawHit\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t\n\t    /**\n\t         * set height\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {Number} height\n\t         */\n\t    setHeight: function(height) {\n\t      Konva.Node.prototype.setHeight.call(this, height);\n\t      this._resizeDOM();\n\t      return this;\n\t    },\n\t    /**\n\t         * set width\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {Number} width\n\t         */\n\t    setWidth: function(width) {\n\t      Konva.Node.prototype.setWidth.call(this, width);\n\t      this._resizeDOM();\n\t      return this;\n\t    },\n\t    /**\n\t         * clear all layers\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t    clear: function() {\n\t      var layers = this.children,\n\t        len = layers.length,\n\t        n;\n\t\n\t      for (n = 0; n < len; n++) {\n\t        layers[n].clear();\n\t      }\n\t      return this;\n\t    },\n\t    clone: function(obj) {\n\t      if (!obj) {\n\t        obj = {};\n\t      }\n\t      obj.container = Konva.document.createElement(DIV);\n\t      return Konva.Container.prototype.clone.call(this, obj);\n\t    },\n\t    /**\n\t         * destroy stage\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t    destroy: function() {\n\t      var content = this.content;\n\t      Konva.Container.prototype.destroy.call(this);\n\t\n\t      if (content && Konva.Util._isInDocument(content)) {\n\t        this.getContainer().removeChild(content);\n\t      }\n\t      var index = Konva.stages.indexOf(this);\n\t      if (index > -1) {\n\t        Konva.stages.splice(index, 1);\n\t      }\n\t      return this;\n\t    },\n\t    /**\n\t         * get pointer position which can be a touch position or mouse position\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @returns {Object}\n\t         */\n\t    getPointerPosition: function() {\n\t      return this.pointerPos;\n\t    },\n\t    getStage: function() {\n\t      return this;\n\t    },\n\t    /**\n\t         * get stage content div element which has the\n\t         *  the class name \"konvajs-content\"\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t    getContent: function() {\n\t      return this.content;\n\t    },\n\t    /**\n\t         * Creates a composite data URL\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {Object} config\n\t         * @param {Function} [config.callback] function executed when the composite has completed. Deprecated as method is sync now.\n\t         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n\t         *  \"image/png\" is the default\n\t         * @param {Number} [config.x] x position of canvas section\n\t         * @param {Number} [config.y] y position of canvas section\n\t         * @param {Number} [config.width] width of canvas section\n\t         * @param {Number} [config.height] height of canvas section\n\t         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n\t         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n\t         *  is very high quality\n\t         */\n\t    toDataURL: function(config) {\n\t      config = config || {};\n\t\n\t      var mimeType = config.mimeType || null,\n\t        quality = config.quality || null,\n\t        x = config.x || 0,\n\t        y = config.y || 0,\n\t        canvas = new Konva.SceneCanvas({\n\t          width: config.width || this.getWidth(),\n\t          height: config.height || this.getHeight(),\n\t          pixelRatio: config.pixelRatio\n\t        }),\n\t        _context = canvas.getContext()._context,\n\t        layers = this.children;\n\t\n\t      if (x || y) {\n\t        _context.translate(-1 * x, -1 * y);\n\t      }\n\t\n\t      layers.each(function(layer) {\n\t        var width = layer.getCanvas().getWidth();\n\t        var height = layer.getCanvas().getHeight();\n\t        var ratio = layer.getCanvas().getPixelRatio();\n\t        _context.drawImage(\n\t          layer.getCanvas()._canvas,\n\t          0,\n\t          0,\n\t          width / ratio,\n\t          height / ratio\n\t        );\n\t      });\n\t      var src = canvas.toDataURL(mimeType, quality);\n\t\n\t      if (config.callback) {\n\t        config.callback(src);\n\t      }\n\t\n\t      return src;\n\t    },\n\t    /**\n\t         * converts stage into an image.\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {Object} config\n\t         * @param {Function} config.callback function executed when the composite has completed\n\t         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n\t         *  \"image/png\" is the default\n\t         * @param {Number} [config.x] x position of canvas section\n\t         * @param {Number} [config.y] y position of canvas section\n\t         * @param {Number} [config.width] width of canvas section\n\t         * @param {Number} [config.height] height of canvas section\n\t         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n\t         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n\t         *  is very high quality\n\t         */\n\t    toImage: function(config) {\n\t      var cb = config.callback;\n\t\n\t      config.callback = function(dataUrl) {\n\t        Konva.Util._getImage(dataUrl, function(img) {\n\t          cb(img);\n\t        });\n\t      };\n\t      this.toDataURL(config);\n\t    },\n\t    /**\n\t         * get visible intersection shape. This is the preferred\n\t         *  method for determining if a point intersects a shape or not\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {Object} pos\n\t         * @param {Number} pos.x\n\t         * @param {Number} pos.y\n\t         * @param {String} [selector]\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * var shape = stage.getIntersection({x: 50, y: 50});\n\t         * // or if you interested in shape parent:\n\t         * var group = stage.getIntersection({x: 50, y: 50}, 'Group');\n\t         */\n\t    getIntersection: function(pos, selector) {\n\t      var layers = this.getChildren(),\n\t        len = layers.length,\n\t        end = len - 1,\n\t        n,\n\t        shape;\n\t\n\t      for (n = end; n >= 0; n--) {\n\t        shape = layers[n].getIntersection(pos, selector);\n\t        if (shape) {\n\t          return shape;\n\t        }\n\t      }\n\t\n\t      return null;\n\t    },\n\t    _resizeDOM: function() {\n\t      if (this.content) {\n\t        var width = this.getWidth(),\n\t          height = this.getHeight(),\n\t          layers = this.getChildren(),\n\t          len = layers.length,\n\t          n,\n\t          layer;\n\t\n\t        // set content dimensions\n\t        this.content.style.width = width + PX;\n\t        this.content.style.height = height + PX;\n\t\n\t        this.bufferCanvas.setSize(width, height);\n\t        this.bufferHitCanvas.setSize(width, height);\n\t\n\t        // set layer dimensions\n\t        for (n = 0; n < len; n++) {\n\t          layer = layers[n];\n\t          layer.setSize(width, height);\n\t          layer.draw();\n\t        }\n\t      }\n\t    },\n\t    /**\n\t         * add layer or layers to stage\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         * @param {...Konva.Layer} layer\n\t         * @example\n\t         * stage.add(layer1, layer2, layer3);\n\t         */\n\t    add: function(layer) {\n\t      if (arguments.length > 1) {\n\t        for (var i = 0; i < arguments.length; i++) {\n\t          this.add(arguments[i]);\n\t        }\n\t        return this;\n\t      }\n\t      Konva.Container.prototype.add.call(this, layer);\n\t      layer._setCanvasSize(this.width(), this.height());\n\t\n\t      // draw layer and append canvas to container\n\t      layer.draw();\n\t\n\t      if (Konva.isBrowser) {\n\t        this.content.appendChild(layer.canvas._canvas);\n\t      }\n\t\n\t      // chainable\n\t      return this;\n\t    },\n\t    getParent: function() {\n\t      return null;\n\t    },\n\t    getLayer: function() {\n\t      return null;\n\t    },\n\t    /**\n\t         * returns a {@link Konva.Collection} of layers\n\t         * @method\n\t         * @memberof Konva.Stage.prototype\n\t         */\n\t    getLayers: function() {\n\t      return this.getChildren();\n\t    },\n\t    _bindContentEvents: function() {\n\t      if (!Konva.isBrowser) {\n\t        return;\n\t      }\n\t      for (var n = 0; n < eventsLength; n++) {\n\t        addEvent(this, EVENTS[n]);\n\t      }\n\t    },\n\t    _mouseover: function(evt) {\n\t      if (!Konva.UA.mobile) {\n\t        this._setPointerPosition(evt);\n\t        this._fire(CONTENT_MOUSEOVER, { evt: evt });\n\t      }\n\t    },\n\t    _mouseout: function(evt) {\n\t      if (!Konva.UA.mobile) {\n\t        this._setPointerPosition(evt);\n\t        var targetShape = this.targetShape;\n\t\n\t        if (targetShape && !Konva.isDragging()) {\n\t          targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n\t          targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n\t          this.targetShape = null;\n\t        }\n\t        this.pointerPos = undefined;\n\t\n\t        this._fire(CONTENT_MOUSEOUT, { evt: evt });\n\t      }\n\t    },\n\t    _mousemove: function(evt) {\n\t      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n\t      if (Konva.UA.ieMobile) {\n\t        return this._touchmove(evt);\n\t      }\n\t      // workaround fake mousemove event in chrome browser https://code.google.com/p/chromium/issues/detail?id=161464\n\t      if (\n\t        (typeof evt.movementX !== 'undefined' ||\n\t          typeof evt.movementY !== 'undefined') &&\n\t        evt.movementY === 0 &&\n\t        evt.movementX === 0\n\t      ) {\n\t        return null;\n\t      }\n\t      if (Konva.UA.mobile) {\n\t        return null;\n\t      }\n\t      this._setPointerPosition(evt);\n\t      var shape;\n\t\n\t      if (!Konva.isDragging()) {\n\t        shape = this.getIntersection(this.getPointerPosition());\n\t        if (shape && shape.isListening()) {\n\t          if (\n\t            !Konva.isDragging() &&\n\t            (!this.targetShape || this.targetShape._id !== shape._id)\n\t          ) {\n\t            if (this.targetShape) {\n\t              this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt }, shape);\n\t              this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt }, shape);\n\t            }\n\t            shape._fireAndBubble(MOUSEOVER, { evt: evt }, this.targetShape);\n\t            shape._fireAndBubble(MOUSEENTER, { evt: evt }, this.targetShape);\n\t            this.targetShape = shape;\n\t          } else {\n\t            shape._fireAndBubble(MOUSEMOVE, { evt: evt });\n\t          }\n\t        } else {\n\t          /*\n\t                 * if no shape was detected, clear target shape and try\n\t                 * to run mouseout from previous target shape\n\t                 */\n\t          if (this.targetShape && !Konva.isDragging()) {\n\t            this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n\t            this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n\t            this.targetShape = null;\n\t          }\n\t        }\n\t\n\t        // content event\n\t        this._fire(CONTENT_MOUSEMOVE, { evt: evt });\n\t      }\n\t\n\t      // always call preventDefault for desktop events because some browsers\n\t      // try to drag and drop the canvas element\n\t      if (evt.preventDefault) {\n\t        evt.preventDefault();\n\t      }\n\t    },\n\t    _mousedown: function(evt) {\n\t      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n\t      if (Konva.UA.ieMobile) {\n\t        return this._touchstart(evt);\n\t      }\n\t      if (!Konva.UA.mobile) {\n\t        this._setPointerPosition(evt);\n\t        var shape = this.getIntersection(this.getPointerPosition());\n\t\n\t        Konva.listenClickTap = true;\n\t\n\t        if (shape && shape.isListening()) {\n\t          this.clickStartShape = shape;\n\t          shape._fireAndBubble(MOUSEDOWN, { evt: evt });\n\t        }\n\t\n\t        // content event\n\t        this._fire(CONTENT_MOUSEDOWN, { evt: evt });\n\t      }\n\t\n\t      // always call preventDefault for desktop events because some browsers\n\t      // try to drag and drop the canvas element\n\t      if (evt.preventDefault) {\n\t        evt.preventDefault();\n\t      }\n\t    },\n\t    _mouseup: function(evt) {\n\t      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n\t      if (Konva.UA.ieMobile) {\n\t        return this._touchend(evt);\n\t      }\n\t      if (!Konva.UA.mobile) {\n\t        this._setPointerPosition(evt);\n\t        var shape = this.getIntersection(this.getPointerPosition()),\n\t          clickStartShape = this.clickStartShape,\n\t          clickEndShape = this.clickEndShape,\n\t          fireDblClick = false,\n\t          dd = Konva.DD;\n\t\n\t        if (Konva.inDblClickWindow) {\n\t          fireDblClick = true;\n\t          Konva.inDblClickWindow = false;\n\t        } else if (!dd || !dd.justDragged) {\n\t          // don't set inDblClickWindow after dragging\n\t          Konva.inDblClickWindow = true;\n\t        } else if (dd) {\n\t          dd.justDragged = false;\n\t        }\n\t\n\t        setTimeout(function() {\n\t          Konva.inDblClickWindow = false;\n\t        }, Konva.dblClickWindow);\n\t\n\t        if (shape && shape.isListening()) {\n\t          this.clickEndShape = shape;\n\t          shape._fireAndBubble(MOUSEUP, { evt: evt });\n\t\n\t          // detect if click or double click occurred\n\t          if (\n\t            Konva.listenClickTap &&\n\t            clickStartShape &&\n\t            clickStartShape._id === shape._id\n\t          ) {\n\t            shape._fireAndBubble(CLICK, { evt: evt });\n\t\n\t            if (\n\t              fireDblClick &&\n\t              clickEndShape &&\n\t              clickEndShape._id === shape._id\n\t            ) {\n\t              shape._fireAndBubble(DBL_CLICK, { evt: evt });\n\t            }\n\t          }\n\t        }\n\t        // content events\n\t        this._fire(CONTENT_MOUSEUP, { evt: evt });\n\t        if (Konva.listenClickTap) {\n\t          this._fire(CONTENT_CLICK, { evt: evt });\n\t          if (fireDblClick) {\n\t            this._fire(CONTENT_DBL_CLICK, { evt: evt });\n\t          }\n\t        }\n\t\n\t        Konva.listenClickTap = false;\n\t      }\n\t\n\t      // always call preventDefault for desktop events because some browsers\n\t      // try to drag and drop the canvas element\n\t      if (evt.preventDefault) {\n\t        evt.preventDefault();\n\t      }\n\t    },\n\t    _contextmenu: function(evt) {\n\t      this._fire(CONTENT_CONTEXTMENU, { evt: evt });\n\t    },\n\t    _touchstart: function(evt) {\n\t      this._setPointerPosition(evt);\n\t      var shape = this.getIntersection(this.getPointerPosition());\n\t\n\t      Konva.listenClickTap = true;\n\t\n\t      if (shape && shape.isListening()) {\n\t        this.tapStartShape = shape;\n\t        shape._fireAndBubble(TOUCHSTART, { evt: evt });\n\t\n\t        // only call preventDefault if the shape is listening for events\n\t        if (\n\t          shape.isListening() &&\n\t          shape.preventDefault() &&\n\t          evt.preventDefault\n\t        ) {\n\t          evt.preventDefault();\n\t        }\n\t      }\n\t      // content event\n\t      this._fire(CONTENT_TOUCHSTART, { evt: evt });\n\t    },\n\t    _touchend: function(evt) {\n\t      this._setPointerPosition(evt);\n\t      var shape = this.getIntersection(this.getPointerPosition()),\n\t        fireDblClick = false;\n\t\n\t      if (Konva.inDblClickWindow) {\n\t        fireDblClick = true;\n\t        Konva.inDblClickWindow = false;\n\t      } else {\n\t        Konva.inDblClickWindow = true;\n\t      }\n\t\n\t      setTimeout(function() {\n\t        Konva.inDblClickWindow = false;\n\t      }, Konva.dblClickWindow);\n\t\n\t      if (shape && shape.isListening()) {\n\t        shape._fireAndBubble(TOUCHEND, { evt: evt });\n\t\n\t        // detect if tap or double tap occurred\n\t        if (\n\t          Konva.listenClickTap &&\n\t          this.tapStartShape &&\n\t          shape._id === this.tapStartShape._id\n\t        ) {\n\t          shape._fireAndBubble(TAP, { evt: evt });\n\t\n\t          if (fireDblClick) {\n\t            shape._fireAndBubble(DBL_TAP, { evt: evt });\n\t          }\n\t        }\n\t        // only call preventDefault if the shape is listening for events\n\t        if (\n\t          shape.isListening() &&\n\t          shape.preventDefault() &&\n\t          evt.preventDefault\n\t        ) {\n\t          evt.preventDefault();\n\t        }\n\t      }\n\t      // content events\n\t      this._fire(CONTENT_TOUCHEND, { evt: evt });\n\t      if (Konva.listenClickTap) {\n\t        this._fire(CONTENT_TAP, { evt: evt });\n\t        if (fireDblClick) {\n\t          this._fire(CONTENT_DBL_TAP, { evt: evt });\n\t        }\n\t      }\n\t\n\t      Konva.listenClickTap = false;\n\t    },\n\t    _touchmove: function(evt) {\n\t      this._setPointerPosition(evt);\n\t      var dd = Konva.DD,\n\t        shape;\n\t      if (!Konva.isDragging()) {\n\t        shape = this.getIntersection(this.getPointerPosition());\n\t        if (shape && shape.isListening()) {\n\t          shape._fireAndBubble(TOUCHMOVE, { evt: evt });\n\t          // only call preventDefault if the shape is listening for events\n\t          if (\n\t            shape.isListening() &&\n\t            shape.preventDefault() &&\n\t            evt.preventDefault\n\t          ) {\n\t            evt.preventDefault();\n\t          }\n\t        }\n\t        this._fire(CONTENT_TOUCHMOVE, { evt: evt });\n\t      }\n\t      if (dd) {\n\t        if (Konva.isDragging() && Konva.DD.node.preventDefault()) {\n\t          evt.preventDefault();\n\t        }\n\t      }\n\t    },\n\t    _wheel: function(evt) {\n\t      this._setPointerPosition(evt);\n\t      var shape = this.getIntersection(this.getPointerPosition());\n\t\n\t      if (shape && shape.isListening()) {\n\t        shape._fireAndBubble(WHEEL, { evt: evt });\n\t      }\n\t      this._fire(CONTENT_WHEEL, { evt: evt });\n\t    },\n\t    _setPointerPosition: function(evt) {\n\t      var contentPosition = this._getContentPosition(),\n\t        x = null,\n\t        y = null;\n\t      evt = evt ? evt : window.event;\n\t\n\t      // touch events\n\t      if (evt.touches !== undefined) {\n\t        // currently, only handle one finger\n\t        if (evt.touches.length > 0) {\n\t          var touch = evt.touches[0];\n\t          // get the information for finger #1\n\t          x = touch.clientX - contentPosition.left;\n\t          y = touch.clientY - contentPosition.top;\n\t        }\n\t      } else {\n\t        // mouse events\n\t        x = evt.clientX - contentPosition.left;\n\t        y = evt.clientY - contentPosition.top;\n\t      }\n\t      if (x !== null && y !== null) {\n\t        this.pointerPos = {\n\t          x: x,\n\t          y: y\n\t        };\n\t      }\n\t    },\n\t    _getContentPosition: function() {\n\t      var rect = this.content.getBoundingClientRect\n\t        ? this.content.getBoundingClientRect()\n\t        : { top: 0, left: 0 };\n\t      return {\n\t        top: rect.top,\n\t        left: rect.left\n\t      };\n\t    },\n\t    _buildDOM: function() {\n\t      // the buffer canvas pixel ratio must be 1 because it is used as an\n\t      // intermediate canvas before copying the result onto a scene canvas.\n\t      // not setting it to 1 will result in an over compensation\n\t      this.bufferCanvas = new Konva.SceneCanvas();\n\t      this.bufferHitCanvas = new Konva.HitCanvas({ pixelRatio: 1 });\n\t\n\t      if (!Konva.isBrowser) {\n\t        return;\n\t      }\n\t      var container = this.getContainer();\n\t      if (!container) {\n\t        throw 'Stage has no container. A container is required.';\n\t      }\n\t      // clear content inside container\n\t      container.innerHTML = EMPTY_STRING;\n\t\n\t      // content\n\t      this.content = Konva.document.createElement(DIV);\n\t      this.content.style.position = RELATIVE;\n\t      this.content.className = KONVA_CONTENT;\n\t      this.content.setAttribute('role', 'presentation');\n\t\n\t      container.appendChild(this.content);\n\t\n\t      this._resizeDOM();\n\t    },\n\t    _onContent: function(typesStr, handler) {\n\t      var types = typesStr.split(SPACE),\n\t        len = types.length,\n\t        n,\n\t        baseEvent;\n\t\n\t      for (n = 0; n < len; n++) {\n\t        baseEvent = types[n];\n\t        this.content.addEventListener(baseEvent, handler, false);\n\t      }\n\t    },\n\t    // currently cache function is now working for stage, because stage has no its own canvas element\n\t    // TODO: may be it is better to cache all children layers?\n\t    cache: function() {\n\t      Konva.Util.warn(\n\t        'Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.'\n\t      );\n\t    },\n\t    clearCache: function() {}\n\t  });\n\t  Konva.Util.extend(Konva.Stage, Konva.Container);\n\t\n\t  // add getters and setters\n\t  Konva.Factory.addGetter(Konva.Stage, 'container');\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Stage, 'container');\n\t\n\t  /**\n\t     * get container DOM element\n\t     * @name container\n\t     * @method\n\t     * @memberof Konva.Stage.prototype\n\t     * @returns {DomElement} container\n\t     * @example\n\t     * // get container\n\t     * var container = stage.container();\n\t     * // set container\n\t     * var container = document.createElement('div');\n\t     * body.appendChild(container);\n\t     * stage.container(container);\n\t     */\n\t})();\n\t\n\t(function(Konva) {\n\t  'use strict';\n\t  /**\n\t     * BaseLayer constructor.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Container\n\t     * @param {Object} config\n\t     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n\t     * to clear the canvas before each layer draw.  The default value is true.\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * * @param {Object} [config.clip] set clip\n\t     * @param {Number} [config.clipX] set clip x\n\t     * @param {Number} [config.clipY] set clip y\n\t     * @param {Number} [config.clipWidth] set clip width\n\t     * @param {Number} [config.clipHeight] set clip height\n\t     * @param {Function} [config.clipFunc] set clip func\n\t\n\t     */\n\t  Konva.BaseLayer = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Util.addMethods(Konva.BaseLayer, {\n\t    ___init: function(config) {\n\t      this.nodeType = 'Layer';\n\t      Konva.Container.call(this, config);\n\t    },\n\t    createPNGStream: function() {\n\t      return this.canvas._canvas.createPNGStream();\n\t    },\n\t    /**\n\t     * get layer canvas\n\t     * @method\n\t     * @memberof Konva.BaseLayer.prototype\n\t     */\n\t    getCanvas: function() {\n\t      return this.canvas;\n\t    },\n\t    /**\n\t     * get layer hit canvas\n\t     * @method\n\t     * @memberof Konva.BaseLayer.prototype\n\t     */\n\t    getHitCanvas: function() {\n\t      return this.hitCanvas;\n\t    },\n\t    /**\n\t     * get layer canvas context\n\t     * @method\n\t     * @memberof Konva.BaseLayer.prototype\n\t     */\n\t    getContext: function() {\n\t      return this.getCanvas().getContext();\n\t    },\n\t    /**\n\t     * clear scene and hit canvas contexts tied to the layer\n\t     * @method\n\t     * @memberof Konva.BaseLayer.prototype\n\t     * @param {Object} [bounds]\n\t     * @param {Number} [bounds.x]\n\t     * @param {Number} [bounds.y]\n\t     * @param {Number} [bounds.width]\n\t     * @param {Number} [bounds.height]\n\t     * @example\n\t     * layer.clear();\n\t     * layer.clear({\n\t     *   x : 0,\n\t     *   y : 0,\n\t     *   width : 100,\n\t     *   height : 100\n\t     * });\n\t     */\n\t    clear: function(bounds) {\n\t      this.getContext().clear(bounds);\n\t      return this;\n\t    },\n\t    clearHitCache: function() {\n\t      this._hitImageData = undefined;\n\t    },\n\t    // extend Node.prototype.setZIndex\n\t    setZIndex: function(index) {\n\t      Konva.Node.prototype.setZIndex.call(this, index);\n\t      var stage = this.getStage();\n\t      if (stage) {\n\t        stage.content.removeChild(this.getCanvas()._canvas);\n\t\n\t        if (index < stage.getChildren().length - 1) {\n\t          stage.content.insertBefore(\n\t            this.getCanvas()._canvas,\n\t            stage.getChildren()[index + 1].getCanvas()._canvas\n\t          );\n\t        } else {\n\t          stage.content.appendChild(this.getCanvas()._canvas);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t    // extend Node.prototype.moveToTop\n\t    moveToTop: function() {\n\t      Konva.Node.prototype.moveToTop.call(this);\n\t      var stage = this.getStage();\n\t      if (stage) {\n\t        stage.content.removeChild(this.getCanvas()._canvas);\n\t        stage.content.appendChild(this.getCanvas()._canvas);\n\t      }\n\t      return this;\n\t    },\n\t    // extend Node.prototype.moveUp\n\t    moveUp: function() {\n\t      var moved = Konva.Node.prototype.moveUp.call(this);\n\t      if (!moved) {\n\t        return this;\n\t      }\n\t      var stage = this.getStage();\n\t      if (!stage) {\n\t        return this;\n\t      }\n\t      stage.content.removeChild(this.getCanvas()._canvas);\n\t\n\t      if (this.index < stage.getChildren().length - 1) {\n\t        stage.content.insertBefore(\n\t          this.getCanvas()._canvas,\n\t          stage.getChildren()[this.index + 1].getCanvas()._canvas\n\t        );\n\t      } else {\n\t        stage.content.appendChild(this.getCanvas()._canvas);\n\t      }\n\t      return this;\n\t    },\n\t    // extend Node.prototype.moveDown\n\t    moveDown: function() {\n\t      if (Konva.Node.prototype.moveDown.call(this)) {\n\t        var stage = this.getStage();\n\t        if (stage) {\n\t          var children = stage.getChildren();\n\t          stage.content.removeChild(this.getCanvas()._canvas);\n\t          stage.content.insertBefore(\n\t            this.getCanvas()._canvas,\n\t            children[this.index + 1].getCanvas()._canvas\n\t          );\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t    // extend Node.prototype.moveToBottom\n\t    moveToBottom: function() {\n\t      if (Konva.Node.prototype.moveToBottom.call(this)) {\n\t        var stage = this.getStage();\n\t        if (stage) {\n\t          var children = stage.getChildren();\n\t          stage.content.removeChild(this.getCanvas()._canvas);\n\t          stage.content.insertBefore(\n\t            this.getCanvas()._canvas,\n\t            children[1].getCanvas()._canvas\n\t          );\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t    getLayer: function() {\n\t      return this;\n\t    },\n\t    remove: function() {\n\t      var _canvas = this.getCanvas()._canvas;\n\t\n\t      Konva.Node.prototype.remove.call(this);\n\t\n\t      if (_canvas && _canvas.parentNode && Konva.Util._isInDocument(_canvas)) {\n\t        _canvas.parentNode.removeChild(_canvas);\n\t      }\n\t      return this;\n\t    },\n\t    getStage: function() {\n\t      return this.parent;\n\t    },\n\t    setSize: function(width, height) {\n\t      this.canvas.setSize(width, height);\n\t      return this;\n\t    },\n\t    /**\n\t     * get/set width of layer.getter return width of stage. setter doing nothing.\n\t     * if you want change width use `stage.width(value);`\n\t     * @name width\n\t     * @method\n\t     * @memberof Konva.BaseLayer.prototype\n\t     * @returns {Number}\n\t     * @example\n\t     * var width = layer.width();\n\t     */\n\t    getWidth: function() {\n\t      if (this.parent) {\n\t        return this.parent.getWidth();\n\t      }\n\t    },\n\t    setWidth: function() {\n\t      Konva.Util.warn(\n\t        'Can not change width of layer. Use \"stage.width(value)\" function instead.'\n\t      );\n\t    },\n\t    /**\n\t     * get/set height of layer.getter return height of stage. setter doing nothing.\n\t     * if you want change height use `stage.height(value);`\n\t     * @name height\n\t     * @method\n\t     * @memberof Konva.BaseLayer.prototype\n\t     * @returns {Number}\n\t     * @example\n\t     * var height = layer.height();\n\t     */\n\t    getHeight: function() {\n\t      if (this.parent) {\n\t        return this.parent.getHeight();\n\t      }\n\t    },\n\t    setHeight: function() {\n\t      Konva.Util.warn(\n\t        'Can not change height of layer. Use \"stage.height(value)\" function instead.'\n\t      );\n\t    },\n\t    // the apply transform method is handled by the Layer and FastLayer class\n\t    // because it is up to the layer to decide if an absolute or relative transform\n\t    // should be used\n\t    _applyTransform: function(shape, context, top) {\n\t      var m = shape.getAbsoluteTransform(top).getMatrix();\n\t      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\t    }\n\t  });\n\t  Konva.Util.extend(Konva.BaseLayer, Konva.Container);\n\t\n\t  // add getters and setters\n\t  Konva.Factory.addGetterSetter(Konva.BaseLayer, 'clearBeforeDraw', true);\n\t  /**\n\t   * get/set clearBeforeDraw flag which determines if the layer is cleared or not\n\t   *  before drawing\n\t   * @name clearBeforeDraw\n\t   * @method\n\t   * @memberof Konva.BaseLayer.prototype\n\t   * @param {Boolean} clearBeforeDraw\n\t   * @returns {Boolean}\n\t   * @example\n\t   * // get clearBeforeDraw flag\n\t   * var clearBeforeDraw = layer.clearBeforeDraw();\n\t   *\n\t   * // disable clear before draw\n\t   * layer.clearBeforeDraw(false);\n\t   *\n\t   * // enable clear before draw\n\t   * layer.clearBeforeDraw(true);\n\t   */\n\t\n\t  Konva.Collection.mapMethods(Konva.BaseLayer);\n\t})(Konva);\n\t\n\t(function() {\n\t  'use strict';\n\t  // constants\n\t  var HASH = '#',\n\t    BEFORE_DRAW = 'beforeDraw',\n\t    DRAW = 'draw',\n\t    /*\n\t         * 2 - 3 - 4\n\t         * |       |\n\t         * 1 - 0   5\n\t         *         |\n\t         * 8 - 7 - 6\n\t         */\n\t    INTERSECTION_OFFSETS = [\n\t      { x: 0, y: 0 }, // 0\n\t      { x: -1, y: 0 }, // 1\n\t      { x: -1, y: -1 }, // 2\n\t      { x: 0, y: -1 }, // 3\n\t      { x: 1, y: -1 }, // 4\n\t      { x: 1, y: 0 }, // 5\n\t      { x: 1, y: 1 }, // 6\n\t      { x: 0, y: 1 }, // 7\n\t      { x: -1, y: 1 } // 8\n\t    ],\n\t    INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\n\t\n\t  /**\n\t     * Layer constructor.  Layers are tied to their own canvas element and are used\n\t     * to contain groups or shapes.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.BaseLayer\n\t     * @param {Object} config\n\t     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n\t     * to clear the canvas before each layer draw.  The default value is true.\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * * @param {Object} [config.clip] set clip\n\t     * @param {Number} [config.clipX] set clip x\n\t     * @param {Number} [config.clipY] set clip y\n\t     * @param {Number} [config.clipWidth] set clip width\n\t     * @param {Number} [config.clipHeight] set clip height\n\t     * @param {Function} [config.clipFunc] set clip func\n\t\n\t     * @example\n\t     * var layer = new Konva.Layer();\n\t     */\n\t  Konva.Layer = function(config) {\n\t    this.____init(config);\n\t  };\n\t\n\t  Konva.Util.addMethods(Konva.Layer, {\n\t    ____init: function(config) {\n\t      this.nodeType = 'Layer';\n\t      this.canvas = new Konva.SceneCanvas();\n\t      this.hitCanvas = new Konva.HitCanvas({\n\t        pixelRatio: 1\n\t      });\n\t      // call super constructor\n\t      Konva.BaseLayer.call(this, config);\n\t    },\n\t    _setCanvasSize: function(width, height) {\n\t      this.canvas.setSize(width, height);\n\t      this.hitCanvas.setSize(width, height);\n\t    },\n\t    _validateAdd: function(child) {\n\t      var type = child.getType();\n\t      if (type !== 'Group' && type !== 'Shape') {\n\t        Konva.Util.throw('You may only add groups and shapes to a layer.');\n\t      }\n\t    },\n\t    /**\n\t         * get visible intersection shape. This is the preferred\n\t         * method for determining if a point intersects a shape or not\n\t         * also you may pass optional selector parametr to return ancestor of intersected shape\n\t         * @method\n\t         * @memberof Konva.Layer.prototype\n\t         * @param {Object} pos\n\t         * @param {Number} pos.x\n\t         * @param {Number} pos.y\n\t         * @param {String} [selector]\n\t         * @returns {Konva.Node}\n\t         * @example\n\t         * var shape = layer.getIntersection({x: 50, y: 50});\n\t         * // or if you interested in shape parent:\n\t         * var group = layer.getIntersection({x: 50, y: 50}, 'Group');\n\t         */\n\t    getIntersection: function(pos, selector) {\n\t      var obj, i, intersectionOffset, shape;\n\t\n\t      if (!this.hitGraphEnabled() || !this.isVisible()) {\n\t        return null;\n\t      }\n\t      // in some cases antialiased area may be bigger than 1px\n\t      // it is possible if we will cache node, then scale it a lot\n\t      // TODO: check { 0; 0 } point before loop, and remove it from INTERSECTION_OFFSETS.\n\t      var spiralSearchDistance = 1;\n\t      var continueSearch = false;\n\t      while (true) {\n\t        for (i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n\t          intersectionOffset = INTERSECTION_OFFSETS[i];\n\t          obj = this._getIntersection({\n\t            x: pos.x + intersectionOffset.x * spiralSearchDistance,\n\t            y: pos.y + intersectionOffset.y * spiralSearchDistance\n\t          });\n\t          shape = obj.shape;\n\t          if (shape && selector) {\n\t            return shape.findAncestor(selector, true);\n\t          } else if (shape) {\n\t            return shape;\n\t          }\n\t          // we should continue search if we found antialiased pixel\n\t          // that means our node somewhere very close\n\t          continueSearch = !!obj.antialiased;\n\t          // stop search if found empty pixel\n\t          if (!obj.antialiased) {\n\t            break;\n\t          }\n\t        }\n\t        // if no shape, and no antialiased pixel, we should end searching\n\t        if (continueSearch) {\n\t          spiralSearchDistance += 1;\n\t        } else {\n\t          return null;\n\t        }\n\t      }\n\t    },\n\t    _getImageData: function(x, y) {\n\t      var width = this.hitCanvas.width || 1,\n\t        height = this.hitCanvas.height || 1,\n\t        index = Math.round(y) * width + Math.round(x);\n\t\n\t      if (!this._hitImageData) {\n\t        this._hitImageData = this.hitCanvas.context.getImageData(\n\t          0,\n\t          0,\n\t          width,\n\t          height\n\t        );\n\t      }\n\t\n\t      return [\n\t        this._hitImageData.data[4 * index + 0], // Red\n\t        this._hitImageData.data[4 * index + 1], // Green\n\t        this._hitImageData.data[4 * index + 2], // Blue\n\t        this._hitImageData.data[4 * index + 3] // Alpha\n\t      ];\n\t    },\n\t    _getIntersection: function(pos) {\n\t      var ratio = this.hitCanvas.pixelRatio;\n\t      var p = this.hitCanvas.context.getImageData(\n\t        Math.round(pos.x * ratio),\n\t        Math.round(pos.y * ratio),\n\t        1,\n\t        1\n\t      ).data,\n\t        p3 = p[3],\n\t        colorKey,\n\t        shape;\n\t      // fully opaque pixel\n\t      if (p3 === 255) {\n\t        colorKey = Konva.Util._rgbToHex(p[0], p[1], p[2]);\n\t        shape = Konva.shapes[HASH + colorKey];\n\t        if (shape) {\n\t          return {\n\t            shape: shape\n\t          };\n\t        }\n\t        return {\n\t          antialiased: true\n\t        };\n\t      } else if (p3 > 0) {\n\t        // antialiased pixel\n\t        return {\n\t          antialiased: true\n\t        };\n\t      }\n\t      // empty pixel\n\t      return {};\n\t    },\n\t    drawScene: function(can, top) {\n\t      var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n\t\n\t      this._fire(BEFORE_DRAW, {\n\t        node: this\n\t      });\n\t\n\t      if (this.getClearBeforeDraw()) {\n\t        canvas.getContext().clear();\n\t      }\n\t\n\t      Konva.Container.prototype.drawScene.call(this, canvas, top);\n\t\n\t      this._fire(DRAW, {\n\t        node: this\n\t      });\n\t\n\t      return this;\n\t    },\n\t    drawHit: function(can, top) {\n\t      var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n\t\n\t      if (layer && layer.getClearBeforeDraw()) {\n\t        layer.getHitCanvas().getContext().clear();\n\t      }\n\t\n\t      Konva.Container.prototype.drawHit.call(this, canvas, top);\n\t      this.imageData = null; // Clear imageData cache\n\t      return this;\n\t    },\n\t    clear: function(bounds) {\n\t      Konva.BaseLayer.prototype.clear.call(this, bounds);\n\t      this.getHitCanvas().getContext().clear(bounds);\n\t      this.imageData = null; // Clear getImageData cache\n\t      return this;\n\t    },\n\t    // extend Node.prototype.setVisible\n\t    setVisible: function(visible) {\n\t      Konva.Node.prototype.setVisible.call(this, visible);\n\t      if (visible) {\n\t        this.getCanvas()._canvas.style.display = 'block';\n\t        this.hitCanvas._canvas.style.display = 'block';\n\t      } else {\n\t        this.getCanvas()._canvas.style.display = 'none';\n\t        this.hitCanvas._canvas.style.display = 'none';\n\t      }\n\t      return this;\n\t    },\n\t    /**\n\t         * enable hit graph\n\t         * @name enableHitGraph\n\t         * @method\n\t         * @memberof Konva.Layer.prototype\n\t         * @returns {Layer}\n\t         */\n\t    enableHitGraph: function() {\n\t      this.setHitGraphEnabled(true);\n\t      return this;\n\t    },\n\t    /**\n\t         * disable hit graph\n\t         * @name disableHitGraph\n\t         * @method\n\t         * @memberof Konva.Layer.prototype\n\t         * @returns {Layer}\n\t         */\n\t    disableHitGraph: function() {\n\t      this.setHitGraphEnabled(false);\n\t      return this;\n\t    },\n\t    setSize: function(width, height) {\n\t      Konva.BaseLayer.prototype.setSize.call(this, width, height);\n\t      this.hitCanvas.setSize(width, height);\n\t      return this;\n\t    }\n\t  });\n\t  Konva.Util.extend(Konva.Layer, Konva.BaseLayer);\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Layer, 'hitGraphEnabled', true);\n\t  /**\n\t     * get/set hitGraphEnabled flag.  Disabling the hit graph will greatly increase\n\t     *  draw performance because the hit graph will not be redrawn each time the layer is\n\t     *  drawn.  This, however, also disables mouse/touch event detection\n\t     * @name hitGraphEnabled\n\t     * @method\n\t     * @memberof Konva.Layer.prototype\n\t     * @param {Boolean} enabled\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get hitGraphEnabled flag\n\t     * var hitGraphEnabled = layer.hitGraphEnabled();\n\t     *\n\t     * // disable hit graph\n\t     * layer.hitGraphEnabled(false);\n\t     *\n\t     * // enable hit graph\n\t     * layer.hitGraphEnabled(true);\n\t     */\n\t  Konva.Collection.mapMethods(Konva.Layer);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * FastLayer constructor. Layers are tied to their own canvas element and are used\n\t     * to contain shapes only.  If you don't need node nesting, mouse and touch interactions,\n\t     * or event pub/sub, you should use FastLayer instead of Layer to create your layers.\n\t     * It renders about 2x faster than normal layers.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.BaseLayer\n\t     * @param {Object} config\n\t     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n\t     * to clear the canvas before each layer draw.  The default value is true.\n\t     * @param {Boolean} [config.visible]\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * * @param {Object} [config.clip] set clip\n\t     * @param {Number} [config.clipX] set clip x\n\t     * @param {Number} [config.clipY] set clip y\n\t     * @param {Number} [config.clipWidth] set clip width\n\t     * @param {Number} [config.clipHeight] set clip height\n\t     * @param {Function} [config.clipFunc] set clip func\n\t\n\t     * @example\n\t     * var layer = new Konva.FastLayer();\n\t     */\n\t  Konva.FastLayer = function(config) {\n\t    this.____init(config);\n\t  };\n\t\n\t  Konva.Util.addMethods(Konva.FastLayer, {\n\t    ____init: function(config) {\n\t      this.nodeType = 'Layer';\n\t      this.canvas = new Konva.SceneCanvas();\n\t      // call super constructor\n\t      Konva.BaseLayer.call(this, config);\n\t    },\n\t    _validateAdd: function(child) {\n\t      var type = child.getType();\n\t      if (type !== 'Shape') {\n\t        Konva.Util.throw('You may only add shapes to a fast layer.');\n\t      }\n\t    },\n\t    _setCanvasSize: function(width, height) {\n\t      this.canvas.setSize(width, height);\n\t    },\n\t    hitGraphEnabled: function() {\n\t      return false;\n\t    },\n\t    getIntersection: function() {\n\t      return null;\n\t    },\n\t    drawScene: function(can) {\n\t      var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n\t\n\t      if (this.getClearBeforeDraw()) {\n\t        canvas.getContext().clear();\n\t      }\n\t\n\t      Konva.Container.prototype.drawScene.call(this, canvas);\n\t\n\t      return this;\n\t    },\n\t    draw: function() {\n\t      this.drawScene();\n\t      return this;\n\t    },\n\t    // extend Node.prototype.setVisible\n\t    setVisible: function(visible) {\n\t      Konva.Node.prototype.setVisible.call(this, visible);\n\t      if (visible) {\n\t        this.getCanvas()._canvas.style.display = 'block';\n\t      } else {\n\t        this.getCanvas()._canvas.style.display = 'none';\n\t      }\n\t      return this;\n\t    }\n\t  });\n\t  Konva.Util.extend(Konva.FastLayer, Konva.BaseLayer);\n\t\n\t  Konva.Collection.mapMethods(Konva.FastLayer);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Group constructor.  Groups are used to contain shapes or other groups.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Container\n\t     * @param {Object} config\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * * @param {Object} [config.clip] set clip\n\t     * @param {Number} [config.clipX] set clip x\n\t     * @param {Number} [config.clipY] set clip y\n\t     * @param {Number} [config.clipWidth] set clip width\n\t     * @param {Number} [config.clipHeight] set clip height\n\t     * @param {Function} [config.clipFunc] set clip func\n\t\n\t     * @example\n\t     * var group = new Konva.Group();\n\t     */\n\t  Konva.Group = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Util.addMethods(Konva.Group, {\n\t    ___init: function(config) {\n\t      this.nodeType = 'Group';\n\t      // call super constructor\n\t      Konva.Container.call(this, config);\n\t    },\n\t    _validateAdd: function(child) {\n\t      var type = child.getType();\n\t      if (type !== 'Group' && type !== 'Shape') {\n\t        Konva.Util.throw('You may only add groups and shapes to groups.');\n\t      }\n\t    }\n\t  });\n\t  Konva.Util.extend(Konva.Group, Konva.Container);\n\t\n\t  Konva.Collection.mapMethods(Konva.Group);\n\t})();\n\t\n\t(function(Konva) {\n\t  'use strict';\n\t  var now = (function() {\n\t    if (Konva.global.performance && Konva.global.performance.now) {\n\t      return function() {\n\t        return Konva.global.performance.now();\n\t      };\n\t    }\n\t\n\t    return function() {\n\t      return new Date().getTime();\n\t    };\n\t  })();\n\t\n\t  function FRAF(callback) {\n\t    setTimeout(callback, 1000 / 60);\n\t  }\n\t\n\t  var RAF = (function() {\n\t    return (\n\t      Konva.global.requestAnimationFrame ||\n\t      Konva.global.webkitRequestAnimationFrame ||\n\t      Konva.global.mozRequestAnimationFrame ||\n\t      Konva.global.oRequestAnimationFrame ||\n\t      Konva.global.msRequestAnimationFrame ||\n\t      FRAF\n\t    );\n\t  })();\n\t\n\t  function requestAnimFrame() {\n\t    return RAF.apply(Konva.global, arguments);\n\t  }\n\t\n\t  /**\n\t     * Animation constructor.  A stage is used to contain multiple layers and handle\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @param {Function} func function executed on each animation frame.  The function is passed a frame object, which contains\n\t     *  timeDiff, lastTime, time, and frameRate properties.  The timeDiff property is the number of milliseconds that have passed\n\t     *  since the last animation frame.  The lastTime property is time in milliseconds that elapsed from the moment the animation started\n\t     *  to the last animation frame.  The time property is the time in milliseconds that ellapsed from the moment the animation started\n\t     *  to the current animation frame.  The frameRate property is the current frame rate in frames / second. Return false from function,\n\t     *  if you don't need to redraw layer/layers on some frames.\n\t     * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn on each animation frame. Can be a layer, an array of layers, or null.\n\t     *  Not specifying a node will result in no redraw.\n\t     * @example\n\t     * // move a node to the right at 50 pixels / second\n\t     * var velocity = 50;\n\t     *\n\t     * var anim = new Konva.Animation(function(frame) {\n\t     *   var dist = velocity * (frame.timeDiff / 1000);\n\t     *   node.move(dist, 0);\n\t     * }, layer);\n\t     *\n\t     * anim.start();\n\t     */\n\t  Konva.Animation = function(func, layers) {\n\t    var Anim = Konva.Animation;\n\t    this.func = func;\n\t    this.setLayers(layers);\n\t    this.id = Anim.animIdCounter++;\n\t    this.frame = {\n\t      time: 0,\n\t      timeDiff: 0,\n\t      lastTime: now()\n\t    };\n\t  };\n\t  /*\n\t     * Animation methods\n\t     */\n\t  Konva.Animation.prototype = {\n\t    /**\n\t         * set layers to be redrawn on each animation frame\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn.&nbsp; Can be a layer, an array of layers, or null.  Not specifying a node will result in no redraw.\n\t         * @return {Konva.Animation} this\n\t         */\n\t    setLayers: function(layers) {\n\t      var lays = [];\n\t      // if passing in no layers\n\t      if (!layers) {\n\t        lays = [];\n\t      } else if (layers.length > 0) {\n\t        // if passing in an array of Layers\n\t        // NOTE: layers could be an array or Konva.Collection.  for simplicity, I'm just inspecting\n\t        // the length property to check for both cases\n\t        lays = layers;\n\t      } else {\n\t        // if passing in a Layer\n\t        lays = [layers];\n\t      }\n\t\n\t      this.layers = lays;\n\t      return this;\n\t    },\n\t    /**\n\t         * get layers\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @return {Array} Array of Konva.Layer\n\t         */\n\t    getLayers: function() {\n\t      return this.layers;\n\t    },\n\t    /**\n\t         * add layer.  Returns true if the layer was added, and false if it was not\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @param {Konva.Layer} layer to add\n\t         * @return {Bool} true if layer is added to animation, otherwise false\n\t         */\n\t    addLayer: function(layer) {\n\t      var layers = this.layers, len = layers.length, n;\n\t\n\t      // don't add the layer if it already exists\n\t      for (n = 0; n < len; n++) {\n\t        if (layers[n]._id === layer._id) {\n\t          return false;\n\t        }\n\t      }\n\t\n\t      this.layers.push(layer);\n\t      return true;\n\t    },\n\t    /**\n\t         * determine if animation is running or not.  returns true or false\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @return {Bool} is animation running?\n\t         */\n\t    isRunning: function() {\n\t      var a = Konva.Animation,\n\t        animations = a.animations,\n\t        len = animations.length,\n\t        n;\n\t\n\t      for (n = 0; n < len; n++) {\n\t        if (animations[n].id === this.id) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t    /**\n\t         * start animation\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @return {Konva.Animation} this\n\t         */\n\t    start: function() {\n\t      var Anim = Konva.Animation;\n\t      this.stop();\n\t      this.frame.timeDiff = 0;\n\t      this.frame.lastTime = now();\n\t      Anim._addAnimation(this);\n\t      return this;\n\t    },\n\t    /**\n\t         * stop animation\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @return {Konva.Animation} this\n\t         */\n\t    stop: function() {\n\t      Konva.Animation._removeAnimation(this);\n\t      return this;\n\t    },\n\t    _updateFrameObject: function(time) {\n\t      this.frame.timeDiff = time - this.frame.lastTime;\n\t      this.frame.lastTime = time;\n\t      this.frame.time += this.frame.timeDiff;\n\t      this.frame.frameRate = 1000 / this.frame.timeDiff;\n\t    }\n\t  };\n\t  Konva.Animation.animations = [];\n\t  Konva.Animation.animIdCounter = 0;\n\t  Konva.Animation.animRunning = false;\n\t\n\t  Konva.Animation._addAnimation = function(anim) {\n\t    this.animations.push(anim);\n\t    this._handleAnimation();\n\t  };\n\t  Konva.Animation._removeAnimation = function(anim) {\n\t    var id = anim.id, animations = this.animations, len = animations.length, n;\n\t\n\t    for (n = 0; n < len; n++) {\n\t      if (animations[n].id === id) {\n\t        this.animations.splice(n, 1);\n\t        break;\n\t      }\n\t    }\n\t  };\n\t\n\t  Konva.Animation._runFrames = function() {\n\t    var layerHash = {},\n\t      animations = this.animations,\n\t      anim,\n\t      layers,\n\t      func,\n\t      n,\n\t      i,\n\t      layersLen,\n\t      layer,\n\t      key,\n\t      needRedraw;\n\t    /*\n\t         * loop through all animations and execute animation\n\t         *  function.  if the animation object has specified node,\n\t         *  we can add the node to the nodes hash to eliminate\n\t         *  drawing the same node multiple times.  The node property\n\t         *  can be the stage itself or a layer\n\t         */\n\t    /*\n\t         * WARNING: don't cache animations.length because it could change while\n\t         * the for loop is running, causing a JS error\n\t         */\n\t\n\t    for (n = 0; n < animations.length; n++) {\n\t      anim = animations[n];\n\t      layers = anim.layers;\n\t      func = anim.func;\n\t\n\t      anim._updateFrameObject(now());\n\t      layersLen = layers.length;\n\t\n\t      // if animation object has a function, execute it\n\t      if (func) {\n\t        // allow anim bypassing drawing\n\t        needRedraw = func.call(anim, anim.frame) !== false;\n\t      } else {\n\t        needRedraw = true;\n\t      }\n\t      if (!needRedraw) {\n\t        continue;\n\t      }\n\t      for (i = 0; i < layersLen; i++) {\n\t        layer = layers[i];\n\t\n\t        if (layer._id !== undefined) {\n\t          layerHash[layer._id] = layer;\n\t        }\n\t      }\n\t    }\n\t\n\t    for (key in layerHash) {\n\t      if (!layerHash.hasOwnProperty(key)) {\n\t        continue;\n\t      }\n\t      layerHash[key].draw();\n\t    }\n\t  };\n\t  Konva.Animation._animationLoop = function() {\n\t    var Anim = Konva.Animation;\n\t    if (Anim.animations.length) {\n\t      Anim._runFrames();\n\t      requestAnimFrame(Anim._animationLoop);\n\t    } else {\n\t      Anim.animRunning = false;\n\t    }\n\t  };\n\t  Konva.Animation._handleAnimation = function() {\n\t    if (!this.animRunning) {\n\t      this.animRunning = true;\n\t      requestAnimFrame(this._animationLoop);\n\t    }\n\t  };\n\t\n\t  /**\n\t     * batch draw. this function will not do immediate draw\n\t     * but it will schedule drawing to next tick (requestAnimFrame)\n\t     * @method\n\t     * @return {Konva.Layer} this\n\t     * @memberof Konva.Base.prototype\n\t     */\n\t  Konva.BaseLayer.prototype.batchDraw = function() {\n\t    var that = this, Anim = Konva.Animation;\n\t\n\t    if (!this.batchAnim) {\n\t      this.batchAnim = new Anim(function() {\n\t        // stop animation after first tick\n\t        that.batchAnim.stop();\n\t      }, this);\n\t    }\n\t\n\t    if (!this.batchAnim.isRunning()) {\n\t      this.batchAnim.start();\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t     * batch draw\n\t     * @method\n\t     * @return {Konva.Stage} this\n\t     * @memberof Konva.Stage.prototype\n\t     */\n\t  Konva.Stage.prototype.batchDraw = function() {\n\t    this.getChildren().each(function(layer) {\n\t      layer.batchDraw();\n\t    });\n\t    return this;\n\t  };\n\t})(Konva);\n\t\n\t(function() {\n\t  'use strict';\n\t  var blacklist = {\n\t    node: 1,\n\t    duration: 1,\n\t    easing: 1,\n\t    onFinish: 1,\n\t    yoyo: 1\n\t  },\n\t    PAUSED = 1,\n\t    PLAYING = 2,\n\t    REVERSING = 3,\n\t    idCounter = 0,\n\t    colorAttrs = ['fill', 'stroke', 'shadowColor'];\n\t\n\t  var Tween = function(prop, propFunc, func, begin, finish, duration, yoyo) {\n\t    this.prop = prop;\n\t    this.propFunc = propFunc;\n\t    this.begin = begin;\n\t    this._pos = begin;\n\t    this.duration = duration;\n\t    this._change = 0;\n\t    this.prevPos = 0;\n\t    this.yoyo = yoyo;\n\t    this._time = 0;\n\t    this._position = 0;\n\t    this._startTime = 0;\n\t    this._finish = 0;\n\t    this.func = func;\n\t    this._change = finish - this.begin;\n\t    this.pause();\n\t  };\n\t  /*\n\t     * Tween methods\n\t     */\n\t  Tween.prototype = {\n\t    fire: function(str) {\n\t      var handler = this[str];\n\t      if (handler) {\n\t        handler();\n\t      }\n\t    },\n\t    setTime: function(t) {\n\t      if (t > this.duration) {\n\t        if (this.yoyo) {\n\t          this._time = this.duration;\n\t          this.reverse();\n\t        } else {\n\t          this.finish();\n\t        }\n\t      } else if (t < 0) {\n\t        if (this.yoyo) {\n\t          this._time = 0;\n\t          this.play();\n\t        } else {\n\t          this.reset();\n\t        }\n\t      } else {\n\t        this._time = t;\n\t        this.update();\n\t      }\n\t    },\n\t    getTime: function() {\n\t      return this._time;\n\t    },\n\t    setPosition: function(p) {\n\t      this.prevPos = this._pos;\n\t      this.propFunc(p);\n\t      this._pos = p;\n\t    },\n\t    getPosition: function(t) {\n\t      if (t === undefined) {\n\t        t = this._time;\n\t      }\n\t      return this.func(t, this.begin, this._change, this.duration);\n\t    },\n\t    play: function() {\n\t      this.state = PLAYING;\n\t      this._startTime = this.getTimer() - this._time;\n\t      this.onEnterFrame();\n\t      this.fire('onPlay');\n\t    },\n\t    reverse: function() {\n\t      this.state = REVERSING;\n\t      this._time = this.duration - this._time;\n\t      this._startTime = this.getTimer() - this._time;\n\t      this.onEnterFrame();\n\t      this.fire('onReverse');\n\t    },\n\t    seek: function(t) {\n\t      this.pause();\n\t      this._time = t;\n\t      this.update();\n\t      this.fire('onSeek');\n\t    },\n\t    reset: function() {\n\t      this.pause();\n\t      this._time = 0;\n\t      this.update();\n\t      this.fire('onReset');\n\t    },\n\t    finish: function() {\n\t      this.pause();\n\t      this._time = this.duration;\n\t      this.update();\n\t      this.fire('onFinish');\n\t    },\n\t    update: function() {\n\t      this.setPosition(this.getPosition(this._time));\n\t    },\n\t    onEnterFrame: function() {\n\t      var t = this.getTimer() - this._startTime;\n\t      if (this.state === PLAYING) {\n\t        this.setTime(t);\n\t      } else if (this.state === REVERSING) {\n\t        this.setTime(this.duration - t);\n\t      }\n\t    },\n\t    pause: function() {\n\t      this.state = PAUSED;\n\t      this.fire('onPause');\n\t    },\n\t    getTimer: function() {\n\t      return new Date().getTime();\n\t    }\n\t  };\n\t\n\t  /**\n\t     * Tween constructor.  Tweens enable you to animate a node between the current state and a new state.\n\t     *  You can play, pause, reverse, seek, reset, and finish tweens.  By default, tweens are animated using\n\t     *  a linear easing.  For more tweening options, check out {@link Konva.Easings}\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @example\n\t     * // instantiate new tween which fully rotates a node in 1 second\n\t     * var tween = new Konva.Tween({\n\t     *   node: node,\n\t     *   rotationDeg: 360,\n\t     *   duration: 1,\n\t     *   easing: Konva.Easings.EaseInOut\n\t     * });\n\t     *\n\t     * // play tween\n\t     * tween.play();\n\t     *\n\t     * // pause tween\n\t     * tween.pause();\n\t     */\n\t  Konva.Tween = function(config) {\n\t    var that = this,\n\t      node = config.node,\n\t      nodeId = node._id,\n\t      duration,\n\t      easing = config.easing || Konva.Easings.Linear,\n\t      yoyo = !!config.yoyo,\n\t      key;\n\t\n\t    if (typeof config.duration === 'undefined') {\n\t      duration = 1;\n\t    } else if (config.duration === 0) {\n\t      // zero is bad value for duration\n\t      duration = 0.001;\n\t    } else {\n\t      duration = config.duration;\n\t    }\n\t    this.node = node;\n\t    this._id = idCounter++;\n\t\n\t    var layers =\n\t      node.getLayer() ||\n\t      (node instanceof Konva.Stage ? node.getLayers() : null);\n\t    if (!layers) {\n\t      Konva.Util.error(\n\t        'Tween constructor have `node` that is not in a layer. Please add node into layer first.'\n\t      );\n\t    }\n\t    this.anim = new Konva.Animation(function() {\n\t      that.tween.onEnterFrame();\n\t    }, layers);\n\t\n\t    this.tween = new Tween(\n\t      key,\n\t      function(i) {\n\t        that._tweenFunc(i);\n\t      },\n\t      easing,\n\t      0,\n\t      1,\n\t      duration * 1000,\n\t      yoyo\n\t    );\n\t\n\t    this._addListeners();\n\t\n\t    // init attrs map\n\t    if (!Konva.Tween.attrs[nodeId]) {\n\t      Konva.Tween.attrs[nodeId] = {};\n\t    }\n\t    if (!Konva.Tween.attrs[nodeId][this._id]) {\n\t      Konva.Tween.attrs[nodeId][this._id] = {};\n\t    }\n\t    // init tweens map\n\t    if (!Konva.Tween.tweens[nodeId]) {\n\t      Konva.Tween.tweens[nodeId] = {};\n\t    }\n\t\n\t    for (key in config) {\n\t      if (blacklist[key] === undefined) {\n\t        this._addAttr(key, config[key]);\n\t      }\n\t    }\n\t\n\t    this.reset();\n\t\n\t    // callbacks\n\t    this.onFinish = config.onFinish;\n\t    this.onReset = config.onReset;\n\t  };\n\t\n\t  // start/diff object = attrs.nodeId.tweenId.attr\n\t  Konva.Tween.attrs = {};\n\t  // tweenId = tweens.nodeId.attr\n\t  Konva.Tween.tweens = {};\n\t\n\t  Konva.Tween.prototype = {\n\t    _addAttr: function(key, end) {\n\t      var node = this.node,\n\t        nodeId = node._id,\n\t        start,\n\t        diff,\n\t        tweenId,\n\t        n,\n\t        len,\n\t        trueEnd,\n\t        trueStart;\n\t\n\t      // remove conflict from tween map if it exists\n\t      tweenId = Konva.Tween.tweens[nodeId][key];\n\t\n\t      if (tweenId) {\n\t        delete Konva.Tween.attrs[nodeId][tweenId][key];\n\t      }\n\t\n\t      // add to tween map\n\t      start = node.getAttr(key);\n\t\n\t      if (Konva.Util._isArray(end)) {\n\t        diff = [];\n\t        len = Math.max(end.length, start.length);\n\t\n\t        if (key === 'points' && end.length !== start.length) {\n\t          // before tweening points we need to make sure that start.length === end.length\n\t          // Konva.Util._prepareArrayForTween thinking that end.length > start.length\n\t\n\t          if (end.length > start.length) {\n\t            // so in this case we will increase number of starting points\n\t            trueStart = start;\n\t            start = Konva.Util._prepareArrayForTween(start, end, node.closed());\n\t          } else {\n\t            // in this case we will increase number of eding points\n\t            trueEnd = end;\n\t            end = Konva.Util._prepareArrayForTween(end, start, node.closed());\n\t          }\n\t        }\n\t\n\t        for (n = 0; n < len; n++) {\n\t          diff.push(end[n] - start[n]);\n\t        }\n\t      } else if (colorAttrs.indexOf(key) !== -1) {\n\t        start = Konva.Util.colorToRGBA(start);\n\t        var endRGBA = Konva.Util.colorToRGBA(end);\n\t        diff = {\n\t          r: endRGBA.r - start.r,\n\t          g: endRGBA.g - start.g,\n\t          b: endRGBA.b - start.b,\n\t          a: endRGBA.a - start.a\n\t        };\n\t      } else {\n\t        diff = end - start;\n\t      }\n\t\n\t      Konva.Tween.attrs[nodeId][this._id][key] = {\n\t        start: start,\n\t        diff: diff,\n\t        end: end,\n\t        trueEnd: trueEnd,\n\t        trueStart: trueStart\n\t      };\n\t      Konva.Tween.tweens[nodeId][key] = this._id;\n\t    },\n\t    _tweenFunc: function(i) {\n\t      var node = this.node,\n\t        attrs = Konva.Tween.attrs[node._id][this._id],\n\t        key,\n\t        attr,\n\t        start,\n\t        diff,\n\t        newVal,\n\t        n,\n\t        len,\n\t        end;\n\t\n\t      for (key in attrs) {\n\t        attr = attrs[key];\n\t        start = attr.start;\n\t        diff = attr.diff;\n\t        end = attr.end;\n\t\n\t        if (Konva.Util._isArray(start)) {\n\t          newVal = [];\n\t          len = Math.max(start.length, end.length);\n\t          for (n = 0; n < len; n++) {\n\t            newVal.push((start[n] || 0) + diff[n] * i);\n\t          }\n\t        } else if (colorAttrs.indexOf(key) !== -1) {\n\t          newVal =\n\t            'rgba(' +\n\t            Math.round(start.r + diff.r * i) +\n\t            ',' +\n\t            Math.round(start.g + diff.g * i) +\n\t            ',' +\n\t            Math.round(start.b + diff.b * i) +\n\t            ',' +\n\t            (start.a + diff.a * i) +\n\t            ')';\n\t        } else {\n\t          newVal = start + diff * i;\n\t        }\n\t\n\t        node.setAttr(key, newVal);\n\t      }\n\t    },\n\t    _addListeners: function() {\n\t      var that = this;\n\t\n\t      // start listeners\n\t      this.tween.onPlay = function() {\n\t        that.anim.start();\n\t      };\n\t      this.tween.onReverse = function() {\n\t        that.anim.start();\n\t      };\n\t\n\t      // stop listeners\n\t      this.tween.onPause = function() {\n\t        that.anim.stop();\n\t      };\n\t      this.tween.onFinish = function() {\n\t        var node = that.node;\n\t\n\t        // after tweening  points of line we need to set original end\n\t        var attrs = Konva.Tween.attrs[node._id][that._id];\n\t        if (attrs.points && attrs.points.trueEnd) {\n\t          node.points(attrs.points.trueEnd);\n\t        }\n\t\n\t        if (that.onFinish) {\n\t          that.onFinish.call(that);\n\t        }\n\t      };\n\t      this.tween.onReset = function() {\n\t        var node = that.node;\n\t        // after tweening  points of line we need to set original start\n\t        var attrs = Konva.Tween.attrs[node._id][that._id];\n\t        if (attrs.points && attrs.points.trueStart) {\n\t          node.points(attrs.points.trueStart);\n\t        }\n\t\n\t        if (that.onReset) {\n\t          that.onReset();\n\t        }\n\t      };\n\t    },\n\t    /**\n\t         * play\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @returns {Tween}\n\t         */\n\t    play: function() {\n\t      this.tween.play();\n\t      return this;\n\t    },\n\t    /**\n\t         * reverse\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @returns {Tween}\n\t         */\n\t    reverse: function() {\n\t      this.tween.reverse();\n\t      return this;\n\t    },\n\t    /**\n\t         * reset\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @returns {Tween}\n\t         */\n\t    reset: function() {\n\t      this.tween.reset();\n\t      return this;\n\t    },\n\t    /**\n\t         * seek\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @param {Integer} t time in seconds between 0 and the duration\n\t         * @returns {Tween}\n\t         */\n\t    seek: function(t) {\n\t      this.tween.seek(t * 1000);\n\t      return this;\n\t    },\n\t    /**\n\t         * pause\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @returns {Tween}\n\t         */\n\t    pause: function() {\n\t      this.tween.pause();\n\t      return this;\n\t    },\n\t    /**\n\t         * finish\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         * @returns {Tween}\n\t         */\n\t    finish: function() {\n\t      this.tween.finish();\n\t      return this;\n\t    },\n\t    /**\n\t         * destroy\n\t         * @method\n\t         * @memberof Konva.Tween.prototype\n\t         */\n\t    destroy: function() {\n\t      var nodeId = this.node._id,\n\t        thisId = this._id,\n\t        attrs = Konva.Tween.tweens[nodeId],\n\t        key;\n\t\n\t      this.pause();\n\t\n\t      for (key in attrs) {\n\t        delete Konva.Tween.tweens[nodeId][key];\n\t      }\n\t\n\t      delete Konva.Tween.attrs[nodeId][thisId];\n\t    }\n\t  };\n\t\n\t  /**\n\t     * Tween node properties. Shorter usage of {@link Konva.Tween} object.\n\t     *\n\t     * @method Konva.Node#to\n\t     * @memberof Konva.Node\n\t     * @param {Object} [params] tween params\n\t     * @example\n\t     *\n\t     * circle.to({\n\t     *  x : 50,\n\t     *  duration : 0.5\n\t     * });\n\t     */\n\t  Konva.Node.prototype.to = function(params) {\n\t    var onFinish = params.onFinish;\n\t    params.node = this;\n\t    params.onFinish = function() {\n\t      this.destroy();\n\t      if (onFinish) {\n\t        onFinish();\n\t      }\n\t    };\n\t    var tween = new Konva.Tween(params);\n\t    tween.play();\n\t  };\n\t\n\t  /*\n\t    * These eases were ported from an Adobe Flash tweening library to JavaScript\n\t    * by Xaric\n\t    */\n\t\n\t  /**\n\t     * @namespace Easings\n\t     * @memberof Konva\n\t     */\n\t  Konva.Easings = {\n\t    /**\n\t        * back ease in\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    BackEaseIn: function(t, b, c, d) {\n\t      var s = 1.70158;\n\t      return c * (t /= d) * t * ((s + 1) * t - s) + b;\n\t    },\n\t    /**\n\t        * back ease out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    BackEaseOut: function(t, b, c, d) {\n\t      var s = 1.70158;\n\t      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t    },\n\t    /**\n\t        * back ease in out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    BackEaseInOut: function(t, b, c, d) {\n\t      var s = 1.70158;\n\t      if ((t /= d / 2) < 1) {\n\t        return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n\t      }\n\t      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n\t    },\n\t    /**\n\t        * elastic ease in\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    ElasticEaseIn: function(t, b, c, d, a, p) {\n\t      // added s = 0\n\t      var s = 0;\n\t      if (t === 0) {\n\t        return b;\n\t      }\n\t      if ((t /= d) === 1) {\n\t        return b + c;\n\t      }\n\t      if (!p) {\n\t        p = d * 0.3;\n\t      }\n\t      if (!a || a < Math.abs(c)) {\n\t        a = c;\n\t        s = p / 4;\n\t      } else {\n\t        s = p / (2 * Math.PI) * Math.asin(c / a);\n\t      }\n\t      return (\n\t        -(a *\n\t          Math.pow(2, 10 * (t -= 1)) *\n\t          Math.sin((t * d - s) * (2 * Math.PI) / p)) + b\n\t      );\n\t    },\n\t    /**\n\t        * elastic ease out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    ElasticEaseOut: function(t, b, c, d, a, p) {\n\t      // added s = 0\n\t      var s = 0;\n\t      if (t === 0) {\n\t        return b;\n\t      }\n\t      if ((t /= d) === 1) {\n\t        return b + c;\n\t      }\n\t      if (!p) {\n\t        p = d * 0.3;\n\t      }\n\t      if (!a || a < Math.abs(c)) {\n\t        a = c;\n\t        s = p / 4;\n\t      } else {\n\t        s = p / (2 * Math.PI) * Math.asin(c / a);\n\t      }\n\t      return (\n\t        a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) +\n\t        c +\n\t        b\n\t      );\n\t    },\n\t    /**\n\t        * elastic ease in out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    ElasticEaseInOut: function(t, b, c, d, a, p) {\n\t      // added s = 0\n\t      var s = 0;\n\t      if (t === 0) {\n\t        return b;\n\t      }\n\t      if ((t /= d / 2) === 2) {\n\t        return b + c;\n\t      }\n\t      if (!p) {\n\t        p = d * (0.3 * 1.5);\n\t      }\n\t      if (!a || a < Math.abs(c)) {\n\t        a = c;\n\t        s = p / 4;\n\t      } else {\n\t        s = p / (2 * Math.PI) * Math.asin(c / a);\n\t      }\n\t      if (t < 1) {\n\t        return (\n\t          -0.5 *\n\t            (a *\n\t              Math.pow(2, 10 * (t -= 1)) *\n\t              Math.sin((t * d - s) * (2 * Math.PI) / p)) +\n\t          b\n\t        );\n\t      }\n\t      return (\n\t        a *\n\t          Math.pow(2, -10 * (t -= 1)) *\n\t          Math.sin((t * d - s) * (2 * Math.PI) / p) *\n\t          0.5 +\n\t        c +\n\t        b\n\t      );\n\t    },\n\t    /**\n\t        * bounce ease out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    BounceEaseOut: function(t, b, c, d) {\n\t      if ((t /= d) < 1 / 2.75) {\n\t        return c * (7.5625 * t * t) + b;\n\t      } else if (t < 2 / 2.75) {\n\t        return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n\t      } else if (t < 2.5 / 2.75) {\n\t        return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n\t      } else {\n\t        return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n\t      }\n\t    },\n\t    /**\n\t        * bounce ease in\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    BounceEaseIn: function(t, b, c, d) {\n\t      return c - Konva.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n\t    },\n\t    /**\n\t        * bounce ease in out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    BounceEaseInOut: function(t, b, c, d) {\n\t      if (t < d / 2) {\n\t        return Konva.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n\t      } else {\n\t        return (\n\t          Konva.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b\n\t        );\n\t      }\n\t    },\n\t    /**\n\t        * ease in\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    EaseIn: function(t, b, c, d) {\n\t      return c * (t /= d) * t + b;\n\t    },\n\t    /**\n\t        * ease out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    EaseOut: function(t, b, c, d) {\n\t      return -c * (t /= d) * (t - 2) + b;\n\t    },\n\t    /**\n\t        * ease in out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    EaseInOut: function(t, b, c, d) {\n\t      if ((t /= d / 2) < 1) {\n\t        return c / 2 * t * t + b;\n\t      }\n\t      return -c / 2 * (--t * (t - 2) - 1) + b;\n\t    },\n\t    /**\n\t        * strong ease in\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    StrongEaseIn: function(t, b, c, d) {\n\t      return c * (t /= d) * t * t * t * t + b;\n\t    },\n\t    /**\n\t        * strong ease out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    StrongEaseOut: function(t, b, c, d) {\n\t      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n\t    },\n\t    /**\n\t        * strong ease in out\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    StrongEaseInOut: function(t, b, c, d) {\n\t      if ((t /= d / 2) < 1) {\n\t        return c / 2 * t * t * t * t * t + b;\n\t      }\n\t      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t    },\n\t    /**\n\t        * linear\n\t        * @function\n\t        * @memberof Konva.Easings\n\t        */\n\t    Linear: function(t, b, c, d) {\n\t      return c * t / d + b;\n\t    }\n\t  };\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  Konva.DD = {\n\t    // properties\n\t    anim: new Konva.Animation(function() {\n\t      var b = this.dirty;\n\t      this.dirty = false;\n\t      return b;\n\t    }),\n\t    isDragging: false,\n\t    justDragged: false,\n\t    offset: {\n\t      x: 0,\n\t      y: 0\n\t    },\n\t    node: null,\n\t\n\t    // methods\n\t    _drag: function(evt) {\n\t      var dd = Konva.DD,\n\t        node = dd.node;\n\t      if (node) {\n\t        if (!dd.isDragging) {\n\t          var pos = node.getStage().getPointerPosition();\n\t          // it is possible that pos is undefined\n\t          // reattach it\n\t          if (!pos) {\n\t            node.getStage()._setPointerPosition(evt);\n\t            pos = node.getStage().getPointerPosition();\n\t          }\n\t          var dragDistance = node.dragDistance();\n\t          var distance = Math.max(\n\t            Math.abs(pos.x - dd.startPointerPos.x),\n\t            Math.abs(pos.y - dd.startPointerPos.y)\n\t          );\n\t          if (distance < dragDistance) {\n\t            return;\n\t          }\n\t        }\n\t\n\t        node.getStage()._setPointerPosition(evt);\n\t        node._setDragPosition(evt);\n\t        if (!dd.isDragging) {\n\t          dd.isDragging = true;\n\t          node.fire(\n\t            'dragstart',\n\t            {\n\t              type: 'dragstart',\n\t              target: node,\n\t              evt: evt\n\t            },\n\t            true\n\t          );\n\t        }\n\t\n\t        // execute ondragmove if defined\n\t        node.fire(\n\t          'dragmove',\n\t          {\n\t            type: 'dragmove',\n\t            target: node,\n\t            evt: evt\n\t          },\n\t          true\n\t        );\n\t      }\n\t    },\n\t    _endDragBefore: function(evt) {\n\t      var dd = Konva.DD,\n\t        node = dd.node,\n\t        layer;\n\t\n\t      if (node) {\n\t        layer = node.getLayer();\n\t        dd.anim.stop();\n\t\n\t        // only fire dragend event if the drag and drop\n\t        // operation actually started.\n\t        if (dd.isDragging) {\n\t          dd.isDragging = false;\n\t          dd.justDragged = true;\n\t          Konva.listenClickTap = false;\n\t\n\t          if (evt) {\n\t            evt.dragEndNode = node;\n\t          }\n\t        }\n\t\n\t        delete dd.node;\n\t\n\t        if (node.getLayer() || layer || node instanceof Konva.Stage) {\n\t          (layer || node).draw();\n\t        }\n\t      }\n\t    },\n\t    _endDragAfter: function(evt) {\n\t      evt = evt || {};\n\t      var dragEndNode = evt.dragEndNode;\n\t\n\t      if (evt && dragEndNode) {\n\t        dragEndNode.fire(\n\t          'dragend',\n\t          {\n\t            type: 'dragend',\n\t            target: dragEndNode,\n\t            evt: evt\n\t          },\n\t          true\n\t        );\n\t      }\n\t    }\n\t  };\n\t\n\t  // Node extenders\n\t\n\t  /**\n\t     * initiate drag and drop\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     */\n\t  Konva.Node.prototype.startDrag = function() {\n\t    var dd = Konva.DD,\n\t      stage = this.getStage(),\n\t      layer = this.getLayer(),\n\t      pos = stage.getPointerPosition(),\n\t      ap = this.getAbsolutePosition();\n\t\n\t    if (pos) {\n\t      if (dd.node) {\n\t        dd.node.stopDrag();\n\t      }\n\t\n\t      dd.node = this;\n\t      dd.startPointerPos = pos;\n\t      dd.offset.x = pos.x - ap.x;\n\t      dd.offset.y = pos.y - ap.y;\n\t      dd.anim.setLayers(layer || this.getLayers());\n\t      dd.anim.start();\n\t\n\t      this._setDragPosition();\n\t    }\n\t  };\n\t\n\t  Konva.Node.prototype._setDragPosition = function(evt) {\n\t    var dd = Konva.DD,\n\t      pos = this.getStage().getPointerPosition(),\n\t      dbf = this.getDragBoundFunc();\n\t    if (!pos) {\n\t      return;\n\t    }\n\t    var newNodePos = {\n\t      x: pos.x - dd.offset.x,\n\t      y: pos.y - dd.offset.y\n\t    };\n\t\n\t    if (dbf !== undefined) {\n\t      newNodePos = dbf.call(this, newNodePos, evt);\n\t    }\n\t    this.setAbsolutePosition(newNodePos);\n\t\n\t    if (\n\t      !this._lastPos ||\n\t      this._lastPos.x !== newNodePos.x ||\n\t      this._lastPos.y !== newNodePos.y\n\t    ) {\n\t      dd.anim.dirty = true;\n\t    }\n\t\n\t    this._lastPos = newNodePos;\n\t  };\n\t\n\t  /**\n\t     * stop drag and drop\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     */\n\t  Konva.Node.prototype.stopDrag = function() {\n\t    var dd = Konva.DD,\n\t      evt = {};\n\t    dd._endDragBefore(evt);\n\t    dd._endDragAfter(evt);\n\t  };\n\t\n\t  Konva.Node.prototype.setDraggable = function(draggable) {\n\t    this._setAttr('draggable', draggable);\n\t    this._dragChange();\n\t  };\n\t\n\t  var origRemove = Konva.Node.prototype.remove;\n\t\n\t  Konva.Node.prototype.__originalRemove = origRemove;\n\t  Konva.Node.prototype.remove = function() {\n\t    var dd = Konva.DD;\n\t\n\t    // stop DD\n\t    if (dd.node && dd.node._id === this._id) {\n\t      this.stopDrag();\n\t    }\n\t\n\t    origRemove.call(this);\n\t  };\n\t\n\t  /**\n\t     * determine if node is currently in drag and drop mode\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     */\n\t  Konva.Node.prototype.isDragging = function() {\n\t    var dd = Konva.DD;\n\t    return !!(dd.node && dd.node._id === this._id && dd.isDragging);\n\t  };\n\t\n\t  Konva.Node.prototype._listenDrag = function() {\n\t    var that = this;\n\t\n\t    this._dragCleanup();\n\t\n\t    if (this.getClassName() === 'Stage') {\n\t      this.on('contentMousedown.konva contentTouchstart.konva', function(evt) {\n\t        if (!Konva.DD.node) {\n\t          that.startDrag(evt);\n\t        }\n\t      });\n\t    } else {\n\t      this.on('mousedown.konva touchstart.konva', function(evt) {\n\t        // ignore right and middle buttons\n\t        if (evt.evt.button === 1 || evt.evt.button === 2) {\n\t          return;\n\t        }\n\t        if (!Konva.DD.node) {\n\t          that.startDrag(evt);\n\t        }\n\t      });\n\t    }\n\t\n\t    // listening is required for drag and drop\n\t    /*\n\t        this._listeningEnabled = true;\n\t        this._clearSelfAndAncestorCache('listeningEnabled');\n\t        */\n\t  };\n\t\n\t  Konva.Node.prototype._dragChange = function() {\n\t    if (this.attrs.draggable) {\n\t      this._listenDrag();\n\t    } else {\n\t      // remove event listeners\n\t      this._dragCleanup();\n\t\n\t      /*\n\t             * force drag and drop to end\n\t             * if this node is currently in\n\t             * drag and drop mode\n\t             */\n\t      var stage = this.getStage();\n\t      var dd = Konva.DD;\n\t      if (stage && dd.node && dd.node._id === this._id) {\n\t        dd.node.stopDrag();\n\t      }\n\t    }\n\t  };\n\t\n\t  Konva.Node.prototype._dragCleanup = function() {\n\t    if (this.getClassName() === 'Stage') {\n\t      this.off('contentMousedown.konva');\n\t      this.off('contentTouchstart.konva');\n\t    } else {\n\t      this.off('mousedown.konva');\n\t      this.off('touchstart.konva');\n\t    }\n\t  };\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Node, 'dragBoundFunc');\n\t\n\t  /**\n\t     * get/set drag bound function.  This is used to override the default\n\t     *  drag and drop position\n\t     * @name dragBoundFunc\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Function} dragBoundFunc\n\t     * @returns {Function}\n\t     * @example\n\t     * // get drag bound function\n\t     * var dragBoundFunc = node.dragBoundFunc();\n\t     *\n\t     * // create vertical drag and drop\n\t     * node.dragBoundFunc(function(pos){\n\t     *   return {\n\t     *     x: this.getAbsolutePosition().x,\n\t     *     y: pos.y\n\t     *   };\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetter(Konva.Node, 'draggable', false);\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'draggable');\n\t\n\t  /**\n\t     * get/set draggable flag\n\t     * @name draggable\n\t     * @method\n\t     * @memberof Konva.Node.prototype\n\t     * @param {Boolean} draggable\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get draggable flag\n\t     * var draggable = node.draggable();\n\t     *\n\t     * // enable drag and drop\n\t     * node.draggable(true);\n\t     *\n\t     * // disable drag and drop\n\t     * node.draggable(false);\n\t     */\n\t\n\t  if (Konva.isBrowser) {\n\t    var html = Konva.document.documentElement;\n\t    html.addEventListener('mouseup', Konva.DD._endDragBefore, true);\n\t    html.addEventListener('touchend', Konva.DD._endDragBefore, true);\n\t\n\t    html.addEventListener('mousemove', Konva.DD._drag);\n\t    html.addEventListener('touchmove', Konva.DD._drag);\n\t\n\t    html.addEventListener('mouseup', Konva.DD._endDragAfter, false);\n\t    html.addEventListener('touchend', Konva.DD._endDragAfter, false);\n\t  }\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Rect constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} [config.cornerRadius]\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var rect = new Konva.Rect({\n\t     *   width: 100,\n\t     *   height: 50,\n\t     *   fill: 'red',\n\t     *   stroke: 'black',\n\t     *   strokeWidth: 5\n\t     * });\n\t     */\n\t  Konva.Rect = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Rect.prototype = {\n\t    ___init: function(config) {\n\t      Konva.Shape.call(this, config);\n\t      this.className = 'Rect';\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var cornerRadius = this.getCornerRadius(),\n\t        width = this.getWidth(),\n\t        height = this.getHeight();\n\t\n\t      context.beginPath();\n\t\n\t      if (!cornerRadius) {\n\t        // simple rect - don't bother doing all that complicated maths stuff.\n\t        context.rect(0, 0, width, height);\n\t      } else {\n\t        // arcTo would be nicer, but browser support is patchy (Opera)\n\t        cornerRadius = Math.min(cornerRadius, width / 2, height / 2);\n\t        context.moveTo(cornerRadius, 0);\n\t        context.lineTo(width - cornerRadius, 0);\n\t        context.arc(\n\t          width - cornerRadius,\n\t          cornerRadius,\n\t          cornerRadius,\n\t          Math.PI * 3 / 2,\n\t          0,\n\t          false\n\t        );\n\t        context.lineTo(width, height - cornerRadius);\n\t        context.arc(\n\t          width - cornerRadius,\n\t          height - cornerRadius,\n\t          cornerRadius,\n\t          0,\n\t          Math.PI / 2,\n\t          false\n\t        );\n\t        context.lineTo(cornerRadius, height);\n\t        context.arc(\n\t          cornerRadius,\n\t          height - cornerRadius,\n\t          cornerRadius,\n\t          Math.PI / 2,\n\t          Math.PI,\n\t          false\n\t        );\n\t        context.lineTo(0, cornerRadius);\n\t        context.arc(\n\t          cornerRadius,\n\t          cornerRadius,\n\t          cornerRadius,\n\t          Math.PI,\n\t          Math.PI * 3 / 2,\n\t          false\n\t        );\n\t      }\n\t      context.closePath();\n\t      context.fillStrokeShape(this);\n\t    }\n\t  };\n\t\n\t  Konva.Util.extend(Konva.Rect, Konva.Shape);\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Rect, 'cornerRadius', 0);\n\t  /**\n\t     * get/set corner radius\n\t     * @name cornerRadius\n\t     * @method\n\t     * @memberof Konva.Rect.prototype\n\t     * @param {Number} cornerRadius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get corner radius\n\t     * var cornerRadius = rect.cornerRadius();\n\t     *\n\t     * // set corner radius\n\t     * rect.cornerRadius(10);\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.Rect);\n\t})();\n\t\n\t(function(Konva) {\n\t  'use strict';\n\t  // the 0.0001 offset fixes a bug in Chrome 27\n\t  var PIx2 = Math.PI * 2 - 0.0001, CIRCLE = 'Circle';\n\t\n\t  /**\n\t     * Circle constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} config.radius\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * // create circle\n\t     * var circle = new Konva.Circle({\n\t     *   radius: 40,\n\t     *   fill: 'red',\n\t     *   stroke: 'black'\n\t     *   strokeWidth: 5\n\t     * });\n\t     */\n\t  Konva.Circle = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Circle.prototype = {\n\t    _centroid: true,\n\t    ___init: function(config) {\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = CIRCLE;\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      context.beginPath();\n\t      context.arc(0, 0, this.getRadius(), 0, PIx2, false);\n\t      context.closePath();\n\t      context.fillStrokeShape(this);\n\t    },\n\t    // implements Shape.prototype.getWidth()\n\t    getWidth: function() {\n\t      return this.getRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.getHeight()\n\t    getHeight: function() {\n\t      return this.getRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.setWidth()\n\t    setWidth: function(width) {\n\t      Konva.Node.prototype.setWidth.call(this, width);\n\t      if (this.radius() !== width / 2) {\n\t        this.setRadius(width / 2);\n\t      }\n\t    },\n\t    // implements Shape.prototype.setHeight()\n\t    setHeight: function(height) {\n\t      Konva.Node.prototype.setHeight.call(this, height);\n\t      if (this.radius() !== height / 2) {\n\t        this.setRadius(height / 2);\n\t      }\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Circle, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.Circle, 'radius', 0);\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Circle, 'radius');\n\t\n\t  /**\n\t     * get/set radius\n\t     * @name radius\n\t     * @method\n\t     * @memberof Konva.Circle.prototype\n\t     * @param {Number} radius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radius\n\t     * var radius = circle.radius();\n\t     *\n\t     * // set radius\n\t     * circle.radius(10);\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.Circle);\n\t})(Konva);\n\t\n\t(function() {\n\t  'use strict';\n\t  // the 0.0001 offset fixes a bug in Chrome 27\n\t  var PIx2 = Math.PI * 2 - 0.0001, ELLIPSE = 'Ellipse';\n\t\n\t  /**\n\t     * Ellipse constructor\n\t     * @constructor\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Object} config.radius defines x and y radius\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var ellipse = new Konva.Ellipse({\n\t     *   radius : {\n\t     *     x : 50,\n\t     *     y : 50\n\t     *   },\n\t     *   fill: 'red'\n\t     * });\n\t     */\n\t  Konva.Ellipse = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Ellipse.prototype = {\n\t    _centroid: true,\n\t    ___init: function(config) {\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = ELLIPSE;\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var rx = this.getRadiusX(), ry = this.getRadiusY();\n\t\n\t      context.beginPath();\n\t      context.save();\n\t      if (rx !== ry) {\n\t        context.scale(1, ry / rx);\n\t      }\n\t      context.arc(0, 0, rx, 0, PIx2, false);\n\t      context.restore();\n\t      context.closePath();\n\t      context.fillStrokeShape(this);\n\t    },\n\t    // implements Shape.prototype.getWidth()\n\t    getWidth: function() {\n\t      return this.getRadiusX() * 2;\n\t    },\n\t    // implements Shape.prototype.getHeight()\n\t    getHeight: function() {\n\t      return this.getRadiusY() * 2;\n\t    },\n\t    // implements Shape.prototype.setWidth()\n\t    setWidth: function(width) {\n\t      Konva.Node.prototype.setWidth.call(this, width);\n\t      this.setRadius({\n\t        x: width / 2\n\t      });\n\t    },\n\t    // implements Shape.prototype.setHeight()\n\t    setHeight: function(height) {\n\t      Konva.Node.prototype.setHeight.call(this, height);\n\t      this.setRadius({\n\t        y: height / 2\n\t      });\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Ellipse, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addComponentsGetterSetter(Konva.Ellipse, 'radius', ['x', 'y']);\n\t\n\t  /**\n\t     * get/set radius\n\t     * @name radius\n\t     * @method\n\t     * @memberof Konva.Ellipse.prototype\n\t     * @param {Object} radius\n\t     * @param {Number} radius.x\n\t     * @param {Number} radius.y\n\t     * @returns {Object}\n\t     * @example\n\t     * // get radius\n\t     * var radius = ellipse.radius();\n\t     *\n\t     * // set radius\n\t     * ellipse.radius({\n\t     *   x: 200,\n\t     *   y: 100\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusX', 0);\n\t  /**\n\t     * get/set radius x\n\t     * @name radiusX\n\t     * @method\n\t     * @memberof Konva.Ellipse.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radius x\n\t     * var radiusX = ellipse.radiusX();\n\t     *\n\t     * // set radius x\n\t     * ellipse.radiusX(200);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusY', 0);\n\t  /**\n\t     * get/set radius y\n\t     * @name radiusY\n\t     * @method\n\t     * @memberof Konva.Ellipse.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radius y\n\t     * var radiusY = ellipse.radiusY();\n\t     *\n\t     * // set radius y\n\t     * ellipse.radiusY(200);\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.Ellipse);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  // the 0.0001 offset fixes a bug in Chrome 27\n\t  var PIx2 = Math.PI * 2 - 0.0001;\n\t  /**\n\t     * Ring constructor\n\t     * @constructor\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} config.innerRadius\n\t     * @param {Number} config.outerRadius\n\t     * @param {Boolean} [config.clockwise]\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var ring = new Konva.Ring({\n\t     *   innerRadius: 40,\n\t     *   outerRadius: 80,\n\t     *   fill: 'red',\n\t     *   stroke: 'black',\n\t     *   strokeWidth: 5\n\t     * });\n\t     */\n\t  Konva.Ring = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Ring.prototype = {\n\t    _centroid: true,\n\t    ___init: function(config) {\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = 'Ring';\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      context.beginPath();\n\t      context.arc(0, 0, this.getInnerRadius(), 0, PIx2, false);\n\t      context.moveTo(this.getOuterRadius(), 0);\n\t      context.arc(0, 0, this.getOuterRadius(), PIx2, 0, true);\n\t      context.closePath();\n\t      context.fillStrokeShape(this);\n\t    },\n\t    // implements Shape.prototype.getWidth()\n\t    getWidth: function() {\n\t      return this.getOuterRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.getHeight()\n\t    getHeight: function() {\n\t      return this.getOuterRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.setWidth()\n\t    setWidth: function(width) {\n\t      Konva.Node.prototype.setWidth.call(this, width);\n\t      if (this.outerRadius() !== width / 2) {\n\t        this.setOuterRadius(width / 2);\n\t      }\n\t    },\n\t    // implements Shape.prototype.setHeight()\n\t    setHeight: function(height) {\n\t      Konva.Node.prototype.setHeight.call(this, height);\n\t      if (this.outerRadius() !== height / 2) {\n\t        this.setOuterRadius(height / 2);\n\t      }\n\t    },\n\t    setOuterRadius: function(val) {\n\t      this._setAttr('outerRadius', val);\n\t      this.setWidth(val * 2);\n\t      this.setHeight(val * 2);\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Ring, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.Ring, 'innerRadius', 0);\n\t\n\t  /**\n\t     * get/set innerRadius\n\t     * @name innerRadius\n\t     * @method\n\t     * @memberof Konva.Ring.prototype\n\t     * @param {Number} innerRadius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get inner radius\n\t     * var innerRadius = ring.innerRadius();\n\t     *\n\t     * // set inner radius\n\t     * ring.innerRadius(20);\n\t     */\n\t  Konva.Factory.addGetter(Konva.Ring, 'outerRadius', 0);\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Ring, 'outerRadius');\n\t\n\t  /**\n\t     * get/set outerRadius\n\t     * @name outerRadius\n\t     * @method\n\t     * @memberof Konva.Ring.prototype\n\t     * @param {Number} outerRadius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get outer radius\n\t     * var outerRadius = ring.outerRadius();\n\t     *\n\t     * // set outer radius\n\t     * ring.outerRadius(20);\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.Ring);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Wedge constructor\n\t     * @constructor\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} config.angle in degrees\n\t     * @param {Number} config.radius\n\t     * @param {Boolean} [config.clockwise]\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * // draw a wedge that's pointing downwards\n\t     * var wedge = new Konva.Wedge({\n\t     *   radius: 40,\n\t     *   fill: 'red',\n\t     *   stroke: 'black'\n\t     *   strokeWidth: 5,\n\t     *   angleDeg: 60,\n\t     *   rotationDeg: -120\n\t     * });\n\t     */\n\t  Konva.Wedge = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Wedge.prototype = {\n\t    _centroid: true,\n\t    ___init: function(config) {\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = 'Wedge';\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      context.beginPath();\n\t      context.arc(\n\t        0,\n\t        0,\n\t        this.getRadius(),\n\t        0,\n\t        Konva.getAngle(this.getAngle()),\n\t        this.getClockwise()\n\t      );\n\t      context.lineTo(0, 0);\n\t      context.closePath();\n\t      context.fillStrokeShape(this);\n\t    },\n\t    // implements Shape.prototype.getWidth()\n\t    getWidth: function() {\n\t      return this.getRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.getHeight()\n\t    getHeight: function() {\n\t      return this.getRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.setWidth()\n\t    setWidth: function(width) {\n\t      Konva.Node.prototype.setWidth.call(this, width);\n\t      if (this.radius() !== width / 2) {\n\t        this.setRadius(width / 2);\n\t      }\n\t    },\n\t    // implements Shape.prototype.setHeight()\n\t    setHeight: function(height) {\n\t      Konva.Node.prototype.setHeight.call(this, height);\n\t      if (this.radius() !== height / 2) {\n\t        this.setRadius(height / 2);\n\t      }\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Wedge, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.Wedge, 'radius', 0);\n\t\n\t  /**\n\t     * get/set radius\n\t     * @name radius\n\t     * @method\n\t     * @memberof Konva.Wedge.prototype\n\t     * @param {Number} radius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get radius\n\t     * var radius = wedge.radius();\n\t     *\n\t     * // set radius\n\t     * wedge.radius(10);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Wedge, 'angle', 0);\n\t\n\t  /**\n\t     * get/set angle in degrees\n\t     * @name angle\n\t     * @method\n\t     * @memberof Konva.Wedge.prototype\n\t     * @param {Number} angle\n\t     * @returns {Number}\n\t     * @example\n\t     * // get angle\n\t     * var angle = wedge.angle();\n\t     *\n\t     * // set angle\n\t     * wedge.angle(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Wedge, 'clockwise', false);\n\t\n\t  /**\n\t     * get/set clockwise flag\n\t     * @name clockwise\n\t     * @method\n\t     * @memberof Konva.Wedge.prototype\n\t     * @param {Number} clockwise\n\t     * @returns {Number}\n\t     * @example\n\t     * // get clockwise flag\n\t     * var clockwise = wedge.clockwise();\n\t     *\n\t     * // draw wedge counter-clockwise\n\t     * wedge.clockwise(false);\n\t     *\n\t     * // draw wedge clockwise\n\t     * wedge.clockwise(true);\n\t     */\n\t\n\t  Konva.Factory.backCompat(Konva.Wedge, {\n\t    angleDeg: 'angle',\n\t    getAngleDeg: 'getAngle',\n\t    setAngleDeg: 'setAngle'\n\t  });\n\t\n\t  Konva.Collection.mapMethods(Konva.Wedge);\n\t})();\n\t\n\t(function(Konva) {\n\t  'use strict';\n\t  /**\n\t     * Arc constructor\n\t     * @constructor\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} config.angle in degrees\n\t     * @param {Number} config.innerRadius\n\t     * @param {Number} config.outerRadius\n\t     * @param {Boolean} [config.clockwise]\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * // draw a Arc that's pointing downwards\n\t     * var arc = new Konva.Arc({\n\t     *   innerRadius: 40,\n\t     *   outerRadius: 80,\n\t     *   fill: 'red',\n\t     *   stroke: 'black'\n\t     *   strokeWidth: 5,\n\t     *   angle: 60,\n\t     *   rotationDeg: -120\n\t     * });\n\t     */\n\t  Konva.Arc = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Arc.prototype = {\n\t    _centroid: true,\n\t    ___init: function(config) {\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = 'Arc';\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var angle = Konva.getAngle(this.angle()), clockwise = this.clockwise();\n\t\n\t      context.beginPath();\n\t      context.arc(0, 0, this.getOuterRadius(), 0, angle, clockwise);\n\t      context.arc(0, 0, this.getInnerRadius(), angle, 0, !clockwise);\n\t      context.closePath();\n\t      context.fillStrokeShape(this);\n\t    },\n\t    // implements Shape.prototype.getWidth()\n\t    getWidth: function() {\n\t      return this.getOuterRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.getHeight()\n\t    getHeight: function() {\n\t      return this.getOuterRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.setWidth()\n\t    setWidth: function(width) {\n\t      Konva.Node.prototype.setWidth.call(this, width);\n\t      if (this.getOuterRadius() !== width / 2) {\n\t        this.setOuterRadius(width / 2);\n\t      }\n\t    },\n\t    // implements Shape.prototype.setHeight()\n\t    setHeight: function(height) {\n\t      Konva.Node.prototype.setHeight.call(this, height);\n\t      if (this.getOuterRadius() !== height / 2) {\n\t        this.setOuterRadius(height / 2);\n\t      }\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Arc, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.Arc, 'innerRadius', 0);\n\t\n\t  /**\n\t     * get/set innerRadius\n\t     * @name innerRadius\n\t     * @method\n\t     * @memberof Konva.Arc.prototype\n\t     * @param {Number} innerRadius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get inner radius\n\t     * var innerRadius = arc.innerRadius();\n\t     *\n\t     * // set inner radius\n\t     * arc.innerRadius(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Arc, 'outerRadius', 0);\n\t\n\t  /**\n\t     * get/set outerRadius\n\t     * @name outerRadius\n\t     * @method\n\t     * @memberof Konva.Arc.prototype\n\t     * @param {Number} outerRadius\n\t     * @returns {Number}\n\t     * @example\n\t     * // get outer radius\n\t     * var outerRadius = arc.outerRadius();\n\t     *\n\t     * // set outer radius\n\t     * arc.outerRadius(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Arc, 'angle', 0);\n\t\n\t  /**\n\t     * get/set angle in degrees\n\t     * @name angle\n\t     * @method\n\t     * @memberof Konva.Arc.prototype\n\t     * @param {Number} angle\n\t     * @returns {Number}\n\t     * @example\n\t     * // get angle\n\t     * var angle = arc.angle();\n\t     *\n\t     * // set angle\n\t     * arc.angle(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Arc, 'clockwise', false);\n\t\n\t  /**\n\t     * get/set clockwise flag\n\t     * @name clockwise\n\t     * @method\n\t     * @memberof Konva.Arc.prototype\n\t     * @param {Boolean} clockwise\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get clockwise flag\n\t     * var clockwise = arc.clockwise();\n\t     *\n\t     * // draw arc counter-clockwise\n\t     * arc.clockwise(false);\n\t     *\n\t     * // draw arc clockwise\n\t     * arc.clockwise(true);\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.Arc);\n\t})(Konva);\n\t\n\t(function() {\n\t  'use strict';\n\t  // CONSTANTS\n\t  var IMAGE = 'Image';\n\t\n\t  /**\n\t     * Image constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Image} config.image\n\t     * @param {Object} [config.crop]\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var imageObj = new Image();\n\t     * imageObj.onload = function() {\n\t     *   var image = new Konva.Image({\n\t     *     x: 200,\n\t     *     y: 50,\n\t     *     image: imageObj,\n\t     *     width: 100,\n\t     *     height: 100\n\t     *   });\n\t     * };\n\t     * imageObj.src = '/path/to/image.jpg'\n\t     */\n\t  Konva.Image = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Image.prototype = {\n\t    ___init: function(config) {\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = IMAGE;\n\t      this.sceneFunc(this._sceneFunc);\n\t      this.hitFunc(this._hitFunc);\n\t    },\n\t    _useBufferCanvas: function() {\n\t      return (\n\t        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&\n\t        this.hasStroke() &&\n\t        this.getStage()\n\t      );\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var width = this.getWidth(),\n\t        height = this.getHeight(),\n\t        image = this.getImage(),\n\t        cropWidth,\n\t        cropHeight,\n\t        params;\n\t\n\t      if (image) {\n\t        cropWidth = this.getCropWidth();\n\t        cropHeight = this.getCropHeight();\n\t        if (cropWidth && cropHeight) {\n\t          params = [\n\t            image,\n\t            this.getCropX(),\n\t            this.getCropY(),\n\t            cropWidth,\n\t            cropHeight,\n\t            0,\n\t            0,\n\t            width,\n\t            height\n\t          ];\n\t        } else {\n\t          params = [image, 0, 0, width, height];\n\t        }\n\t      }\n\t\n\t      if (this.hasFill() || this.hasStroke()) {\n\t        context.beginPath();\n\t        context.rect(0, 0, width, height);\n\t        context.closePath();\n\t        context.fillStrokeShape(this);\n\t      }\n\t\n\t      if (image) {\n\t        context.drawImage.apply(context, params);\n\t      }\n\t    },\n\t    _hitFunc: function(context) {\n\t      var width = this.getWidth(), height = this.getHeight();\n\t\n\t      context.beginPath();\n\t      context.rect(0, 0, width, height);\n\t      context.closePath();\n\t      context.fillStrokeShape(this);\n\t    },\n\t    getWidth: function() {\n\t      var image = this.getImage();\n\t      return this.attrs.width || (image ? image.width : 0);\n\t    },\n\t    getHeight: function() {\n\t      var image = this.getImage();\n\t      return this.attrs.height || (image ? image.height : 0);\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Image, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.Image, 'image');\n\t\n\t  /**\n\t     * set image\n\t     * @name setImage\n\t     * @method\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Image} image\n\t     */\n\t\n\t  /**\n\t     * get image\n\t     * @name getImage\n\t     * @method\n\t     * @memberof Konva.Image.prototype\n\t     * @returns {Image}\n\t     */\n\t\n\t  Konva.Factory.addComponentsGetterSetter(Konva.Image, 'crop', [\n\t    'x',\n\t    'y',\n\t    'width',\n\t    'height'\n\t  ]);\n\t  /**\n\t     * get/set crop\n\t     * @method\n\t     * @name crop\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Object} crop\n\t     * @param {Number} crop.x\n\t     * @param {Number} crop.y\n\t     * @param {Number} crop.width\n\t     * @param {Number} crop.height\n\t     * @returns {Object}\n\t     * @example\n\t     * // get crop\n\t     * var crop = image.crop();\n\t     *\n\t     * // set crop\n\t     * image.crop({\n\t     *   x: 20,\n\t     *   y: 20,\n\t     *   width: 20,\n\t     *   height: 20\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Image, 'cropX', 0);\n\t  /**\n\t     * get/set crop x\n\t     * @method\n\t     * @name cropX\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Number} x\n\t     * @returns {Number}\n\t     * @example\n\t     * // get crop x\n\t     * var cropX = image.cropX();\n\t     *\n\t     * // set crop x\n\t     * image.cropX(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Image, 'cropY', 0);\n\t  /**\n\t     * get/set crop y\n\t     * @name cropY\n\t     * @method\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Number} y\n\t     * @returns {Number}\n\t     * @example\n\t     * // get crop y\n\t     * var cropY = image.cropY();\n\t     *\n\t     * // set crop y\n\t     * image.cropY(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Image, 'cropWidth', 0);\n\t  /**\n\t     * get/set crop width\n\t     * @name cropWidth\n\t     * @method\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Number} width\n\t     * @returns {Number}\n\t     * @example\n\t     * // get crop width\n\t     * var cropWidth = image.cropWidth();\n\t     *\n\t     * // set crop width\n\t     * image.cropWidth(20);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Image, 'cropHeight', 0);\n\t  /**\n\t     * get/set crop height\n\t     * @name cropHeight\n\t     * @method\n\t     * @memberof Konva.Image.prototype\n\t     * @param {Number} height\n\t     * @returns {Number}\n\t     * @example\n\t     * // get crop height\n\t     * var cropHeight = image.cropHeight();\n\t     *\n\t     * // set crop height\n\t     * image.cropHeight(20);\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.Image);\n\t\n\t  /**\n\t     * load image from given url and create `Konva.Image` instance\n\t     * @method\n\t     * @memberof Konva.Image\n\t     * @param {String} url image source\n\t     * @param {Function} callback with Konva.Image instance as first argument\n\t     * @example\n\t     *  Konva.Image.fromURL(imageURL, function(image){\n\t     *    // image is Konva.Image instance\n\t     *    layer.add(image);\n\t     *    layer.draw();\n\t     *  });\n\t     */\n\t  Konva.Image.fromURL = function(url, callback) {\n\t    var img = new Image();\n\t    img.onload = function() {\n\t      var image = new Konva.Image({\n\t        image: img\n\t      });\n\t      callback(image);\n\t    };\n\t    img.src = url;\n\t  };\n\t})();\n\t\n\t/*eslint-disable max-depth */\n\t(function() {\n\t  'use strict';\n\t  // var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\t  // constants\n\t  var AUTO = 'auto',\n\t    //CANVAS = 'canvas',\n\t    CENTER = 'center',\n\t    JUSTIFY = 'justify',\n\t    CHANGE_KONVA = 'Change.konva',\n\t    CONTEXT_2D = '2d',\n\t    DASH = '-',\n\t    EMPTY_STRING = '',\n\t    LEFT = 'left',\n\t    TEXT = 'text',\n\t    TEXT_UPPER = 'Text',\n\t    MIDDLE = 'middle',\n\t    NORMAL = 'normal',\n\t    PX_SPACE = 'px ',\n\t    SPACE = ' ',\n\t    RIGHT = 'right',\n\t    WORD = 'word',\n\t    CHAR = 'char',\n\t    NONE = 'none',\n\t    ATTR_CHANGE_LIST = [\n\t      'fontFamily',\n\t      'fontSize',\n\t      'fontStyle',\n\t      'fontVariant',\n\t      'padding',\n\t      'align',\n\t      'lineHeight',\n\t      'text',\n\t      'width',\n\t      'height',\n\t      'wrap',\n\t      'letterSpacing'\n\t    ],\n\t    // cached variables\n\t    attrChangeListLen = ATTR_CHANGE_LIST.length;\n\t  var dummyContext;\n\t  function getDummyContext() {\n\t    if (dummyContext) {\n\t      return dummyContext;\n\t    }\n\t    dummyContext = Konva.Util.createCanvasElement().getContext(CONTEXT_2D);\n\t    return dummyContext;\n\t  }\n\t\n\t  /**\n\t     * Text constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {String} [config.fontFamily] default is Arial\n\t     * @param {Number} [config.fontSize] in pixels.  Default is 12\n\t     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n\t     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n\t     * @param {String} config.text\n\t     * @param {String} [config.align] can be left, center, or right\n\t     * @param {Number} [config.padding]\n\t     * @param {Number} [config.lineHeight] default is 1\n\t     * @param {String} [config.wrap] can be word, char, or none. Default is word\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var text = new Konva.Text({\n\t     *   x: 10,\n\t     *   y: 15,\n\t     *   text: 'Simple Text',\n\t     *   fontSize: 30,\n\t     *   fontFamily: 'Calibri',\n\t     *   fill: 'green'\n\t     * });\n\t     */\n\t  Konva.Text = function(config) {\n\t    this.___init(config);\n\t  };\n\t  function _fillFunc(context) {\n\t    context.fillText(this.partialText, 0, 0);\n\t  }\n\t  function _strokeFunc(context) {\n\t    context.strokeText(this.partialText, 0, 0);\n\t  }\n\t\n\t  Konva.Text.prototype = {\n\t    ___init: function(config) {\n\t      config = config || {};\n\t\n\t      // set default color to black\n\t      if (\n\t        !config.fillLinearGradientColorStops &&\n\t        !config.fillRadialGradientColorStops\n\t      ) {\n\t        config.fill = config.fill || 'black';\n\t      }\n\t      //\n\t      // if (config.width === undefined) {\n\t      //     config.width = AUTO;\n\t      // }\n\t      // if (config.height === undefined) {\n\t      //     config.height = AUTO;\n\t      // }\n\t\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t\n\t      this._fillFunc = _fillFunc;\n\t      this._strokeFunc = _strokeFunc;\n\t      this.className = TEXT_UPPER;\n\t\n\t      // update text data for certain attr changes\n\t      for (var n = 0; n < attrChangeListLen; n++) {\n\t        this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n\t      }\n\t\n\t      this._setTextData();\n\t      this.sceneFunc(this._sceneFunc);\n\t      this.hitFunc(this._hitFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var p = this.getPadding(),\n\t        textHeight = this.getTextHeight(),\n\t        lineHeightPx = this.getLineHeight() * textHeight,\n\t        textArr = this.textArr,\n\t        textArrLen = textArr.length,\n\t        align = this.getAlign(),\n\t        totalWidth = this.getWidth(),\n\t        letterSpacing = this.getLetterSpacing(),\n\t        textDecoration = this.textDecoration(),\n\t        fill = this.fill(),\n\t        fontSize = this.fontSize(),\n\t        n;\n\t\n\t      context.setAttr('font', this._getContextFont());\n\t\n\t      context.setAttr('textBaseline', MIDDLE);\n\t      context.setAttr('textAlign', LEFT);\n\t      context.save();\n\t      if (p) {\n\t        context.translate(p, 0);\n\t        context.translate(0, p + textHeight / 2);\n\t      } else {\n\t        context.translate(0, textHeight / 2);\n\t      }\n\t\n\t      // draw text lines\n\t      for (n = 0; n < textArrLen; n++) {\n\t        var obj = textArr[n],\n\t          text = obj.text,\n\t          width = obj.width;\n\t\n\t        // horizontal alignment\n\t        context.save();\n\t        if (align === RIGHT) {\n\t          context.translate(totalWidth - width - p * 2, 0);\n\t        } else if (align === CENTER) {\n\t          context.translate((totalWidth - width - p * 2) / 2, 0);\n\t        }\n\t\n\t        if (textDecoration.indexOf('underline') !== -1) {\n\t          context.save();\n\t          context.beginPath();\n\t          context.moveTo(0, Math.round(lineHeightPx / 2));\n\t          context.lineTo(Math.round(width), Math.round(lineHeightPx / 2));\n\t          // TODO: I have no idea what is real ratio\n\t          // just /20 looks good enough\n\t          context.lineWidth = fontSize / 15;\n\t          context.strokeStyle = fill;\n\t          context.stroke();\n\t          context.restore();\n\t        }\n\t        if (textDecoration.indexOf('line-through') !== -1) {\n\t          context.save();\n\t          context.beginPath();\n\t          context.moveTo(0, 0);\n\t          context.lineTo(Math.round(width), 0);\n\t          context.lineWidth = fontSize / 15;\n\t          context.strokeStyle = fill;\n\t          context.stroke();\n\t          context.restore();\n\t        }\n\t        if (letterSpacing !== 0 || align === JUSTIFY) {\n\t          //   var words = text.split(' ');\n\t          var spacesNumber = text.split(' ').length - 1;\n\t          for (var li = 0; li < text.length; li++) {\n\t            var letter = text[li];\n\t            // skip justify for the last line\n\t            if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {\n\t              context.translate(\n\t                Math.floor((totalWidth - width) / spacesNumber),\n\t                0\n\t              );\n\t            }\n\t            this.partialText = letter;\n\t            context.fillStrokeShape(this);\n\t            context.translate(\n\t              Math.round(this._getTextSize(letter).width) + letterSpacing,\n\t              0\n\t            );\n\t          }\n\t        } else {\n\t          this.partialText = text;\n\t\n\t          context.fillStrokeShape(this);\n\t        }\n\t        context.restore();\n\t        context.translate(0, lineHeightPx);\n\t      }\n\t      context.restore();\n\t    },\n\t    _hitFunc: function(context) {\n\t      var width = this.getWidth(),\n\t        height = this.getHeight();\n\t\n\t      context.beginPath();\n\t      context.rect(0, 0, width, height);\n\t      context.closePath();\n\t      context.fillStrokeShape(this);\n\t    },\n\t    // _useBufferCanvas: function(caching) {\n\t    //     var useIt = Konva.Shape.prototype._useBufferCanvas.call(this, caching);\n\t    //     if (useIt) {\n\t    //       return true;\n\t    //     }\n\t    //     return false;\n\t    //     // return isFirefox && this.hasFill() && this.hasShadow();\n\t    // },\n\t    setText: function(text) {\n\t      var str = Konva.Util._isString(text) ? text : (text || '').toString();\n\t      this._setAttr(TEXT, str);\n\t      return this;\n\t    },\n\t    /**\n\t         * get width of text area, which includes padding\n\t         * @method\n\t         * @memberof Konva.Text.prototype\n\t         * @returns {Number}\n\t         */\n\t    getWidth: function() {\n\t      var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n\t      return isAuto\n\t        ? this.getTextWidth() + this.getPadding() * 2\n\t        : this.attrs.width;\n\t    },\n\t    /**\n\t         * get the height of the text area, which takes into account multi-line text, line heights, and padding\n\t         * @method\n\t         * @memberof Konva.Text.prototype\n\t         * @returns {Number}\n\t         */\n\t    getHeight: function() {\n\t      var isAuto =\n\t        this.attrs.height === AUTO || this.attrs.height === undefined;\n\t      return isAuto\n\t        ? this.getTextHeight() * this.textArr.length * this.getLineHeight() +\n\t          this.getPadding() * 2\n\t        : this.attrs.height;\n\t    },\n\t    /**\n\t         * get text width\n\t         * @method\n\t         * @memberof Konva.Text.prototype\n\t         * @returns {Number}\n\t         */\n\t    getTextWidth: function() {\n\t      return this.textWidth;\n\t    },\n\t    /**\n\t         * get text height\n\t         * @method\n\t         * @memberof Konva.Text.prototype\n\t         * @returns {Number}\n\t         */\n\t    getTextHeight: function() {\n\t      return this.textHeight;\n\t    },\n\t    _getTextSize: function(text) {\n\t      var _context = getDummyContext(),\n\t        fontSize = this.getFontSize(),\n\t        metrics;\n\t\n\t      _context.save();\n\t      _context.font = this._getContextFont();\n\t\n\t      metrics = _context.measureText(text);\n\t      _context.restore();\n\t      return {\n\t        width: metrics.width,\n\t        height: parseInt(fontSize, 10)\n\t      };\n\t    },\n\t    _getContextFont: function() {\n\t      // IE don't want to work with usual font style\n\t      // bold was not working\n\t      // removing font variant will solve\n\t      // fix for: https://github.com/konvajs/konva/issues/94\n\t      if (Konva.UA.isIE) {\n\t        return (\n\t          this.getFontStyle() +\n\t          SPACE +\n\t          this.getFontSize() +\n\t          PX_SPACE +\n\t          this.getFontFamily()\n\t        );\n\t      }\n\t      return (\n\t        this.getFontStyle() +\n\t        SPACE +\n\t        this.getFontVariant() +\n\t        SPACE +\n\t        this.getFontSize() +\n\t        PX_SPACE +\n\t        this.getFontFamily()\n\t      );\n\t    },\n\t    _addTextLine: function(line) {\n\t      if (this.align() === JUSTIFY) {\n\t        line = line.trim();\n\t      }\n\t      var width = this._getTextWidth(line);\n\t      return this.textArr.push({ text: line, width: width });\n\t    },\n\t    _getTextWidth: function(text) {\n\t      var latterSpacing = this.getLetterSpacing();\n\t      var length = text.length;\n\t      return (\n\t        getDummyContext().measureText(text).width +\n\t        (length ? latterSpacing * (length - 1) : 0)\n\t      );\n\t    },\n\t    _setTextData: function() {\n\t      var lines = this.getText().split('\\n'),\n\t        fontSize = +this.getFontSize(),\n\t        textWidth = 0,\n\t        lineHeightPx = this.getLineHeight() * fontSize,\n\t        width = this.attrs.width,\n\t        height = this.attrs.height,\n\t        fixedWidth = width !== AUTO,\n\t        fixedHeight = height !== AUTO,\n\t        padding = this.getPadding(),\n\t        maxWidth = width - padding * 2,\n\t        maxHeightPx = height - padding * 2,\n\t        currentHeightPx = 0,\n\t        wrap = this.getWrap(),\n\t        shouldWrap = wrap !== NONE,\n\t        wrapAtWord = wrap !== CHAR && shouldWrap;\n\t\n\t      this.textArr = [];\n\t      getDummyContext().save();\n\t      getDummyContext().font = this._getContextFont();\n\t      for (var i = 0, max = lines.length; i < max; ++i) {\n\t        var line = lines[i];\n\t\n\t        var lineWidth = this._getTextWidth(line);\n\t        if (fixedWidth && lineWidth > maxWidth) {\n\t          /*\n\t                     * if width is fixed and line does not fit entirely\n\t                     * break the line into multiple fitting lines\n\t                     */\n\t          while (line.length > 0) {\n\t            /*\n\t                         * use binary search to find the longest substring that\n\t                         * that would fit in the specified width\n\t                         */\n\t            var low = 0,\n\t              high = line.length,\n\t              match = '',\n\t              matchWidth = 0;\n\t            while (low < high) {\n\t              var mid = (low + high) >>> 1,\n\t                substr = line.slice(0, mid + 1),\n\t                substrWidth = this._getTextWidth(substr);\n\t              if (substrWidth <= maxWidth) {\n\t                low = mid + 1;\n\t                match = substr;\n\t                matchWidth = substrWidth;\n\t              } else {\n\t                high = mid;\n\t              }\n\t            }\n\t            /*\n\t                         * 'low' is now the index of the substring end\n\t                         * 'match' is the substring\n\t                         * 'matchWidth' is the substring width in px\n\t                         */\n\t            if (match) {\n\t              // a fitting substring was found\n\t              if (wrapAtWord) {\n\t                // try to find a space or dash where wrapping could be done\n\t                var wrapIndex =\n\t                  Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\n\t                  1;\n\t                if (wrapIndex > 0) {\n\t                  // re-cut the substring found at the space/dash position\n\t                  low = wrapIndex;\n\t                  match = match.slice(0, low);\n\t                  matchWidth = this._getTextWidth(match);\n\t                }\n\t              }\n\t              this._addTextLine(match);\n\t              textWidth = Math.max(textWidth, matchWidth);\n\t              currentHeightPx += lineHeightPx;\n\t              if (\n\t                !shouldWrap ||\n\t                (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)\n\t              ) {\n\t                /*\n\t                                 * stop wrapping if wrapping is disabled or if adding\n\t                                 * one more line would overflow the fixed height\n\t                                 */\n\t                break;\n\t              }\n\t              line = line.slice(low);\n\t              if (line.length > 0) {\n\t                // Check if the remaining text would fit on one line\n\t                lineWidth = this._getTextWidth(line);\n\t                if (lineWidth <= maxWidth) {\n\t                  // if it does, add the line and break out of the loop\n\t                  this._addTextLine(line);\n\t                  currentHeightPx += lineHeightPx;\n\t                  textWidth = Math.max(textWidth, lineWidth);\n\t                  break;\n\t                }\n\t              }\n\t            } else {\n\t              // not even one character could fit in the element, abort\n\t              break;\n\t            }\n\t          }\n\t        } else {\n\t          // element width is automatically adjusted to max line width\n\t          this._addTextLine(line);\n\t          currentHeightPx += lineHeightPx;\n\t          textWidth = Math.max(textWidth, lineWidth);\n\t        }\n\t        // if element height is fixed, abort if adding one more line would overflow\n\t        if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n\t          break;\n\t        }\n\t      }\n\t      getDummyContext().restore();\n\t      this.textHeight = fontSize;\n\t      // var maxTextWidth = 0;\n\t      // for(var j = 0; j < this.textArr.length; j++) {\n\t      //     maxTextWidth = Math.max(maxTextWidth, this.textArr[j].width);\n\t      // }\n\t      this.textWidth = textWidth;\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Text, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.Text, 'fontFamily', 'Arial');\n\t\n\t  /**\n\t     * get/set font family\n\t     * @name fontFamily\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} fontFamily\n\t     * @returns {String}\n\t     * @example\n\t     * // get font family\n\t     * var fontFamily = text.fontFamily();\n\t     *\n\t     * // set font family\n\t     * text.fontFamily('Arial');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Text, 'fontSize', 12);\n\t\n\t  /**\n\t     * get/set font size in pixels\n\t     * @name fontSize\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {Number} fontSize\n\t     * @returns {Number}\n\t     * @example\n\t     * // get font size\n\t     * var fontSize = text.fontSize();\n\t     *\n\t     * // set font size to 22px\n\t     * text.fontSize(22);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Text, 'fontStyle', NORMAL);\n\t\n\t  /**\n\t     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n\t     * @name fontStyle\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} fontStyle\n\t     * @returns {String}\n\t     * @example\n\t     * // get font style\n\t     * var fontStyle = text.fontStyle();\n\t     *\n\t     * // set font style\n\t     * text.fontStyle('bold');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Text, 'fontVariant', NORMAL);\n\t\n\t  /**\n\t     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n\t     * @name fontVariant\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} fontVariant\n\t     * @returns {String}\n\t     * @example\n\t     * // get font variant\n\t     * var fontVariant = text.fontVariant();\n\t     *\n\t     * // set font variant\n\t     * text.fontVariant('small-caps');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Text, 'padding', 0);\n\t\n\t  /**\n\t     * set padding\n\t     * @name padding\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {Number} padding\n\t     * @returns {Number}\n\t     * @example\n\t     * // get padding\n\t     * var padding = text.padding();\n\t     *\n\t     * // set padding to 10 pixels\n\t     * text.padding(10);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Text, 'align', LEFT);\n\t\n\t  /**\n\t     * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'\n\t     * @name align\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} align\n\t     * @returns {String}\n\t     * @example\n\t     * // get text align\n\t     * var align = text.align();\n\t     *\n\t     * // center text\n\t     * text.align('center');\n\t     *\n\t     * // align text to right\n\t     * text.align('right');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Text, 'lineHeight', 1);\n\t\n\t  /**\n\t     * get/set line height.  The default is 1.\n\t     * @name lineHeight\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {Number} lineHeight\n\t     * @returns {Number}\n\t     * @example\n\t     * // get line height\n\t     * var lineHeight = text.lineHeight();\n\t     *\n\t     * // set the line height\n\t     * text.lineHeight(2);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Text, 'wrap', WORD);\n\t\n\t  /**\n\t     * get/set wrap.  Can be word, char, or none. Default is word.\n\t     * @name wrap\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} wrap\n\t     * @returns {String}\n\t     * @example\n\t     * // get wrap\n\t     * var wrap = text.wrap();\n\t     *\n\t     * // set wrap\n\t     * text.wrap('word');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Text, 'letterSpacing', 0);\n\t\n\t  /**\n\t       * set letter spacing property. Default value is 0.\n\t       * @name letterSpacing\n\t       * @method\n\t       * @memberof Konva.TextPath.prototype\n\t       * @param {Number} letterSpacing\n\t       */\n\t\n\t  Konva.Factory.addGetter(Konva.Text, 'text', EMPTY_STRING);\n\t  Konva.Factory.addOverloadedGetterSetter(Konva.Text, 'text');\n\t\n\t  /**\n\t     * get/set text\n\t     * @name getText\n\t     * @method\n\t     * @memberof Konva.Text.prototype\n\t     * @param {String} text\n\t     * @returns {String}\n\t     * @example\n\t     * // get text\n\t     * var text = text.text();\n\t     *\n\t     * // set text\n\t     * text.text('Hello world!');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Text, 'textDecoration', EMPTY_STRING);\n\t\n\t  /**\n\t      * get/set text decoration of a text.  Possible values are 'underline', 'line-through' or combination of these values separated by space\n\t      * @name textDecoration\n\t      * @method\n\t      * @memberof Konva.Text.prototype\n\t      * @param {String} textDecoration\n\t      * @returns {String}\n\t      * @example\n\t      * // get text decoration\n\t      * var textDecoration = text.textDecoration();\n\t      *\n\t      * // underline text\n\t      * text.textDecoration('underline');\n\t      *\n\t      * // strike text\n\t      * text.textDecoration('line-through');\n\t      *\n\t      * // underline and strike text\n\t      * text.textDecoration('underline line-through');\n\t      */\n\t\n\t  Konva.Collection.mapMethods(Konva.Text);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Line constructor.&nbsp; Lines are defined by an array of points and\n\t     *  a tension\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Array} config.points\n\t     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n\t     *   The default is 0\n\t     * @param {Boolean} [config.closed] defines whether or not the line shape is closed, creating a polygon or blob\n\t     * @param {Boolean} [config.bezier] if no tension is provided but bezier=true, we draw the line as a bezier using the passed points\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var line = new Konva.Line({\n\t     *   x: 100,\n\t     *   y: 50,\n\t     *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n\t     *   stroke: 'red',\n\t     *   tension: 1\n\t     * });\n\t     */\n\t  Konva.Line = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Line.prototype = {\n\t    ___init: function(config) {\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = 'Line';\n\t\n\t      this.on(\n\t        'pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva',\n\t        function() {\n\t          this._clearCache('tensionPoints');\n\t        }\n\t      );\n\t\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var points = this.getPoints(),\n\t        length = points.length,\n\t        tension = this.getTension(),\n\t        closed = this.getClosed(),\n\t        bezier = this.getBezier(),\n\t        tp,\n\t        len,\n\t        n;\n\t\n\t      if (!length) {\n\t        return;\n\t      }\n\t\n\t      context.beginPath();\n\t      context.moveTo(points[0], points[1]);\n\t\n\t      // tension\n\t      if (tension !== 0 && length > 4) {\n\t        tp = this.getTensionPoints();\n\t        len = tp.length;\n\t        n = closed ? 0 : 4;\n\t\n\t        if (!closed) {\n\t          context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n\t        }\n\t\n\t        while (n < len - 2) {\n\t          context.bezierCurveTo(\n\t            tp[n++],\n\t            tp[n++],\n\t            tp[n++],\n\t            tp[n++],\n\t            tp[n++],\n\t            tp[n++]\n\t          );\n\t        }\n\t\n\t        if (!closed) {\n\t          context.quadraticCurveTo(\n\t            tp[len - 2],\n\t            tp[len - 1],\n\t            points[length - 2],\n\t            points[length - 1]\n\t          );\n\t        }\n\t      } else if (bezier) {\n\t        // no tension but bezier\n\t        n = 2;\n\t\n\t        while (n < length) {\n\t          context.bezierCurveTo(\n\t            points[n++],\n\t            points[n++],\n\t            points[n++],\n\t            points[n++],\n\t            points[n++],\n\t            points[n++]\n\t          );\n\t        }\n\t      } else {\n\t        // no tension\n\t        for (n = 2; n < length; n += 2) {\n\t          context.lineTo(points[n], points[n + 1]);\n\t        }\n\t      }\n\t\n\t      // closed e.g. polygons and blobs\n\t      if (closed) {\n\t        context.closePath();\n\t        context.fillStrokeShape(this);\n\t      } else {\n\t        // open e.g. lines and splines\n\t        context.strokeShape(this);\n\t      }\n\t    },\n\t    getTensionPoints: function() {\n\t      return this._getCache('tensionPoints', this._getTensionPoints);\n\t    },\n\t    _getTensionPoints: function() {\n\t      if (this.getClosed()) {\n\t        return this._getTensionPointsClosed();\n\t      } else {\n\t        return Konva.Util._expandPoints(this.getPoints(), this.getTension());\n\t      }\n\t    },\n\t    _getTensionPointsClosed: function() {\n\t      var p = this.getPoints(),\n\t        len = p.length,\n\t        tension = this.getTension(),\n\t        util = Konva.Util,\n\t        firstControlPoints = util._getControlPoints(\n\t          p[len - 2],\n\t          p[len - 1],\n\t          p[0],\n\t          p[1],\n\t          p[2],\n\t          p[3],\n\t          tension\n\t        ),\n\t        lastControlPoints = util._getControlPoints(\n\t          p[len - 4],\n\t          p[len - 3],\n\t          p[len - 2],\n\t          p[len - 1],\n\t          p[0],\n\t          p[1],\n\t          tension\n\t        ),\n\t        middle = Konva.Util._expandPoints(p, tension),\n\t        tp = [firstControlPoints[2], firstControlPoints[3]]\n\t          .concat(middle)\n\t          .concat([\n\t            lastControlPoints[0],\n\t            lastControlPoints[1],\n\t            p[len - 2],\n\t            p[len - 1],\n\t            lastControlPoints[2],\n\t            lastControlPoints[3],\n\t            firstControlPoints[0],\n\t            firstControlPoints[1],\n\t            p[0],\n\t            p[1]\n\t          ]);\n\t\n\t      return tp;\n\t    },\n\t    getWidth: function() {\n\t      return this.getSelfRect().width;\n\t    },\n\t    getHeight: function() {\n\t      return this.getSelfRect().height;\n\t    },\n\t    // overload size detection\n\t    getSelfRect: function() {\n\t      var points;\n\t      if (this.getTension() !== 0) {\n\t        points = this._getTensionPoints();\n\t      } else {\n\t        points = this.getPoints();\n\t      }\n\t      var minX = points[0];\n\t      var maxX = points[0];\n\t      var minY = points[1];\n\t      var maxY = points[1];\n\t      var x, y;\n\t      for (var i = 0; i < points.length / 2; i++) {\n\t        x = points[i * 2];\n\t        y = points[i * 2 + 1];\n\t        minX = Math.min(minX, x);\n\t        maxX = Math.max(maxX, x);\n\t        minY = Math.min(minY, y);\n\t        maxY = Math.max(maxY, y);\n\t      }\n\t      return {\n\t        x: Math.round(minX),\n\t        y: Math.round(minY),\n\t        width: Math.round(maxX - minX),\n\t        height: Math.round(maxY - minY)\n\t      };\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Line, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.Line, 'closed', false);\n\t\n\t  /**\n\t     * get/set closed flag.  The default is false\n\t     * @name closed\n\t     * @method\n\t     * @memberof Konva.Line.prototype\n\t     * @param {Boolean} closed\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get closed flag\n\t     * var closed = line.closed();\n\t     *\n\t     * // close the shape\n\t     * line.closed(true);\n\t     *\n\t     * // open the shape\n\t     * line.closed(false);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Line, 'bezier', false);\n\t\n\t  /**\n\t    * get/set bezier flag.  The default is false\n\t    * @name bezier\n\t    * @method\n\t    * @memberof Konva.Line.prototype\n\t    * @param {Boolean} bezier\n\t    * @returns {Boolean}\n\t    * @example\n\t    * // get whether the line is a bezier\n\t    * var isBezier = line.bezier();\n\t    *\n\t    * // set whether the line is a bezier\n\t    * line.bezier(true);\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Line, 'tension', 0);\n\t\n\t  /**\n\t     * get/set tension\n\t     * @name tension\n\t     * @method\n\t     * @memberof Konva.Line.prototype\n\t     * @param {Number} Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n\t     *   The default is 0\n\t     * @returns {Number}\n\t     * @example\n\t     * // get tension\n\t     * var tension = line.tension();\n\t     *\n\t     * // set tension\n\t     * line.tension(3);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Line, 'points', []);\n\t  /**\n\t     * get/set points array\n\t     * @name points\n\t     * @method\n\t     * @memberof Konva.Line.prototype\n\t     * @param {Array} points\n\t     * @returns {Array}\n\t     * @example\n\t     * // get points\n\t     * var points = line.points();\n\t     *\n\t     * // set points\n\t     * line.points([10, 20, 30, 40, 50, 60]);\n\t     *\n\t     * // push a new point\n\t     * line.points(line.points().concat([70, 80]));\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.Line);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Sprite constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {String} config.animation animation key\n\t     * @param {Object} config.animations animation map\n\t     * @param {Integer} [config.frameIndex] animation frame index\n\t     * @param {Image} config.image image object\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var imageObj = new Image();\n\t     * imageObj.onload = function() {\n\t     *   var sprite = new Konva.Sprite({\n\t     *     x: 200,\n\t     *     y: 100,\n\t     *     image: imageObj,\n\t     *     animation: 'standing',\n\t     *     animations: {\n\t     *       standing: [\n\t     *         // x, y, width, height (6 frames)\n\t     *         0, 0, 49, 109,\n\t     *         52, 0, 49, 109,\n\t     *         105, 0, 49, 109,\n\t     *         158, 0, 49, 109,\n\t     *         210, 0, 49, 109,\n\t     *         262, 0, 49, 109\n\t     *       ],\n\t     *       kicking: [\n\t     *         // x, y, width, height (6 frames)\n\t     *         0, 109, 45, 98,\n\t     *         45, 109, 45, 98,\n\t     *         95, 109, 63, 98,\n\t     *         156, 109, 70, 98,\n\t     *         229, 109, 60, 98,\n\t     *         287, 109, 41, 98\n\t     *       ]\n\t     *     },\n\t     *     frameRate: 7,\n\t     *     frameIndex: 0\n\t     *   });\n\t     * };\n\t     * imageObj.src = '/path/to/image.jpg'\n\t     */\n\t  Konva.Sprite = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Sprite.prototype = {\n\t    ___init: function(config) {\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = 'Sprite';\n\t\n\t      this._updated = true;\n\t      var that = this;\n\t      this.anim = new Konva.Animation(function() {\n\t        // if we don't need to redraw layer we should return false\n\t        var updated = that._updated;\n\t        that._updated = false;\n\t        return updated;\n\t      });\n\t      this.on('animationChange.konva', function() {\n\t        // reset index when animation changes\n\t        this.frameIndex(0);\n\t      });\n\t      this.on('frameIndexChange.konva', function() {\n\t        this._updated = true;\n\t      });\n\t      // smooth change for frameRate\n\t      this.on('frameRateChange.konva', function() {\n\t        if (!this.anim.isRunning()) {\n\t          return;\n\t        }\n\t        clearInterval(this.interval);\n\t        this._setInterval();\n\t      });\n\t\n\t      this.sceneFunc(this._sceneFunc);\n\t      this.hitFunc(this._hitFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var anim = this.getAnimation(),\n\t        index = this.frameIndex(),\n\t        ix4 = index * 4,\n\t        set = this.getAnimations()[anim],\n\t        offsets = this.frameOffsets(),\n\t        x = set[ix4 + 0],\n\t        y = set[ix4 + 1],\n\t        width = set[ix4 + 2],\n\t        height = set[ix4 + 3],\n\t        image = this.getImage();\n\t\n\t      if (this.hasFill() || this.hasStroke()) {\n\t        context.beginPath();\n\t        context.rect(0, 0, width, height);\n\t        context.closePath();\n\t        context.fillStrokeShape(this);\n\t      }\n\t\n\t      if (image) {\n\t        if (offsets) {\n\t          var offset = offsets[anim], ix2 = index * 2;\n\t          context.drawImage(\n\t            image,\n\t            x,\n\t            y,\n\t            width,\n\t            height,\n\t            offset[ix2 + 0],\n\t            offset[ix2 + 1],\n\t            width,\n\t            height\n\t          );\n\t        } else {\n\t          context.drawImage(image, x, y, width, height, 0, 0, width, height);\n\t        }\n\t      }\n\t    },\n\t    _hitFunc: function(context) {\n\t      var anim = this.getAnimation(),\n\t        index = this.frameIndex(),\n\t        ix4 = index * 4,\n\t        set = this.getAnimations()[anim],\n\t        offsets = this.frameOffsets(),\n\t        width = set[ix4 + 2],\n\t        height = set[ix4 + 3];\n\t\n\t      context.beginPath();\n\t      if (offsets) {\n\t        var offset = offsets[anim];\n\t        var ix2 = index * 2;\n\t        context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n\t      } else {\n\t        context.rect(0, 0, width, height);\n\t      }\n\t      context.closePath();\n\t      context.fillShape(this);\n\t    },\n\t    _useBufferCanvas: function() {\n\t      return (\n\t        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&\n\t        this.hasStroke()\n\t      );\n\t    },\n\t    _setInterval: function() {\n\t      var that = this;\n\t      this.interval = setInterval(function() {\n\t        that._updateIndex();\n\t      }, 1000 / this.getFrameRate());\n\t    },\n\t    /**\n\t         * start sprite animation\n\t         * @method\n\t         * @memberof Konva.Sprite.prototype\n\t         */\n\t    start: function() {\n\t      var layer = this.getLayer();\n\t\n\t      /*\n\t             * animation object has no executable function because\n\t             *  the updates are done with a fixed FPS with the setInterval\n\t             *  below.  The anim object only needs the layer reference for\n\t             *  redraw\n\t             */\n\t      this.anim.setLayers(layer);\n\t      this._setInterval();\n\t      this.anim.start();\n\t    },\n\t    /**\n\t         * stop sprite animation\n\t         * @method\n\t         * @memberof Konva.Sprite.prototype\n\t         */\n\t    stop: function() {\n\t      this.anim.stop();\n\t      clearInterval(this.interval);\n\t    },\n\t    /**\n\t         * determine if animation of sprite is running or not.  returns true or false\n\t         * @method\n\t         * @memberof Konva.Animation.prototype\n\t         * @returns {Boolean}\n\t         */\n\t    isRunning: function() {\n\t      return this.anim.isRunning();\n\t    },\n\t    _updateIndex: function() {\n\t      var index = this.frameIndex(),\n\t        animation = this.getAnimation(),\n\t        animations = this.getAnimations(),\n\t        anim = animations[animation],\n\t        len = anim.length / 4;\n\t\n\t      if (index < len - 1) {\n\t        this.frameIndex(index + 1);\n\t      } else {\n\t        this.frameIndex(0);\n\t      }\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Sprite, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.Sprite, 'animation');\n\t\n\t  /**\n\t     * get/set animation key\n\t     * @name animation\n\t     * @method\n\t     * @memberof Konva.Sprite.prototype\n\t     * @param {String} anim animation key\n\t     * @returns {String}\n\t     * @example\n\t     * // get animation key\n\t     * var animation = sprite.animation();\n\t     *\n\t     * // set animation key\n\t     * sprite.animation('kicking');\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Sprite, 'animations');\n\t\n\t  /**\n\t     * get/set animations map\n\t     * @name animations\n\t     * @method\n\t     * @memberof Konva.Sprite.prototype\n\t     * @param {Object} animations\n\t     * @returns {Object}\n\t     * @example\n\t     * // get animations map\n\t     * var animations = sprite.animations();\n\t     *\n\t     * // set animations map\n\t     * sprite.animations({\n\t     *   standing: [\n\t     *     // x, y, width, height (6 frames)\n\t     *     0, 0, 49, 109,\n\t     *     52, 0, 49, 109,\n\t     *     105, 0, 49, 109,\n\t     *     158, 0, 49, 109,\n\t     *     210, 0, 49, 109,\n\t     *     262, 0, 49, 109\n\t     *   ],\n\t     *   kicking: [\n\t     *     // x, y, width, height (6 frames)\n\t     *     0, 109, 45, 98,\n\t     *     45, 109, 45, 98,\n\t     *     95, 109, 63, 98,\n\t     *     156, 109, 70, 98,\n\t     *     229, 109, 60, 98,\n\t     *     287, 109, 41, 98\n\t     *   ]\n\t     * });\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameOffsets');\n\t\n\t  /**\n\t    * get/set offsets map\n\t    * @name offsets\n\t    * @method\n\t    * @memberof Konva.Sprite.prototype\n\t    * @param {Object} offsets\n\t    * @returns {Object}\n\t    * @example\n\t    * // get offsets map\n\t    * var offsets = sprite.offsets();\n\t    *\n\t    * // set offsets map\n\t    * sprite.offsets({\n\t    *   standing: [\n\t    *     // x, y (6 frames)\n\t    *     0, 0,\n\t    *     0, 0,\n\t    *     5, 0,\n\t    *     0, 0,\n\t    *     0, 3,\n\t    *     2, 0\n\t    *   ],\n\t    *   kicking: [\n\t    *     // x, y (6 frames)\n\t    *     0, 5,\n\t    *     5, 0,\n\t    *     10, 0,\n\t    *     0, 0,\n\t    *     2, 1,\n\t    *     0, 0\n\t    *   ]\n\t    * });\n\t    */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Sprite, 'image');\n\t\n\t  /**\n\t     * get/set image\n\t     * @name image\n\t     * @method\n\t     * @memberof Konva.Sprite.prototype\n\t     * @param {Image} image\n\t     * @returns {Image}\n\t     * @example\n\t     * // get image\n\t     * var image = sprite.image();\n\t     *\n\t     * // set image\n\t     * sprite.image(imageObj);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameIndex', 0);\n\t\n\t  /**\n\t     * set/set animation frame index\n\t     * @name frameIndex\n\t     * @method\n\t     * @memberof Konva.Sprite.prototype\n\t     * @param {Integer} frameIndex\n\t     * @returns {Integer}\n\t     * @example\n\t     * // get animation frame index\n\t     * var frameIndex = sprite.frameIndex();\n\t     *\n\t     * // set animation frame index\n\t     * sprite.frameIndex(3);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameRate', 17);\n\t\n\t  /**\n\t     * get/set frame rate in frames per second.  Increase this number to make the sprite\n\t     *  animation run faster, and decrease the number to make the sprite animation run slower\n\t     *  The default is 17 frames per second\n\t     * @name frameRate\n\t     * @method\n\t     * @memberof Konva.Sprite.prototype\n\t     * @param {Integer} frameRate\n\t     * @returns {Integer}\n\t     * @example\n\t     * // get frame rate\n\t     * var frameRate = sprite.frameRate();\n\t     *\n\t     * // set frame rate to 2 frames per second\n\t     * sprite.frameRate(2);\n\t     */\n\t\n\t  Konva.Factory.backCompat(Konva.Sprite, {\n\t    index: 'frameIndex',\n\t    getIndex: 'getFrameIndex',\n\t    setIndex: 'setFrameIndex'\n\t  });\n\t\n\t  Konva.Collection.mapMethods(Konva.Sprite);\n\t})();\n\t\n\t/*eslint-disable  no-shadow, max-len, max-depth */\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Path constructor.\n\t     * @author Jason Follas\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {String} config.data SVG data string\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var path = new Konva.Path({\n\t     *   x: 240,\n\t     *   y: 40,\n\t     *   data: 'M12.582,9.551C3.251,16.237,0.921,29.021,7.08,38.564l-2.36,1.689l4.893,2.262l4.893,2.262l-0.568-5.36l-0.567-5.359l-2.365,1.694c-4.657-7.375-2.83-17.185,4.352-22.33c7.451-5.338,17.817-3.625,23.156,3.824c5.337,7.449,3.625,17.813-3.821,23.152l2.857,3.988c9.617-6.893,11.827-20.277,4.935-29.896C35.591,4.87,22.204,2.658,12.582,9.551z',\n\t     *   fill: 'green',\n\t     *   scale: 2\n\t     * });\n\t     */\n\t  Konva.Path = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Path.prototype = {\n\t    ___init: function(config) {\n\t      this.dataArray = [];\n\t      var that = this;\n\t\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = 'Path';\n\t\n\t      this.dataArray = Konva.Path.parsePathData(this.getData());\n\t      this.on('dataChange.konva', function() {\n\t        that.dataArray = Konva.Path.parsePathData(this.getData());\n\t      });\n\t\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var ca = this.dataArray;\n\t\n\t      // context position\n\t      context.beginPath();\n\t      for (var n = 0; n < ca.length; n++) {\n\t        var c = ca[n].command;\n\t        var p = ca[n].points;\n\t        switch (c) {\n\t          case 'L':\n\t            context.lineTo(p[0], p[1]);\n\t            break;\n\t          case 'M':\n\t            context.moveTo(p[0], p[1]);\n\t            break;\n\t          case 'C':\n\t            context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n\t            break;\n\t          case 'Q':\n\t            context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n\t            break;\n\t          case 'A':\n\t            var cx = p[0],\n\t              cy = p[1],\n\t              rx = p[2],\n\t              ry = p[3],\n\t              theta = p[4],\n\t              dTheta = p[5],\n\t              psi = p[6],\n\t              fs = p[7];\n\t\n\t            var r = rx > ry ? rx : ry;\n\t            var scaleX = rx > ry ? 1 : rx / ry;\n\t            var scaleY = rx > ry ? ry / rx : 1;\n\t\n\t            context.translate(cx, cy);\n\t            context.rotate(psi);\n\t            context.scale(scaleX, scaleY);\n\t            context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n\t            context.scale(1 / scaleX, 1 / scaleY);\n\t            context.rotate(-psi);\n\t            context.translate(-cx, -cy);\n\t\n\t            break;\n\t          case 'z':\n\t            context.closePath();\n\t            break;\n\t        }\n\t      }\n\t\n\t      context.fillStrokeShape(this);\n\t    },\n\t    getSelfRect: function() {\n\t      var points = [];\n\t      this.dataArray.forEach(function(data) {\n\t        points = points.concat(data.points);\n\t      });\n\t      var minX = points[0];\n\t      var maxX = points[0];\n\t      var minY = points[1];\n\t      var maxY = points[1];\n\t      var x, y;\n\t      for (var i = 0; i < points.length / 2; i++) {\n\t        x = points[i * 2];\n\t        y = points[i * 2 + 1];\n\t        minX = Math.min(minX, x);\n\t        maxX = Math.max(maxX, x);\n\t        minY = Math.min(minY, y);\n\t        maxY = Math.max(maxY, y);\n\t      }\n\t      return {\n\t        x: Math.round(minX),\n\t        y: Math.round(minY),\n\t        width: Math.round(maxX - minX),\n\t        height: Math.round(maxY - minY)\n\t      };\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Path, Konva.Shape);\n\t\n\t  Konva.Path.getLineLength = function(x1, y1, x2, y2) {\n\t    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\t  };\n\t  Konva.Path.getPointOnLine = function(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n\t    if (fromX === undefined) {\n\t      fromX = P1x;\n\t    }\n\t    if (fromY === undefined) {\n\t      fromY = P1y;\n\t    }\n\t\n\t    var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n\t    var run = Math.sqrt(dist * dist / (1 + m * m));\n\t    if (P2x < P1x) {\n\t      run *= -1;\n\t    }\n\t    var rise = m * run;\n\t    var pt;\n\t\n\t    if (P2x === P1x) {\n\t      // vertical line\n\t      pt = {\n\t        x: fromX,\n\t        y: fromY + rise\n\t      };\n\t    } else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n\t      pt = {\n\t        x: fromX + run,\n\t        y: fromY + rise\n\t      };\n\t    } else {\n\t      var ix, iy;\n\t\n\t      var len = this.getLineLength(P1x, P1y, P2x, P2y);\n\t      if (len < 0.00000001) {\n\t        return undefined;\n\t      }\n\t      var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n\t      u = u / (len * len);\n\t      ix = P1x + u * (P2x - P1x);\n\t      iy = P1y + u * (P2y - P1y);\n\t\n\t      var pRise = this.getLineLength(fromX, fromY, ix, iy);\n\t      var pRun = Math.sqrt(dist * dist - pRise * pRise);\n\t      run = Math.sqrt(pRun * pRun / (1 + m * m));\n\t      if (P2x < P1x) {\n\t        run *= -1;\n\t      }\n\t      rise = m * run;\n\t      pt = {\n\t        x: ix + run,\n\t        y: iy + rise\n\t      };\n\t    }\n\t\n\t    return pt;\n\t  };\n\t\n\t  Konva.Path.getPointOnCubicBezier = function(\n\t    pct,\n\t    P1x,\n\t    P1y,\n\t    P2x,\n\t    P2y,\n\t    P3x,\n\t    P3y,\n\t    P4x,\n\t    P4y\n\t  ) {\n\t    function CB1(t) {\n\t      return t * t * t;\n\t    }\n\t    function CB2(t) {\n\t      return 3 * t * t * (1 - t);\n\t    }\n\t    function CB3(t) {\n\t      return 3 * t * (1 - t) * (1 - t);\n\t    }\n\t    function CB4(t) {\n\t      return (1 - t) * (1 - t) * (1 - t);\n\t    }\n\t    var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n\t    var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n\t\n\t    return {\n\t      x: x,\n\t      y: y\n\t    };\n\t  };\n\t  Konva.Path.getPointOnQuadraticBezier = function(\n\t    pct,\n\t    P1x,\n\t    P1y,\n\t    P2x,\n\t    P2y,\n\t    P3x,\n\t    P3y\n\t  ) {\n\t    function QB1(t) {\n\t      return t * t;\n\t    }\n\t    function QB2(t) {\n\t      return 2 * t * (1 - t);\n\t    }\n\t    function QB3(t) {\n\t      return (1 - t) * (1 - t);\n\t    }\n\t    var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n\t    var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n\t\n\t    return {\n\t      x: x,\n\t      y: y\n\t    };\n\t  };\n\t  Konva.Path.getPointOnEllipticalArc = function(cx, cy, rx, ry, theta, psi) {\n\t    var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n\t    var pt = {\n\t      x: rx * Math.cos(theta),\n\t      y: ry * Math.sin(theta)\n\t    };\n\t    return {\n\t      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n\t      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n\t    };\n\t  };\n\t  /*\n\t     * get parsed data array from the data\n\t     *  string.  V, v, H, h, and l data are converted to\n\t     *  L data for the purpose of high performance Path\n\t     *  rendering\n\t     */\n\t  Konva.Path.parsePathData = function(data) {\n\t    // Path Data Segment must begin with a moveTo\n\t    //m (x y)+  Relative moveTo (subsequent points are treated as lineTo)\n\t    //M (x y)+  Absolute moveTo (subsequent points are treated as lineTo)\n\t    //l (x y)+  Relative lineTo\n\t    //L (x y)+  Absolute LineTo\n\t    //h (x)+    Relative horizontal lineTo\n\t    //H (x)+    Absolute horizontal lineTo\n\t    //v (y)+    Relative vertical lineTo\n\t    //V (y)+    Absolute vertical lineTo\n\t    //z (closepath)\n\t    //Z (closepath)\n\t    //c (x1 y1 x2 y2 x y)+ Relative Bezier curve\n\t    //C (x1 y1 x2 y2 x y)+ Absolute Bezier curve\n\t    //q (x1 y1 x y)+       Relative Quadratic Bezier\n\t    //Q (x1 y1 x y)+       Absolute Quadratic Bezier\n\t    //t (x y)+    Shorthand/Smooth Relative Quadratic Bezier\n\t    //T (x y)+    Shorthand/Smooth Absolute Quadratic Bezier\n\t    //s (x2 y2 x y)+       Shorthand/Smooth Relative Bezier curve\n\t    //S (x2 y2 x y)+       Shorthand/Smooth Absolute Bezier curve\n\t    //a (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+     Relative Elliptical Arc\n\t    //A (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+  Absolute Elliptical Arc\n\t\n\t    // return early if data is not defined\n\t    if (!data) {\n\t      return [];\n\t    }\n\t\n\t    // command string\n\t    var cs = data;\n\t\n\t    // command chars\n\t    var cc = [\n\t      'm',\n\t      'M',\n\t      'l',\n\t      'L',\n\t      'v',\n\t      'V',\n\t      'h',\n\t      'H',\n\t      'z',\n\t      'Z',\n\t      'c',\n\t      'C',\n\t      'q',\n\t      'Q',\n\t      't',\n\t      'T',\n\t      's',\n\t      'S',\n\t      'a',\n\t      'A'\n\t    ];\n\t    // convert white spaces to commas\n\t    cs = cs.replace(new RegExp(' ', 'g'), ',');\n\t    // create pipes so that we can split the data\n\t    for (var n = 0; n < cc.length; n++) {\n\t      cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n\t    }\n\t    // create array\n\t    var arr = cs.split('|');\n\t    var ca = [];\n\t    // init context point\n\t    var cpx = 0;\n\t    var cpy = 0;\n\t    for (n = 1; n < arr.length; n++) {\n\t      var str = arr[n];\n\t      var c = str.charAt(0);\n\t      str = str.slice(1);\n\t      // remove ,- for consistency\n\t      str = str.replace(new RegExp(',-', 'g'), '-');\n\t      // add commas so that it's easy to split\n\t      str = str.replace(new RegExp('-', 'g'), ',-');\n\t      str = str.replace(new RegExp('e,-', 'g'), 'e-');\n\t      var p = str.split(',');\n\t      if (p.length > 0 && p[0] === '') {\n\t        p.shift();\n\t      }\n\t      // convert strings to floats\n\t      for (var i = 0; i < p.length; i++) {\n\t        p[i] = parseFloat(p[i]);\n\t      }\n\t      while (p.length > 0) {\n\t        if (isNaN(p[0])) {\n\t          // case for a trailing comma before next command\n\t          break;\n\t        }\n\t\n\t        var cmd = null;\n\t        var points = [];\n\t        var startX = cpx, startY = cpy;\n\t        // Move var from within the switch to up here (jshint)\n\t        var prevCmd, ctlPtx, ctlPty; // Ss, Tt\n\t        var rx, ry, psi, fa, fs, x1, y1; // Aa\n\t\n\t        // convert l, H, h, V, and v to L\n\t        switch (c) {\n\t          // Note: Keep the lineTo's above the moveTo's in this switch\n\t          case 'l':\n\t            cpx += p.shift();\n\t            cpy += p.shift();\n\t            cmd = 'L';\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 'L':\n\t            cpx = p.shift();\n\t            cpy = p.shift();\n\t            points.push(cpx, cpy);\n\t            break;\n\t          // Note: lineTo handlers need to be above this point\n\t          case 'm':\n\t            var dx = p.shift();\n\t            var dy = p.shift();\n\t            cpx += dx;\n\t            cpy += dy;\n\t            cmd = 'M';\n\t            // After closing the path move the current position\n\t            // to the the first point of the path (if any).\n\t            if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n\t              for (var idx = ca.length - 2; idx >= 0; idx--) {\n\t                if (ca[idx].command === 'M') {\n\t                  cpx = ca[idx].points[0] + dx;\n\t                  cpy = ca[idx].points[1] + dy;\n\t                  break;\n\t                }\n\t              }\n\t            }\n\t            points.push(cpx, cpy);\n\t            c = 'l';\n\t            // subsequent points are treated as relative lineTo\n\t            break;\n\t          case 'M':\n\t            cpx = p.shift();\n\t            cpy = p.shift();\n\t            cmd = 'M';\n\t            points.push(cpx, cpy);\n\t            c = 'L';\n\t            // subsequent points are treated as absolute lineTo\n\t            break;\n\t\n\t          case 'h':\n\t            cpx += p.shift();\n\t            cmd = 'L';\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 'H':\n\t            cpx = p.shift();\n\t            cmd = 'L';\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 'v':\n\t            cpy += p.shift();\n\t            cmd = 'L';\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 'V':\n\t            cpy = p.shift();\n\t            cmd = 'L';\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 'C':\n\t            points.push(p.shift(), p.shift(), p.shift(), p.shift());\n\t            cpx = p.shift();\n\t            cpy = p.shift();\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 'c':\n\t            points.push(\n\t              cpx + p.shift(),\n\t              cpy + p.shift(),\n\t              cpx + p.shift(),\n\t              cpy + p.shift()\n\t            );\n\t            cpx += p.shift();\n\t            cpy += p.shift();\n\t            cmd = 'C';\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 'S':\n\t            ctlPtx = cpx;\n\t            ctlPty = cpy;\n\t            prevCmd = ca[ca.length - 1];\n\t            if (prevCmd.command === 'C') {\n\t              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n\t              ctlPty = cpy + (cpy - prevCmd.points[3]);\n\t            }\n\t            points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n\t            cpx = p.shift();\n\t            cpy = p.shift();\n\t            cmd = 'C';\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 's':\n\t            ctlPtx = cpx;\n\t            ctlPty = cpy;\n\t            prevCmd = ca[ca.length - 1];\n\t            if (prevCmd.command === 'C') {\n\t              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n\t              ctlPty = cpy + (cpy - prevCmd.points[3]);\n\t            }\n\t            points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n\t            cpx += p.shift();\n\t            cpy += p.shift();\n\t            cmd = 'C';\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 'Q':\n\t            points.push(p.shift(), p.shift());\n\t            cpx = p.shift();\n\t            cpy = p.shift();\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 'q':\n\t            points.push(cpx + p.shift(), cpy + p.shift());\n\t            cpx += p.shift();\n\t            cpy += p.shift();\n\t            cmd = 'Q';\n\t            points.push(cpx, cpy);\n\t            break;\n\t          case 'T':\n\t            ctlPtx = cpx;\n\t            ctlPty = cpy;\n\t            prevCmd = ca[ca.length - 1];\n\t            if (prevCmd.command === 'Q') {\n\t              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n\t              ctlPty = cpy + (cpy - prevCmd.points[1]);\n\t            }\n\t            cpx = p.shift();\n\t            cpy = p.shift();\n\t            cmd = 'Q';\n\t            points.push(ctlPtx, ctlPty, cpx, cpy);\n\t            break;\n\t          case 't':\n\t            ctlPtx = cpx;\n\t            ctlPty = cpy;\n\t            prevCmd = ca[ca.length - 1];\n\t            if (prevCmd.command === 'Q') {\n\t              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n\t              ctlPty = cpy + (cpy - prevCmd.points[1]);\n\t            }\n\t            cpx += p.shift();\n\t            cpy += p.shift();\n\t            cmd = 'Q';\n\t            points.push(ctlPtx, ctlPty, cpx, cpy);\n\t            break;\n\t          case 'A':\n\t            rx = p.shift();\n\t            ry = p.shift();\n\t            psi = p.shift();\n\t            fa = p.shift();\n\t            fs = p.shift();\n\t            x1 = cpx;\n\t            y1 = cpy;\n\t            cpx = p.shift();\n\t            cpy = p.shift();\n\t            cmd = 'A';\n\t            points = this.convertEndpointToCenterParameterization(\n\t              x1,\n\t              y1,\n\t              cpx,\n\t              cpy,\n\t              fa,\n\t              fs,\n\t              rx,\n\t              ry,\n\t              psi\n\t            );\n\t            break;\n\t          case 'a':\n\t            rx = p.shift();\n\t            ry = p.shift();\n\t            psi = p.shift();\n\t            fa = p.shift();\n\t            fs = p.shift();\n\t            x1 = cpx;\n\t            y1 = cpy;\n\t            cpx += p.shift();\n\t            cpy += p.shift();\n\t            cmd = 'A';\n\t            points = this.convertEndpointToCenterParameterization(\n\t              x1,\n\t              y1,\n\t              cpx,\n\t              cpy,\n\t              fa,\n\t              fs,\n\t              rx,\n\t              ry,\n\t              psi\n\t            );\n\t            break;\n\t        }\n\t\n\t        ca.push({\n\t          command: cmd || c,\n\t          points: points,\n\t          start: {\n\t            x: startX,\n\t            y: startY\n\t          },\n\t          pathLength: this.calcLength(startX, startY, cmd || c, points)\n\t        });\n\t      }\n\t\n\t      if (c === 'z' || c === 'Z') {\n\t        ca.push({\n\t          command: 'z',\n\t          points: [],\n\t          start: undefined,\n\t          pathLength: 0\n\t        });\n\t      }\n\t    }\n\t\n\t    return ca;\n\t  };\n\t  Konva.Path.calcLength = function(x, y, cmd, points) {\n\t    var len, p1, p2, t;\n\t    var path = Konva.Path;\n\t\n\t    switch (cmd) {\n\t      case 'L':\n\t        return path.getLineLength(x, y, points[0], points[1]);\n\t      case 'C':\n\t        // Approximates by breaking curve into 100 line segments\n\t        len = 0.0;\n\t        p1 = path.getPointOnCubicBezier(\n\t          0,\n\t          x,\n\t          y,\n\t          points[0],\n\t          points[1],\n\t          points[2],\n\t          points[3],\n\t          points[4],\n\t          points[5]\n\t        );\n\t        for (t = 0.01; t <= 1; t += 0.01) {\n\t          p2 = path.getPointOnCubicBezier(\n\t            t,\n\t            x,\n\t            y,\n\t            points[0],\n\t            points[1],\n\t            points[2],\n\t            points[3],\n\t            points[4],\n\t            points[5]\n\t          );\n\t          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\t          p1 = p2;\n\t        }\n\t        return len;\n\t      case 'Q':\n\t        // Approximates by breaking curve into 100 line segments\n\t        len = 0.0;\n\t        p1 = path.getPointOnQuadraticBezier(\n\t          0,\n\t          x,\n\t          y,\n\t          points[0],\n\t          points[1],\n\t          points[2],\n\t          points[3]\n\t        );\n\t        for (t = 0.01; t <= 1; t += 0.01) {\n\t          p2 = path.getPointOnQuadraticBezier(\n\t            t,\n\t            x,\n\t            y,\n\t            points[0],\n\t            points[1],\n\t            points[2],\n\t            points[3]\n\t          );\n\t          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\t          p1 = p2;\n\t        }\n\t        return len;\n\t      case 'A':\n\t        // Approximates by breaking curve into line segments\n\t        len = 0.0;\n\t        var start = points[4];\n\t        // 4 = theta\n\t        var dTheta = points[5];\n\t        // 5 = dTheta\n\t        var end = points[4] + dTheta;\n\t        var inc = Math.PI / 180.0;\n\t        // 1 degree resolution\n\t        if (Math.abs(start - end) < inc) {\n\t          inc = Math.abs(start - end);\n\t        }\n\t        // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n\t        p1 = path.getPointOnEllipticalArc(\n\t          points[0],\n\t          points[1],\n\t          points[2],\n\t          points[3],\n\t          start,\n\t          0\n\t        );\n\t        if (dTheta < 0) {\n\t          // clockwise\n\t          for (t = start - inc; t > end; t -= inc) {\n\t            p2 = path.getPointOnEllipticalArc(\n\t              points[0],\n\t              points[1],\n\t              points[2],\n\t              points[3],\n\t              t,\n\t              0\n\t            );\n\t            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\t            p1 = p2;\n\t          }\n\t        } else {\n\t          // counter-clockwise\n\t          for (t = start + inc; t < end; t += inc) {\n\t            p2 = path.getPointOnEllipticalArc(\n\t              points[0],\n\t              points[1],\n\t              points[2],\n\t              points[3],\n\t              t,\n\t              0\n\t            );\n\t            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\t            p1 = p2;\n\t          }\n\t        }\n\t        p2 = path.getPointOnEllipticalArc(\n\t          points[0],\n\t          points[1],\n\t          points[2],\n\t          points[3],\n\t          end,\n\t          0\n\t        );\n\t        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\t\n\t        return len;\n\t    }\n\t\n\t    return 0;\n\t  };\n\t  Konva.Path.convertEndpointToCenterParameterization = function(\n\t    x1,\n\t    y1,\n\t    x2,\n\t    y2,\n\t    fa,\n\t    fs,\n\t    rx,\n\t    ry,\n\t    psiDeg\n\t  ) {\n\t    // Derived from: http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n\t    var psi = psiDeg * (Math.PI / 180.0);\n\t    var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n\t    var yp =\n\t      -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n\t\n\t    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\t\n\t    if (lambda > 1) {\n\t      rx *= Math.sqrt(lambda);\n\t      ry *= Math.sqrt(lambda);\n\t    }\n\t\n\t    var f = Math.sqrt(\n\t      (rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n\t        (rx * rx * (yp * yp) + ry * ry * (xp * xp))\n\t    );\n\t\n\t    if (fa === fs) {\n\t      f *= -1;\n\t    }\n\t    if (isNaN(f)) {\n\t      f = 0;\n\t    }\n\t\n\t    var cxp = f * rx * yp / ry;\n\t    var cyp = f * -ry * xp / rx;\n\t\n\t    var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n\t    var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n\t\n\t    var vMag = function(v) {\n\t      return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n\t    };\n\t    var vRatio = function(u, v) {\n\t      return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n\t    };\n\t    var vAngle = function(u, v) {\n\t      return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n\t    };\n\t    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n\t    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n\t    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n\t    var dTheta = vAngle(u, v);\n\t\n\t    if (vRatio(u, v) <= -1) {\n\t      dTheta = Math.PI;\n\t    }\n\t    if (vRatio(u, v) >= 1) {\n\t      dTheta = 0;\n\t    }\n\t    if (fs === 0 && dTheta > 0) {\n\t      dTheta = dTheta - 2 * Math.PI;\n\t    }\n\t    if (fs === 1 && dTheta < 0) {\n\t      dTheta = dTheta + 2 * Math.PI;\n\t    }\n\t    return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n\t  };\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.Path, 'data');\n\t\n\t  /**\n\t     * set SVG path data string.  This method\n\t     *  also automatically parses the data string\n\t     *  into a data array.  Currently supported SVG data:\n\t     *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z\n\t     * @name setData\n\t     * @method\n\t     * @memberof Konva.Path.prototype\n\t     * @param {String} SVG path command string\n\t     */\n\t\n\t  /**\n\t     * get SVG path data string\n\t     * @name getData\n\t     * @method\n\t     * @memberof Konva.Path.prototype\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.Path);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  var EMPTY_STRING = '',\n\t    //CALIBRI = 'Calibri',\n\t    NORMAL = 'normal';\n\t\n\t  /**\n\t     * Path constructor.\n\t     * @author Jason Follas\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {String} [config.fontFamily] default is Calibri\n\t     * @param {Number} [config.fontSize] default is 12\n\t     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n\t     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n\t     * @param {String} config.text\n\t     * @param {String} config.data SVG data string\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var textpath = new Konva.TextPath({\n\t     *   x: 100,\n\t     *   y: 50,\n\t     *   fill: '#333',\n\t     *   fontSize: '24',\n\t     *   fontFamily: 'Arial',\n\t     *   text: 'All the world\\'s a stage, and all the men and women merely players.',\n\t     *   data: 'M10,10 C0,0 10,150 100,100 S300,150 400,50'\n\t     * });\n\t     */\n\t  Konva.TextPath = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  function _fillFunc(context) {\n\t    context.fillText(this.partialText, 0, 0);\n\t  }\n\t  function _strokeFunc(context) {\n\t    context.strokeText(this.partialText, 0, 0);\n\t  }\n\t\n\t  Konva.TextPath.prototype = {\n\t    ___init: function(config) {\n\t      var that = this;\n\t      this.dummyCanvas = Konva.Util.createCanvasElement();\n\t      this.dataArray = [];\n\t\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t\n\t      // overrides\n\t      // TODO: shouldn't this be on the prototype?\n\t      this._fillFunc = _fillFunc;\n\t      this._strokeFunc = _strokeFunc;\n\t      this._fillFuncHit = _fillFunc;\n\t      this._strokeFuncHit = _strokeFunc;\n\t\n\t      this.className = 'TextPath';\n\t\n\t      this.dataArray = Konva.Path.parsePathData(this.attrs.data);\n\t      this.on('dataChange.konva', function() {\n\t        that.dataArray = Konva.Path.parsePathData(this.attrs.data);\n\t        that._setTextData();\n\t      });\n\t\n\t      // update text data for certain attr changes\n\t      this.on(\n\t        'textChange.konva alignChange.konva letterSpacingChange.konva',\n\t        that._setTextData\n\t      );\n\t      that._setTextData();\n\t      this.sceneFunc(this._sceneFunc);\n\t      this.hitFunc(this._hitFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      context.setAttr('font', this._getContextFont());\n\t      context.setAttr('textBaseline', this.getTextBaseline());\n\t      context.setAttr('textAlign', 'left');\n\t      context.save();\n\t\n\t      var textDecoration = this.textDecoration();\n\t      var fill = this.fill();\n\t      var fontSize = this.fontSize();\n\t\n\t      var glyphInfo = this.glyphInfo;\n\t      if (textDecoration === 'underline') {\n\t        context.beginPath();\n\t      }\n\t      for (var i = 0; i < glyphInfo.length; i++) {\n\t        context.save();\n\t\n\t        var p0 = glyphInfo[i].p0;\n\t\n\t        context.translate(p0.x, p0.y);\n\t        context.rotate(glyphInfo[i].rotation);\n\t        this.partialText = glyphInfo[i].text;\n\t\n\t        context.fillStrokeShape(this);\n\t        if (textDecoration === 'underline') {\n\t          if (i === 0) {\n\t            context.moveTo(0, fontSize / 2 + 1);\n\t          }\n\t\n\t          context.lineTo(fontSize, fontSize / 2 + 1);\n\t        }\n\t        context.restore();\n\t\n\t        //// To assist with debugging visually, uncomment following\n\t        //\n\t        // if (i % 2)\n\t        // context.strokeStyle = 'cyan';\n\t        // else\n\t        // context.strokeStyle = 'green';\n\t        // var p1 = glyphInfo[i].p1;\n\t        // context.moveTo(p0.x, p0.y);\n\t        // context.lineTo(p1.x, p1.y);\n\t        // context.stroke();\n\t      }\n\t      if (textDecoration === 'underline') {\n\t        context.strokeStyle = fill;\n\t        context.lineWidth = fontSize / 20;\n\t        context.stroke();\n\t      }\n\t\n\t      context.restore();\n\t    },\n\t    _hitFunc: function(context) {\n\t      context.beginPath();\n\t\n\t      var glyphInfo = this.glyphInfo;\n\t      if (glyphInfo.length >= 1) {\n\t        var p0 = glyphInfo[0].p0;\n\t        context.moveTo(p0.x, p0.y);\n\t      }\n\t      for (var i = 0; i < glyphInfo.length; i++) {\n\t        var p1 = glyphInfo[i].p1;\n\t        context.lineTo(p1.x, p1.y);\n\t      }\n\t      context.setAttr('lineWidth', this.getFontSize());\n\t      context.setAttr('strokeStyle', this.colorKey);\n\t      context.stroke();\n\t    },\n\t    /**\n\t         * get text width in pixels\n\t         * @method\n\t         * @memberof Konva.TextPath.prototype\n\t         */\n\t    getTextWidth: function() {\n\t      return this.textWidth;\n\t    },\n\t    /**\n\t         * get text height in pixels\n\t         * @method\n\t         * @memberof Konva.TextPath.prototype\n\t         */\n\t    getTextHeight: function() {\n\t      return this.textHeight;\n\t    },\n\t    /**\n\t         * set text\n\t         * @method\n\t         * @memberof Konva.TextPath.prototype\n\t         * @param {String} text\n\t         */\n\t    setText: function(text) {\n\t      Konva.Text.prototype.setText.call(this, text);\n\t    },\n\t    _getTextSize: function(text) {\n\t      var dummyCanvas = this.dummyCanvas;\n\t      var _context = dummyCanvas.getContext('2d');\n\t\n\t      _context.save();\n\t\n\t      _context.font = this._getContextFont();\n\t      var metrics = _context.measureText(text);\n\t\n\t      _context.restore();\n\t\n\t      return {\n\t        width: metrics.width,\n\t        height: parseInt(this.attrs.fontSize, 10)\n\t      };\n\t    },\n\t    _setTextData: function() {\n\t      var that = this;\n\t      var size = this._getTextSize(this.attrs.text);\n\t      var letterSpacing = this.getLetterSpacing();\n\t      var align = this.align();\n\t\n\t      this.textWidth = size.width;\n\t      this.textHeight = size.height;\n\t\n\t      var textFullWidth = Math.max(\n\t        this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing,\n\t        0\n\t      );\n\t\n\t      this.glyphInfo = [];\n\t\n\t      var fullPathWidth = 0;\n\t      for (var l = 0; l < that.dataArray.length; l++) {\n\t        if (that.dataArray[l].pathLength > 0) {\n\t          fullPathWidth += that.dataArray[l].pathLength;\n\t        }\n\t      }\n\t\n\t      var offset = 0;\n\t      if (align === 'center') {\n\t        offset = Math.max(0, fullPathWidth / 2 - textFullWidth / 2);\n\t      }\n\t      if (align === 'right') {\n\t        offset = Math.max(0, fullPathWidth - textFullWidth);\n\t      }\n\t\n\t      var charArr = this.getText().split('');\n\t      var spacesNumber = this.getText().split(' ').length - 1;\n\t\n\t      var p0, p1, pathCmd;\n\t\n\t      var pIndex = -1;\n\t      var currentT = 0;\n\t      // var sumLength = 0;\n\t      // for(var j = 0; j < that.dataArray.length; j++) {\n\t      //   if(that.dataArray[j].pathLength > 0) {\n\t      //\n\t      //     if (sumLength + that.dataArray[j].pathLength > offset) {}\n\t      //       fullPathWidth += that.dataArray[j].pathLength;\n\t      //   }\n\t      // }\n\t\n\t      var getNextPathSegment = function() {\n\t        currentT = 0;\n\t        var pathData = that.dataArray;\n\t\n\t        for (var j = pIndex + 1; j < pathData.length; j++) {\n\t          if (pathData[j].pathLength > 0) {\n\t            pIndex = j;\n\t\n\t            return pathData[j];\n\t          } else if (pathData[j].command === 'M') {\n\t            p0 = {\n\t              x: pathData[j].points[0],\n\t              y: pathData[j].points[1]\n\t            };\n\t          }\n\t        }\n\t\n\t        return {};\n\t      };\n\t\n\t      var findSegmentToFitCharacter = function(c) {\n\t        var glyphWidth = that._getTextSize(c).width + letterSpacing;\n\t\n\t        if (c === ' ' && align === 'justify') {\n\t          glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n\t        }\n\t\n\t        var currLen = 0;\n\t        var attempts = 0;\n\t\n\t        p1 = undefined;\n\t        while (\n\t          Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 &&\n\t          attempts < 25\n\t        ) {\n\t          attempts++;\n\t          var cumulativePathLength = currLen;\n\t          while (pathCmd === undefined) {\n\t            pathCmd = getNextPathSegment();\n\t\n\t            if (\n\t              pathCmd &&\n\t              cumulativePathLength + pathCmd.pathLength < glyphWidth\n\t            ) {\n\t              cumulativePathLength += pathCmd.pathLength;\n\t              pathCmd = undefined;\n\t            }\n\t          }\n\t\n\t          if (pathCmd === {} || p0 === undefined) {\n\t            return undefined;\n\t          }\n\t\n\t          var needNewSegment = false;\n\t\n\t          switch (pathCmd.command) {\n\t            case 'L':\n\t              if (\n\t                Konva.Path.getLineLength(\n\t                  p0.x,\n\t                  p0.y,\n\t                  pathCmd.points[0],\n\t                  pathCmd.points[1]\n\t                ) > glyphWidth\n\t              ) {\n\t                p1 = Konva.Path.getPointOnLine(\n\t                  glyphWidth,\n\t                  p0.x,\n\t                  p0.y,\n\t                  pathCmd.points[0],\n\t                  pathCmd.points[1],\n\t                  p0.x,\n\t                  p0.y\n\t                );\n\t              } else {\n\t                pathCmd = undefined;\n\t              }\n\t              break;\n\t            case 'A':\n\t              var start = pathCmd.points[4];\n\t              // 4 = theta\n\t              var dTheta = pathCmd.points[5];\n\t              // 5 = dTheta\n\t              var end = pathCmd.points[4] + dTheta;\n\t\n\t              if (currentT === 0) {\n\t                currentT = start + 0.00000001;\n\t              } else if (glyphWidth > currLen) {\n\t                // Just in case start is 0\n\t                currentT += Math.PI / 180.0 * dTheta / Math.abs(dTheta);\n\t              } else {\n\t                currentT -= Math.PI / 360.0 * dTheta / Math.abs(dTheta);\n\t              }\n\t\n\t              // Credit for bug fix: @therth https://github.com/ericdrowell/KonvaJS/issues/249\n\t              // Old code failed to render text along arc of this path: \"M 50 50 a 150 50 0 0 1 250 50 l 50 0\"\n\t              if (\n\t                (dTheta < 0 && currentT < end) ||\n\t                (dTheta >= 0 && currentT > end)\n\t              ) {\n\t                currentT = end;\n\t                needNewSegment = true;\n\t              }\n\t              p1 = Konva.Path.getPointOnEllipticalArc(\n\t                pathCmd.points[0],\n\t                pathCmd.points[1],\n\t                pathCmd.points[2],\n\t                pathCmd.points[3],\n\t                currentT,\n\t                pathCmd.points[6]\n\t              );\n\t              break;\n\t            case 'C':\n\t              if (currentT === 0) {\n\t                if (glyphWidth > pathCmd.pathLength) {\n\t                  currentT = 0.00000001;\n\t                } else {\n\t                  currentT = glyphWidth / pathCmd.pathLength;\n\t                }\n\t              } else if (glyphWidth > currLen) {\n\t                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n\t              } else {\n\t                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n\t              }\n\t\n\t              if (currentT > 1.0) {\n\t                currentT = 1.0;\n\t                needNewSegment = true;\n\t              }\n\t              p1 = Konva.Path.getPointOnCubicBezier(\n\t                currentT,\n\t                pathCmd.start.x,\n\t                pathCmd.start.y,\n\t                pathCmd.points[0],\n\t                pathCmd.points[1],\n\t                pathCmd.points[2],\n\t                pathCmd.points[3],\n\t                pathCmd.points[4],\n\t                pathCmd.points[5]\n\t              );\n\t              break;\n\t            case 'Q':\n\t              if (currentT === 0) {\n\t                currentT = glyphWidth / pathCmd.pathLength;\n\t              } else if (glyphWidth > currLen) {\n\t                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n\t              } else {\n\t                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n\t              }\n\t\n\t              if (currentT > 1.0) {\n\t                currentT = 1.0;\n\t                needNewSegment = true;\n\t              }\n\t              p1 = Konva.Path.getPointOnQuadraticBezier(\n\t                currentT,\n\t                pathCmd.start.x,\n\t                pathCmd.start.y,\n\t                pathCmd.points[0],\n\t                pathCmd.points[1],\n\t                pathCmd.points[2],\n\t                pathCmd.points[3]\n\t              );\n\t              break;\n\t          }\n\t\n\t          if (p1 !== undefined) {\n\t            currLen = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n\t          }\n\t\n\t          if (needNewSegment) {\n\t            needNewSegment = false;\n\t            pathCmd = undefined;\n\t          }\n\t        }\n\t      };\n\t\n\t      // fake search for offset, this is very bad approach\n\t      // TODO: find other way to add offset from start (for align)\n\t      var testChar = 'C';\n\t      var glyphWidth = that._getTextSize(testChar).width + letterSpacing;\n\t      for (var k = 0; k < offset / glyphWidth; k++) {\n\t        findSegmentToFitCharacter(testChar);\n\t        if (p0 === undefined || p1 === undefined) {\n\t          break;\n\t        }\n\t        p0 = p1;\n\t      }\n\t\n\t      for (var i = 0; i < charArr.length; i++) {\n\t        // Find p1 such that line segment between p0 and p1 is approx. width of glyph\n\t        findSegmentToFitCharacter(charArr[i]);\n\t\n\t        if (p0 === undefined || p1 === undefined) {\n\t          break;\n\t        }\n\t\n\t        var width = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n\t\n\t        // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.\n\t        // Can foresee having a rough pair table built in that the developer can override as needed.\n\t\n\t        var kern = 0;\n\t        // placeholder for future implementation\n\t\n\t        var midpoint = Konva.Path.getPointOnLine(\n\t          kern + width / 2.0,\n\t          p0.x,\n\t          p0.y,\n\t          p1.x,\n\t          p1.y\n\t        );\n\t\n\t        var rotation = Math.atan2(p1.y - p0.y, p1.x - p0.x);\n\t        this.glyphInfo.push({\n\t          transposeX: midpoint.x,\n\t          transposeY: midpoint.y,\n\t          text: charArr[i],\n\t          rotation: rotation,\n\t          p0: p0,\n\t          p1: p1\n\t        });\n\t        p0 = p1;\n\t      }\n\t    },\n\t    getSelfRect: function() {\n\t      var points = [];\n\t\n\t      this.glyphInfo.forEach(function(info) {\n\t        points.push(info.p0.x);\n\t        points.push(info.p0.y);\n\t        points.push(info.p1.x);\n\t        points.push(info.p1.y);\n\t      });\n\t      var minX = points[0];\n\t      var maxX = points[0];\n\t      var minY = points[0];\n\t      var maxY = points[0];\n\t      var x, y;\n\t      for (var i = 0; i < points.length / 2; i++) {\n\t        x = points[i * 2];\n\t        y = points[i * 2 + 1];\n\t        minX = Math.min(minX, x);\n\t        maxX = Math.max(maxX, x);\n\t        minY = Math.min(minY, y);\n\t        maxY = Math.max(maxY, y);\n\t      }\n\t      var fontSize = this.fontSize();\n\t      return {\n\t        x: Math.round(minX) - fontSize / 2,\n\t        y: Math.round(minY) - fontSize / 2,\n\t        width: Math.round(maxX - minX) + fontSize,\n\t        height: Math.round(maxY - minY) + fontSize\n\t      };\n\t    }\n\t  };\n\t\n\t  // map TextPath methods to Text\n\t  Konva.TextPath.prototype._getContextFont =\n\t    Konva.Text.prototype._getContextFont;\n\t\n\t  Konva.Util.extend(Konva.TextPath, Konva.Shape);\n\t\n\t  // add setters and getters\n\t  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontFamily', 'Arial');\n\t\n\t  /**\n\t     * set font family\n\t     * @name setFontFamily\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     * @param {String} fontFamily\n\t     */\n\t\n\t  /**\n\t     * get font family\n\t     * @name getFontFamily\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontSize', 12);\n\t\n\t  /**\n\t     * set font size\n\t     * @name setFontSize\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     * @param {int} fontSize\n\t     */\n\t\n\t  /**\n\t     * get font size\n\t     * @name getFontSize\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontStyle', NORMAL);\n\t\n\t  /**\n\t     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n\t     * @name setFontStyle\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     * @param {String} fontStyle\n\t     */\n\t  Konva.Factory.addGetterSetter(Konva.TextPath, 'align', 'left');\n\t\n\t  /**\n\t      * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'\n\t      * @name align\n\t      * @method\n\t      * @memberof Konva.Text.prototype\n\t      * @param {String} align\n\t      * @returns {String}\n\t      * @example\n\t      * // get text align\n\t      * var align = text.align();\n\t      *\n\t      * // center text\n\t      * text.align('center');\n\t      *\n\t      * // align text to right\n\t      * text.align('right');\n\t      */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.TextPath, 'letterSpacing', 0);\n\t\n\t  /**\n\t      * set letter spacing property. Default value is 0.\n\t      * @name letterSpacing\n\t      * @method\n\t      * @memberof Konva.TextPath.prototype\n\t      * @param {Number} letterSpacing\n\t      */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.TextPath, 'textBaseline', 'middle');\n\t\n\t  /**\n\t      * set textBaseline property. Default value is 'middle'.\n\t      * Can be 'top', 'bottom', 'middle', 'alphabetic', 'hanging'\n\t      * @name textBaseline\n\t      * @method\n\t      * @memberof Konva.TextPath.prototype\n\t      * @param {Number} textBaseline\n\t      */\n\t\n\t  /**\n\t     * get font style\n\t     * @name getFontStyle\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontVariant', NORMAL);\n\t\n\t  /**\n\t     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n\t     * @name setFontVariant\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     * @param {String} fontVariant\n\t     */\n\t\n\t  /**\n\t     * @get font variant\n\t     * @name getFontVariant\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetter(Konva.TextPath, 'text', EMPTY_STRING);\n\t\n\t  /**\n\t     * get text\n\t     * @name getText\n\t     * @method\n\t     * @memberof Konva.TextPath.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.TextPath, 'textDecoration', null);\n\t\n\t  /**\n\t      * get/set text decoration of a text.  Can be '' or 'underline'\n\t      * @name textDecoration\n\t      * @method\n\t      * @memberof Konva.Text.prototype\n\t      * @param {String} textDecoration\n\t      * @returns {String}\n\t      * @example\n\t      * // get text decoration\n\t      * var textDecoration = text.textDecoration();\n\t      *\n\t      * // center text\n\t      * text.textDecoration('underline');\n\t      */\n\t\n\t  Konva.Collection.mapMethods(Konva.TextPath);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * RegularPolygon constructor.&nbsp; Examples include triangles, squares, pentagons, hexagons, etc.\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Number} config.sides\n\t     * @param {Number} config.radius\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var hexagon = new Konva.RegularPolygon({\n\t     *   x: 100,\n\t     *   y: 200,\n\t     *   sides: 6,\n\t     *   radius: 70,\n\t     *   fill: 'red',\n\t     *   stroke: 'black',\n\t     *   strokeWidth: 4\n\t     * });\n\t     */\n\t  Konva.RegularPolygon = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.RegularPolygon.prototype = {\n\t    _centroid: true,\n\t    ___init: function(config) {\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = 'RegularPolygon';\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var sides = this.attrs.sides, radius = this.attrs.radius, n, x, y;\n\t\n\t      context.beginPath();\n\t      context.moveTo(0, 0 - radius);\n\t\n\t      for (n = 1; n < sides; n++) {\n\t        x = radius * Math.sin(n * 2 * Math.PI / sides);\n\t        y = -1 * radius * Math.cos(n * 2 * Math.PI / sides);\n\t        context.lineTo(x, y);\n\t      }\n\t      context.closePath();\n\t      context.fillStrokeShape(this);\n\t    },\n\t    getWidth: function() {\n\t      return this.getRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.getHeight()\n\t    getHeight: function() {\n\t      return this.getRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.setWidth()\n\t    setWidth: function(width) {\n\t      Konva.Node.prototype.setWidth.call(this, width);\n\t      if (this.radius() !== width / 2) {\n\t        this.setRadius(width / 2);\n\t      }\n\t    },\n\t    // implements Shape.prototype.setHeight()\n\t    setHeight: function(height) {\n\t      Konva.Node.prototype.setHeight.call(this, height);\n\t      if (this.radius() !== height / 2) {\n\t        this.setRadius(height / 2);\n\t      }\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.RegularPolygon, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'radius', 0);\n\t\n\t  /**\n\t     * set radius\n\t     * @name setRadius\n\t     * @method\n\t     * @memberof Konva.RegularPolygon.prototype\n\t     * @param {Number} radius\n\t     */\n\t\n\t  /**\n\t     * get radius\n\t     * @name getRadius\n\t     * @method\n\t     * @memberof Konva.RegularPolygon.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'sides', 0);\n\t\n\t  /**\n\t     * set number of sides\n\t     * @name setSides\n\t     * @method\n\t     * @memberof Konva.RegularPolygon.prototype\n\t     * @param {int} sides\n\t     */\n\t\n\t  /**\n\t     * get number of sides\n\t     * @name getSides\n\t     * @method\n\t     * @memberof Konva.RegularPolygon.prototype\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.RegularPolygon);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  /**\n\t     * Star constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Integer} config.numPoints\n\t     * @param {Number} config.innerRadius\n\t     * @param {Number} config.outerRadius\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var star = new Konva.Star({\n\t     *   x: 100,\n\t     *   y: 200,\n\t     *   numPoints: 5,\n\t     *   innerRadius: 70,\n\t     *   outerRadius: 70,\n\t     *   fill: 'red',\n\t     *   stroke: 'black',\n\t     *   strokeWidth: 4\n\t     * });\n\t     */\n\t  Konva.Star = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Star.prototype = {\n\t    _centroid: true,\n\t    ___init: function(config) {\n\t      // call super constructor\n\t      Konva.Shape.call(this, config);\n\t      this.className = 'Star';\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var innerRadius = this.innerRadius(),\n\t        outerRadius = this.outerRadius(),\n\t        numPoints = this.numPoints();\n\t\n\t      context.beginPath();\n\t      context.moveTo(0, 0 - outerRadius);\n\t\n\t      for (var n = 1; n < numPoints * 2; n++) {\n\t        var radius = n % 2 === 0 ? outerRadius : innerRadius;\n\t        var x = radius * Math.sin(n * Math.PI / numPoints);\n\t        var y = -1 * radius * Math.cos(n * Math.PI / numPoints);\n\t        context.lineTo(x, y);\n\t      }\n\t      context.closePath();\n\t\n\t      context.fillStrokeShape(this);\n\t    },\n\t    // implements Shape.prototype.getWidth()\n\t    getWidth: function() {\n\t      return this.getOuterRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.getHeight()\n\t    getHeight: function() {\n\t      return this.getOuterRadius() * 2;\n\t    },\n\t    // implements Shape.prototype.setWidth()\n\t    setWidth: function(width) {\n\t      Konva.Node.prototype.setWidth.call(this, width);\n\t      if (this.outerRadius() !== width / 2) {\n\t        this.setOuterRadius(width / 2);\n\t      }\n\t    },\n\t    // implements Shape.prototype.setHeight()\n\t    setHeight: function(height) {\n\t      Konva.Node.prototype.setHeight.call(this, height);\n\t      if (this.outerRadius() !== height / 2) {\n\t        this.setOuterRadius(height / 2);\n\t      }\n\t    }\n\t  };\n\t  Konva.Util.extend(Konva.Star, Konva.Shape);\n\t\n\t  // add getters setters\n\t  Konva.Factory.addGetterSetter(Konva.Star, 'numPoints', 5);\n\t\n\t  /**\n\t     * set number of points\n\t     * @name setNumPoints\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     * @param {Integer} points\n\t     */\n\t\n\t  /**\n\t     * get number of points\n\t     * @name getNumPoints\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Star, 'innerRadius', 0);\n\t\n\t  /**\n\t     * set inner radius\n\t     * @name setInnerRadius\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     * @param {Number} radius\n\t     */\n\t\n\t  /**\n\t     * get inner radius\n\t     * @name getInnerRadius\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Star, 'outerRadius', 0);\n\t\n\t  /**\n\t     * set outer radius\n\t     * @name setOuterRadius\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     * @param {Number} radius\n\t     */\n\t\n\t  /**\n\t     * get outer radius\n\t     * @name getOuterRadius\n\t     * @method\n\t     * @memberof Konva.Star.prototype\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.Star);\n\t})();\n\t\n\t(function() {\n\t  'use strict';\n\t  // constants\n\t  var ATTR_CHANGE_LIST = [\n\t    'fontFamily',\n\t    'fontSize',\n\t    'fontStyle',\n\t    'padding',\n\t    'lineHeight',\n\t    'text',\n\t    'width'\n\t  ],\n\t    CHANGE_KONVA = 'Change.konva',\n\t    NONE = 'none',\n\t    UP = 'up',\n\t    RIGHT = 'right',\n\t    DOWN = 'down',\n\t    LEFT = 'left',\n\t    LABEL = 'Label',\n\t    // cached variables\n\t    attrChangeListLen = ATTR_CHANGE_LIST.length;\n\t\n\t  /**\n\t     * Label constructor.&nbsp; Labels are groups that contain a Text and Tag shape\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @param {Object} config\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * // create label\n\t     * var label = new Konva.Label({\n\t     *   x: 100,\n\t     *   y: 100,\n\t     *   draggable: true\n\t     * });\n\t     *\n\t     * // add a tag to the label\n\t     * label.add(new Konva.Tag({\n\t     *   fill: '#bbb',\n\t     *   stroke: '#333',\n\t     *   shadowColor: 'black',\n\t     *   shadowBlur: 10,\n\t     *   shadowOffset: [10, 10],\n\t     *   shadowOpacity: 0.2,\n\t     *   lineJoin: 'round',\n\t     *   pointerDirection: 'up',\n\t     *   pointerWidth: 20,\n\t     *   pointerHeight: 20,\n\t     *   cornerRadius: 5\n\t     * }));\n\t     *\n\t     * // add text to the label\n\t     * label.add(new Konva.Text({\n\t     *   text: 'Hello World!',\n\t     *   fontSize: 50,\n\t     *   lineHeight: 1.2,\n\t     *   padding: 10,\n\t     *   fill: 'green'\n\t     *  }));\n\t     */\n\t  Konva.Label = function(config) {\n\t    this.____init(config);\n\t  };\n\t\n\t  Konva.Label.prototype = {\n\t    ____init: function(config) {\n\t      var that = this;\n\t\n\t      Konva.Group.call(this, config);\n\t      this.className = LABEL;\n\t\n\t      this.on('add.konva', function(evt) {\n\t        that._addListeners(evt.child);\n\t        that._sync();\n\t      });\n\t    },\n\t    /**\n\t         * get Text shape for the label.  You need to access the Text shape in order to update\n\t         * the text properties\n\t         * @name getText\n\t         * @method\n\t         * @memberof Konva.Label.prototype\n\t         */\n\t    getText: function() {\n\t      return this.find('Text')[0];\n\t    },\n\t    /**\n\t         * get Tag shape for the label.  You need to access the Tag shape in order to update\n\t         * the pointer properties and the corner radius\n\t         * @name getTag\n\t         * @method\n\t         * @memberof Konva.Label.prototype\n\t         */\n\t    getTag: function() {\n\t      return this.find('Tag')[0];\n\t    },\n\t    _addListeners: function(text) {\n\t      var that = this, n;\n\t      var func = function() {\n\t        that._sync();\n\t      };\n\t\n\t      // update text data for certain attr changes\n\t      for (n = 0; n < attrChangeListLen; n++) {\n\t        text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n\t      }\n\t    },\n\t    getWidth: function() {\n\t      return this.getText().getWidth();\n\t    },\n\t    getHeight: function() {\n\t      return this.getText().getHeight();\n\t    },\n\t    _sync: function() {\n\t      var text = this.getText(),\n\t        tag = this.getTag(),\n\t        width,\n\t        height,\n\t        pointerDirection,\n\t        pointerWidth,\n\t        x,\n\t        y,\n\t        pointerHeight;\n\t\n\t      if (text && tag) {\n\t        width = text.getWidth();\n\t        height = text.getHeight();\n\t        pointerDirection = tag.getPointerDirection();\n\t        pointerWidth = tag.getPointerWidth();\n\t        pointerHeight = tag.getPointerHeight();\n\t        x = 0;\n\t        y = 0;\n\t\n\t        switch (pointerDirection) {\n\t          case UP:\n\t            x = width / 2;\n\t            y = -1 * pointerHeight;\n\t            break;\n\t          case RIGHT:\n\t            x = width + pointerWidth;\n\t            y = height / 2;\n\t            break;\n\t          case DOWN:\n\t            x = width / 2;\n\t            y = height + pointerHeight;\n\t            break;\n\t          case LEFT:\n\t            x = -1 * pointerWidth;\n\t            y = height / 2;\n\t            break;\n\t        }\n\t\n\t        tag.setAttrs({\n\t          x: -1 * x,\n\t          y: -1 * y,\n\t          width: width,\n\t          height: height\n\t        });\n\t\n\t        text.setAttrs({\n\t          x: -1 * x,\n\t          y: -1 * y\n\t        });\n\t      }\n\t    }\n\t  };\n\t\n\t  Konva.Util.extend(Konva.Label, Konva.Group);\n\t\n\t  Konva.Collection.mapMethods(Konva.Label);\n\t\n\t  /**\n\t     * Tag constructor.&nbsp; A Tag can be configured\n\t     *  to have a pointer element that points up, right, down, or left\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @param {Object} config\n\t     * @param {String} [config.pointerDirection] can be up, right, down, left, or none; the default\n\t     *  is none.  When a pointer is present, the positioning of the label is relative to the tip of the pointer.\n\t     * @param {Number} [config.pointerWidth]\n\t     * @param {Number} [config.pointerHeight]\n\t     * @param {Number} [config.cornerRadius]\n\t     */\n\t  Konva.Tag = function(config) {\n\t    this.___init(config);\n\t  };\n\t\n\t  Konva.Tag.prototype = {\n\t    ___init: function(config) {\n\t      Konva.Shape.call(this, config);\n\t      this.className = 'Tag';\n\t      this.sceneFunc(this._sceneFunc);\n\t    },\n\t    _sceneFunc: function(context) {\n\t      var width = this.getWidth(),\n\t        height = this.getHeight(),\n\t        pointerDirection = this.getPointerDirection(),\n\t        pointerWidth = this.getPointerWidth(),\n\t        pointerHeight = this.getPointerHeight(),\n\t        cornerRadius = Math.min(this.getCornerRadius(), width / 2, height / 2);\n\t\n\t      context.beginPath();\n\t      if (!cornerRadius) {\n\t        context.moveTo(0, 0);\n\t      } else {\n\t        context.moveTo(cornerRadius, 0);\n\t      }\n\t\n\t      if (pointerDirection === UP) {\n\t        context.lineTo((width - pointerWidth) / 2, 0);\n\t        context.lineTo(width / 2, -1 * pointerHeight);\n\t        context.lineTo((width + pointerWidth) / 2, 0);\n\t      }\n\t\n\t      if (!cornerRadius) {\n\t        context.lineTo(width, 0);\n\t      } else {\n\t        context.lineTo(width - cornerRadius, 0);\n\t        context.arc(\n\t          width - cornerRadius,\n\t          cornerRadius,\n\t          cornerRadius,\n\t          Math.PI * 3 / 2,\n\t          0,\n\t          false\n\t        );\n\t      }\n\t\n\t      if (pointerDirection === RIGHT) {\n\t        context.lineTo(width, (height - pointerHeight) / 2);\n\t        context.lineTo(width + pointerWidth, height / 2);\n\t        context.lineTo(width, (height + pointerHeight) / 2);\n\t      }\n\t\n\t      if (!cornerRadius) {\n\t        context.lineTo(width, height);\n\t      } else {\n\t        context.lineTo(width, height - cornerRadius);\n\t        context.arc(\n\t          width - cornerRadius,\n\t          height - cornerRadius,\n\t          cornerRadius,\n\t          0,\n\t          Math.PI / 2,\n\t          false\n\t        );\n\t      }\n\t\n\t      if (pointerDirection === DOWN) {\n\t        context.lineTo((width + pointerWidth) / 2, height);\n\t        context.lineTo(width / 2, height + pointerHeight);\n\t        context.lineTo((width - pointerWidth) / 2, height);\n\t      }\n\t\n\t      if (!cornerRadius) {\n\t        context.lineTo(0, height);\n\t      } else {\n\t        context.lineTo(cornerRadius, height);\n\t        context.arc(\n\t          cornerRadius,\n\t          height - cornerRadius,\n\t          cornerRadius,\n\t          Math.PI / 2,\n\t          Math.PI,\n\t          false\n\t        );\n\t      }\n\t\n\t      if (pointerDirection === LEFT) {\n\t        context.lineTo(0, (height + pointerHeight) / 2);\n\t        context.lineTo(-1 * pointerWidth, height / 2);\n\t        context.lineTo(0, (height - pointerHeight) / 2);\n\t      }\n\t\n\t      if (cornerRadius) {\n\t        context.lineTo(0, cornerRadius);\n\t        context.arc(\n\t          cornerRadius,\n\t          cornerRadius,\n\t          cornerRadius,\n\t          Math.PI,\n\t          Math.PI * 3 / 2,\n\t          false\n\t        );\n\t      }\n\t\n\t      context.closePath();\n\t      context.fillStrokeShape(this);\n\t    },\n\t    getSelfRect: function() {\n\t      var x = 0,\n\t        y = 0,\n\t        pointerWidth = this.getPointerWidth(),\n\t        pointerHeight = this.getPointerHeight(),\n\t        direction = this.pointerDirection(),\n\t        width = this.getWidth(),\n\t        height = this.getHeight();\n\t\n\t      if (direction === UP) {\n\t        y -= pointerHeight;\n\t        height += pointerHeight;\n\t      } else if (direction === DOWN) {\n\t        height += pointerHeight;\n\t      } else if (direction === LEFT) {\n\t        // ARGH!!! I have no idea why should I used magic 1.5!!!!!!!!!\n\t        x -= pointerWidth * 1.5;\n\t        width += pointerWidth;\n\t      } else if (direction === RIGHT) {\n\t        width += pointerWidth * 1.5;\n\t      }\n\t      return {\n\t        x: x,\n\t        y: y,\n\t        width: width,\n\t        height: height\n\t      };\n\t    }\n\t  };\n\t\n\t  Konva.Util.extend(Konva.Tag, Konva.Shape);\n\t  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerDirection', NONE);\n\t\n\t  /**\n\t     * set pointer Direction\n\t     * @name setPointerDirection\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     * @param {String} pointerDirection can be up, right, down, left, or none.  The\n\t     *  default is none\n\t     */\n\t\n\t  /**\n\t     * get pointer Direction\n\t     * @name getPointerDirection\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerWidth', 0);\n\t\n\t  /**\n\t     * set pointer width\n\t     * @name setPointerWidth\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     * @param {Number} pointerWidth\n\t     */\n\t\n\t  /**\n\t     * get pointer width\n\t     * @name getPointerWidth\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerHeight', 0);\n\t\n\t  /**\n\t     * set pointer height\n\t     * @name setPointerHeight\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     * @param {Number} pointerHeight\n\t     */\n\t\n\t  /**\n\t     * get pointer height\n\t     * @name getPointerHeight\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Tag, 'cornerRadius', 0);\n\t\n\t  /**\n\t     * set corner radius\n\t     * @name setCornerRadius\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     * @param {Number} corner radius\n\t     */\n\t\n\t  /**\n\t     * get corner radius\n\t     * @name getCornerRadius\n\t     * @method\n\t     * @memberof Konva.Tag.prototype\n\t     */\n\t\n\t  Konva.Collection.mapMethods(Konva.Tag);\n\t})();\n\t\n\t(function(Konva) {\n\t  'use strict';\n\t  /**\n\t     * Arrow constructor\n\t     * @constructor\n\t     * @memberof Konva\n\t     * @augments Konva.Shape\n\t     * @param {Object} config\n\t     * @param {Array} config.points\n\t     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n\t     *   The default is 0\n\t     * @param {Number} config.pointerLength\n\t     * @param {Number} config.pointerWidth\n\t     * @param {String} [config.fill] fill color\n\t     * @param {Image} [config.fillPatternImage] fill pattern image\n\t     * @param {Number} [config.fillPatternX]\n\t     * @param {Number} [config.fillPatternY]\n\t     * @param {Object} [config.fillPatternOffset] object with x and y component\n\t     * @param {Number} [config.fillPatternOffsetX] \n\t     * @param {Number} [config.fillPatternOffsetY] \n\t     * @param {Object} [config.fillPatternScale] object with x and y component\n\t     * @param {Number} [config.fillPatternScaleX]\n\t     * @param {Number} [config.fillPatternScaleY]\n\t     * @param {Number} [config.fillPatternRotation]\n\t     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n\t     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientStartPointX]\n\t     * @param {Number} [config.fillLinearGradientStartPointY]\n\t     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillLinearGradientEndPointX]\n\t     * @param {Number} [config.fillLinearGradientEndPointY]\n\t     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n\t     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientStartPointX]\n\t     * @param {Number} [config.fillRadialGradientStartPointY]\n\t     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n\t     * @param {Number} [config.fillRadialGradientEndPointX] \n\t     * @param {Number} [config.fillRadialGradientEndPointY] \n\t     * @param {Number} [config.fillRadialGradientStartRadius]\n\t     * @param {Number} [config.fillRadialGradientEndRadius]\n\t     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n\t     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n\t     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n\t     * @param {String} [config.stroke] stroke color\n\t     * @param {Number} [config.strokeWidth] stroke width\n\t     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n\t     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n\t     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n\t     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n\t     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n\t     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n\t     *  is miter\n\t     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n\t     *  is butt\n\t     * @param {String} [config.shadowColor]\n\t     * @param {Number} [config.shadowBlur]\n\t     * @param {Object} [config.shadowOffset] object with x and y component\n\t     * @param {Number} [config.shadowOffsetX]\n\t     * @param {Number} [config.shadowOffsetY]\n\t     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n\t     *  between 0 and 1\n\t     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n\t     * @param {Array} [config.dash]\n\t     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n\t     * @param {Number} [config.x]\n\t     * @param {Number} [config.y]\n\t     * @param {Number} [config.width]\n\t     * @param {Number} [config.height]\n\t     * @param {Boolean} [config.visible]\n\t     * @param {Boolean} [config.listening] whether or not the node is listening for events\n\t     * @param {String} [config.id] unique id\n\t     * @param {String} [config.name] non-unique name\n\t     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n\t     * @param {Object} [config.scale] set scale\n\t     * @param {Number} [config.scaleX] set scale x\n\t     * @param {Number} [config.scaleY] set scale y\n\t     * @param {Number} [config.rotation] rotation in degrees\n\t     * @param {Object} [config.offset] offset from center point and rotation point\n\t     * @param {Number} [config.offsetX] set offset x\n\t     * @param {Number} [config.offsetY] set offset y\n\t     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n\t     *  the entire stage by dragging any portion of the stage\n\t     * @param {Number} [config.dragDistance]\n\t     * @param {Function} [config.dragBoundFunc]\n\t     * @example\n\t     * var line = new Konva.Line({\n\t     *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n\t     *   stroke: 'red',\n\t     *   tension: 1,\n\t     *   pointerLength : 10,\n\t     *   pointerWidth : 12\n\t     * });\n\t     */\n\t  Konva.Arrow = function(config) {\n\t    this.____init(config);\n\t  };\n\t\n\t  Konva.Arrow.prototype = {\n\t    ____init: function(config) {\n\t      // call super constructor\n\t      Konva.Line.call(this, config);\n\t      this.className = 'Arrow';\n\t    },\n\t    _sceneFunc: function(ctx) {\n\t      Konva.Line.prototype._sceneFunc.apply(this, arguments);\n\t      var PI2 = Math.PI * 2;\n\t      var points = this.points();\n\t      var n = points.length;\n\t      var dx = points[n - 2] - points[n - 4];\n\t      var dy = points[n - 1] - points[n - 3];\n\t      var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n\t      var length = this.pointerLength();\n\t      var width = this.pointerWidth();\n\t\n\t      ctx.save();\n\t      ctx.beginPath();\n\t      ctx.translate(points[n - 2], points[n - 1]);\n\t      ctx.rotate(radians);\n\t      ctx.moveTo(0, 0);\n\t      ctx.lineTo(-length, width / 2);\n\t      ctx.lineTo(-length, -width / 2);\n\t      ctx.closePath();\n\t      ctx.restore();\n\t\n\t      if (this.pointerAtBeginning()) {\n\t        ctx.save();\n\t        ctx.translate(points[0], points[1]);\n\t        dx = points[2] - points[0];\n\t        dy = points[3] - points[1];\n\t        ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n\t        ctx.moveTo(0, 0);\n\t        ctx.lineTo(-length, width / 2);\n\t        ctx.lineTo(-length, -width / 2);\n\t        ctx.closePath();\n\t        ctx.restore();\n\t      }\n\t      ctx.fillStrokeShape(this);\n\t    }\n\t  };\n\t\n\t  Konva.Util.extend(Konva.Arrow, Konva.Line);\n\t  /**\n\t     * get/set pointerLength\n\t     * @name pointerLength\n\t     * @method\n\t     * @memberof Konva.Arrow.prototype\n\t     * @param {Number} Length of pointer of arrow.\n\t     *   The default is 10.\n\t     * @returns {Number}\n\t     * @example\n\t     * // get tension\n\t     * var pointerLength = line.pointerLength();\n\t     *\n\t     * // set tension\n\t     * line.pointerLength(15);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerLength', 10);\n\t  /**\n\t     * get/set pointerWidth\n\t     * @name pointerWidth\n\t     * @method\n\t     * @memberof Konva.Arrow.prototype\n\t     * @param {Number} Width of pointer of arrow.\n\t     *   The default is 10.\n\t     * @returns {Number}\n\t     * @example\n\t     * // get tension\n\t     * var pointerWidth = line.pointerWidth();\n\t     *\n\t     * // set tension\n\t     * line.pointerWidth(15);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerWidth', 10);\n\t  /**\n\t     * get/set pointerAtBeginning\n\t     * @name pointerAtBeginning\n\t     * @method\n\t     * @memberof Konva.Arrow.prototype\n\t     * @param {Number} Should pointer displayed at beginning of arrow.\n\t     *   The default is false.\n\t     * @returns {Boolean}\n\t     * @example\n\t     * // get tension\n\t     * var pointerAtBeginning = line.pointerAtBeginning();\n\t     *\n\t     * // set tension\n\t     * line.pointerAtBeginning(true);\n\t     */\n\t\n\t  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerAtBeginning', false);\n\t  Konva.Collection.mapMethods(Konva.Arrow);\n\t})(Konva);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.2.0\n\t * react-dom.production.min.js\n\t *\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t/*\n\t Modernizr 3.0.0pre (Custom Build) | MIT\n\t*/\n\t'use strict';var aa=__webpack_require__(1),l=__webpack_require__(27),B=__webpack_require__(6),C=__webpack_require__(2),ba=__webpack_require__(26),da=__webpack_require__(30),ea=__webpack_require__(8),fa=__webpack_require__(28),ia=__webpack_require__(29),D=__webpack_require__(3);\n\tfunction E(a){for(var b=arguments.length-1,c=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(c+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}aa?void 0:E(\"227\");\n\tvar oa={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function pa(a,b){return(a&b)===b}\n\tvar ta={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ta,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){ua.hasOwnProperty(f)?E(\"48\",f):void 0;var g=f.toLowerCase(),h=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:pa(h,b.MUST_USE_PROPERTY),\n\thasBooleanValue:pa(h,b.HAS_BOOLEAN_VALUE),hasNumericValue:pa(h,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:pa(h,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:pa(h,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:pa(h,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:E(\"50\",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);ua[f]=g}}},ua={};\n\tfunction va(a,b){if(oa.hasOwnProperty(a)||2<a.length&&(\"o\"===a[0]||\"O\"===a[0])&&(\"n\"===a[1]||\"N\"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case \"boolean\":return oa.hasOwnProperty(a)?a=!0:(b=wa(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a=\"data-\"===a||\"aria-\"===a),a;case \"undefined\":case \"number\":case \"string\":case \"object\":return!0;default:return!1}}function wa(a){return ua.hasOwnProperty(a)?ua[a]:null}\n\tvar xa=ta,ya=xa.MUST_USE_PROPERTY,K=xa.HAS_BOOLEAN_VALUE,za=xa.HAS_NUMERIC_VALUE,Aa=xa.HAS_POSITIVE_NUMERIC_VALUE,Ba=xa.HAS_OVERLOADED_BOOLEAN_VALUE,Ca=xa.HAS_STRING_BOOLEAN_VALUE,Da={Properties:{allowFullScreen:K,async:K,autoFocus:K,autoPlay:K,capture:Ba,checked:ya|K,cols:Aa,contentEditable:Ca,controls:K,\"default\":K,defer:K,disabled:K,download:Ba,draggable:Ca,formNoValidate:K,hidden:K,loop:K,multiple:ya|K,muted:ya|K,noValidate:K,open:K,playsInline:K,readOnly:K,required:K,reversed:K,rows:Aa,rowSpan:za,\n\tscoped:K,seamless:K,selected:ya|K,size:Aa,start:za,span:Aa,spellCheck:Ca,style:0,tabIndex:0,itemScope:K,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Ca},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute(\"value\");\"number\"!==a.type||!1===a.hasAttribute(\"value\")?a.setAttribute(\"value\",\"\"+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&\n\ta.setAttribute(\"value\",\"\"+b)}}},Ea=xa.HAS_STRING_BOOLEAN_VALUE,M={xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\"},Ga={Properties:{autoReverse:Ea,externalResourcesRequired:Ea,preserveAlpha:Ea},DOMAttributeNames:{autoReverse:\"autoReverse\",externalResourcesRequired:\"externalResourcesRequired\",preserveAlpha:\"preserveAlpha\"},DOMAttributeNamespaces:{xlinkActuate:M.xlink,xlinkArcrole:M.xlink,xlinkHref:M.xlink,xlinkRole:M.xlink,xlinkShow:M.xlink,xlinkTitle:M.xlink,xlinkType:M.xlink,\n\txmlBase:M.xml,xmlLang:M.xml,xmlSpace:M.xml}},Ha=/[\\-\\:]([a-z])/g;function Ia(a){return a[1].toUpperCase()}\n\t\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function(a){var b=a.replace(Ha,\n\tIa);Ga.Properties[b]=0;Ga.DOMAttributeNames[b]=a});xa.injectDOMPropertyConfig(Da);xa.injectDOMPropertyConfig(Ga);\n\tvar P={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){\"function\"!==typeof a.invokeGuardedCallback?E(\"197\"):void 0;Ja=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){Ja.apply(P,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){P.invokeGuardedCallback.apply(this,arguments);if(P.hasCaughtError()){var q=P.clearCaughtError();P._hasRethrowError||(P._hasRethrowError=!0,P._rethrowError=\n\tq)}},rethrowCaughtError:function(){return Ka.apply(P,arguments)},hasCaughtError:function(){return P._hasCaughtError},clearCaughtError:function(){if(P._hasCaughtError){var a=P._caughtError;P._caughtError=null;P._hasCaughtError=!1;return a}E(\"198\")}};function Ja(a,b,c,d,e,f,g,h,k){P._hasCaughtError=!1;P._caughtError=null;var q=Array.prototype.slice.call(arguments,3);try{b.apply(c,q)}catch(v){P._caughtError=v,P._hasCaughtError=!0}}\n\tfunction Ka(){if(P._hasRethrowError){var a=P._rethrowError;P._rethrowError=null;P._hasRethrowError=!1;throw a;}}var La=null,Ma={};\n\tfunction Na(){if(La)for(var a in Ma){var b=Ma[a],c=La.indexOf(a);-1<c?void 0:E(\"96\",a);if(!Oa[c]){b.extractEvents?void 0:E(\"97\",a);Oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;Pa.hasOwnProperty(h)?E(\"99\",h):void 0;Pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&Qa(k[e],g,h);e=!0}else f.registrationName?(Qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:E(\"98\",d,a)}}}}\n\tfunction Qa(a,b,c){Ra[a]?E(\"100\",a):void 0;Ra[a]=b;Sa[a]=b.eventTypes[c].dependencies}var Oa=[],Pa={},Ra={},Sa={};function Ta(a){La?E(\"101\"):void 0;La=Array.prototype.slice.call(a);Na()}function Ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];Ma.hasOwnProperty(c)&&Ma[c]===d||(Ma[c]?E(\"102\",c):void 0,Ma[c]=d,b=!0)}b&&Na()}\n\tvar Va=Object.freeze({plugins:Oa,eventNameDispatchConfigs:Pa,registrationNameModules:Ra,registrationNameDependencies:Sa,possibleRegistrationNames:null,injectEventPluginOrder:Ta,injectEventPluginsByName:Ua}),Wa=null,Xa=null,Ya=null;function Za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Ya(d);P.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\n\tfunction $a(a,b){null==b?E(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function ab(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var bb=null;\n\tfunction cb(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Za(a,b,c[e],d[e]);else c&&Za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function db(a){return cb(a,!0)}function gb(a){return cb(a,!1)}var hb={injectEventPluginOrder:Ta,injectEventPluginsByName:Ua};\n\tfunction ib(a,b){var c=a.stateNode;if(!c)return null;var d=Wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?E(\"231\",b,typeof c):void 0;\n\treturn c}function jb(a,b,c,d){for(var e,f=0;f<Oa.length;f++){var g=Oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=$a(e,g))}return e}function kb(a){a&&(bb=$a(bb,a))}function lb(a){var b=bb;bb=null;b&&(a?ab(b,db):ab(b,gb),bb?E(\"95\"):void 0,P.rethrowCaughtError())}var mb=Object.freeze({injection:hb,getListener:ib,extractEvents:jb,enqueueEvents:kb,processEventQueue:lb}),nb=Math.random().toString(36).slice(2),Q=\"__reactInternalInstance$\"+nb,ob=\"__reactEventHandlers$\"+nb;\n\tfunction pb(a){if(a[Q])return a[Q];for(var b=[];!a[Q];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[Q];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[Q]);a=b.pop())c=d;return c}function qb(a){if(5===a.tag||6===a.tag)return a.stateNode;E(\"33\")}function rb(a){return a[ob]||null}\n\tvar sb=Object.freeze({precacheFiberNode:function(a,b){b[Q]=a},getClosestInstanceFromNode:pb,getInstanceFromNode:function(a){a=a[Q];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:qb,getFiberCurrentPropsFromNode:rb,updateFiberProps:function(a,b){a[ob]=b}});function tb(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function ub(a,b,c){for(var d=[];a;)d.push(a),a=tb(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}\n\tfunction vb(a,b,c){if(b=ib(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a)}function wb(a){a&&a.dispatchConfig.phasedRegistrationNames&&ub(a._targetInst,vb,a)}function xb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?tb(b):null;ub(b,vb,a)}}\n\tfunction yb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=ib(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a))}function zb(a){a&&a.dispatchConfig.registrationName&&yb(a._targetInst,null,a)}function Ab(a){ab(a,wb)}\n\tfunction Bb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=tb(h))g++;h=0;for(var k=f;k;k=tb(k))h++;for(;0<g-h;)e=tb(e),g--;for(;0<h-g;)f=tb(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=tb(e);f=tb(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=tb(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=tb(d)}for(d=0;d<e.length;d++)yb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)yb(c[a],\"captured\",b)}\n\tvar Cb=Object.freeze({accumulateTwoPhaseDispatches:Ab,accumulateTwoPhaseDispatchesSkipTarget:function(a){ab(a,xb)},accumulateEnterLeaveDispatches:Bb,accumulateDirectDispatches:function(a){ab(a,zb)}}),Db=null;function Eb(){!Db&&l.canUseDOM&&(Db=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return Db}var S={_root:null,_startText:null,_fallbackText:null};\n\tfunction Fb(){if(S._fallbackText)return S._fallbackText;var a,b=S._startText,c=b.length,d,e=Gb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);S._fallbackText=e.slice(a,1<d?1-d:void 0);return S._fallbackText}function Gb(){return\"value\"in S._root?S._root.value:S._root[Eb()]}\n\tvar Hb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),Ib={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\n\tfunction T(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}\n\tB(T.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,\n\tdestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Hb.length;a++)this[Hb[a]]=null}});T.Interface=Ib;T.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;B(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=B({},this.Interface,b);a.augmentClass=this.augmentClass;Jb(a)};Jb(T);function Kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\n\tfunction Lb(a){a instanceof this?void 0:E(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Jb(a){a.eventPool=[];a.getPooled=Kb;a.release=Lb}function Mb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Mb,{data:null});function Nb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Nb,{data:null});var Pb=[9,13,27,32],Vb=l.canUseDOM&&\"CompositionEvent\"in window,Wb=null;l.canUseDOM&&\"documentMode\"in document&&(Wb=document.documentMode);var Xb;\n\tif(Xb=l.canUseDOM&&\"TextEvent\"in window&&!Wb){var Yb=window.opera;Xb=!(\"object\"===typeof Yb&&\"function\"===typeof Yb.version&&12>=parseInt(Yb.version(),10))}\n\tvar Zb=Xb,$b=l.canUseDOM&&(!Vb||Wb&&8<Wb&&11>=Wb),ac=String.fromCharCode(32),bc={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\n\tcaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},cc=!1;\n\tfunction dc(a,b){switch(a){case \"topKeyUp\":return-1!==Pb.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function ec(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var fc=!1;function gc(a,b){switch(a){case \"topCompositionEnd\":return ec(b);case \"topKeyPress\":if(32!==b.which)return null;cc=!0;return ac;case \"topTextInput\":return a=b.data,a===ac&&cc?null:a;default:return null}}\n\tfunction hc(a,b){if(fc)return\"topCompositionEnd\"===a||!Vb&&dc(a,b)?(a=Fb(),S._root=null,S._startText=null,S._fallbackText=null,fc=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return $b?null:b.data;default:return null}}\n\tvar ic={eventTypes:bc,extractEvents:function(a,b,c,d){var e;if(Vb)b:{switch(a){case \"topCompositionStart\":var f=bc.compositionStart;break b;case \"topCompositionEnd\":f=bc.compositionEnd;break b;case \"topCompositionUpdate\":f=bc.compositionUpdate;break b}f=void 0}else fc?dc(a,c)&&(f=bc.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(f=bc.compositionStart);f?($b&&(fc||f!==bc.compositionStart?f===bc.compositionEnd&&fc&&(e=Fb()):(S._root=d,S._startText=Gb(),fc=!0)),f=Mb.getPooled(f,b,c,d),e?f.data=\n\te:(e=ec(c),null!==e&&(f.data=e)),Ab(f),e=f):e=null;(a=Zb?gc(a,c):hc(a,c))?(b=Nb.getPooled(bc.beforeInput,b,c,d),b.data=a,Ab(b)):b=null;return[e,b]}},jc=null,kc=null,lc=null;function mc(a){if(a=Xa(a)){jc&&\"function\"===typeof jc.restoreControlledState?void 0:E(\"194\");var b=Wa(a.stateNode);jc.restoreControlledState(a.stateNode,a.type,b)}}var nc={injectFiberControlledHostComponent:function(a){jc=a}};function oc(a){kc?lc?lc.push(a):lc=[a]:kc=a}\n\tfunction pc(){if(kc){var a=kc,b=lc;lc=kc=null;mc(a);if(b)for(a=0;a<b.length;a++)mc(b[a])}}var qc=Object.freeze({injection:nc,enqueueStateRestore:oc,restoreStateIfNeeded:pc});function rc(a,b){return a(b)}var sc=!1;function tc(a,b){if(sc)return rc(a,b);sc=!0;try{return rc(a,b)}finally{sc=!1,pc()}}var uc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};\n\tfunction vc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!uc[a.type]:\"textarea\"===b?!0:!1}function wc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xc;l.canUseDOM&&(xc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature(\"\",\"\"));\n\tfunction yc(a,b){if(!l.canUseDOM||b&&!(\"addEventListener\"in document))return!1;b=\"on\"+a;var c=b in document;c||(c=document.createElement(\"div\"),c.setAttribute(b,\"return;\"),c=\"function\"===typeof c[b]);!c&&xc&&\"wheel\"===a&&(c=document.implementation.hasFeature(\"Events.wheel\",\"3.0\"));return c}function zc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\n\tfunction Ac(a){var b=zc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\n\tfunction Bc(a){a._valueTracker||(a._valueTracker=Ac(a))}function Cc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=zc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Dc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};\n\tfunction Ec(a,b,c){a=T.getPooled(Dc.change,a,b,c);a.type=\"change\";oc(c);Ab(a);return a}var Fc=null,Gc=null;function Hc(a){kb(a);lb(!1)}function Ic(a){var b=qb(a);if(Cc(b))return a}function Jc(a,b){if(\"topChange\"===a)return b}var Kc=!1;l.canUseDOM&&(Kc=yc(\"input\")&&(!document.documentMode||9<document.documentMode));function Lc(){Fc&&(Fc.detachEvent(\"onpropertychange\",Mc),Gc=Fc=null)}function Mc(a){\"value\"===a.propertyName&&Ic(Gc)&&(a=Ec(Gc,a,wc(a)),tc(Hc,a))}\n\tfunction Nc(a,b,c){\"topFocus\"===a?(Lc(),Fc=b,Gc=c,Fc.attachEvent(\"onpropertychange\",Mc)):\"topBlur\"===a&&Lc()}function Oc(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return Ic(Gc)}function Pc(a,b){if(\"topClick\"===a)return Ic(b)}function $c(a,b){if(\"topInput\"===a||\"topChange\"===a)return Ic(b)}\n\tvar ad={eventTypes:Dc,_isInputEventSupported:Kc,extractEvents:function(a,b,c,d){var e=b?qb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Jc;else if(vc(e))if(Kc)g=$c;else{g=Oc;var h=Nc}else f=e.nodeName,!f||\"input\"!==f.toLowerCase()||\"checkbox\"!==e.type&&\"radio\"!==e.type||(g=Pc);if(g&&(g=g(a,b)))return Ec(g,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&(a=\"\"+e.value,e.getAttribute(\"value\")!==\n\ta&&e.setAttribute(\"value\",a))}};function bd(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(bd,{view:null,detail:null});var cd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}function fd(a,b,c,d){return T.call(this,a,b,c,d)}\n\tbd.augmentClass(fd,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});\n\tvar gd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},hd={eventTypes:gd,extractEvents:function(a,b,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?pb(b):null):a=null;if(a===\n\tb)return null;var f=null==a?e:qb(a);e=null==b?e:qb(b);var g=fd.getPooled(gd.mouseLeave,a,c,d);g.type=\"mouseleave\";g.target=f;g.relatedTarget=e;c=fd.getPooled(gd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=f;Bb(g,c,a,b);return[g,c]}},id=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function jd(a){a=a.type;return\"string\"===typeof a?a:\"function\"===typeof a?a.displayName||a.name:null}\n\tfunction kd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){return(a=a._reactInternalFiber)?2===kd(a):!1}function md(a){2!==kd(a)?E(\"188\"):void 0}\n\tfunction nd(a){var b=a.alternate;if(!b)return b=kd(a),3===b?E(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return md(e),a;if(g===d)return md(e),b;g=g.sibling}E(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\n\tvoid 0:E(\"189\")}}c.alternate!==d?E(\"190\"):void 0}3!==c.tag?E(\"188\"):void 0;return c.stateNode.current===c?a:b}function od(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\n\tfunction pd(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var qd=[];\n\tfunction rd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=pb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],sd(a.topLevelType,b,a.nativeEvent,wc(a.nativeEvent))}var td=!0,sd=void 0;function ud(a){td=!!a}function U(a,b,c){return c?ba.listen(c,b,vd.bind(null,a)):null}function wd(a,b,c){return c?ba.capture(c,b,vd.bind(null,a)):null}\n\tfunction vd(a,b){if(td){var c=wc(b);c=pb(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(qd.length){var d=qd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{tc(rd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>qd.length&&qd.push(a)}}}\n\tvar xd=Object.freeze({get _enabled(){return td},get _handleTopLevel(){return sd},setHandleTopLevel:function(a){sd=a},setEnabled:ud,isEnabled:function(){return td},trapBubbledEvent:U,trapCapturedEvent:wd,dispatchEvent:vd});function yd(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\n\tvar zd={animationend:yd(\"Animation\",\"AnimationEnd\"),animationiteration:yd(\"Animation\",\"AnimationIteration\"),animationstart:yd(\"Animation\",\"AnimationStart\"),transitionend:yd(\"Transition\",\"TransitionEnd\")},Ad={},Bd={};l.canUseDOM&&(Bd=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete zd.animationend.animation,delete zd.animationiteration.animation,delete zd.animationstart.animation),\"TransitionEvent\"in window||delete zd.transitionend.transition);\n\tfunction Cd(a){if(Ad[a])return Ad[a];if(!zd[a])return a;var b=zd[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Bd)return Ad[a]=b[c];return\"\"}\n\tvar Dd={topAbort:\"abort\",topAnimationEnd:Cd(\"animationend\")||\"animationend\",topAnimationIteration:Cd(\"animationiteration\")||\"animationiteration\",topAnimationStart:Cd(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCancel:\"cancel\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",\n\ttopCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoad:\"load\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",\n\ttopMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",topSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\n\ttopTouchStart:\"touchstart\",topTransitionEnd:Cd(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},Ed={},Fd=0,Gd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Hd(a){Object.prototype.hasOwnProperty.call(a,Gd)||(a[Gd]=Fd++,Ed[a[Gd]]={});return Ed[a[Gd]]}function Id(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\n\tfunction Jd(a,b){var c=Id(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Id(c)}}function Kd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\n\tvar Ld=l.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Md={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},Nd=null,Od=null,Pd=null,Qd=!1;\n\tfunction Rd(a,b){if(Qd||null==Nd||Nd!==da())return null;var c=Nd;\"selectionStart\"in c&&Kd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Pd&&ea(Pd,c)?null:(Pd=c,a=T.getPooled(Md.select,Od,a,b),a.type=\"select\",a.target=Nd,Ab(a),a)}\n\tvar Sd={eventTypes:Md,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Hd(e);f=Sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?qb(b):window;switch(a){case \"topFocus\":if(vc(e)||\"true\"===e.contentEditable)Nd=e,Od=b,Pd=null;break;case \"topBlur\":Pd=Od=Nd=null;break;case \"topMouseDown\":Qd=!0;break;case \"topContextMenu\":case \"topMouseUp\":return Qd=!1,Rd(c,d);case \"topSelectionChange\":if(Ld)break;\n\tcase \"topKeyDown\":case \"topKeyUp\":return Rd(c,d)}return null}};function Td(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Td,{animationName:null,elapsedTime:null,pseudoElement:null});function Ud(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Ud,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}});function Vd(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(Vd,{relatedTarget:null});\n\tfunction Wd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}\n\tvar Xd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Yd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n\t116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};function Zd(a,b,c,d){return T.call(this,a,b,c,d)}\n\tbd.augmentClass(Zd,{key:function(a){if(a.key){var b=Xd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Wd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Yd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===a.type?Wd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\n\ta.type?Wd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}});function $d(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass($d,{dataTransfer:null});function ae(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(ae,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed});function be(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(be,{propertyName:null,elapsedTime:null,pseudoElement:null});\n\tfunction ce(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass(ce,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var de={},ee={};\n\t\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function(a){var b=a[0].toUpperCase()+\n\ta.slice(1),c=\"on\"+b;b=\"top\"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+\"Capture\"},dependencies:[b]};de[a]=c;ee[b]=c});\n\tvar fe={eventTypes:de,extractEvents:function(a,b,c,d){var e=ee[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Wd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Zd;break;case \"topBlur\":case \"topFocus\":a=Vd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=fd;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=\n\t$d;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=ae;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Td;break;case \"topTransitionEnd\":a=be;break;case \"topScroll\":a=bd;break;case \"topWheel\":a=ce;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Ud;break;default:a=T}b=a.getPooled(e,b,c,d);Ab(b);return b}};sd=function(a,b,c,d){a=jb(a,b,c,d);kb(a);lb(!1)};hb.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\n\tWa=sb.getFiberCurrentPropsFromNode;Xa=sb.getInstanceFromNode;Ya=sb.getNodeFromInstance;hb.injectEventPluginsByName({SimpleEventPlugin:fe,EnterLeaveEventPlugin:hd,ChangeEventPlugin:ad,SelectEventPlugin:Sd,BeforeInputEventPlugin:ic});var ge=[],he=-1;function V(a){0>he||(a.current=ge[he],ge[he]=null,he--)}function W(a,b){he++;ge[he]=a.current;a.current=b}new Set;var ie={current:D},X={current:!1},je=D;function ke(a){return le(a)?je:ie.current}\n\tfunction me(a,b){var c=a.type.contextTypes;if(!c)return D;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function le(a){return 2===a.tag&&null!=a.type.childContextTypes}function ne(a){le(a)&&(V(X,a),V(ie,a))}\n\tfunction oe(a,b,c){null!=ie.cursor?E(\"168\"):void 0;W(ie,b,a);W(X,c,a)}function pe(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:E(\"108\",jd(a)||\"Unknown\",e);return B({},b,c)}function qe(a){if(!le(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||D;je=ie.current;W(ie,b,a);W(X,X.current,a);return!0}\n\tfunction re(a,b){var c=a.stateNode;c?void 0:E(\"169\");if(b){var d=pe(a,je);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(ie,a);W(ie,d,a)}else V(X,a);W(X,b,a)}\n\tfunction Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\n\tfunction se(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\n\tfunction te(a,b,c){var d=void 0,e=a.type,f=a.key;\"function\"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):\"string\"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):\"object\"===typeof e&&null!==e&&\"number\"===typeof e.tag?(d=e,d.pendingProps=a.props):E(\"130\",null==e?e:typeof e,\"\");d.expirationTime=c;return d}function ue(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}\n\tfunction ve(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function we(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function xe(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function ye(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ze=null,Ae=null;\n\tfunction Be(a){return function(b){try{return a(b)}catch(c){}}}function Ce(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ze=Be(function(a){return b.onCommitFiberRoot(c,a)});Ae=Be(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function De(a){\"function\"===typeof ze&&ze(a)}function Ee(a){\"function\"===typeof Ae&&Ae(a)}\n\tfunction Fe(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Ge(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}\n\tfunction He(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Fe(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Fe(null))):a=null;a=a!==d?a:null;null===a?Ge(d,b):null===d.last||null===a.last?(Ge(d,b),Ge(a,b)):(Ge(d,b),a.last=b)}function Ie(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\n\tfunction Je(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,h=c.first,k=!1;null!==h;){var q=h.expirationTime;if(q>f){var v=c.expirationTime;if(0===v||v>q)c.expirationTime=q;k||(k=!0,c.baseState=a)}else{k||(c.first=h.next,null===\n\tc.first&&(c.last=null));if(h.isReplace)a=Ie(h,d,a,e),g=!0;else if(q=Ie(h,d,a,e))a=g?B({},a,q):B(a,q),g=!1;h.isForced&&(c.hasForceUpdate=!0);null!==h.callback&&(q=c.callbackList,null===q&&(q=c.callbackList=[]),q.push(h))}h=h.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);k||(c.baseState=a);return a}\n\tfunction Ke(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?E(\"191\",e):void 0;e.call(b)}}\n\tfunction Le(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:ld,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});\n\ta(c,g)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);He(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=ke(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?me(a,d):D;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,\n\tb){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:E(\"158\");var h=ke(a);d.props=g;d.state=a.memoizedState=e;d.refs=D;d.context=me(a,h);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);\"function\"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Je(c,a,e,d,g,b)));\"function\"===typeof d.componentDidMount&&(a.effectTag|=\n\t4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var h=b.memoizedProps,k=b.pendingProps;k||(k=h,null==k?E(\"159\"):void 0);var u=g.context,z=ke(b);z=me(b,z);\"function\"!==typeof g.componentWillReceiveProps||h===k&&u===z||(u=g.state,g.componentWillReceiveProps(k,z),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Je(a,b,b.updateQueue,g,k,e):u;if(!(h!==k||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==\n\ttypeof g.componentDidUpdate||h===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var G=k;if(null===h||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)G=!0;else{var I=b.stateNode,L=b.type;G=\"function\"===typeof I.shouldComponentUpdate?I.shouldComponentUpdate(G,e,z):L.prototype&&L.prototype.isPureReactComponent?!ea(h,G)||!ea(u,e):!0}G?(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(k,e,z),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4)):(\"function\"!==typeof g.componentDidUpdate||\n\th===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,k),d(b,e));g.props=k;g.state=e;g.context=z;return G}}}var Qe=\"function\"===typeof Symbol&&Symbol[\"for\"],Re=Qe?Symbol[\"for\"](\"react.element\"):60103,Se=Qe?Symbol[\"for\"](\"react.call\"):60104,Te=Qe?Symbol[\"for\"](\"react.return\"):60105,Ue=Qe?Symbol[\"for\"](\"react.portal\"):60106,Ve=Qe?Symbol[\"for\"](\"react.fragment\"):60107,We=\"function\"===typeof Symbol&&Symbol.iterator;\n\tfunction Xe(a){if(null===a||\"undefined\"===typeof a)return null;a=We&&a[We]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ye=Array.isArray;\n\tfunction Ze(a,b){var c=b.ref;if(null!==c&&\"function\"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?E(\"110\"):void 0,d=b.stateNode);d?void 0:E(\"147\",c);var e=\"\"+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===D?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}\"string\"!==typeof c?E(\"148\"):void 0;b._owner?void 0:E(\"149\",c)}return c}\n\tfunction $e(a,b){\"textarea\"!==a.type&&E(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\n\tfunction af(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=se(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n\t2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=ve(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ze(b,c),d[\"return\"]=a,d;d=te(c,a.internalContextTag,d);d.ref=Ze(b,c);d[\"return\"]=a;return d}function q(a,b,c,d){if(null===b||7!==b.tag)return b=we(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c,d);\n\tb[\"return\"]=a;return b}function v(a,b,c,d){if(null===b||9!==b.tag)return b=xe(c,a.internalContextTag,d),b.type=c.value,b[\"return\"]=a,b;b=e(b,null,d);b.type=c.value;b[\"return\"]=a;return b}function y(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=ye(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c.children||[],d);b[\"return\"]=a;return b}function u(a,b,c,d,f){if(null===b||10!==b.tag)return b=ue(c,a.internalContextTag,\n\td,f),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function z(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=ve(\"\"+b,a.internalContextTag,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Re:if(b.type===Ve)return b=ue(b.props.children,a.internalContextTag,c,b.key),b[\"return\"]=a,b;c=te(b,a.internalContextTag,c);c.ref=Ze(null,b);c[\"return\"]=a;return c;case Se:return b=we(b,a.internalContextTag,c),b[\"return\"]=a,b;case Te:return c=xe(b,a.internalContextTag,\n\tc),c.type=b.value,c[\"return\"]=a,c;case Ue:return b=ye(b,a.internalContextTag,c),b[\"return\"]=a,b}if(Ye(b)||Xe(b))return b=ue(b,a.internalContextTag,c,null),b[\"return\"]=a,b;$e(a,b)}return null}function G(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Re:return c.key===e?c.type===Ve?u(a,b,c.props.children,d,e):k(a,b,c,d):null;case Se:return c.key===e?q(a,b,c,d):null;case Te:return null===\n\te?v(a,b,c,d):null;case Ue:return c.key===e?y(a,b,c,d):null}if(Ye(c)||Xe(c))return null!==e?null:u(a,b,c,d,null);$e(a,c)}return null}function I(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Re:return a=a.get(null===d.key?c:d.key)||null,d.type===Ve?u(b,a,d.props.children,e,d.key):k(b,a,d,e);case Se:return a=a.get(null===d.key?c:d.key)||null,q(b,a,d,e);case Te:return a=a.get(c)||null,v(b,a,d,e);case Ue:return a=\n\ta.get(null===d.key?c:d.key)||null,y(b,a,d,e)}if(Ye(d)||Xe(d))return a=a.get(c)||null,u(b,a,d,e,null);$e(b,d)}return null}function L(e,g,m,A){for(var h=null,r=null,n=g,w=g=0,k=null;null!==n&&w<m.length;w++){n.index>w?(k=n,n=null):k=n.sibling;var x=G(e,n,m[w],A);if(null===x){null===n&&(n=k);break}a&&n&&null===x.alternate&&b(e,n);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x;n=k}if(w===m.length)return c(e,n),h;if(null===n){for(;w<m.length;w++)if(n=z(e,m[w],A))g=f(n,g,w),null===r?h=n:r.sibling=n,r=n;return h}for(n=\n\td(e,n);w<m.length;w++)if(k=I(n,e,w,m[w],A)){if(a&&null!==k.alternate)n[\"delete\"](null===k.key?w:k.key);g=f(k,g,w);null===r?h=k:r.sibling=k;r=k}a&&n.forEach(function(a){return b(e,a)});return h}function N(e,g,m,A){var h=Xe(m);\"function\"!==typeof h?E(\"150\"):void 0;m=h.call(m);null==m?E(\"151\"):void 0;for(var r=h=null,n=g,w=g=0,k=null,x=m.next();null!==n&&!x.done;w++,x=m.next()){n.index>w?(k=n,n=null):k=n.sibling;var J=G(e,n,x.value,A);if(null===J){n||(n=k);break}a&&n&&null===J.alternate&&b(e,n);g=f(J,\n\tg,w);null===r?h=J:r.sibling=J;r=J;n=k}if(x.done)return c(e,n),h;if(null===n){for(;!x.done;w++,x=m.next())x=z(e,x.value,A),null!==x&&(g=f(x,g,w),null===r?h=x:r.sibling=x,r=x);return h}for(n=d(e,n);!x.done;w++,x=m.next())if(x=I(n,e,w,x.value,A),null!==x){if(a&&null!==x.alternate)n[\"delete\"](null===x.key?w:x.key);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x}a&&n.forEach(function(a){return b(e,a)});return h}return function(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===Ve&&null===f.key&&(f=f.props.children);\n\tvar m=\"object\"===typeof f&&null!==f;if(m)switch(f.$$typeof){case Re:a:{var r=f.key;for(m=d;null!==m;){if(m.key===r)if(10===m.tag?f.type===Ve:m.type===f.type){c(a,m.sibling);d=e(m,f.type===Ve?f.props.children:f.props,h);d.ref=Ze(m,f);d[\"return\"]=a;a=d;break a}else{c(a,m);break}else b(a,m);m=m.sibling}f.type===Ve?(d=ue(f.props.children,a.internalContextTag,h,f.key),d[\"return\"]=a,a=d):(h=te(f,a.internalContextTag,h),h.ref=Ze(d,f),h[\"return\"]=a,a=h)}return g(a);case Se:a:{for(m=f.key;null!==d;){if(d.key===\n\tm)if(7===d.tag){c(a,d.sibling);d=e(d,f,h);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=we(f,a.internalContextTag,h);d[\"return\"]=a;a=d}return g(a);case Te:a:{if(null!==d)if(9===d.tag){c(a,d.sibling);d=e(d,null,h);d.type=f.value;d[\"return\"]=a;a=d;break a}else c(a,d);d=xe(f,a.internalContextTag,h);d.type=f.value;d[\"return\"]=a;a=d}return g(a);case Ue:a:{for(m=f.key;null!==d;){if(d.key===m)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===\n\tf.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ye(f,a.internalContextTag,h);d[\"return\"]=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h)):(c(a,d),d=ve(f,a.internalContextTag,h)),d[\"return\"]=a,a=d,g(a);if(Ye(f))return L(a,d,f,h);if(Xe(f))return N(a,d,f,h);m&&$e(a,f);if(\"undefined\"===typeof f)switch(a.tag){case 2:case 1:h=a.type,E(\"152\",h.displayName||\n\th.name||\"Component\")}return c(a,d)}}var bf=af(!0),cf=af(!1);\n\tfunction df(a,b,c,d,e){function f(a,b,c){var d=b.expirationTime;b.child=null===a?cf(b,null,c,d):bf(b,a.child,c,d)}function g(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){g(a,b);if(!c)return d&&re(b,!1),q(a,b);c=b.stateNode;id.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&re(b,!0);return b.child}function k(a){var b=a.stateNode;b.pendingContext?oe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&oe(a,\n\tb.context,!1);I(a,b.containerInfo)}function q(a,b){null!==a&&b.child!==a.child?E(\"153\"):void 0;if(null!==b.child){a=b.child;var c=se(a,a.pendingProps,a.expirationTime);b.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=se(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}function v(a,b){switch(b.tag){case 3:k(b);break;case 2:qe(b);break;case 4:I(b,b.stateNode.containerInfo)}return null}var y=a.shouldSetTextContent,u=a.useSyncScheduling,z=a.shouldDeprioritizeSubtree,\n\tG=b.pushHostContext,I=b.pushHostContainer,L=c.enterHydrationState,N=c.resetHydrationState,J=c.tryToClaimNextHydratableInstance;a=Le(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var w=a.adoptClassInstance,m=a.constructClassInstance,A=a.mountClassInstance,Ob=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return v(a,b);switch(b.tag){case 0:null!==a?E(\"155\"):void 0;var d=b.type,e=b.pendingProps,r=ke(b);r=me(b,r);d=d(e,r);b.effectTag|=\n\t1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(b.tag=2,e=qe(b),w(b,d),A(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=q(a,b);break a}d=ke(b);d=me(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=qe(b),d=void 0,null===a?b.stateNode?E(\"153\"):(m(b,b.pendingProps),A(b,c),d=!0):d=Ob(a,b,c),h(a,b,d,e);case 3:return k(b),\n\te=b.updateQueue,null!==e?(d=b.memoizedState,e=Je(a,b,e,null,null,c),d===e?(N(),b=q(a,b)):(d=e.element,r=b.stateNode,(null===a||null===a.child)&&r.hydrate&&L(b)?(b.effectTag|=2,b.child=cf(b,null,d,c)):(N(),f(a,b,d)),b.memoizedState=e,b=b.child)):(N(),b=q(a,b)),b;case 5:G(b);null===a&&J(b);e=b.type;var n=b.memoizedProps;d=b.pendingProps;null===d&&(d=n,null===d?E(\"154\"):void 0);r=null!==a?a.memoizedProps:null;X.current||null!==d&&n!==d?(n=d.children,y(e,d)?n=null:r&&y(e,r)&&(b.effectTag|=16),g(a,b),\n\t2147483647!==c&&!u&&z(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,n),b.memoizedProps=d,b=b.child)):b=q(a,b);return b;case 6:return null===a&&J(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?E(\"154\"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=null===a?cf(b,b.stateNode,d,c):bf(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;\n\tcase 9:return null;case 4:a:{I(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?E(\"154\"):void 0);else if(null===e||b.memoizedProps===e){b=q(a,b);break a}null===a?b.child=bf(b,null,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||b.memoizedProps===c){b=q(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:E(\"156\")}},beginFailedWork:function(a,b,\n\tc){switch(b.tag){case 2:qe(b);break;case 3:k(b);break;default:E(\"157\")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return v(a,b);b.firstEffect=null;b.lastEffect=null;b.child=null===a?cf(b,null,null,c):bf(b,a.child,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\n\tfunction ef(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,h=a.finalizeInitialChildren,k=a.prepareUpdate,q=a.persistence,v=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,z=b.popHostContainer,G=c.prepareToHydrateHostInstance,I=c.prepareToHydrateHostTextInstance,L=c.popHydrationState,N=void 0,J=void 0,w=void 0;a.mutation?(N=function(){},J=function(a,b,c){(b.updateQueue=c)&&d(b)},w=function(a,b,c,e){c!==e&&d(b)}):q?E(\"235\"):E(\"236\");\n\treturn{completeWork:function(a,b,c){var m=b.pendingProps;if(null===m)m=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return ne(b),null;case 3:z(b);V(X,b);V(ie,b);m=b.stateNode;m.pendingContext&&(m.context=m.pendingContext,m.pendingContext=null);if(null===a||null===a.child)L(b),b.effectTag&=-3;N(b);return null;case 5:y(b);c=v();var A=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,q=b.stateNode,x=u();q=\n\tk(q,A,p,m,c,x);J(a,b,q,A,p,m,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!m)return null===b.stateNode?E(\"166\"):void 0,null;a=u();if(L(b))G(b,c,a)&&d(b);else{a=e(A,m,c,a,b);a:for(p=b.child;null!==p;){if(5===p.tag||6===p.tag)g(a,p.stateNode);else if(4!==p.tag&&null!==p.child){p.child[\"return\"]=p;p=p.child;continue}if(p===b)break;for(;null===p.sibling;){if(null===p[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}h(a,A,m,c)&&d(b);b.stateNode=a}null!==b.ref&&\n\t(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)w(a,b,a.memoizedProps,m);else{if(\"string\"!==typeof m)return null===b.stateNode?E(\"166\"):void 0,null;a=v();c=u();L(b)?I(b)&&d(b):b.stateNode=f(m,a,c,b)}return null;case 7:(m=b.memoizedProps)?void 0:E(\"165\");b.tag=8;A=[];a:for((p=b.stateNode)&&(p[\"return\"]=b);null!==p;){if(5===p.tag||6===p.tag||4===p.tag)E(\"247\");else if(9===p.tag)A.push(p.type);else if(null!==p.child){p.child[\"return\"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===\n\tp[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}p=m.handler;m=p(m.props,A);b.child=bf(b,null!==a?a.child:null,m,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return z(b),N(b),null;case 0:E(\"167\");default:E(\"156\")}}}}\n\tfunction ff(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(A){b(a,A)}}function d(a){\"function\"===typeof Ee&&Ee(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if(\"function\"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(A){b(a,A)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:k&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||k&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||\n\tb[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?E(\"160\"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c[\"return\"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?J(f,b.stateNode):N(f,b.stateNode);\n\telse if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var h=a.getPublicInstance,k=a.mutation;a=a.persistence;k||(a?E(\"235\"):E(\"236\"));var q=k.commitMount,v=k.commitUpdate,y=k.resetTextContent,u=k.commitTextUpdate,z=k.appendChild,G=k.appendChildToContainer,I=k.insertBefore,L=k.insertInContainerBefore,\n\tN=k.removeChild,J=k.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(f(b)){var c=b;break a}b=b[\"return\"]}E(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:E(\"161\")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||f(c[\"return\"])){c=\n\tnull;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?L(b,e.stateNode,c):I(b,e.stateNode,c):d?G(b,e.stateNode):z(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===\n\ta)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){g(a);a[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&v(c,f,e,a,d,b)}break;case 6:null===b.stateNode?E(\"162\"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:\n\tc,c);break;case 3:break;default:E(\"163\")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Ke(b,c);break;case 3:c=b.updateQueue;null!==c&&Ke(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&q(c,\n\tb.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:E(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(h(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var gf={};\n\tfunction hf(a){function b(a){a===gf?E(\"174\"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:gf},f={current:gf},g={current:gf};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),h=b(e.current);\n\td=c(h,a.type,d);h!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=gf;g.current=gf}}}\n\tfunction jf(a){function b(a,b){var c=new Y(5,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=g(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];y=a}var e=a.shouldSetTextContent;\n\ta=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){E(\"175\")},prepareToHydrateHostTextInstance:function(){E(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,h=a.getNextHydratableSibling,k=a.getFirstHydratableChild,q=a.hydrateInstance,v=a.hydrateTextInstance,y=null,u=null,z=!1;return{enterHydrationState:function(a){u=\n\tk(a.stateNode.containerInfo);y=a;return z=!0},resetHydrationState:function(){u=y=null;z=!1},tryToClaimNextHydratableInstance:function(a){if(z){var d=u;if(d){if(!c(a,d)){d=h(d);if(!d||!c(a,d)){a.effectTag|=2;z=!1;y=a;return}b(y,u)}y=a;u=k(d)}else a.effectTag|=2,z=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=q(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return v(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\n\ty)return!1;if(!z)return d(a),z=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=h(c);d(a);u=y?h(a.stateNode):null;return!0}}}\n\tfunction kf(a){function b(a){Qb=ja=!0;var b=a.stateNode;b.current===a?E(\"177\"):void 0;b.isReadyForCommit=!1;id.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;yg();for(t=c;null!==t;){var d=!1,e=void 0;try{for(;null!==t;){var f=t.effectTag;f&16&&zg(t);if(f&128){var g=t.alternate;null!==g&&Ag(g)}switch(f&-242){case 2:Ne(t);t.effectTag&=-3;break;case 6:Ne(t);t.effectTag&=-3;Oe(t.alternate,t);break;case 4:Oe(t.alternate,\n\tt);break;case 8:Sc=!0,Bg(t),Sc=!1}t=t.nextEffect}}catch(Tc){d=!0,e=Tc}d&&(null===t?E(\"178\"):void 0,h(t,e),null!==t&&(t=t.nextEffect))}Cg();b.current=a;for(t=c;null!==t;){c=!1;d=void 0;try{for(;null!==t;){var k=t.effectTag;k&36&&Dg(t.alternate,t);k&128&&Eg(t);if(k&64)switch(e=t,f=void 0,null!==R&&(f=R.get(e),R[\"delete\"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=R.get(e),R[\"delete\"](e))),null==f?E(\"184\"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});\n\tbreak;case 3:null===ca&&(ca=f.error);break;default:E(\"157\")}var Qc=t.nextEffect;t.nextEffect=null;t=Qc}}catch(Tc){c=!0,d=Tc}c&&(null===t?E(\"178\"):void 0,h(t,d),null!==t&&(t=t.nextEffect))}ja=Qb=!1;\"function\"===typeof De&&De(a.stateNode);ha&&(ha.forEach(G),ha=null);null!==ca&&(a=ca,ca=null,Ob(a));b=b.current.expirationTime;0===b&&(qa=R=null);return b}function c(a){for(;;){var b=Fg(a.alternate,a,H),c=a[\"return\"],d=a.sibling;var e=a;if(2147483647===H||2147483647!==e.expirationTime){if(2!==e.tag&&3!==\n\te.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;\n\tif(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=rg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function e(a){var b=Gg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function f(a){if(null!==R){if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=k(F)?e(F):d(F);else for(;null!==F&&!A();)F=k(F)?e(F):d(F)}else if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=d(F);else for(;null!==F&&!A();)F=d(F)}function g(a,b){ja?E(\"243\"):void 0;ja=!0;a.isReadyForCommit=\n\t!1;if(a!==ra||b!==H||null===F){for(;-1<he;)ge[he]=null,he--;je=D;ie.current=D;X.current=!1;x();ra=a;H=b;F=se(ra.current,null,b)}var c=!1,d=null;try{f(b)}catch(Rc){c=!0,d=Rc}for(;c;){if(eb){ca=d;break}var g=F;if(null===g)eb=!0;else{var k=h(g,d);null===k?E(\"183\"):void 0;if(!eb){try{c=k;d=b;for(k=c;null!==g;){switch(g.tag){case 2:ne(g);break;case 5:qg(g);break;case 3:p(g);break;case 4:p(g)}if(g===k||g.alternate===k)break;g=g[\"return\"]}F=e(c);f(d)}catch(Rc){c=!0;d=Rc;continue}break}}}b=ca;eb=ja=!1;ca=\n\tnull;null!==b&&Ob(b);return a.isReadyForCommit?a.current.alternate:null}function h(a,b){var c=id.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,q(a)&&(eb=!0);else for(var g=a[\"return\"];null!==g&&null===c;){2===g.tag?\"function\"===typeof g.stateNode.componentDidCatch&&(d=!0,f=jd(g),c=g,e=!0):3===g.tag&&(c=g);if(q(g)){if(Sc||null!==ha&&(ha.has(g)||null!==g.alternate&&ha.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===qa&&(qa=new Set);qa.add(c);var h=\"\";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=\n\tg._debugOwner,Qc=g._debugSource;var m=jd(g);var n=null;k&&(n=jd(k));k=Qc;m=\"\\n    in \"+(m||\"Unknown\")+(k?\" (at \"+k.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+k.lineNumber+\")\":n?\" (created by \"+n+\")\":\"\");break a;default:m=\"\"}h+=m;g=g[\"return\"]}while(g);g=h;a=jd(a);null===R&&(R=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};R.set(c,b);try{var p=b.error;p&&p.suppressReactErrorLogging||console.error(p)}catch(Vc){Vc&&\n\tVc.suppressReactErrorLogging||console.error(Vc)}Qb?(null===ha&&(ha=new Set),ha.add(c)):G(c);return c}null===ca&&(ca=b);return null}function k(a){return null!==R&&(R.has(a)||null!==a.alternate&&R.has(a.alternate))}function q(a){return null!==qa&&(qa.has(a)||null!==a.alternate&&qa.has(a.alternate))}function v(){return 20*(((I()+100)/20|0)+1)}function y(a){return 0!==ka?ka:ja?Qb?1:H:!Hg||a.internalContextTag&1?v():1}function u(a,b){return z(a,b,!1)}function z(a,b){for(;null!==a;){if(0===a.expirationTime||\n\ta.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a[\"return\"])if(3===a.tag){var c=a.stateNode;!ja&&c===ra&&b<H&&(F=ra=null,H=0);var d=c,e=b;Rb>Ig&&E(\"185\");if(null===d.nextScheduledRoot)d.remainingExpirationTime=e,null===O?(sa=O=d,d.nextScheduledRoot=d):(O=O.nextScheduledRoot=d,O.nextScheduledRoot=sa);else{var f=d.remainingExpirationTime;if(0===f||e<f)d.remainingExpirationTime=e}Fa||(la?\n\tSb&&(ma=d,na=1,m(ma,na)):1===e?w(1,null):L(e));!ja&&c===ra&&b<H&&(F=ra=null,H=0)}else break;a=a[\"return\"]}}function G(a){z(a,1,!0)}function I(){return Uc=((Wc()-Pe)/10|0)+2}function L(a){if(0!==Tb){if(a>Tb)return;Jg(Xc)}var b=Wc()-Pe;Tb=a;Xc=Kg(J,{timeout:10*(a-2)-b})}function N(){var a=0,b=null;if(null!==O)for(var c=O,d=sa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===O?E(\"244\"):void 0;if(d===d.nextScheduledRoot){sa=O=d.nextScheduledRoot=null;break}else if(d===sa)sa=e=d.nextScheduledRoot,\n\tO.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===O){O=c;O.nextScheduledRoot=sa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===O)break;c=d;d=d.nextScheduledRoot}}c=ma;null!==c&&c===b?Rb++:Rb=0;ma=b;na=a}function J(a){w(0,a)}function w(a,b){fb=b;for(N();null!==ma&&0!==na&&(0===a||na<=a)&&!Yc;)m(ma,na),N();null!==fb&&(Tb=0,Xc=-1);0!==na&&L(na);fb=null;Yc=!1;Rb=0;if(Ub)throw a=Zc,Zc=\n\tnull,Ub=!1,a;}function m(a,c){Fa?E(\"245\"):void 0;Fa=!0;if(c<=I()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=b(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(A()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Fa=!1}function A(){return null===fb||fb.timeRemaining()>Lg?!1:Yc=!0}function Ob(a){null===ma?E(\"246\"):\n\tvoid 0;ma.remainingExpirationTime=0;Ub||(Ub=!0,Zc=a)}var r=hf(a),n=jf(a),p=r.popHostContainer,qg=r.popHostContext,x=r.resetHostContainer,Me=df(a,r,n,u,y),rg=Me.beginWork,Gg=Me.beginFailedWork,Fg=ef(a,r,n).completeWork;r=ff(a,h);var zg=r.commitResetTextContent,Ne=r.commitPlacement,Bg=r.commitDeletion,Oe=r.commitWork,Dg=r.commitLifeCycles,Eg=r.commitAttachRef,Ag=r.commitDetachRef,Wc=a.now,Kg=a.scheduleDeferredCallback,Jg=a.cancelDeferredCallback,Hg=a.useSyncScheduling,yg=a.prepareForCommit,Cg=a.resetAfterCommit,\n\tPe=Wc(),Uc=2,ka=0,ja=!1,F=null,ra=null,H=0,t=null,R=null,qa=null,ha=null,ca=null,eb=!1,Qb=!1,Sc=!1,sa=null,O=null,Tb=0,Xc=-1,Fa=!1,ma=null,na=0,Yc=!1,Ub=!1,Zc=null,fb=null,la=!1,Sb=!1,Ig=1E3,Rb=0,Lg=1;return{computeAsyncExpiration:v,computeExpirationForFiber:y,scheduleWork:u,batchedUpdates:function(a,b){var c=la;la=!0;try{return a(b)}finally{(la=c)||Fa||w(1,null)}},unbatchedUpdates:function(a){if(la&&!Sb){Sb=!0;try{return a()}finally{Sb=!1}}return a()},flushSync:function(a){var b=la;la=!0;try{a:{var c=\n\tka;ka=1;try{var d=a();break a}finally{ka=c}d=void 0}return d}finally{la=b,Fa?E(\"187\"):void 0,w(1,null)}},deferredUpdates:function(a){var b=ka;ka=v();try{return a()}finally{ka=b}}}}\n\tfunction lf(a){function b(a){a=od(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=kf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,q){var g=b.current;if(c){c=\n\tc._reactInternalFiber;var h;b:{2===kd(c)&&2===c.tag?void 0:E(\"170\");for(h=c;3!==h.tag;){if(le(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h[\"return\"])?void 0:E(\"171\")}h=h.stateNode.context}c=le(c)?pe(c,h):h}else c=D;null===b.context?b.context=c:b.pendingContext=c;b=q;b=void 0===b?null:b;q=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);He(g,{expirationTime:q,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,\n\tnextCallback:null,next:null});f(g,q)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=pd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return Ce(B({},\n\ta,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var mf=Object.freeze({default:lf}),nf=mf&&lf||mf,of=nf[\"default\"]?nf[\"default\"]:nf;function pf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ue,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var qf=\"object\"===typeof performance&&\"function\"===typeof performance.now,rf=void 0;rf=qf?function(){return performance.now()}:function(){return Date.now()};\n\tvar sf=void 0,tf=void 0;\n\tif(l.canUseDOM)if(\"function\"!==typeof requestIdleCallback||\"function\"!==typeof cancelIdleCallback){var uf=null,vf=!1,wf=-1,xf=!1,yf=0,zf=33,Af=33,Bf;Bf=qf?{didTimeout:!1,timeRemaining:function(){var a=yf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=yf-Date.now();return 0<a?a:0}};var Cf=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===Cf){vf=!1;a=rf();if(0>=yf-a)if(-1!==wf&&wf<=\n\ta)Bf.didTimeout=!0;else{xf||(xf=!0,requestAnimationFrame(Df));return}else Bf.didTimeout=!1;wf=-1;a=uf;uf=null;null!==a&&a(Bf)}},!1);var Df=function(a){xf=!1;var b=a-yf+Af;b<Af&&zf<Af?(8>b&&(b=8),Af=b<zf?zf:b):zf=b;yf=a+Af;vf||(vf=!0,window.postMessage(Cf,\"*\"))};sf=function(a,b){uf=a;null!=b&&\"number\"===typeof b.timeout&&(wf=rf()+b.timeout);xf||(xf=!0,requestAnimationFrame(Df));return 0};tf=function(){uf=null;vf=!1;wf=-1}}else sf=window.requestIdleCallback,tf=window.cancelIdleCallback;else sf=function(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity}})})},\n\ttf=function(a){clearTimeout(a)};var Ef=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Ff={},Gf={};\n\tfunction Hf(a){if(Gf.hasOwnProperty(a))return!0;if(Ff.hasOwnProperty(a))return!1;if(Ef.test(a))return Gf[a]=!0;Ff[a]=!0;return!1}\n\tfunction If(a,b,c){var d=wa(b);if(d&&va(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Jf(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,\"\"+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,\"\"):a.setAttribute(b,\"\"+c))}else Kf(a,b,va(b,c)?c:null)}\n\tfunction Kf(a,b,c){Hf(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,\"\"+c))}function Jf(a,b){var c=wa(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:\"\":a.removeAttribute(c.attributeName):a.removeAttribute(b)}\n\tfunction Lf(a,b){var c=b.value,d=b.checked;return B({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function Mf(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}\n\tfunction Nf(a,b){b=b.checked;null!=b&&If(a,\"checked\",b)}function Of(a,b){Nf(a,b);var c=b.value;if(null!=c)if(0===c&&\"\"===a.value)a.value=\"0\";else if(\"number\"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==\"\"+b.defaultValue&&(a.defaultValue=\"\"+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\n\tfunction Pf(a,b){switch(b.type){case \"submit\":case \"reset\":break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":a.value=\"\";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function Qf(a){var b=\"\";aa.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}\n\tfunction Rf(a,b){a=B({children:void 0},b);if(b=Qf(b.children))a.children=b;return a}function Sf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\n\tfunction Tf(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Uf(a,b){null!=b.dangerouslySetInnerHTML?E(\"91\"):void 0;return B({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Vf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?E(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:E(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\n\tfunction Wf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Xf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Yf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\n\tfunction Zf(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function $f(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Zf(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\n\tvar ag=void 0,bg=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Yf.svg||\"innerHTML\"in a)a.innerHTML=b;else{ag=ag||document.createElement(\"div\");ag.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=ag.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\n\tfunction cg(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\n\tvar dg={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\n\tstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},eg=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(dg).forEach(function(a){eg.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);dg[b]=dg[a]})});\n\tfunction fg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||dg.hasOwnProperty(e)&&dg[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var gg=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\n\tfunction hg(a,b,c){b&&(gg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?E(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?E(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:E(\"61\")),null!=b.style&&\"object\"!==typeof b.style?E(\"62\",c()):void 0)}\n\tfunction ig(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var jg=Yf.html,kg=C.thatReturns(\"\");\n\tfunction lg(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Hd(a);b=Sa[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topScroll\"===e?wd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(wd(\"topFocus\",\"focus\",a),wd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(yc(\"cancel\",!0)&&wd(\"topCancel\",\"cancel\",a),c.topCancel=!0):\"topClose\"===e?(yc(\"close\",!0)&&wd(\"topClose\",\"close\",a),c.topClose=!0):Dd.hasOwnProperty(e)&&U(e,Dd[e],a),c[e]=!0)}}\n\tvar mg={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",topStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",\n\ttopWaiting:\"waiting\"};function ng(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===jg&&(d=Zf(a));d===jg?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function og(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\n\tfunction pg(a,b,c,d){var e=ig(b,c);switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);f=c;break;case \"source\":U(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);f=c;break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":U(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":Mf(a,c);f=Lf(a,c);U(\"topInvalid\",\"invalid\",a);\n\tlg(d,\"onChange\");break;case \"option\":f=Rf(a,c);break;case \"select\":Tf(a,c);f=B({},c,{value:void 0});U(\"topInvalid\",\"invalid\",a);lg(d,\"onChange\");break;case \"textarea\":Vf(a,c);f=Uf(a,c);U(\"topInvalid\",\"invalid\",a);lg(d,\"onChange\");break;default:f=c}hg(b,f,kg);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?fg(a,k,kg):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&bg(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&cg(a,k):\"number\"===typeof k&&cg(a,\n\t\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(Ra.hasOwnProperty(h)?null!=k&&lg(d,h):e?Kf(a,h,k):null!=k&&If(a,h,k))}switch(b){case \"input\":Bc(a);Pf(a,c);break;case \"textarea\":Bc(a);Xf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Sf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Sf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=\n\tC)}}\n\tfunction sg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Lf(a,c);d=Lf(a,d);f=[];break;case \"option\":c=Rf(a,c);d=Rf(a,d);f=[];break;case \"select\":c=B({},c,{value:void 0});d=B({},d,{value:void 0});f=[];break;case \"textarea\":c=Uf(a,c);d=Uf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=C)}hg(b,d,kg);var g,h;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if(\"style\"===g)for(h in b=c[g],b)b.hasOwnProperty(h)&&(a||(a={}),a[h]=\n\t\"\");else\"dangerouslySetInnerHTML\"!==g&&\"children\"!==g&&\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(Ra.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var k=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&k!==b&&(null!=k||null!=b))if(\"style\"===g)if(b){for(h in b)!b.hasOwnProperty(h)||k&&k.hasOwnProperty(h)||(a||(a={}),a[h]=\"\");for(h in k)k.hasOwnProperty(h)&&b[h]!==k[h]&&(a||(a={}),a[h]=k[h])}else a||(f||(f=[]),f.push(g,a)),a=k;else\"dangerouslySetInnerHTML\"===\n\tg?(k=k?k.__html:void 0,b=b?b.__html:void 0,null!=k&&b!==k&&(f=f||[]).push(g,\"\"+k)):\"children\"===g?b===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(g,\"\"+k):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&(Ra.hasOwnProperty(g)?(null!=k&&lg(e,g),f||b===k||(f=[])):(f=f||[]).push(g,k))}a&&(f=f||[]).push(\"style\",a);return f}\n\tfunction tg(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Nf(a,e);ig(c,d);d=ig(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?fg(a,h,kg):\"dangerouslySetInnerHTML\"===g?bg(a,h):\"children\"===g?cg(a,h):d?null!=h?Kf(a,g,h):a.removeAttribute(g):null!=h?If(a,g,h):Jf(a,g)}switch(c){case \"input\":Of(a,e);break;case \"textarea\":Wf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Sf(a,\n\t!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?Sf(a,!!e.multiple,e.defaultValue,!0):Sf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\n\tfunction ug(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);break;case \"source\":U(\"topError\",\"error\",a);break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);break;case \"details\":U(\"topToggle\",\"toggle\",a);break;case \"input\":Mf(a,c);U(\"topInvalid\",\"invalid\",a);lg(e,\"onChange\");break;case \"select\":Tf(a,c);\n\tU(\"topInvalid\",\"invalid\",a);lg(e,\"onChange\");break;case \"textarea\":Vf(a,c),U(\"topInvalid\",\"invalid\",a),lg(e,\"onChange\")}hg(b,c,kg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],\"children\"===g?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):Ra.hasOwnProperty(g)&&null!=f&&lg(e,g));switch(b){case \"input\":Bc(a);Pf(a,c);break;case \"textarea\":Bc(a);Xf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n\t(a.onclick=C)}return d}function vg(a,b){return a.nodeValue!==b}\n\tvar wg=Object.freeze({createElement:ng,createTextNode:og,setInitialProperties:pg,diffProperties:sg,updateProperties:tg,diffHydratedProperties:ug,diffHydratedText:vg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Of(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\n\tc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=rb(d);e?void 0:E(\"90\");Cc(d);Of(d,e)}}}break;case \"textarea\":Wf(a,c);break;case \"select\":b=c.value,null!=b&&Sf(a,!!c.multiple,b,!1)}}});nc.injectFiberControlledHostComponent(wg);var xg=null,Mg=null;function Ng(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\n\tfunction Og(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute(\"data-reactroot\"))}\n\tvar Z=of({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:$f(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=$f(a,b)}return a},getChildHostContext:function(a,b){return $f(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){xg=td;var a=da();if(Kd(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\n\tif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(z){b=null;break a}var f=0,g=-1,h=-1,k=0,q=0,v=a,y=null;b:for(;;){for(var u;;){v!==b||0!==d&&3!==v.nodeType||(g=f+d);v!==e||0!==c&&3!==v.nodeType||(h=f+c);3===v.nodeType&&(f+=v.nodeValue.length);if(null===(u=v.firstChild))break;y=v;v=u}for(;;){if(v===a)break b;y===b&&++k===d&&(g=f);y===e&&++q===c&&(h=f);if(null!==(u=v.nextSibling))break;v=y;y=v.parentNode}v=u}b=-1===g||-1===h?null:\n\t{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;Mg={focusedElem:a,selectionRange:b};ud(!1)},resetAfterCommit:function(){var a=Mg,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&fa(document.documentElement,c)){if(Kd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Eb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\n\td&&(e=d,d=a,a=e);e=Jd(c,a);var f=Jd(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=\n\ta.top}Mg=null;ud(xg);xg=null},createInstance:function(a,b,c,d,e){a=ng(a,b,c,d);a[Q]=e;a[ob]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){pg(a,b,c,d);a:{switch(b){case \"button\":case \"input\":case \"select\":case \"textarea\":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return sg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===\n\ttypeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=og(a,b);a[Q]=d;return a},now:rf,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[ob]=e;tg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=\"\"},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,\n\tb){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,\n\tb){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[Q]=f;a[ob]=c;return ug(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[Q]=c;return vg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},\n\tdidNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:sf,cancelDeferredCallback:tf,useSyncScheduling:!0});rc=Z.batchedUpdates;\n\tfunction Pg(a,b,c,d,e){Ng(c)?void 0:E(\"200\");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Og(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Qg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Ng(b)?void 0:E(\"200\");return pf(a,b,null,c)}\n\tfunction Rg(a,b){this._reactRootContainer=Z.createContainer(a,b)}Rg.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Rg.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};\n\tvar Sg={createPortal:Qg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);\"function\"===typeof a.render?E(\"188\"):E(\"213\",Object.keys(a))},hydrate:function(a,b,c){return Pg(null,a,b,!0,c)},render:function(a,b,c){return Pg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?E(\"38\"):void 0;return Pg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Ng(a)?void 0:\n\tE(\"40\");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Pg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Qg,unstable_batchedUpdates:tc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:mb,EventPluginRegistry:Va,EventPropagators:Cb,ReactControlledComponent:qc,ReactDOMComponentTree:sb,ReactDOMEventListener:xd}};\n\tZ.injectIntoDevTools({findFiberByHostInstance:pb,bundleType:0,version:\"16.2.0\",rendererPackageName:\"react-dom\"});var Tg=Object.freeze({default:Sg}),Ug=Tg&&Sg||Tg;module.exports=Ug[\"default\"]?Ug[\"default\"]:Ug;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.1.0\n\t * react-reconciler.production.min.js\n\t *\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\tvar $$$reconciler;\n\tmodule.exports = function(config) {\n\t'use strict';var ca=__webpack_require__(6),da=__webpack_require__(1),p=__webpack_require__(3),ea=__webpack_require__(8);\n\tfunction F(b){for(var a=arguments.length-1,e=\"Minified React error #\"+b+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+b,d=0;d<a;d++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);a=Error(e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");a.name=\"Invariant Violation\";a.framesToPop=1;throw a;}var fa=da.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;\n\tfunction ia(b){b=b.type;return\"string\"===typeof b?b:\"function\"===typeof b?b.displayName||b.name:null}function ja(b){var a=b;if(b.alternate)for(;a[\"return\"];)a=a[\"return\"];else{if(0!==(a.effectTag&2))return 1;for(;a[\"return\"];)if(a=a[\"return\"],0!==(a.effectTag&2))return 1}return 3===a.tag?2:3}function ka(b){return(b=b._reactInternalFiber)?2===ja(b):!1}function la(b){2!==ja(b)?F(\"188\"):void 0}\n\tfunction ma(b){var a=b.alternate;if(!a)return a=ja(b),3===a?F(\"188\"):void 0,1===a?null:b;for(var e=b,d=a;;){var l=e[\"return\"],n=l?l.alternate:null;if(!l||!n)break;if(l.child===n.child){for(var m=l.child;m;){if(m===e)return la(l),b;if(m===d)return la(l),a;m=m.sibling}F(\"188\")}if(e[\"return\"]!==d[\"return\"])e=l,d=n;else{m=!1;for(var h=l.child;h;){if(h===e){m=!0;e=l;d=n;break}if(h===d){m=!0;d=l;e=n;break}h=h.sibling}if(!m){for(h=n.child;h;){if(h===e){m=!0;e=n;d=l;break}if(h===d){m=!0;d=n;e=l;break}h=h.sibling}m?\n\tvoid 0:F(\"189\")}}e.alternate!==d?F(\"190\"):void 0}3!==e.tag?F(\"188\"):void 0;return e.stateNode.current===e?b:a}function na(b){b=ma(b);if(!b)return null;for(var a=b;;){if(5===a.tag||6===a.tag)return a;if(a.child)a.child[\"return\"]=a,a=a.child;else{if(a===b)break;for(;!a.sibling;){if(!a[\"return\"]||a[\"return\"]===b)return null;a=a[\"return\"]}a.sibling[\"return\"]=a[\"return\"];a=a.sibling}}return null}\n\tfunction oa(b){b=ma(b);if(!b)return null;for(var a=b;;){if(5===a.tag||6===a.tag)return a;if(a.child&&4!==a.tag)a.child[\"return\"]=a,a=a.child;else{if(a===b)break;for(;!a.sibling;){if(!a[\"return\"]||a[\"return\"]===b)return null;a=a[\"return\"]}a.sibling[\"return\"]=a[\"return\"];a=a.sibling}}return null}var ta=[],L=-1;function N(b){0>L||(b.current=ta[L],ta[L]=null,L--)}function O(b,a){L++;ta[L]=b.current;b.current=a}new Set;var P={current:p},Q={current:!1},ua=p;function va(b){return wa(b)?ua:P.current}\n\tfunction xa(b,a){var e=b.type.contextTypes;if(!e)return p;var d=b.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===a)return d.__reactInternalMemoizedMaskedChildContext;var l={},n;for(n in e)l[n]=a[n];d&&(b=b.stateNode,b.__reactInternalMemoizedUnmaskedChildContext=a,b.__reactInternalMemoizedMaskedChildContext=l);return l}function wa(b){return 2===b.tag&&null!=b.type.childContextTypes}function ya(b){wa(b)&&(N(Q,b),N(P,b))}\n\tfunction za(b,a,e){null!=P.cursor?F(\"168\"):void 0;O(P,a,b);O(Q,e,b)}function Aa(b,a){var e=b.stateNode,d=b.type.childContextTypes;if(\"function\"!==typeof e.getChildContext)return a;e=e.getChildContext();for(var l in e)l in d?void 0:F(\"108\",ia(b)||\"Unknown\",l);return ca({},a,e)}function Ba(b){if(!wa(b))return!1;var a=b.stateNode;a=a&&a.__reactInternalMemoizedMergedChildContext||p;ua=P.current;O(P,a,b);O(Q,Q.current,b);return!0}\n\tfunction Ca(b,a){var e=b.stateNode;e?void 0:F(\"169\");if(a){var d=Aa(b,ua);e.__reactInternalMemoizedMergedChildContext=d;N(Q,b);N(P,b);O(P,d,b)}else N(Q,b);O(Q,a,b)}\n\tfunction S(b,a,e){this.tag=b;this.key=a;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=e;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\n\tfunction Da(b,a,e){var d=b.alternate;null===d?(d=new S(b.tag,b.key,b.internalContextTag),d.type=b.type,d.stateNode=b.stateNode,d.alternate=b,b.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=e;d.pendingProps=a;d.child=b.child;d.memoizedProps=b.memoizedProps;d.memoizedState=b.memoizedState;d.updateQueue=b.updateQueue;d.sibling=b.sibling;d.index=b.index;d.ref=b.ref;return d}\n\tfunction Ea(b,a,e){var d=void 0,l=b.type,n=b.key;\"function\"===typeof l?(d=l.prototype&&l.prototype.isReactComponent?new S(2,n,a):new S(0,n,a),d.type=l,d.pendingProps=b.props):\"string\"===typeof l?(d=new S(5,n,a),d.type=l,d.pendingProps=b.props):\"object\"===typeof l&&null!==l&&\"number\"===typeof l.tag?(d=l,d.pendingProps=b.props):F(\"130\",null==l?l:typeof l,\"\");d.expirationTime=e;return d}function La(b,a,e,d){a=new S(10,d,a);a.pendingProps=b;a.expirationTime=e;return a}\n\tfunction Ma(b,a,e){a=new S(6,null,a);a.pendingProps=b;a.expirationTime=e;return a}function Na(b,a,e){a=new S(7,b.key,a);a.type=b.handler;a.pendingProps=b;a.expirationTime=e;return a}function Oa(b,a,e){b=new S(9,null,a);b.expirationTime=e;return b}function Pa(b,a,e){a=new S(4,b.key,a);a.pendingProps=b.children||[];a.expirationTime=e;a.stateNode={containerInfo:b.containerInfo,pendingChildren:null,implementation:b.implementation};return a}var Qa=null,Ra=null;\n\tfunction Sa(b){return function(a){try{return b(a)}catch(e){}}}function Ta(b){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)return!0;try{var e=a.inject(b);Qa=Sa(function(b){return a.onCommitFiberRoot(e,b)});Ra=Sa(function(b){return a.onCommitFiberUnmount(e,b)})}catch(d){}return!0}function Ua(b){\"function\"===typeof Qa&&Qa(b)}function Va(b){\"function\"===typeof Ra&&Ra(b)}\n\tfunction Wa(b){return{baseState:b,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function cb(b,a){null===b.last?b.first=b.last=a:(b.last.next=a,b.last=a);if(0===b.expirationTime||b.expirationTime>a.expirationTime)b.expirationTime=a.expirationTime}\n\tfunction db(b,a){var e=b.alternate,d=b.updateQueue;null===d&&(d=b.updateQueue=Wa(null));null!==e?(b=e.updateQueue,null===b&&(b=e.updateQueue=Wa(null))):b=null;b=b!==d?b:null;null===b?cb(d,a):null===d.last||null===b.last?(cb(d,a),cb(b,a)):(cb(d,a),b.last=a)}function eb(b,a,e,d){b=b.partialState;return\"function\"===typeof b?b.call(a,e,d):b}\n\tfunction fb(b,a,e,d,l,n){null!==b&&b.updateQueue===e&&(e=a.updateQueue={baseState:e.baseState,expirationTime:e.expirationTime,first:e.first,last:e.last,isInitialized:e.isInitialized,callbackList:null,hasForceUpdate:!1});e.expirationTime=0;e.isInitialized?b=e.baseState:(b=e.baseState=a.memoizedState,e.isInitialized=!0);for(var m=!0,h=e.first,k=!1;null!==h;){var u=h.expirationTime;if(u>n){var y=e.expirationTime;if(0===y||y>u)e.expirationTime=u;k||(k=!0,e.baseState=b)}else{k||(e.first=h.next,null===\n\te.first&&(e.last=null));if(h.isReplace)b=eb(h,d,b,l),m=!0;else if(u=eb(h,d,b,l))b=m?ca({},b,u):ca(b,u),m=!1;h.isForced&&(e.hasForceUpdate=!0);null!==h.callback&&(u=e.callbackList,null===u&&(u=e.callbackList=[]),u.push(h))}h=h.next}null!==e.callbackList?a.effectTag|=32:null!==e.first||e.hasForceUpdate||(a.updateQueue=null);k||(e.baseState=b);return b}\n\tfunction gb(b,a){var e=b.callbackList;if(null!==e)for(b.callbackList=null,b=0;b<e.length;b++){var d=e[b],l=d.callback;d.callback=null;\"function\"!==typeof l?F(\"191\",l):void 0;l.call(a)}}\n\tfunction hb(b,a,e,d){function l(b,a){a.updater=n;b.stateNode=a;a._reactInternalFiber=b}var n={isMounted:ka,enqueueSetState:function(e,h,d){e=e._reactInternalFiber;d=void 0===d?null:d;var m=a(e);db(e,{expirationTime:m,partialState:h,callback:d,isReplace:!1,isForced:!1,nextCallback:null,next:null});b(e,m)},enqueueReplaceState:function(e,d,k){e=e._reactInternalFiber;k=void 0===k?null:k;var h=a(e);db(e,{expirationTime:h,partialState:d,callback:k,isReplace:!0,isForced:!1,nextCallback:null,next:null});\n\tb(e,h)},enqueueForceUpdate:function(e,d){e=e._reactInternalFiber;d=void 0===d?null:d;var h=a(e);db(e,{expirationTime:h,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});b(e,h)}};return{adoptClassInstance:l,constructClassInstance:function(b,a){var e=b.type,d=va(b),h=2===b.tag&&null!=b.type.contextTypes,m=h?xa(b,d):p;a=new e(a,m);l(b,a);h&&(b=b.stateNode,b.__reactInternalMemoizedUnmaskedChildContext=d,b.__reactInternalMemoizedMaskedChildContext=m);return a},mountClassInstance:function(b,\n\ta){var e=b.alternate,d=b.stateNode,h=d.state||null,m=b.pendingProps;m?void 0:F(\"158\");var l=va(b);d.props=m;d.state=b.memoizedState=h;d.refs=p;d.context=xa(b,l);null!=b.type&&null!=b.type.prototype&&!0===b.type.prototype.unstable_isAsyncReactComponent&&(b.internalContextTag|=1);\"function\"===typeof d.componentWillMount&&(h=d.state,d.componentWillMount(),h!==d.state&&n.enqueueReplaceState(d,d.state,null),h=b.updateQueue,null!==h&&(d.state=fb(e,b,h,d,m,a)));\"function\"===typeof d.componentDidMount&&(b.effectTag|=\n\t4)},updateClassInstance:function(b,a,l){var h=a.stateNode;h.props=a.memoizedProps;h.state=a.memoizedState;var m=a.memoizedProps,k=a.pendingProps;k||(k=m,null==k?F(\"159\"):void 0);var v=h.context,w=va(a);w=xa(a,w);\"function\"!==typeof h.componentWillReceiveProps||m===k&&v===w||(v=h.state,h.componentWillReceiveProps(k,w),h.state!==v&&n.enqueueReplaceState(h,h.state,null));v=a.memoizedState;l=null!==a.updateQueue?fb(b,a,a.updateQueue,h,k,l):v;if(!(m!==k||v!==l||Q.current||null!==a.updateQueue&&a.updateQueue.hasForceUpdate))return\"function\"!==\n\ttypeof h.componentDidUpdate||m===b.memoizedProps&&v===b.memoizedState||(a.effectTag|=4),!1;var C=k;if(null===m||null!==a.updateQueue&&a.updateQueue.hasForceUpdate)C=!0;else{var I=a.stateNode,D=a.type;C=\"function\"===typeof I.shouldComponentUpdate?I.shouldComponentUpdate(C,l,w):D.prototype&&D.prototype.isPureReactComponent?!ea(m,C)||!ea(v,l):!0}C?(\"function\"===typeof h.componentWillUpdate&&h.componentWillUpdate(k,l,w),\"function\"===typeof h.componentDidUpdate&&(a.effectTag|=4)):(\"function\"!==typeof h.componentDidUpdate||\n\tm===b.memoizedProps&&v===b.memoizedState||(a.effectTag|=4),e(a,k),d(a,l));h.props=k;h.state=l;h.context=w;return C}}}var ib=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.portal\")||60106,jb=Array.isArray,kb=\"function\"===typeof Symbol&&Symbol.iterator,lb,mb,nb,U;\"function\"===typeof Symbol&&Symbol[\"for\"]?(lb=Symbol[\"for\"](\"react.element\"),mb=Symbol[\"for\"](\"react.call\"),nb=Symbol[\"for\"](\"react.return\"),U=Symbol[\"for\"](\"react.fragment\")):(lb=60103,mb=60104,nb=60105,U=60107);\n\tfunction ob(b){if(null===b||\"undefined\"===typeof b)return null;b=kb&&b[kb]||b[\"@@iterator\"];return\"function\"===typeof b?b:null}\n\tfunction pb(b,a){var e=a.ref;if(null!==e&&\"function\"!==typeof e){if(a._owner){a=a._owner;var d=void 0;a&&(2!==a.tag?F(\"110\"):void 0,d=a.stateNode);d?void 0:F(\"147\",e);var l=\"\"+e;if(null!==b&&null!==b.ref&&b.ref._stringRef===l)return b.ref;b=function(b){var a=d.refs===p?d.refs={}:d.refs;null===b?delete a[l]:a[l]=b};b._stringRef=l;return b}\"string\"!==typeof e?F(\"148\"):void 0;a._owner?void 0:F(\"149\",e)}return e}\n\tfunction qb(b,a){\"textarea\"!==b.type&&F(\"31\",\"[object Object]\"===Object.prototype.toString.call(a)?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":a,\"\")}\n\tfunction wb(b,a){function e(r,c){if(a){if(!b){if(null===c.alternate)return;c=c.alternate}var f=r.lastEffect;null!==f?(f.nextEffect=c,r.lastEffect=c):r.firstEffect=r.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function d(b,c){if(!a)return null;for(;null!==c;)e(b,c),c=c.sibling;return null}function l(b,c){for(b=new Map;null!==c;)null!==c.key?b.set(c.key,c):b.set(c.index,c),c=c.sibling;return b}function n(a,c,f){if(b)return a=Da(a,c,f),a.index=0,a.sibling=null,a;a.expirationTime=f;a.effectTag=0;a.index=\n\t0;a.sibling=null;a.pendingProps=c;return a}function m(b,c,f){b.index=f;if(!a)return c;f=b.alternate;if(null!==f)return f=f.index,f<c?(b.effectTag=2,c):f;b.effectTag=2;return c}function h(b){a&&null===b.alternate&&(b.effectTag=2);return b}function k(b,c,f,a){if(null===c||6!==c.tag)return c=Ma(f,b.internalContextTag,a),c[\"return\"]=b,c;c=n(c,f,a);c[\"return\"]=b;return c}function u(b,c,f,a){if(null!==c&&c.type===f.type)return a=n(c,f.props,a),a.ref=pb(c,f),a[\"return\"]=b,a;a=Ea(f,b.internalContextTag,a);\n\ta.ref=pb(c,f);a[\"return\"]=b;return a}function y(b,c,f,a){if(null===c||7!==c.tag)return c=Na(f,b.internalContextTag,a),c[\"return\"]=b,c;c=n(c,f,a);c[\"return\"]=b;return c}function A(b,c,f,a){if(null===c||9!==c.tag)return c=Oa(f,b.internalContextTag,a),c.type=f.value,c[\"return\"]=b,c;c=n(c,null,a);c.type=f.value;c[\"return\"]=b;return c}function v(b,c,f,a){if(null===c||4!==c.tag||c.stateNode.containerInfo!==f.containerInfo||c.stateNode.implementation!==f.implementation)return c=Pa(f,b.internalContextTag,\n\ta),c[\"return\"]=b,c;c=n(c,f.children||[],a);c[\"return\"]=b;return c}function w(b,c,f,a,e){if(null===c||10!==c.tag)return c=La(f,b.internalContextTag,a,e),c[\"return\"]=b,c;c=n(c,f,a);c[\"return\"]=b;return c}function C(b,c,f){if(\"string\"===typeof c||\"number\"===typeof c)return c=Ma(\"\"+c,b.internalContextTag,f),c[\"return\"]=b,c;if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case lb:if(c.type===U)return c=La(c.props.children,b.internalContextTag,f,c.key),c[\"return\"]=b,c;f=Ea(c,b.internalContextTag,f);\n\tf.ref=pb(null,c);f[\"return\"]=b;return f;case mb:return c=Na(c,b.internalContextTag,f),c[\"return\"]=b,c;case nb:return f=Oa(c,b.internalContextTag,f),f.type=c.value,f[\"return\"]=b,f;case ib:return c=Pa(c,b.internalContextTag,f),c[\"return\"]=b,c}if(jb(c)||ob(c))return c=La(c,b.internalContextTag,f,null),c[\"return\"]=b,c;qb(b,c)}return null}function I(b,c,f,a){var r=null!==c?c.key:null;if(\"string\"===typeof f||\"number\"===typeof f)return null!==r?null:k(b,c,\"\"+f,a);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case lb:return f.key===\n\tr?f.type===U?w(b,c,f.props.children,a,r):u(b,c,f,a):null;case mb:return f.key===r?y(b,c,f,a):null;case nb:return null===r?A(b,c,f,a):null;case ib:return f.key===r?v(b,c,f,a):null}if(jb(f)||ob(f))return null!==r?null:w(b,c,f,a,null);qb(b,f)}return null}function D(b,c,f,a,e){if(\"string\"===typeof a||\"number\"===typeof a)return b=b.get(f)||null,k(c,b,\"\"+a,e);if(\"object\"===typeof a&&null!==a){switch(a.$$typeof){case lb:return b=b.get(null===a.key?f:a.key)||null,a.type===U?w(c,b,a.props.children,e,a.key):\n\tu(c,b,a,e);case mb:return b=b.get(null===a.key?f:a.key)||null,y(c,b,a,e);case nb:return b=b.get(f)||null,A(c,b,a,e);case ib:return b=b.get(null===a.key?f:a.key)||null,v(c,b,a,e)}if(jb(a)||ob(a))return b=b.get(f)||null,w(c,b,a,e,null);qb(c,a)}return null}function M(b,c,f,h){for(var r=null,z=null,g=c,E=c=0,k=null;null!==g&&E<f.length;E++){g.index>E?(k=g,g=null):k=g.sibling;var t=I(b,g,f[E],h);if(null===t){null===g&&(g=k);break}a&&g&&null===t.alternate&&e(b,g);c=m(t,c,E);null===z?r=t:z.sibling=t;z=t;\n\tg=k}if(E===f.length)return d(b,g),r;if(null===g){for(;E<f.length;E++)if(g=C(b,f[E],h))c=m(g,c,E),null===z?r=g:z.sibling=g,z=g;return r}for(g=l(b,g);E<f.length;E++)if(k=D(g,b,E,f[E],h)){if(a&&null!==k.alternate)g[\"delete\"](null===k.key?E:k.key);c=m(k,c,E);null===z?r=k:z.sibling=k;z=k}a&&g.forEach(function(c){return e(b,c)});return r}function G(b,c,f,h){var r=ob(f);\"function\"!==typeof r?F(\"150\"):void 0;f=r.call(f);null==f?F(\"151\"):void 0;for(var z=r=null,g=c,k=c=0,x=null,t=f.next();null!==g&&!t.done;k++,\n\tt=f.next()){g.index>k?(x=g,g=null):x=g.sibling;var n=I(b,g,t.value,h);if(null===n){g||(g=x);break}a&&g&&null===n.alternate&&e(b,g);c=m(n,c,k);null===z?r=n:z.sibling=n;z=n;g=x}if(t.done)return d(b,g),r;if(null===g){for(;!t.done;k++,t=f.next())t=C(b,t.value,h),null!==t&&(c=m(t,c,k),null===z?r=t:z.sibling=t,z=t);return r}for(g=l(b,g);!t.done;k++,t=f.next())if(t=D(g,b,k,t.value,h),null!==t){if(a&&null!==t.alternate)g[\"delete\"](null===t.key?k:t.key);c=m(t,c,k);null===z?r=t:z.sibling=t;z=t}a&&g.forEach(function(c){return e(b,\n\tc)});return r}return function(b,c,a,k){var f=\"object\"===typeof a&&null!==a;if(f)switch(a.$$typeof){case lb:a:{var z=a.key;for(f=c;null!==f;){if(f.key===z)if(10===f.tag?a.type===U:f.type===a.type){d(b,f.sibling);c=n(f,a.type===U?a.props.children:a.props,k);c.ref=pb(f,a);c[\"return\"]=b;b=c;break a}else{d(b,f);break}else e(b,f);f=f.sibling}a.type===U?(a=La(a.props.children,b.internalContextTag,k,a.key),a[\"return\"]=b,b=a):(k=Ea(a,b.internalContextTag,k),k.ref=pb(c,a),k[\"return\"]=b,b=k)}return h(b);case mb:a:{for(f=\n\ta.key;null!==c;){if(c.key===f)if(7===c.tag){d(b,c.sibling);a=n(c,a,k);a[\"return\"]=b;b=a;break a}else{d(b,c);break}else e(b,c);c=c.sibling}a=Na(a,b.internalContextTag,k);a[\"return\"]=b;b=a}return h(b);case nb:a:{if(null!==c)if(9===c.tag){d(b,c.sibling);c=n(c,null,k);c.type=a.value;c[\"return\"]=b;b=c;break a}else d(b,c);c=Oa(a,b.internalContextTag,k);c.type=a.value;c[\"return\"]=b;b=c}return h(b);case ib:a:{for(f=a.key;null!==c;){if(c.key===f)if(4===c.tag&&c.stateNode.containerInfo===a.containerInfo&&c.stateNode.implementation===\n\ta.implementation){d(b,c.sibling);a=n(c,a.children||[],k);a[\"return\"]=b;b=a;break a}else{d(b,c);break}else e(b,c);c=c.sibling}a=Pa(a,b.internalContextTag,k);a[\"return\"]=b;b=a}return h(b)}if(\"string\"===typeof a||\"number\"===typeof a)return a=\"\"+a,null!==c&&6===c.tag?(d(b,c.sibling),a=n(c,a,k)):(d(b,c),a=Ma(a,b.internalContextTag,k)),a[\"return\"]=b,b=a,h(b);if(jb(a))return M(b,c,a,k);if(ob(a))return G(b,c,a,k);f&&qb(b,a);if(\"undefined\"===typeof a)switch(b.tag){case 2:case 1:a=b.type,F(\"152\",a.displayName||\n\ta.name||\"Component\")}return d(b,c)}}var xb=wb(!0,!0),yb=wb(!1,!0),zb=wb(!1,!1);\n\tfunction Ab(b,a,e,d,l){function n(b,a,c){m(b,a,c,a.expirationTime)}function m(b,a,c,f){a.child=null===b?zb(a,a.child,c,f):b.child===a.child?xb(a,a.child,c,f):yb(a,a.child,c,f)}function h(b,a){var c=a.ref;null===c||b&&b.ref===c||(a.effectTag|=128)}function k(b,a,c,f){h(b,a);if(!c)return f&&Ca(a,!1),y(b,a);c=a.stateNode;fa.current=a;var g=c.render();a.effectTag|=1;n(b,a,g);a.memoizedState=c.state;a.memoizedProps=c.props;f&&Ca(a,!0);return a.child}function u(b){var a=b.stateNode;a.pendingContext?za(b,\n\ta.pendingContext,a.pendingContext!==a.context):a.context&&za(b,a.context,!1);D(b,a.containerInfo)}function y(b,a){null!==b&&a.child!==b.child?F(\"153\"):void 0;if(null!==a.child){b=a.child;var c=Da(b,b.pendingProps,b.expirationTime);a.child=c;for(c[\"return\"]=a;null!==b.sibling;)b=b.sibling,c=c.sibling=Da(b,b.pendingProps,b.expirationTime),c[\"return\"]=a;c.sibling=null}return a.child}function A(b,a){switch(a.tag){case 3:u(a);break;case 2:Ba(a);break;case 4:D(a,a.stateNode.containerInfo)}return null}var v=\n\tb.shouldSetTextContent,w=b.useSyncScheduling,C=b.shouldDeprioritizeSubtree,I=a.pushHostContext,D=a.pushHostContainer,M=e.enterHydrationState,G=e.resetHydrationState,r=e.tryToClaimNextHydratableInstance;b=hb(d,l,function(b,a){b.memoizedProps=a},function(b,a){b.memoizedState=a});var c=b.adoptClassInstance,f=b.constructClassInstance,x=b.mountClassInstance,Fa=b.updateClassInstance;return{beginWork:function(b,a,e){if(0===a.expirationTime||a.expirationTime>e)return A(b,a);switch(a.tag){case 0:null!==b?\n\tF(\"155\"):void 0;var d=a.type,g=a.pendingProps,m=va(a);m=xa(a,m);d=d(g,m);a.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(a.tag=2,g=Ba(a),c(a,d),x(a,e),a=k(b,a,!0,g)):(a.tag=1,n(b,a,d),a.memoizedProps=g,a=a.child);return a;case 1:a:{g=a.type;e=a.pendingProps;d=a.memoizedProps;if(Q.current)null===e&&(e=d);else if(null===e||d===e){a=y(b,a);break a}d=va(a);d=xa(a,d);g=g(e,d);a.effectTag|=1;n(b,a,g);a.memoizedProps=e;a=a.child}return a;case 2:return g=Ba(a),d=void 0,null===\n\tb?a.stateNode?F(\"153\"):(f(a,a.pendingProps),x(a,e),d=!0):d=Fa(b,a,e),k(b,a,d,g);case 3:return u(a),g=a.updateQueue,null!==g?(d=a.memoizedState,g=fb(b,a,g,null,null,e),d===g?(G(),a=y(b,a)):(d=g.element,m=a.stateNode,(null===b||null===b.child)&&m.hydrate&&M(a)?(a.effectTag|=2,a.child=zb(a,a.child,d,e)):(G(),n(b,a,d)),a.memoizedState=g,a=a.child)):(G(),a=y(b,a)),a;case 5:I(a);null===b&&r(a);g=a.type;var l=a.memoizedProps;d=a.pendingProps;null===d&&(d=l,null===d?F(\"154\"):void 0);m=null!==b?b.memoizedProps:\n\tnull;Q.current||null!==d&&l!==d?(l=d.children,v(g,d)?l=null:m&&v(g,m)&&(a.effectTag|=16),h(b,a),2147483647!==e&&!w&&C(g,d)?(a.expirationTime=2147483647,a=null):(n(b,a,l),a.memoizedProps=d,a=a.child)):a=y(b,a);return a;case 6:return null===b&&r(a),b=a.pendingProps,null===b&&(b=a.memoizedProps),a.memoizedProps=b,null;case 8:a.tag=7;case 7:g=a.pendingProps;if(Q.current)null===g&&(g=b&&b.memoizedProps,null===g?F(\"154\"):void 0);else if(null===g||a.memoizedProps===g)g=a.memoizedProps;d=g.children;a.stateNode=\n\tnull===b?zb(a,a.stateNode,d,e):b.child===a.child?xb(a,a.stateNode,d,e):yb(a,a.stateNode,d,e);a.memoizedProps=g;return a.stateNode;case 9:return null;case 4:a:{D(a,a.stateNode.containerInfo);g=a.pendingProps;if(Q.current)null===g&&(g=b&&b.memoizedProps,null==g?F(\"154\"):void 0);else if(null===g||a.memoizedProps===g){a=y(b,a);break a}null===b?a.child=yb(a,a.child,g,e):n(b,a,g);a.memoizedProps=g;a=a.child}return a;case 10:a:{e=a.pendingProps;if(Q.current)null===e&&(e=a.memoizedProps);else if(null===e||\n\ta.memoizedProps===e){a=y(b,a);break a}n(b,a,e);a.memoizedProps=e;a=a.child}return a;default:F(\"156\")}},beginFailedWork:function(a,b,c){switch(b.tag){case 2:Ba(b);break;case 3:u(b);break;default:F(\"157\")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return A(a,b);b.firstEffect=null;b.lastEffect=null;m(a,b,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\n\tfunction Bb(b,a,e){function d(a){a.effectTag|=4}var l=b.createInstance,n=b.createTextInstance,m=b.appendInitialChild,h=b.finalizeInitialChildren,k=b.prepareUpdate,u=b.persistence,y=a.getRootHostContainer,A=a.popHostContext,v=a.getHostContext,w=a.popHostContainer,C=e.prepareToHydrateHostInstance,I=e.prepareToHydrateHostTextInstance,D=e.popHydrationState,M=void 0,G=void 0,r=void 0;b.mutation?(M=function(){},G=function(a,b,e){(b.updateQueue=e)&&d(b)},r=function(a,b,e,h){e!==h&&d(b)}):u?F(\"235\"):F(\"236\");\n\treturn{completeWork:function(a,b,e){var c=b.pendingProps;if(null===c)c=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===e)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return ya(b),null;case 3:w(b);N(Q,b);N(P,b);c=b.stateNode;c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null);if(null===a||null===a.child)D(b),b.effectTag&=-3;M(b);return null;case 5:A(b);e=y();var f=b.type;if(null!==a&&null!=b.stateNode){var g=a.memoizedProps,x=b.stateNode,u=v();x=\n\tk(x,f,g,c,e,u);G(a,b,x,f,g,c,e);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?F(\"166\"):void 0,null;a=v();if(D(b))C(b,e,a)&&d(b);else{a=l(f,c,e,a,b);a:for(g=b.child;null!==g;){if(5===g.tag||6===g.tag)m(a,g.stateNode);else if(4!==g.tag&&null!==g.child){g.child[\"return\"]=g;g=g.child;continue}if(g===b)break;for(;null===g.sibling;){if(null===g[\"return\"]||g[\"return\"]===b)break a;g=g[\"return\"]}g.sibling[\"return\"]=g[\"return\"];g=g.sibling}h(a,f,c,e)&&d(b);b.stateNode=a}null!==b.ref&&\n\t(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)r(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?F(\"166\"):void 0,null;a=y();e=v();D(b)?I(b)&&d(b):b.stateNode=n(c,a,e,b)}return null;case 7:(c=b.memoizedProps)?void 0:F(\"165\");b.tag=8;f=[];a:for((g=b.stateNode)&&(g[\"return\"]=b);null!==g;){if(5===g.tag||6===g.tag||4===g.tag)F(\"247\");else if(9===g.tag)f.push(g.type);else if(null!==g.child){g.child[\"return\"]=g;g=g.child;continue}for(;null===g.sibling;){if(null===\n\tg[\"return\"]||g[\"return\"]===b)break a;g=g[\"return\"]}g.sibling[\"return\"]=g[\"return\"];g=g.sibling}g=c.handler;c=g(c.props,f);b.child=xb(b,null!==a?a.child:null,c,e);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return w(b),M(b),null;case 0:F(\"167\");default:F(\"156\")}}}}\n\tfunction Cb(b,a){function e(b){var c=b.ref;if(null!==c)try{c(null)}catch(f){a(b,f)}}function d(b){\"function\"===typeof Va&&Va(b);switch(b.tag){case 2:e(b);var c=b.stateNode;if(\"function\"===typeof c.componentWillUnmount)try{c.props=b.memoizedProps,c.state=b.memoizedState,c.componentWillUnmount()}catch(f){a(b,f)}break;case 5:e(b);break;case 7:l(b.stateNode);break;case 4:k&&m(b)}}function l(b){for(var a=b;;)if(d(a),null===a.child||k&&4===a.tag){if(a===b)break;for(;null===a.sibling;){if(null===a[\"return\"]||\n\ta[\"return\"]===b)return;a=a[\"return\"]}a.sibling[\"return\"]=a[\"return\"];a=a.sibling}else a.child[\"return\"]=a,a=a.child}function n(b){return 5===b.tag||3===b.tag||4===b.tag}function m(b){for(var a=b,f=!1,e=void 0,h=void 0;;){if(!f){f=a[\"return\"];a:for(;;){null===f?F(\"160\"):void 0;switch(f.tag){case 5:e=f.stateNode;h=!1;break a;case 3:e=f.stateNode.containerInfo;h=!0;break a;case 4:e=f.stateNode.containerInfo;h=!0;break a}f=f[\"return\"]}f=!0}if(5===a.tag||6===a.tag)l(a),h?G(e,a.stateNode):M(e,a.stateNode);\n\telse if(4===a.tag?e=a.stateNode.containerInfo:d(a),null!==a.child){a.child[\"return\"]=a;a=a.child;continue}if(a===b)break;for(;null===a.sibling;){if(null===a[\"return\"]||a[\"return\"]===b)return;a=a[\"return\"];4===a.tag&&(f=!1)}a.sibling[\"return\"]=a[\"return\"];a=a.sibling}}var h=b.getPublicInstance,k=b.mutation;b=b.persistence;k||(b?F(\"235\"):F(\"236\"));var u=k.commitMount,y=k.commitUpdate,A=k.resetTextContent,v=k.commitTextUpdate,w=k.appendChild,C=k.appendChildToContainer,I=k.insertBefore,D=k.insertInContainerBefore,\n\tM=k.removeChild,G=k.removeChildFromContainer;return{commitResetTextContent:function(b){A(b.stateNode)},commitPlacement:function(b){a:{for(var a=b[\"return\"];null!==a;){if(n(a)){var f=a;break a}a=a[\"return\"]}F(\"160\");f=void 0}var e=a=void 0;switch(f.tag){case 5:a=f.stateNode;e=!1;break;case 3:a=f.stateNode.containerInfo;e=!0;break;case 4:a=f.stateNode.containerInfo;e=!0;break;default:F(\"161\")}f.effectTag&16&&(A(a),f.effectTag&=-17);a:b:for(f=b;;){for(;null===f.sibling;){if(null===f[\"return\"]||n(f[\"return\"])){f=\n\tnull;break a}f=f[\"return\"]}f.sibling[\"return\"]=f[\"return\"];for(f=f.sibling;5!==f.tag&&6!==f.tag;){if(f.effectTag&2)continue b;if(null===f.child||4===f.tag)continue b;else f.child[\"return\"]=f,f=f.child}if(!(f.effectTag&2)){f=f.stateNode;break a}}for(var d=b;;){if(5===d.tag||6===d.tag)f?e?D(a,d.stateNode,f):I(a,d.stateNode,f):e?C(a,d.stateNode):w(a,d.stateNode);else if(4!==d.tag&&null!==d.child){d.child[\"return\"]=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d[\"return\"]||d[\"return\"]===\n\tb)return;d=d[\"return\"]}d.sibling[\"return\"]=d[\"return\"];d=d.sibling}},commitDeletion:function(b){m(b);b[\"return\"]=null;b.child=null;b.alternate&&(b.alternate.child=null,b.alternate[\"return\"]=null)},commitWork:function(b,a){switch(a.tag){case 2:break;case 5:var c=a.stateNode;if(null!=c){var e=a.memoizedProps;b=null!==b?b.memoizedProps:e;var d=a.type,h=a.updateQueue;a.updateQueue=null;null!==h&&y(c,h,d,b,e,a)}break;case 6:null===a.stateNode?F(\"162\"):void 0;c=a.memoizedProps;v(a.stateNode,null!==b?b.memoizedProps:\n\tc,c);break;case 3:break;default:F(\"163\")}},commitLifeCycles:function(b,a){switch(a.tag){case 2:var c=a.stateNode;if(a.effectTag&4)if(null===b)c.props=a.memoizedProps,c.state=a.memoizedState,c.componentDidMount();else{var e=b.memoizedProps;b=b.memoizedState;c.props=a.memoizedProps;c.state=a.memoizedState;c.componentDidUpdate(e,b)}a=a.updateQueue;null!==a&&gb(a,c);break;case 3:c=a.updateQueue;null!==c&&gb(c,null!==a.child?a.child.stateNode:null);break;case 5:c=a.stateNode;null===b&&a.effectTag&4&&u(c,\n\ta.type,a.memoizedProps,a);break;case 6:break;case 4:break;default:F(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var e=a.stateNode;switch(a.tag){case 5:b(h(e));break;default:b(e)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var Db={};\n\tfunction Gb(b){function a(a){a===Db?F(\"174\"):void 0;return a}var e=b.getChildHostContext,d=b.getRootHostContext,l={current:Db},n={current:Db},m={current:Db};return{getHostContext:function(){return a(l.current)},getRootHostContainer:function(){return a(m.current)},popHostContainer:function(a){N(l,a);N(n,a);N(m,a)},popHostContext:function(a){n.current===a&&(N(l,a),N(n,a))},pushHostContainer:function(a,b){O(m,b,a);b=d(b);O(n,a,a);O(l,b,a)},pushHostContext:function(b){var d=a(m.current),h=a(l.current);\n\td=e(h,b.type,d);h!==d&&(O(n,b,b),O(l,d,b))},resetHostContainer:function(){l.current=Db;m.current=Db}}}\n\tfunction Hb(b){function a(a,b){var e=new S(5,null,0);e.type=\"DELETED\";e.stateNode=b;e[\"return\"]=a;e.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=e,a.lastEffect=e):a.firstEffect=a.lastEffect=e}function e(a,b){switch(a.tag){case 5:return n(b,a.type,a.pendingProps);case 6:return m(b,a.pendingProps);default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];A=a}var l=b.shouldSetTextContent;b=b.hydration;if(!b)return{enterHydrationState:function(){return!1},\n\tresetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){F(\"175\")},prepareToHydrateHostTextInstance:function(){F(\"176\")},popHydrationState:function(){return!1}};var n=b.canHydrateInstance,m=b.canHydrateTextInstance,h=b.getNextHydratableSibling,k=b.getFirstHydratableChild,u=b.hydrateInstance,y=b.hydrateTextInstance,A=null,v=null,w=!1;return{enterHydrationState:function(a){v=k(a.stateNode.containerInfo);A=a;return w=!0},resetHydrationState:function(){v=\n\tA=null;w=!1},tryToClaimNextHydratableInstance:function(b){if(w){var d=v;if(d){if(!e(b,d)){d=h(d);if(!d||!e(b,d)){b.effectTag|=2;w=!1;A=b;return}a(A,v)}b.stateNode=d;A=b;v=k(d)}else b.effectTag|=2,w=!1,A=b}},prepareToHydrateHostInstance:function(a,b,e){b=u(a.stateNode,a.type,a.memoizedProps,b,e,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return y(a.stateNode,a.memoizedProps,a)},popHydrationState:function(b){if(b!==A)return!1;if(!w)return d(b),w=!0,!1;var e=\n\tb.type;if(5!==b.tag||\"head\"!==e&&\"body\"!==e&&!l(e,b.memoizedProps))for(e=v;e;)a(b,e),e=h(e);d(b);v=A?h(b.stateNode):null;return!0}}}\n\tfunction Ib(b){function a(a){Ga=Y=!0;var b=a.stateNode;b.current===a?F(\"177\"):void 0;b.isReadyForCommit=!1;fa.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;Mb();for(q=c;null!==q;){var e=!1,d=void 0;try{for(;null!==q;){var g=q.effectTag;g&16&&Nb(q);if(g&128){var k=q.alternate;null!==k&&Ob(k)}switch(g&-242){case 2:sb(q);q.effectTag&=-3;break;case 6:sb(q);q.effectTag&=-3;tb(q.alternate,q);break;case 4:tb(q.alternate,\n\tq);break;case 8:Ya=!0,Pb(q),Ya=!1}q=q.nextEffect}}catch(Za){e=!0,d=Za}e&&(null===q?F(\"178\"):void 0,h(q,d),null!==q&&(q=q.nextEffect))}Qb();b.current=a;for(q=c;null!==q;){c=!1;e=void 0;try{for(;null!==q;){var X=q.effectTag;X&36&&Rb(q.alternate,q);X&128&&Sb(q);if(X&64)switch(d=q,g=void 0,null!==K&&(g=K.get(d),K[\"delete\"](d),null==g&&null!==d.alternate&&(d=d.alternate,g=K.get(d),K[\"delete\"](d))),null==g?F(\"184\"):void 0,d.tag){case 2:d.stateNode.componentDidCatch(g.error,{componentStack:g.componentStack});\n\tbreak;case 3:null===R&&(R=g.error);break;default:F(\"157\")}var m=q.nextEffect;q.nextEffect=null;q=m}}catch(Za){c=!0,e=Za}c&&(null===q?F(\"178\"):void 0,h(q,e),null!==q&&(q=q.nextEffect))}Y=Ga=!1;\"function\"===typeof Ua&&Ua(a.stateNode);T&&(T.forEach(C),T=null);null!==R&&(a=R,R=null,f(a));b=b.current.expirationTime;0===b&&(Z=K=null);return b}function e(a){for(;;){var b=Fb(a.alternate,a,H),c=a[\"return\"],e=a.sibling;var d=a;if(2147483647===H||2147483647!==d.expirationTime){if(2!==d.tag&&3!==d.tag)var f=\n\t0;else f=d.updateQueue,f=null===f?0:f.expirationTime;for(var g=d.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;d.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==e)return e;if(null!==\n\tc)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=t(a.alternate,a,H);null===b&&(b=e(a));fa.current=null;return b}function l(a){var b=Eb(a.alternate,a,H);null===b&&(b=e(a));fa.current=null;return b}function n(a){if(null!==K){if(!(0===H||H>a))if(H<=$a)for(;null!==B;)B=k(B)?l(B):d(B);else for(;null!==B&&!c();)B=k(B)?l(B):d(B)}else if(!(0===H||H>a))if(H<=$a)for(;null!==B;)B=d(B);else for(;null!==B&&!c();)B=d(B)}function m(a,b){Y?F(\"243\"):void 0;Y=!0;a.isReadyForCommit=\n\t!1;if(a!==pa||b!==H||null===B){for(;-1<L;)ta[L]=null,L--;ua=p;P.current=p;Q.current=!1;E();pa=a;H=b;B=Da(pa.current,null,b)}var c=!1,e=null;try{n(b)}catch(Xa){c=!0,e=Xa}for(;c;){if(qa){R=e;break}var d=B;if(null===d)qa=!0;else{var k=h(d,e);null===k?F(\"183\"):void 0;if(!qa){try{c=k;e=b;for(k=c;null!==d;){switch(d.tag){case 2:ya(d);break;case 5:g(d);break;case 3:z(d);break;case 4:z(d)}if(d===k||d.alternate===k)break;d=d[\"return\"]}B=l(c);n(e)}catch(Xa){c=!0;e=Xa;continue}break}}}b=R;qa=Y=!1;R=null;null!==\n\tb&&f(b);return a.isReadyForCommit?a.current.alternate:null}function h(a,b){var c=fa.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,u(a)&&(qa=!0);else for(var g=a[\"return\"];null!==g&&null===c;){2===g.tag?\"function\"===typeof g.stateNode.componentDidCatch&&(d=!0,f=ia(g),c=g,e=!0):3===g.tag&&(c=g);if(u(g)){if(Ya||null!==T&&(T.has(g)||null!==g.alternate&&T.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===Z&&(Z=new Set);Z.add(c);var k=\"\";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var h=\n\tg._debugOwner,m=g._debugSource;var l=ia(g);var X=null;h&&(X=ia(h));h=m;l=\"\\n    in \"+(l||\"Unknown\")+(h?\" (at \"+h.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+h.lineNumber+\")\":X?\" (created by \"+X+\")\":\"\");break a;default:l=\"\"}k+=l;g=g[\"return\"]}while(g);g=k;a=ia(a);null===K&&(K=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};K.set(c,b);try{console.error(b.error)}catch(Tb){console.error(Tb)}Ga?(null===T&&(T=new Set),\n\tT.add(c)):C(c);return c}null===R&&(R=b);return null}function k(a){return null!==K&&(K.has(a)||null!==a.alternate&&K.has(a.alternate))}function u(a){return null!==Z&&(Z.has(a)||null!==a.alternate&&Z.has(a.alternate))}function y(){return 20*(((I()+100)/20|0)+1)}function A(a){return 0!==V?V:Y?Ga?1:H:!Ub||a.internalContextTag&1?y():1}function v(a,b){return w(a,b,!1)}function w(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||\n\ta.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a[\"return\"])if(3===a.tag){var c=a.stateNode;!Y&&c===pa&&b<=H&&(B=pa=null,H=0);var d=b;Ha>Vb&&F(\"185\");if(null===c.nextScheduledRoot)c.remainingExpirationTime=d,null===J?(aa=J=c,c.nextScheduledRoot=c):(J=J.nextScheduledRoot=c,J.nextScheduledRoot=aa);else{var e=c.remainingExpirationTime;if(0===e||d<e)c.remainingExpirationTime=d}ha||(W?Ia&&r(c,1):1===d?G(1,null):ra||(ra=!0,ub(M)))}else break;a=a[\"return\"]}}function C(a){w(a,1,!0)}\n\tfunction I(){return $a=((vb()-Wb)/10|0)+2}function D(){var a=0,b=null;if(null!==J)for(var c=J,d=aa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===J?F(\"244\"):void 0;if(d===d.nextScheduledRoot){aa=J=d.nextScheduledRoot=null;break}else if(d===aa)aa=e=d.nextScheduledRoot,J.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===J){J=c;J.nextScheduledRoot=aa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===\n\ta||e<a)a=e,b=d;if(d===J)break;c=d;d=d.nextScheduledRoot}}c=ba;null!==c&&c===b?Ha++:Ha=0;ba=b;Ja=a}function M(a){G(0,a)}function G(a,b){sa=b;for(D();null!==ba&&0!==Ja&&(0===a||Ja<=a)&&!ab;)r(ba,Ja),D();null!==sa&&(ra=!1);null===ba||ra||(ra=!0,ub(M));sa=null;ab=!1;Ha=0;if(Ka)throw a=bb,bb=null,Ka=!1,a;}function r(b,d){ha?F(\"245\"):void 0;ha=!0;if(d<=I()){var e=b.finishedWork;null!==e?(b.finishedWork=null,b.remainingExpirationTime=a(e)):(b.finishedWork=null,e=m(b,d),null!==e&&(b.remainingExpirationTime=\n\ta(e)))}else e=b.finishedWork,null!==e?(b.finishedWork=null,b.remainingExpirationTime=a(e)):(b.finishedWork=null,e=m(b,d),null!==e&&(c()?b.finishedWork=e:b.remainingExpirationTime=a(e)));ha=!1}function c(){return null===sa||sa.timeRemaining()>Xb?!1:ab=!0}function f(a){null===ba?F(\"246\"):void 0;ba.remainingExpirationTime=0;Ka||(Ka=!0,bb=a)}var x=Gb(b),Fa=Hb(b),z=x.popHostContainer,g=x.popHostContext,E=x.resetHostContainer,rb=Ab(b,x,Fa,v,A),t=rb.beginWork,Eb=rb.beginFailedWork,Fb=Bb(b,x,Fa).completeWork;\n\tx=Cb(b,h);var Nb=x.commitResetTextContent,sb=x.commitPlacement,Pb=x.commitDeletion,tb=x.commitWork,Rb=x.commitLifeCycles,Sb=x.commitAttachRef,Ob=x.commitDetachRef,vb=b.now,ub=b.scheduleDeferredCallback,Ub=b.useSyncScheduling,Mb=b.prepareForCommit,Qb=b.resetAfterCommit,Wb=vb(),$a=2,V=0,Y=!1,B=null,pa=null,H=0,q=null,K=null,Z=null,T=null,R=null,qa=!1,Ga=!1,Ya=!1,aa=null,J=null,ra=!1,ha=!1,ba=null,Ja=0,ab=!1,Ka=!1,bb=null,sa=null,W=!1,Ia=!1,Vb=1E3,Ha=0,Xb=1;return{computeAsyncExpiration:y,computeExpirationForFiber:A,\n\tscheduleWork:v,batchedUpdates:function(a,b){var c=W;W=!0;try{return a(b)}finally{(W=c)||ha||G(1,null)}},unbatchedUpdates:function(a){if(W&&!Ia){Ia=!0;try{return a()}finally{Ia=!1}}return a()},flushSync:function(a){var b=W;W=!0;try{a:{var c=V;V=1;try{var d=a();break a}finally{V=c}d=void 0}return d}finally{W=b,ha?F(\"187\"):void 0,G(1,null)}},deferredUpdates:function(a){var b=V;V=y();try{return a()}finally{V=b}}}}\n\tfunction Jb(b){function a(a){a=na(a);return null===a?null:a.stateNode}var e=b.getPublicInstance;b=Ib(b);var d=b.computeAsyncExpiration,l=b.computeExpirationForFiber,n=b.scheduleWork;return{createContainer:function(a,b){var d=new S(3,null,0);a={current:d,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return d.stateNode=a},updateContainer:function(a,b,e,u){var h=b.current;if(e){e=\n\te._reactInternalFiber;var k;b:{2===ja(e)&&2===e.tag?void 0:F(\"170\");for(k=e;3!==k.tag;){if(wa(k)){k=k.stateNode.__reactInternalMemoizedMergedChildContext;break b}(k=k[\"return\"])?void 0:F(\"171\")}k=k.stateNode.context}e=wa(e)?Aa(e,k):k}else e=p;null===b.context?b.context=e:b.pendingContext=e;b=u;b=void 0===b?null:b;u=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():l(h);db(h,{expirationTime:u,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,\n\tnextCallback:null,next:null});n(h,u)},batchedUpdates:b.batchedUpdates,unbatchedUpdates:b.unbatchedUpdates,deferredUpdates:b.deferredUpdates,flushSync:b.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return e(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:a,findHostInstanceWithNoPortals:function(a){a=oa(a);return null===a?null:a.stateNode},injectIntoDevTools:function(b){var d=b.findFiberByHostInstance;return Ta(ca({},\n\tb,{findHostInstanceByFiber:function(b){return a(b)},findFiberByHostInstance:function(a){return d?d(a):null}}))}}}var Kb=Object.freeze({default:Jb}),Lb=Kb&&Jb||Kb;module.exports=Lb[\"default\"]?Lb[\"default\"]:Lb;\n\t  return ($$$reconciler || ($$$reconciler = module.exports))(config);\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(35);\n\t} else {\n\t  module.exports = require('./cjs/react-reconciler.development.js');\n\t}\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.2.0\n\t * react.production.min.js\n\t *\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';var m=__webpack_require__(6),n=__webpack_require__(3),p=__webpack_require__(2),q=\"function\"===typeof Symbol&&Symbol[\"for\"],r=q?Symbol[\"for\"](\"react.element\"):60103,t=q?Symbol[\"for\"](\"react.call\"):60104,u=q?Symbol[\"for\"](\"react.return\"):60105,v=q?Symbol[\"for\"](\"react.portal\"):60106,w=q?Symbol[\"for\"](\"react.fragment\"):60107,x=\"function\"===typeof Symbol&&Symbol.iterator;\n\tfunction y(a){for(var b=arguments.length-1,e=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,c=0;c<b;c++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[c+1]);b=Error(e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}\n\tvar z={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function A(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}A.prototype.isReactComponent={};A.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?y(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};A.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\n\tfunction B(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}function C(){}C.prototype=A.prototype;var D=B.prototype=new C;D.constructor=B;m(D,A.prototype);D.isPureReactComponent=!0;function E(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}var F=E.prototype=new C;F.constructor=E;m(F,A.prototype);F.unstable_isAsyncReactComponent=!0;F.render=function(){return this.props.children};var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\n\tfunction J(a,b,e){var c,d={},g=null,k=null;if(null!=b)for(c in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)H.call(b,c)&&!I.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var h=Array(f),l=0;l<f;l++)h[l]=arguments[l+2];d.children=h}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:r,type:a,key:g,ref:k,props:d,_owner:G.current}}function K(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===r}\n\tfunction escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var L=/\\/+/g,M=[];function N(a,b,e,c){if(M.length){var d=M.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function O(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>M.length&&M.push(a)}\n\tfunction P(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case r:case t:case u:case v:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+Q(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+Q(d,k);g+=P(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=x&&a[x]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=\n\tf.call(a),k=0;!(d=a.next()).done;)d=d.value,f=b+Q(d,k++),g+=P(d,f,e,c);else\"object\"===d&&(e=\"\"+a,y(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function R(a,b){a.func.call(a.context,b,a.count++)}\n\tfunction S(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?T(a,c,e,p.thatReturnsArgument):null!=a&&(K(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(L,\"$\\x26/\")+\"/\")+e,a={$$typeof:r,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function T(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(L,\"$\\x26/\")+\"/\");b=N(b,g,c,d);null==a||P(a,\"\",S,b);O(b)}\n\tvar U={Children:{map:function(a,b,e){if(null==a)return a;var c=[];T(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=N(null,null,b,e);null==a||P(a,\"\",R,b);O(b)},count:function(a){return null==a?0:P(a,\"\",p.thatReturnsNull,null)},toArray:function(a){var b=[];T(a,b,null,p.thatReturnsArgument);return b},only:function(a){K(a)?void 0:y(\"143\");return a}},Component:A,PureComponent:B,unstable_AsyncComponent:E,Fragment:w,createElement:J,cloneElement:function(a,b,e){var c=m({},a.props),\n\td=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)H.call(b,h)&&!I.hasOwnProperty(h)&&(c[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)c.children=e;else if(1<h){f=Array(h);for(var l=0;l<h;l++)f[l]=arguments[l+2];c.children=f}return{$$typeof:r,type:a.type,key:d,ref:g,props:c,_owner:k}},createFactory:function(a){var b=J.bind(null,a);b.type=a;return b},\n\tisValidElement:K,version:\"16.2.0\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:G,assign:m}},V=Object.freeze({default:U}),W=V&&U||V;module.exports=W[\"default\"]?W[\"default\"]:W;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/media/monster-marbles-sprite-sheets.edcc46e8.jpg\";\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.8281b6ce.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/declarative-canvas-react-konva/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6c73281eaeeddc77e76b","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 1\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyFunction.js\n// module id = 2\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyObject.js\n// module id = 3\n// module chunks = 0","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('mobx'), require('react'), require('react-dom')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'mobx', 'react', 'react-dom'], factory) :\n\t(factory((global.mobxReact = {}),global.mobx,global.React,global.ReactDOM));\n}(this, (function (exports,mobx,react,reactDom) { 'use strict';\n\n// These functions can be stubbed out in specific environments\nvar unstable_batchedUpdates$1 = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar EventEmitter = function () {\n    function EventEmitter() {\n        classCallCheck(this, EventEmitter);\n        this.listeners = [];\n    }\n\n    createClass(EventEmitter, [{\n        key: \"on\",\n        value: function on(cb) {\n            var _this = this;\n\n            this.listeners.push(cb);\n            return function () {\n                var index = _this.listeners.indexOf(cb);\n                if (index !== -1) _this.listeners.splice(index, 1);\n            };\n        }\n    }, {\n        key: \"emit\",\n        value: function emit(data) {\n            this.listeners.forEach(function (fn) {\n                return fn(data);\n            });\n        }\n    }]);\n    return EventEmitter;\n}();\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n'use strict';\n\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\n\nvar defineProperty$1 = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\nvar hoistNonReactStatics = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n\n        var keys = getOwnPropertyNames(sourceComponent);\n\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try { // Avoid failures from read-only properties\n                    defineProperty$1(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n\n        return targetComponent;\n    }\n\n    return targetComponent;\n};\n\n// Copied from React.PropTypes\nfunction createChainableTypeChecker(validate) {\n    function checkType(isRequired, props, propName, componentName, location, propFullName) {\n        for (var _len = arguments.length, rest = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n            rest[_key - 6] = arguments[_key];\n        }\n\n        return mobx.untracked(function () {\n            componentName = componentName || \"<<anonymous>>\";\n            propFullName = propFullName || propName;\n            if (props[propName] == null) {\n                if (isRequired) {\n                    var actual = props[propName] === null ? \"null\" : \"undefined\";\n                    return new Error(\"The \" + location + \" `\" + propFullName + \"` is marked as required \" + \"in `\" + componentName + \"`, but its value is `\" + actual + \"`.\");\n                }\n                return null;\n            } else {\n                return validate.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));\n            }\n        });\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n}\n\n// Copied from React.PropTypes\nfunction isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === \"symbol\") {\n        return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n        return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n        return true;\n    }\n\n    return false;\n}\n\n// Copied from React.PropTypes\nfunction getPropType(propValue) {\n    var propType = typeof propValue === \"undefined\" ? \"undefined\" : _typeof(propValue);\n    if (Array.isArray(propValue)) {\n        return \"array\";\n    }\n    if (propValue instanceof RegExp) {\n        // Old webkits (at least until Android 4.0) return 'function' rather than\n        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n        // passes PropTypes.object.\n        return \"object\";\n    }\n    if (isSymbol(propType, propValue)) {\n        return \"symbol\";\n    }\n    return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// Copied from React.PropTypes\nfunction getPreciseType(propValue) {\n    var propType = getPropType(propValue);\n    if (propType === \"object\") {\n        if (propValue instanceof Date) {\n            return \"date\";\n        } else if (propValue instanceof RegExp) {\n            return \"regexp\";\n        }\n    }\n    return propType;\n}\n\nfunction createObservableTypeCheckerCreator(allowNativeType, mobxType) {\n    return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n        return mobx.untracked(function () {\n            if (allowNativeType) {\n                if (getPropType(props[propName]) === mobxType.toLowerCase()) return null;\n            }\n            var mobxChecker = void 0;\n            switch (mobxType) {\n                case \"Array\":\n                    mobxChecker = mobx.isObservableArray;\n                    break;\n                case \"Object\":\n                    mobxChecker = mobx.isObservableObject;\n                    break;\n                case \"Map\":\n                    mobxChecker = mobx.isObservableMap;\n                    break;\n                default:\n                    throw new Error(\"Unexpected mobxType: \" + mobxType);\n            }\n            var propValue = props[propName];\n            if (!mobxChecker(propValue)) {\n                var preciseType = getPreciseType(propValue);\n                var nativeTypeExpectationMessage = allowNativeType ? \" or javascript `\" + mobxType.toLowerCase() + \"`\" : \"\";\n                return new Error(\"Invalid prop `\" + propFullName + \"` of type `\" + preciseType + \"` supplied to\" + \" `\" + componentName + \"`, expected `mobx.Observable\" + mobxType + \"`\" + nativeTypeExpectationMessage + \".\");\n            }\n            return null;\n        });\n    });\n}\n\nfunction createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {\n    return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n        for (var _len2 = arguments.length, rest = Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {\n            rest[_key2 - 5] = arguments[_key2];\n        }\n\n        return mobx.untracked(function () {\n            if (typeof typeChecker !== \"function\") {\n                return new Error(\"Property `\" + propFullName + \"` of component `\" + componentName + \"` has \" + \"invalid PropType notation.\");\n            }\n            var error = createObservableTypeCheckerCreator(allowNativeType, \"Array\")(props, propName, componentName);\n            if (error instanceof Error) return error;\n            var propValue = props[propName];\n            for (var i = 0; i < propValue.length; i++) {\n                error = typeChecker.apply(undefined, [propValue, i, componentName, location, propFullName + \"[\" + i + \"]\"].concat(rest));\n                if (error instanceof Error) return error;\n            }\n            return null;\n        });\n    });\n}\n\nvar observableArray = createObservableTypeCheckerCreator(false, \"Array\");\nvar observableArrayOf = createObservableArrayOfTypeChecker.bind(null, false);\nvar observableMap = createObservableTypeCheckerCreator(false, \"Map\");\nvar observableObject = createObservableTypeCheckerCreator(false, \"Object\");\nvar arrayOrObservableArray = createObservableTypeCheckerCreator(true, \"Array\");\nvar arrayOrObservableArrayOf = createObservableArrayOfTypeChecker.bind(null, true);\nvar objectOrObservableObject = createObservableTypeCheckerCreator(true, \"Object\");\n\n\n\nvar propTypes = Object.freeze({\n\tobservableArray: observableArray,\n\tobservableArrayOf: observableArrayOf,\n\tobservableMap: observableMap,\n\tobservableObject: observableObject,\n\tarrayOrObservableArray: arrayOrObservableArray,\n\tarrayOrObservableArrayOf: arrayOrObservableArrayOf,\n\tobjectOrObservableObject: objectOrObservableObject\n});\n\nfunction isStateless(component) {\n    // `function() {}` has prototype, but `() => {}` doesn't\n    // `() => {}` via Babel has prototype too.\n    return !(component.prototype && component.prototype.render);\n}\n\nvar injectorContextTypes = {\n    mobxStores: objectOrObservableObject\n};\nObject.seal(injectorContextTypes);\n\nvar proxiedInjectorProps = {\n    contextTypes: {\n        get: function get$$1() {\n            return injectorContextTypes;\n        },\n        set: function set$$1(_) {\n            console.warn(\"Mobx Injector: you are trying to attach `contextTypes` on an component decorated with `inject` (or `observer`) HOC. Please specify the contextTypes on the wrapped component instead. It is accessible through the `wrappedComponent`\");\n        },\n        configurable: true,\n        enumerable: false\n    },\n    isMobxInjector: {\n        value: true,\n        writable: true,\n        configurable: true,\n        enumerable: true\n    }\n\n    /**\n     * Store Injection\n     */\n};function createStoreInjector(grabStoresFn, component, injectNames) {\n    var _class, _temp2;\n\n    var displayName = \"inject-\" + (component.displayName || component.name || component.constructor && component.constructor.name || \"Unknown\");\n    if (injectNames) displayName += \"-with-\" + injectNames;\n\n    var Injector = (_temp2 = _class = function (_Component) {\n        inherits(Injector, _Component);\n\n        function Injector() {\n            var _ref;\n\n            var _temp, _this, _ret;\n\n            classCallCheck(this, Injector);\n\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Injector.__proto__ || Object.getPrototypeOf(Injector)).call.apply(_ref, [this].concat(args))), _this), _this.storeRef = function (instance) {\n                _this.wrappedInstance = instance;\n            }, _temp), possibleConstructorReturn(_this, _ret);\n        }\n\n        createClass(Injector, [{\n            key: \"render\",\n            value: function render() {\n                // Optimization: it might be more efficient to apply the mapper function *outside* the render method\n                // (if the mapper is a function), that could avoid expensive(?) re-rendering of the injector component\n                // See this test: 'using a custom injector is not too reactive' in inject.js\n                var newProps = {};\n                for (var key in this.props) {\n                    if (this.props.hasOwnProperty(key)) {\n                        newProps[key] = this.props[key];\n                    }\n                }var additionalProps = grabStoresFn(this.context.mobxStores || {}, newProps, this.context) || {};\n                for (var _key2 in additionalProps) {\n                    newProps[_key2] = additionalProps[_key2];\n                }\n\n                if (!isStateless(component)) {\n                    newProps.ref = this.storeRef;\n                }\n\n                return react.createElement(component, newProps);\n            }\n        }]);\n        return Injector;\n    }(react.Component), _class.displayName = displayName, _temp2);\n\n    // Static fields from component should be visible on the generated Injector\n\n    hoistNonReactStatics(Injector, component);\n\n    Injector.wrappedComponent = component;\n    Object.defineProperties(Injector, proxiedInjectorProps);\n\n    return Injector;\n}\n\nfunction grabStoresByName(storeNames) {\n    return function (baseStores, nextProps) {\n        storeNames.forEach(function (storeName) {\n            if (storeName in nextProps // prefer props over stores\n            ) return;\n            if (!(storeName in baseStores)) throw new Error(\"MobX injector: Store '\" + storeName + \"' is not available! Make sure it is provided by some Provider\");\n            nextProps[storeName] = baseStores[storeName];\n        });\n        return nextProps;\n    };\n}\n\n/**\n * higher order component that injects stores to a child.\n * takes either a varargs list of strings, which are stores read from the context,\n * or a function that manually maps the available stores from the context to props:\n * storesToProps(mobxStores, props, context) => newProps\n */\nfunction inject() /* fn(stores, nextProps) or ...storeNames */{\n    var grabStoresFn = void 0;\n    if (typeof arguments[0] === \"function\") {\n        grabStoresFn = arguments[0];\n        return function (componentClass) {\n            var injected = createStoreInjector(grabStoresFn, componentClass);\n            injected.isMobxInjector = false; // supress warning\n            // mark the Injector as observer, to make it react to expressions in `grabStoresFn`,\n            // see #111\n            injected = observer(injected);\n            injected.isMobxInjector = true; // restore warning\n            return injected;\n        };\n    } else {\n        var storeNames = [];\n        for (var i = 0; i < arguments.length; i++) {\n            storeNames[i] = arguments[i];\n        }grabStoresFn = grabStoresByName(storeNames);\n        return function (componentClass) {\n            return createStoreInjector(grabStoresFn, componentClass, storeNames.join(\"-\"));\n        };\n    }\n}\n\n/**\n * dev tool support\n */\nvar isDevtoolsEnabled = false;\n\nvar isUsingStaticRendering = false;\n\nvar warnedAboutObserverInjectDeprecation = false;\n\n// WeakMap<Node, Object>;\nvar componentByNodeRegistery = typeof WeakMap !== \"undefined\" ? new WeakMap() : undefined;\nvar renderReporter = new EventEmitter();\n\nfunction findDOMNode$2(component) {\n    if (reactDom.findDOMNode) {\n        try {\n            return reactDom.findDOMNode(component);\n        } catch (e) {\n            // findDOMNode will throw in react-test-renderer, see:\n            // See https://github.com/mobxjs/mobx-react/issues/216\n            // Is there a better heuristic?\n            return null;\n        }\n    }\n    return null;\n}\n\nfunction reportRendering(component) {\n    var node = findDOMNode$2(component);\n    if (node && componentByNodeRegistery) componentByNodeRegistery.set(node, component);\n\n    renderReporter.emit({\n        event: \"render\",\n        renderTime: component.__$mobRenderEnd - component.__$mobRenderStart,\n        totalTime: Date.now() - component.__$mobRenderStart,\n        component: component,\n        node: node\n    });\n}\n\nfunction trackComponents() {\n    if (typeof WeakMap === \"undefined\") throw new Error(\"[mobx-react] tracking components is not supported in this browser.\");\n    if (!isDevtoolsEnabled) isDevtoolsEnabled = true;\n}\n\nfunction useStaticRendering(useStaticRendering) {\n    isUsingStaticRendering = useStaticRendering;\n}\n\n/**\n * Errors reporter\n */\n\nvar errorsReporter = new EventEmitter();\n\n/**\n * Utilities\n */\n\nfunction patch(target, funcName) {\n    var runMixinFirst = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var base = target[funcName];\n    var mixinFunc = reactiveMixin[funcName];\n    var f = !base ? mixinFunc : runMixinFirst === true ? function () {\n        mixinFunc.apply(this, arguments);\n        base.apply(this, arguments);\n    } : function () {\n        base.apply(this, arguments);\n        mixinFunc.apply(this, arguments);\n    };\n\n    // MWE: ideally we freeze here to protect against accidental overwrites in component instances, see #195\n    // ...but that breaks react-hot-loader, see #231...\n    target[funcName] = f;\n}\n\nfunction isObjectShallowModified(prev, next) {\n    if (null == prev || null == next || (typeof prev === \"undefined\" ? \"undefined\" : _typeof(prev)) !== \"object\" || (typeof next === \"undefined\" ? \"undefined\" : _typeof(next)) !== \"object\") {\n        return prev !== next;\n    }\n    var keys = Object.keys(prev);\n    if (keys.length !== Object.keys(next).length) {\n        return true;\n    }\n    var key = void 0;\n    for (var i = keys.length - 1; i >= 0, key = keys[i]; i--) {\n        if (next[key] !== prev[key]) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * ReactiveMixin\n */\nvar reactiveMixin = {\n    componentWillMount: function componentWillMount() {\n        var _this = this;\n\n        if (isUsingStaticRendering === true) return;\n        // Generate friendly name for debugging\n        var initialName = this.displayName || this.name || this.constructor && (this.constructor.displayName || this.constructor.name) || \"<component>\";\n        var rootNodeID = this._reactInternalInstance && this._reactInternalInstance._rootNodeID;\n\n        /**\n         * If props are shallowly modified, react will render anyway,\n         * so atom.reportChanged() should not result in yet another re-render\n         */\n        var skipRender = false;\n        /**\n         * forceUpdate will re-assign this.props. We don't want that to cause a loop,\n         * so detect these changes\n         */\n        var isForcingUpdate = false;\n\n        function makePropertyObservableReference(propName) {\n            var valueHolder = this[propName];\n            var atom = new mobx.Atom(\"reactive \" + propName);\n            Object.defineProperty(this, propName, {\n                configurable: true,\n                enumerable: true,\n                get: function get$$1() {\n                    atom.reportObserved();\n                    return valueHolder;\n                },\n                set: function set$$1(v) {\n                    if (!isForcingUpdate && isObjectShallowModified(valueHolder, v)) {\n                        valueHolder = v;\n                        skipRender = true;\n                        atom.reportChanged();\n                        skipRender = false;\n                    } else {\n                        valueHolder = v;\n                    }\n                }\n            });\n        }\n\n        // make this.props an observable reference, see #124\n        makePropertyObservableReference.call(this, \"props\");\n        // make state an observable reference\n        makePropertyObservableReference.call(this, \"state\");\n\n        // wire up reactive render\n        var baseRender = this.render.bind(this);\n        var reaction = null;\n        var isRenderingPending = false;\n\n        var initialRender = function initialRender() {\n            reaction = new mobx.Reaction(initialName + \"#\" + rootNodeID + \".render()\", function () {\n                if (!isRenderingPending) {\n                    // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)\n                    // This unidiomatic React usage but React will correctly warn about this so we continue as usual\n                    // See #85 / Pull #44\n                    isRenderingPending = true;\n                    if (typeof _this.componentWillReact === \"function\") _this.componentWillReact(); // TODO: wrap in action?\n                    if (_this.__$mobxIsUnmounted !== true) {\n                        // If we are unmounted at this point, componentWillReact() had a side effect causing the component to unmounted\n                        // TODO: remove this check? Then react will properly warn about the fact that this should not happen? See #73\n                        // However, people also claim this migth happen during unit tests..\n                        var hasError = true;\n                        try {\n                            isForcingUpdate = true;\n                            if (!skipRender) react.Component.prototype.forceUpdate.call(_this);\n                            hasError = false;\n                        } finally {\n                            isForcingUpdate = false;\n                            if (hasError) reaction.dispose();\n                        }\n                    }\n                }\n            });\n            reaction.reactComponent = _this;\n            reactiveRender.$mobx = reaction;\n            _this.render = reactiveRender;\n            return reactiveRender();\n        };\n\n        var reactiveRender = function reactiveRender() {\n            isRenderingPending = false;\n            var exception = undefined;\n            var rendering = undefined;\n            reaction.track(function () {\n                if (isDevtoolsEnabled) {\n                    _this.__$mobRenderStart = Date.now();\n                }\n                try {\n                    rendering = mobx.extras.allowStateChanges(false, baseRender);\n                } catch (e) {\n                    exception = e;\n                }\n                if (isDevtoolsEnabled) {\n                    _this.__$mobRenderEnd = Date.now();\n                }\n            });\n            if (exception) {\n                errorsReporter.emit(exception);\n                throw exception;\n            }\n            return rendering;\n        };\n\n        this.render = initialRender;\n    },\n\n    componentWillUnmount: function componentWillUnmount() {\n        if (isUsingStaticRendering === true) return;\n        this.render.$mobx && this.render.$mobx.dispose();\n        this.__$mobxIsUnmounted = true;\n        if (isDevtoolsEnabled) {\n            var node = findDOMNode$2(this);\n            if (node && componentByNodeRegistery) {\n                componentByNodeRegistery.delete(node);\n            }\n            renderReporter.emit({\n                event: \"destroy\",\n                component: this,\n                node: node\n            });\n        }\n    },\n\n    componentDidMount: function componentDidMount() {\n        if (isDevtoolsEnabled) {\n            reportRendering(this);\n        }\n    },\n\n    componentDidUpdate: function componentDidUpdate() {\n        if (isDevtoolsEnabled) {\n            reportRendering(this);\n        }\n    },\n\n    shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n        if (isUsingStaticRendering) {\n            console.warn(\"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\");\n        }\n        // update on any state changes (as is the default)\n        if (this.state !== nextState) {\n            return true;\n        }\n        // update if props are shallowly not equal, inspired by PureRenderMixin\n        // we could return just 'false' here, and avoid the `skipRender` checks etc\n        // however, it is nicer if lifecycle events are triggered like usually,\n        // so we return true here if props are shallowly modified.\n        return isObjectShallowModified(this.props, nextProps);\n    }\n\n    /**\n     * Observer function / decorator\n     */\n};function observer(arg1, arg2) {\n    if (typeof arg1 === \"string\") {\n        throw new Error(\"Store names should be provided as array\");\n    }\n    if (Array.isArray(arg1)) {\n        // component needs stores\n        if (!warnedAboutObserverInjectDeprecation) {\n            warnedAboutObserverInjectDeprecation = true;\n            console.warn('Mobx observer: Using observer to inject stores is deprecated since 4.0. Use `@inject(\"store1\", \"store2\") @observer ComponentClass` or `inject(\"store1\", \"store2\")(observer(componentClass))` instead of `@observer([\"store1\", \"store2\"]) ComponentClass`');\n        }\n        if (!arg2) {\n            // invoked as decorator\n            return function (componentClass) {\n                return observer(arg1, componentClass);\n            };\n        } else {\n            return inject.apply(null, arg1)(observer(arg2));\n        }\n    }\n    var componentClass = arg1;\n\n    if (componentClass.isMobxInjector === true) {\n        console.warn(\"Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'\");\n    }\n\n    // Stateless function component:\n    // If it is function but doesn't seem to be a react class constructor,\n    // wrap it to a react class automatically\n    if (typeof componentClass === \"function\" && (!componentClass.prototype || !componentClass.prototype.render) && !componentClass.isReactClass && !react.Component.isPrototypeOf(componentClass)) {\n        var _class, _temp;\n\n        return observer((_temp = _class = function (_Component) {\n            inherits(_class, _Component);\n\n            function _class() {\n                classCallCheck(this, _class);\n                return possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n            }\n\n            createClass(_class, [{\n                key: \"render\",\n                value: function render() {\n                    return componentClass.call(this, this.props, this.context);\n                }\n            }]);\n            return _class;\n        }(react.Component), _class.displayName = componentClass.displayName || componentClass.name, _class.contextTypes = componentClass.contextTypes, _class.propTypes = componentClass.propTypes, _class.defaultProps = componentClass.defaultProps, _temp));\n    }\n\n    if (!componentClass) {\n        throw new Error(\"Please pass a valid component to 'observer'\");\n    }\n\n    var target = componentClass.prototype || componentClass;\n    mixinLifecycleEvents(target);\n    componentClass.isMobXReactObserver = true;\n    return componentClass;\n}\n\nfunction mixinLifecycleEvents(target) {\n    patch(target, \"componentWillMount\", true);[\"componentDidMount\", \"componentWillUnmount\", \"componentDidUpdate\"].forEach(function (funcName) {\n        patch(target, funcName);\n    });\n    if (!target.shouldComponentUpdate) {\n        target.shouldComponentUpdate = reactiveMixin.shouldComponentUpdate;\n    }\n}\n\n// TODO: support injection somehow as well?\nvar Observer = observer(function (_ref) {\n    var children = _ref.children;\n    return children();\n});\n\nObserver.displayName = \"Observer\";\n\nObserver.propTypes = {\n    children: function children(propValue, key, componentName, location, propFullName) {\n        if (typeof propValue[key] !== \"function\") return new Error(\"Invalid prop `\" + propFullName + \"` of type `\" + _typeof(propValue[key]) + \"` supplied to\" + \" `\" + componentName + \"`, expected `function`.\");\n    }\n};\n\nvar _class;\nvar _temp;\n\nvar specialReactKeys = { children: true, key: true, ref: true };\n\nvar Provider = (_temp = _class = function (_Component) {\n    inherits(Provider, _Component);\n\n    function Provider() {\n        classCallCheck(this, Provider);\n        return possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).apply(this, arguments));\n    }\n\n    createClass(Provider, [{\n        key: \"render\",\n        value: function render() {\n            return react.Children.only(this.props.children);\n        }\n    }, {\n        key: \"getChildContext\",\n        value: function getChildContext() {\n            var stores = {};\n            // inherit stores\n            var baseStores = this.context.mobxStores;\n            if (baseStores) for (var key in baseStores) {\n                stores[key] = baseStores[key];\n            }\n            // add own stores\n            for (var _key in this.props) {\n                if (!specialReactKeys[_key] && _key !== \"suppressChangedStoreWarning\") stores[_key] = this.props[_key];\n            }return {\n                mobxStores: stores\n            };\n        }\n    }, {\n        key: \"componentWillReceiveProps\",\n        value: function componentWillReceiveProps(nextProps) {\n            // Maybe this warning is too aggressive?\n            if (Object.keys(nextProps).length !== Object.keys(this.props).length) console.warn(\"MobX Provider: The set of provided stores has changed. Please avoid changing stores as the change might not propagate to all children\");\n            if (!nextProps.suppressChangedStoreWarning) for (var key in nextProps) {\n                if (!specialReactKeys[key] && this.props[key] !== nextProps[key]) console.warn(\"MobX Provider: Provided store '\" + key + \"' has changed. Please avoid replacing stores as the change might not propagate to all children\");\n            }\n        }\n    }]);\n    return Provider;\n}(react.Component), _class.contextTypes = {\n    mobxStores: objectOrObservableObject\n}, _class.childContextTypes = {\n    mobxStores: objectOrObservableObject.isRequired\n}, _temp);\n\nif (!react.Component) throw new Error(\"mobx-react requires React to be available\");\nif (!mobx.extras) throw new Error(\"mobx-react requires mobx to be available\");\n\nif (typeof reactDom.unstable_batchedUpdates === \"function\") mobx.extras.setReactionScheduler(reactDom.unstable_batchedUpdates);else if (typeof unstable_batchedUpdates$1 === \"function\") mobx.extras.setReactionScheduler(unstable_batchedUpdates$1);\n\nvar onError = function onError(fn) {\n    return errorsReporter.on(fn);\n};\n\n/* DevTool support */\n// See: https://github.com/andykog/mobx-devtools/blob/d8976c24b8cb727ed59f9a0bc905a009df79e221/src/backend/installGlobalHook.js\n\nif ((typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\" ? \"undefined\" : _typeof(__MOBX_DEVTOOLS_GLOBAL_HOOK__)) === \"object\") {\n    var mobx$1 = { spy: mobx.spy, extras: mobx.extras };\n    var mobxReact = { renderReporter: renderReporter, componentByNodeRegistery: componentByNodeRegistery, trackComponents: trackComponents };\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobxReact(mobxReact, mobx$1);\n}\n\nexports.propTypes = propTypes;\nexports.PropTypes = propTypes;\nexports.onError = onError;\nexports.observer = observer;\nexports.Observer = Observer;\nexports.renderReporter = renderReporter;\nexports.componentByNodeRegistery = componentByNodeRegistery;\nexports.trackComponents = trackComponents;\nexports.useStaticRendering = useStaticRendering;\nexports.Provider = Provider;\nexports.inject = inject;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mobx-react/index.js\n// module id = 4\n// module chunks = 0","/** MobX - (c) Michel Weststrate 2015, 2016 - MIT Licensed */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\n * Anything that can be used to _store_ state is an Atom in mobx. Atoms have two important jobs\n *\n * 1) detect when they are being _used_ and report this (using reportObserved). This allows mobx to make the connection between running functions and the data they used\n * 2) they should notify mobx whenever they have _changed_. This way mobx can re-run any functions (derivations) that are using this atom.\n */\nvar BaseAtom = (function () {\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    function BaseAtom(name) {\n        if (name === void 0) { name = \"Atom@\" + getNextId(); }\n        this.name = name;\n        this.isPendingUnobservation = true; // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n        this.observers = [];\n        this.observersIndexes = {};\n        this.diffValue = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = exports.IDerivationState.NOT_TRACKING;\n    }\n    BaseAtom.prototype.onBecomeUnobserved = function () {\n        // noop\n    };\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     */\n    BaseAtom.prototype.reportObserved = function () {\n        reportObserved(this);\n    };\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    BaseAtom.prototype.reportChanged = function () {\n        startBatch();\n        propagateChanged(this);\n        endBatch();\n    };\n    BaseAtom.prototype.toString = function () {\n        return this.name;\n    };\n    return BaseAtom;\n}());\nvar Atom = (function (_super) {\n    __extends(Atom, _super);\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    function Atom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {\n        if (name === void 0) { name = \"Atom@\" + getNextId(); }\n        if (onBecomeObservedHandler === void 0) { onBecomeObservedHandler = noop; }\n        if (onBecomeUnobservedHandler === void 0) { onBecomeUnobservedHandler = noop; }\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this.onBecomeObservedHandler = onBecomeObservedHandler;\n        _this.onBecomeUnobservedHandler = onBecomeUnobservedHandler;\n        _this.isPendingUnobservation = false; // for effective unobserving.\n        _this.isBeingTracked = false;\n        return _this;\n    }\n    Atom.prototype.reportObserved = function () {\n        startBatch();\n        _super.prototype.reportObserved.call(this);\n        if (!this.isBeingTracked) {\n            this.isBeingTracked = true;\n            this.onBecomeObservedHandler();\n        }\n        endBatch();\n        return !!globalState.trackingDerivation;\n        // return doesn't really give useful info, because it can be as well calling computed which calls atom (no reactions)\n        // also it could not trigger when calculating reaction dependent on Atom because Atom's value was cached by computed called by given reaction.\n    };\n    Atom.prototype.onBecomeUnobserved = function () {\n        this.isBeingTracked = false;\n        this.onBecomeUnobservedHandler();\n    };\n    return Atom;\n}(BaseAtom));\nvar isAtom = createInstanceofPredicate(\"Atom\", BaseAtom);\n\nfunction hasInterceptors(interceptable) {\n    return interceptable.interceptors && interceptable.interceptors.length > 0;\n}\nfunction registerInterceptor(interceptable, handler) {\n    var interceptors = interceptable.interceptors || (interceptable.interceptors = []);\n    interceptors.push(handler);\n    return once(function () {\n        var idx = interceptors.indexOf(handler);\n        if (idx !== -1)\n            interceptors.splice(idx, 1);\n    });\n}\nfunction interceptChange(interceptable, change) {\n    var prevU = untrackedStart();\n    try {\n        var interceptors = interceptable.interceptors;\n        if (interceptors)\n            for (var i = 0, l = interceptors.length; i < l; i++) {\n                change = interceptors[i](change);\n                invariant(!change || change.type, \"Intercept handlers should return nothing or a change object\");\n                if (!change)\n                    break;\n            }\n        return change;\n    }\n    finally {\n        untrackedEnd(prevU);\n    }\n}\n\nfunction hasListeners(listenable) {\n    return listenable.changeListeners && listenable.changeListeners.length > 0;\n}\nfunction registerListener(listenable, handler) {\n    var listeners = listenable.changeListeners || (listenable.changeListeners = []);\n    listeners.push(handler);\n    return once(function () {\n        var idx = listeners.indexOf(handler);\n        if (idx !== -1)\n            listeners.splice(idx, 1);\n    });\n}\nfunction notifyListeners(listenable, change) {\n    var prevU = untrackedStart();\n    var listeners = listenable.changeListeners;\n    if (!listeners)\n        return;\n    listeners = listeners.slice();\n    for (var i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change);\n    }\n    untrackedEnd(prevU);\n}\n\nfunction isSpyEnabled() {\n    return !!globalState.spyListeners.length;\n}\nfunction spyReport(event) {\n    if (!globalState.spyListeners.length)\n        return;\n    var listeners = globalState.spyListeners;\n    for (var i = 0, l = listeners.length; i < l; i++)\n        listeners[i](event);\n}\nfunction spyReportStart(event) {\n    var change = objectAssign({}, event, { spyReportStart: true });\n    spyReport(change);\n}\nvar END_EVENT = { spyReportEnd: true };\nfunction spyReportEnd(change) {\n    if (change)\n        spyReport(objectAssign({}, change, END_EVENT));\n    else\n        spyReport(END_EVENT);\n}\nfunction spy(listener) {\n    globalState.spyListeners.push(listener);\n    return once(function () {\n        var idx = globalState.spyListeners.indexOf(listener);\n        if (idx !== -1)\n            globalState.spyListeners.splice(idx, 1);\n    });\n}\n\nfunction iteratorSymbol() {\n    return (typeof Symbol === \"function\" && Symbol.iterator) || \"@@iterator\";\n}\nvar IS_ITERATING_MARKER = \"__$$iterating\";\nfunction arrayAsIterator(array) {\n    // returning an array for entries(), values() etc for maps was a mis-interpretation of the specs..,\n    // yet it is quite convenient to be able to use the response both as array directly and as iterator\n    // it is suboptimal, but alas...\n    invariant(array[IS_ITERATING_MARKER] !== true, \"Illegal state: cannot recycle array as iterator\");\n    addHiddenFinalProp(array, IS_ITERATING_MARKER, true);\n    var idx = -1;\n    addHiddenFinalProp(array, \"next\", function next() {\n        idx++;\n        return {\n            done: idx >= this.length,\n            value: idx < this.length ? this[idx] : undefined\n        };\n    });\n    return array;\n}\nfunction declareIterator(prototType, iteratorFactory) {\n    addHiddenFinalProp(prototType, iteratorSymbol(), iteratorFactory);\n}\n\nvar MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859\n// Detects bug in safari 9.1.1 (or iOS 9 safari mobile). See #364\nvar safariPrototypeSetterInheritanceBug = (function () {\n    var v = false;\n    var p = {};\n    Object.defineProperty(p, \"0\", {\n        set: function () {\n            v = true;\n        }\n    });\n    Object.create(p)[\"0\"] = 1;\n    return v === false;\n})();\n/**\n * This array buffer contains two lists of properties, so that all arrays\n * can recycle their property definitions, which significantly improves performance of creating\n * properties on the fly.\n */\nvar OBSERVABLE_ARRAY_BUFFER_SIZE = 0;\n// Typescript workaround to make sure ObservableArray extends Array\nvar StubArray = (function () {\n    function StubArray() {\n    }\n    return StubArray;\n}());\nfunction inherit(ctor, proto) {\n    if (typeof Object[\"setPrototypeOf\"] !== \"undefined\") {\n        Object[\"setPrototypeOf\"](ctor.prototype, proto);\n    }\n    else if (typeof ctor.prototype.__proto__ !== \"undefined\") {\n        ctor.prototype.__proto__ = proto;\n    }\n    else {\n        ctor[\"prototype\"] = proto;\n    }\n}\ninherit(StubArray, Array.prototype);\n// Weex freeze Array.prototype\n// Make them writeable and configurable in prototype chain\n// https://github.com/alibaba/weex/pull/1529\nif (Object.isFrozen(Array)) {\n    \n    [\n        \"constructor\",\n        \"push\",\n        \"shift\",\n        \"concat\",\n        \"pop\",\n        \"unshift\",\n        \"replace\",\n        \"find\",\n        \"findIndex\",\n        \"splice\",\n        \"reverse\",\n        \"sort\"\n    ].forEach(function (key) {\n        Object.defineProperty(StubArray.prototype, key, {\n            configurable: true,\n            writable: true,\n            value: Array.prototype[key]\n        });\n    });\n}\nvar ObservableArrayAdministration = (function () {\n    function ObservableArrayAdministration(name, enhancer, array, owned) {\n        this.array = array;\n        this.owned = owned;\n        this.values = [];\n        this.lastKnownLength = 0;\n        this.interceptors = null;\n        this.changeListeners = null;\n        this.atom = new BaseAtom(name || \"ObservableArray@\" + getNextId());\n        this.enhancer = function (newV, oldV) { return enhancer(newV, oldV, name + \"[..]\"); };\n    }\n    ObservableArrayAdministration.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    };\n    ObservableArrayAdministration.prototype.dehanceValues = function (values) {\n        if (this.dehancer !== undefined)\n            return values.map(this.dehancer);\n        return values;\n    };\n    ObservableArrayAdministration.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableArrayAdministration.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        if (fireImmediately) {\n            listener({\n                object: this.array,\n                type: \"splice\",\n                index: 0,\n                added: this.values.slice(),\n                addedCount: this.values.length,\n                removed: [],\n                removedCount: 0\n            });\n        }\n        return registerListener(this, listener);\n    };\n    ObservableArrayAdministration.prototype.getArrayLength = function () {\n        this.atom.reportObserved();\n        return this.values.length;\n    };\n    ObservableArrayAdministration.prototype.setArrayLength = function (newLength) {\n        if (typeof newLength !== \"number\" || newLength < 0)\n            throw new Error(\"[mobx.array] Out of range: \" + newLength);\n        var currentLength = this.values.length;\n        if (newLength === currentLength)\n            return;\n        else if (newLength > currentLength) {\n            var newItems = new Array(newLength - currentLength);\n            for (var i = 0; i < newLength - currentLength; i++)\n                newItems[i] = undefined; // No Array.fill everywhere...\n            this.spliceWithArray(currentLength, 0, newItems);\n        }\n        else\n            this.spliceWithArray(newLength, currentLength - newLength);\n    };\n    // adds / removes the necessary numeric properties to this object\n    ObservableArrayAdministration.prototype.updateArrayLength = function (oldLength, delta) {\n        if (oldLength !== this.lastKnownLength)\n            throw new Error(\"[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?\");\n        this.lastKnownLength += delta;\n        if (delta > 0 && oldLength + delta + 1 > OBSERVABLE_ARRAY_BUFFER_SIZE)\n            reserveArrayBuffer(oldLength + delta + 1);\n    };\n    ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed(this.atom);\n        var length = this.values.length;\n        if (index === undefined)\n            index = 0;\n        else if (index > length)\n            index = length;\n        else if (index < 0)\n            index = Math.max(0, length + index);\n        if (arguments.length === 1)\n            deleteCount = length - index;\n        else if (deleteCount === undefined || deleteCount === null)\n            deleteCount = 0;\n        else\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n        if (newItems === undefined)\n            newItems = [];\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this.array,\n                type: \"splice\",\n                index: index,\n                removedCount: deleteCount,\n                added: newItems\n            });\n            if (!change)\n                return EMPTY_ARRAY;\n            deleteCount = change.removedCount;\n            newItems = change.added;\n        }\n        newItems = newItems.map(function (v) { return _this.enhancer(v, undefined); });\n        var lengthDelta = newItems.length - deleteCount;\n        this.updateArrayLength(length, lengthDelta); // create or remove new entries\n        var res = this.spliceItemsIntoValues(index, deleteCount, newItems);\n        if (deleteCount !== 0 || newItems.length !== 0)\n            this.notifyArraySplice(index, newItems, res);\n        return this.dehanceValues(res);\n    };\n    ObservableArrayAdministration.prototype.spliceItemsIntoValues = function (index, deleteCount, newItems) {\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return (_a = this.values).splice.apply(_a, [index, deleteCount].concat(newItems));\n        }\n        else {\n            var res = this.values.slice(index, index + deleteCount);\n            this.values = this.values\n                .slice(0, index)\n                .concat(newItems, this.values.slice(index + deleteCount));\n            return res;\n        }\n        var _a;\n    };\n    ObservableArrayAdministration.prototype.notifyArrayChildUpdate = function (index, newValue, oldValue) {\n        var notifySpy = !this.owned && isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy\n            ? {\n                object: this.array,\n                type: \"update\",\n                index: index,\n                newValue: newValue,\n                oldValue: oldValue\n            }\n            : null;\n        if (notifySpy)\n            spyReportStart(change);\n        this.atom.reportChanged();\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy)\n            spyReportEnd();\n    };\n    ObservableArrayAdministration.prototype.notifyArraySplice = function (index, added, removed) {\n        var notifySpy = !this.owned && isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy\n            ? {\n                object: this.array,\n                type: \"splice\",\n                index: index,\n                removed: removed,\n                added: added,\n                removedCount: removed.length,\n                addedCount: added.length\n            }\n            : null;\n        if (notifySpy)\n            spyReportStart(change);\n        this.atom.reportChanged();\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy)\n            spyReportEnd();\n    };\n    return ObservableArrayAdministration;\n}());\nvar ObservableArray = (function (_super) {\n    __extends(ObservableArray, _super);\n    function ObservableArray(initialValues, enhancer, name, owned) {\n        if (name === void 0) { name = \"ObservableArray@\" + getNextId(); }\n        if (owned === void 0) { owned = false; }\n        var _this = _super.call(this) || this;\n        var adm = new ObservableArrayAdministration(name, enhancer, _this, owned);\n        addHiddenFinalProp(_this, \"$mobx\", adm);\n        if (initialValues && initialValues.length) {\n            _this.spliceWithArray(0, 0, initialValues);\n        }\n        if (safariPrototypeSetterInheritanceBug) {\n            // Seems that Safari won't use numeric prototype setter untill any * numeric property is\n            // defined on the instance. After that it works fine, even if this property is deleted.\n            Object.defineProperty(adm.array, \"0\", ENTRY_0);\n        }\n        return _this;\n    }\n    ObservableArray.prototype.intercept = function (handler) {\n        return this.$mobx.intercept(handler);\n    };\n    ObservableArray.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        return this.$mobx.observe(listener, fireImmediately);\n    };\n    ObservableArray.prototype.clear = function () {\n        return this.splice(0);\n    };\n    ObservableArray.prototype.concat = function () {\n        var arrays = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            arrays[_i] = arguments[_i];\n        }\n        this.$mobx.atom.reportObserved();\n        return Array.prototype.concat.apply(this.peek(), arrays.map(function (a) { return (isObservableArray(a) ? a.peek() : a); }));\n    };\n    ObservableArray.prototype.replace = function (newItems) {\n        return this.$mobx.spliceWithArray(0, this.$mobx.values.length, newItems);\n    };\n    /**\n     * Converts this array back to a (shallow) javascript structure.\n     * For a deep clone use mobx.toJS\n     */\n    ObservableArray.prototype.toJS = function () {\n        return this.slice();\n    };\n    ObservableArray.prototype.toJSON = function () {\n        // Used by JSON.stringify\n        return this.toJS();\n    };\n    ObservableArray.prototype.peek = function () {\n        this.$mobx.atom.reportObserved();\n        return this.$mobx.dehanceValues(this.$mobx.values);\n    };\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n    ObservableArray.prototype.find = function (predicate, thisArg, fromIndex) {\n        if (fromIndex === void 0) { fromIndex = 0; }\n        var idx = this.findIndex.apply(this, arguments);\n        return idx === -1 ? undefined : this.get(idx);\n    };\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n    ObservableArray.prototype.findIndex = function (predicate, thisArg, fromIndex) {\n        if (fromIndex === void 0) { fromIndex = 0; }\n        var items = this.peek(), l = items.length;\n        for (var i = fromIndex; i < l; i++)\n            if (predicate.call(thisArg, items[i], i, this))\n                return i;\n        return -1;\n    };\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    ObservableArray.prototype.splice = function (index, deleteCount) {\n        var newItems = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            newItems[_i - 2] = arguments[_i];\n        }\n        switch (arguments.length) {\n            case 0:\n                return [];\n            case 1:\n                return this.$mobx.spliceWithArray(index);\n            case 2:\n                return this.$mobx.spliceWithArray(index, deleteCount);\n        }\n        return this.$mobx.spliceWithArray(index, deleteCount, newItems);\n    };\n    ObservableArray.prototype.spliceWithArray = function (index, deleteCount, newItems) {\n        return this.$mobx.spliceWithArray(index, deleteCount, newItems);\n    };\n    ObservableArray.prototype.push = function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var adm = this.$mobx;\n        adm.spliceWithArray(adm.values.length, 0, items);\n        return adm.values.length;\n    };\n    ObservableArray.prototype.pop = function () {\n        return this.splice(Math.max(this.$mobx.values.length - 1, 0), 1)[0];\n    };\n    ObservableArray.prototype.shift = function () {\n        return this.splice(0, 1)[0];\n    };\n    ObservableArray.prototype.unshift = function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var adm = this.$mobx;\n        adm.spliceWithArray(0, 0, items);\n        return adm.values.length;\n    };\n    ObservableArray.prototype.reverse = function () {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        // so we deviate from the default and just make it an dervitation\n        var clone = this.slice();\n        return clone.reverse.apply(clone, arguments);\n    };\n    ObservableArray.prototype.sort = function (compareFn) {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        var clone = this.slice();\n        return clone.sort.apply(clone, arguments);\n    };\n    ObservableArray.prototype.remove = function (value) {\n        var idx = this.$mobx.dehanceValues(this.$mobx.values).indexOf(value);\n        if (idx > -1) {\n            this.splice(idx, 1);\n            return true;\n        }\n        return false;\n    };\n    ObservableArray.prototype.move = function (fromIndex, toIndex) {\n        function checkIndex(index) {\n            if (index < 0) {\n                throw new Error(\"[mobx.array] Index out of bounds: \" + index + \" is negative\");\n            }\n            var length = this.$mobx.values.length;\n            if (index >= length) {\n                throw new Error(\"[mobx.array] Index out of bounds: \" + index + \" is not smaller than \" + length);\n            }\n        }\n        checkIndex.call(this, fromIndex);\n        checkIndex.call(this, toIndex);\n        if (fromIndex === toIndex) {\n            return;\n        }\n        var oldItems = this.$mobx.values;\n        var newItems;\n        if (fromIndex < toIndex) {\n            newItems = oldItems.slice(0, fromIndex).concat(oldItems.slice(fromIndex + 1, toIndex + 1), [\n                oldItems[fromIndex]\n            ], oldItems.slice(toIndex + 1));\n        }\n        else {\n            // toIndex < fromIndex\n            newItems = oldItems.slice(0, toIndex).concat([\n                oldItems[fromIndex]\n            ], oldItems.slice(toIndex, fromIndex), oldItems.slice(fromIndex + 1));\n        }\n        this.replace(newItems);\n    };\n    // See #734, in case property accessors are unreliable...\n    ObservableArray.prototype.get = function (index) {\n        var impl = this.$mobx;\n        if (impl) {\n            if (index < impl.values.length) {\n                impl.atom.reportObserved();\n                return impl.dehanceValue(impl.values[index]);\n            }\n            console.warn(\"[mobx.array] Attempt to read an array index (\" + index + \") that is out of bounds (\" + impl\n                .values\n                .length + \"). Please check length first. Out of bound indices will not be tracked by MobX\");\n        }\n        return undefined;\n    };\n    // See #734, in case property accessors are unreliable...\n    ObservableArray.prototype.set = function (index, newValue) {\n        var adm = this.$mobx;\n        var values = adm.values;\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(adm.atom);\n            var oldValue = values[index];\n            if (hasInterceptors(adm)) {\n                var change = interceptChange(adm, {\n                    type: \"update\",\n                    object: this,\n                    index: index,\n                    newValue: newValue\n                });\n                if (!change)\n                    return;\n                newValue = change.newValue;\n            }\n            newValue = adm.enhancer(newValue, oldValue);\n            var changed = newValue !== oldValue;\n            if (changed) {\n                values[index] = newValue;\n                adm.notifyArrayChildUpdate(index, newValue, oldValue);\n            }\n        }\n        else if (index === values.length) {\n            // add a new item\n            adm.spliceWithArray(index, 0, [newValue]);\n        }\n        else {\n            // out of bounds\n            throw new Error(\"[mobx.array] Index out of bounds, \" + index + \" is larger than \" + values.length);\n        }\n    };\n    return ObservableArray;\n}(StubArray));\ndeclareIterator(ObservableArray.prototype, function () {\n    return arrayAsIterator(this.slice());\n});\nObject.defineProperty(ObservableArray.prototype, \"length\", {\n    enumerable: false,\n    configurable: true,\n    get: function () {\n        return this.$mobx.getArrayLength();\n    },\n    set: function (newLength) {\n        this.$mobx.setArrayLength(newLength);\n    }\n});\n[\n    \"every\",\n    \"filter\",\n    \"forEach\",\n    \"indexOf\",\n    \"join\",\n    \"lastIndexOf\",\n    \"map\",\n    \"reduce\",\n    \"reduceRight\",\n    \"slice\",\n    \"some\",\n    \"toString\",\n    \"toLocaleString\"\n].forEach(function (funcName) {\n    var baseFunc = Array.prototype[funcName];\n    invariant(typeof baseFunc === \"function\", \"Base function not defined on Array prototype: '\" + funcName + \"'\");\n    addHiddenProp(ObservableArray.prototype, funcName, function () {\n        return baseFunc.apply(this.peek(), arguments);\n    });\n});\n/**\n * We don't want those to show up in `for (const key in ar)` ...\n */\nmakeNonEnumerable(ObservableArray.prototype, [\n    \"constructor\",\n    \"intercept\",\n    \"observe\",\n    \"clear\",\n    \"concat\",\n    \"get\",\n    \"replace\",\n    \"toJS\",\n    \"toJSON\",\n    \"peek\",\n    \"find\",\n    \"findIndex\",\n    \"splice\",\n    \"spliceWithArray\",\n    \"push\",\n    \"pop\",\n    \"set\",\n    \"shift\",\n    \"unshift\",\n    \"reverse\",\n    \"sort\",\n    \"remove\",\n    \"move\",\n    \"toString\",\n    \"toLocaleString\"\n]);\n// See #364\nvar ENTRY_0 = createArrayEntryDescriptor(0);\nfunction createArrayEntryDescriptor(index) {\n    return {\n        enumerable: false,\n        configurable: false,\n        get: function () {\n            // TODO: Check `this`?, see #752?\n            return this.get(index);\n        },\n        set: function (value) {\n            this.set(index, value);\n        }\n    };\n}\nfunction createArrayBufferItem(index) {\n    Object.defineProperty(ObservableArray.prototype, \"\" + index, createArrayEntryDescriptor(index));\n}\nfunction reserveArrayBuffer(max) {\n    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max; index++)\n        createArrayBufferItem(index);\n    OBSERVABLE_ARRAY_BUFFER_SIZE = max;\n}\nreserveArrayBuffer(1000);\nvar isObservableArrayAdministration = createInstanceofPredicate(\"ObservableArrayAdministration\", ObservableArrayAdministration);\nfunction isObservableArray(thing) {\n    return isObject(thing) && isObservableArrayAdministration(thing.$mobx);\n}\n\nvar UNCHANGED = {};\nvar ObservableValue = (function (_super) {\n    __extends(ObservableValue, _super);\n    function ObservableValue(value, enhancer, name, notifySpy) {\n        if (name === void 0) { name = \"ObservableValue@\" + getNextId(); }\n        if (notifySpy === void 0) { notifySpy = true; }\n        var _this = _super.call(this, name) || this;\n        _this.enhancer = enhancer;\n        _this.hasUnreportedChange = false;\n        _this.dehancer = undefined;\n        _this.value = enhancer(value, undefined, name);\n        if (notifySpy && isSpyEnabled()) {\n            // only notify spy if this is a stand-alone observable\n            spyReport({ type: \"create\", object: _this, newValue: _this.value });\n        }\n        return _this;\n    }\n    ObservableValue.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    };\n    ObservableValue.prototype.set = function (newValue) {\n        var oldValue = this.value;\n        newValue = this.prepareNewValue(newValue);\n        if (newValue !== UNCHANGED) {\n            var notifySpy = isSpyEnabled();\n            if (notifySpy) {\n                spyReportStart({\n                    type: \"update\",\n                    object: this,\n                    newValue: newValue,\n                    oldValue: oldValue\n                });\n            }\n            this.setNewValue(newValue);\n            if (notifySpy)\n                spyReportEnd();\n        }\n    };\n    ObservableValue.prototype.prepareNewValue = function (newValue) {\n        checkIfStateModificationsAreAllowed(this);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this,\n                type: \"update\",\n                newValue: newValue\n            });\n            if (!change)\n                return UNCHANGED;\n            newValue = change.newValue;\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value, this.name);\n        return this.value !== newValue ? newValue : UNCHANGED;\n    };\n    ObservableValue.prototype.setNewValue = function (newValue) {\n        var oldValue = this.value;\n        this.value = newValue;\n        this.reportChanged();\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: \"update\",\n                object: this,\n                newValue: newValue,\n                oldValue: oldValue\n            });\n        }\n    };\n    ObservableValue.prototype.get = function () {\n        this.reportObserved();\n        return this.dehanceValue(this.value);\n    };\n    ObservableValue.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableValue.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately)\n            listener({\n                object: this,\n                type: \"update\",\n                newValue: this.value,\n                oldValue: undefined\n            });\n        return registerListener(this, listener);\n    };\n    ObservableValue.prototype.toJSON = function () {\n        return this.get();\n    };\n    ObservableValue.prototype.toString = function () {\n        return this.name + \"[\" + this.value + \"]\";\n    };\n    ObservableValue.prototype.valueOf = function () {\n        return toPrimitive(this.get());\n    };\n    return ObservableValue;\n}(BaseAtom));\nObservableValue.prototype[primitiveSymbol()] = ObservableValue.prototype.valueOf;\nvar isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue);\n\nvar messages = {\n    m001: \"It is not allowed to assign new values to @action fields\",\n    m002: \"`runInAction` expects a function\",\n    m003: \"`runInAction` expects a function without arguments\",\n    m004: \"autorun expects a function\",\n    m005: \"Warning: attempted to pass an action to autorun. Actions are untracked and will not trigger on state changes. Use `reaction` or wrap only your state modification code in an action.\",\n    m006: \"Warning: attempted to pass an action to autorunAsync. Actions are untracked and will not trigger on state changes. Use `reaction` or wrap only your state modification code in an action.\",\n    m007: \"reaction only accepts 2 or 3 arguments. If migrating from MobX 2, please provide an options object\",\n    m008: \"wrapping reaction expression in `asReference` is no longer supported, use options object instead\",\n    m009: \"@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'. It looks like it was used on a property.\",\n    m010: \"@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'\",\n    m011: \"First argument to `computed` should be an expression. If using computed as decorator, don't pass it arguments\",\n    m012: \"computed takes one or two arguments if used as function\",\n    m013: \"[mobx.expr] 'expr' should only be used inside other reactive functions.\",\n    m014: \"extendObservable expected 2 or more arguments\",\n    m015: \"extendObservable expects an object as first argument\",\n    m016: \"extendObservable should not be used on maps, use map.merge instead\",\n    m017: \"all arguments of extendObservable should be objects\",\n    m018: \"extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540\",\n    m019: \"[mobx.isObservable] isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\",\n    m020: \"modifiers can only be used for individual object properties\",\n    m021: \"observable expects zero or one arguments\",\n    m022: \"@observable can not be used on getters, use @computed instead\",\n    m024: \"whyRun() can only be used if a derivation is active, or by passing an computed value / reaction explicitly. If you invoked whyRun from inside a computation; the computation is currently suspended but re-evaluating because somebody requested its value.\",\n    m025: \"whyRun can only be used on reactions and computed values\",\n    m026: \"`action` can only be invoked on functions\",\n    m028: \"It is not allowed to set `useStrict` when a derivation is running\",\n    m029: \"INTERNAL ERROR only onBecomeUnobserved shouldn't be called twice in a row\",\n    m030a: \"Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: \",\n    m030b: \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: \",\n    m031: \"Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: \",\n    m032: \"* This computation is suspended (not in use by any reaction) and won't run automatically.\\n\tDidn't expect this computation to be suspended at this point?\\n\t  1. Make sure this computation is used by a reaction (reaction, autorun, observer).\\n\t  2. Check whether you are using this computation synchronously (in the same stack as they reaction that needs it).\",\n    m033: \"`observe` doesn't support the fire immediately property for observable maps.\",\n    m034: \"`mobx.map` is deprecated, use `new ObservableMap` or `mobx.observable.map` instead\",\n    m035: \"Cannot make the designated object observable; it is not extensible\",\n    m036: \"It is not possible to get index atoms from arrays\",\n    m037: \"Hi there! I'm sorry you have just run into an exception.\\nIf your debugger ends up here, know that some reaction (like the render() of an observer component, autorun or reaction)\\nthrew an exception and that mobx caught it, to avoid that it brings the rest of your application down.\\nThe original cause of the exception (the code that caused this reaction to run (again)), is still in the stack.\\n\\nHowever, more interesting is the actual stack trace of the error itself.\\nHopefully the error is an instanceof Error, because in that case you can inspect the original stack of the error from where it was thrown.\\nSee `error.stack` property, or press the very subtle \\\"(...)\\\" link you see near the console.error message that probably brought you here.\\nThat stack is more interesting than the stack of this console.error itself.\\n\\nIf the exception you see is an exception you created yourself, make sure to use `throw new Error(\\\"Oops\\\")` instead of `throw \\\"Oops\\\"`,\\nbecause the javascript environment will only preserve the original stack trace in the first form.\\n\\nYou can also make sure the debugger pauses the next time this very same exception is thrown by enabling \\\"Pause on caught exception\\\".\\n(Note that it might pause on many other, unrelated exception as well).\\n\\nIf that all doesn't help you out, feel free to open an issue https://github.com/mobxjs/mobx/issues!\\n\",\n    m038: \"Missing items in this list?\\n    1. Check whether all used values are properly marked as observable (use isObservable to verify)\\n    2. Make sure you didn't dereference values too early. MobX observes props, not primitives. E.g: use 'person.name' instead of 'name' in your computation.\\n\"\n};\nfunction getMessage(id) {\n    return messages[id];\n}\n\nfunction createAction(actionName, fn) {\n    invariant(typeof fn === \"function\", getMessage(\"m026\"));\n    invariant(typeof actionName === \"string\" && actionName.length > 0, \"actions should have valid names, got: '\" + actionName + \"'\");\n    var res = function () {\n        return executeAction(actionName, fn, this, arguments);\n    };\n    res.originalFn = fn;\n    res.isMobxAction = true;\n    return res;\n}\nfunction executeAction(actionName, fn, scope, args) {\n    var runInfo = startAction(actionName, fn, scope, args);\n    try {\n        return fn.apply(scope, args);\n    }\n    finally {\n        endAction(runInfo);\n    }\n}\nfunction startAction(actionName, fn, scope, args) {\n    var notifySpy = isSpyEnabled() && !!actionName;\n    var startTime = 0;\n    if (notifySpy) {\n        startTime = Date.now();\n        var l = (args && args.length) || 0;\n        var flattendArgs = new Array(l);\n        if (l > 0)\n            for (var i = 0; i < l; i++)\n                flattendArgs[i] = args[i];\n        spyReportStart({\n            type: \"action\",\n            name: actionName,\n            fn: fn,\n            object: scope,\n            arguments: flattendArgs\n        });\n    }\n    var prevDerivation = untrackedStart();\n    startBatch();\n    var prevAllowStateChanges = allowStateChangesStart(true);\n    return {\n        prevDerivation: prevDerivation,\n        prevAllowStateChanges: prevAllowStateChanges,\n        notifySpy: notifySpy,\n        startTime: startTime\n    };\n}\nfunction endAction(runInfo) {\n    allowStateChangesEnd(runInfo.prevAllowStateChanges);\n    endBatch();\n    untrackedEnd(runInfo.prevDerivation);\n    if (runInfo.notifySpy)\n        spyReportEnd({ time: Date.now() - runInfo.startTime });\n}\nfunction useStrict(strict) {\n    invariant(globalState.trackingDerivation === null, getMessage(\"m028\"));\n    globalState.strictMode = strict;\n    globalState.allowStateChanges = !strict;\n}\nfunction isStrictModeEnabled() {\n    return globalState.strictMode;\n}\nfunction allowStateChanges(allowStateChanges, func) {\n    // TODO: deprecate / refactor this function in next major\n    // Currently only used by `@observer`\n    // Proposed change: remove first param, rename to `forbidStateChanges`,\n    // require error callback instead of the hardcoded error message now used\n    // Use `inAction` instead of allowStateChanges in derivation.ts to check strictMode\n    var prev = allowStateChangesStart(allowStateChanges);\n    var res;\n    try {\n        res = func();\n    }\n    finally {\n        allowStateChangesEnd(prev);\n    }\n    return res;\n}\nfunction allowStateChangesStart(allowStateChanges) {\n    var prev = globalState.allowStateChanges;\n    globalState.allowStateChanges = allowStateChanges;\n    return prev;\n}\nfunction allowStateChangesEnd(prev) {\n    globalState.allowStateChanges = prev;\n}\n\n/**\n * Constructs a decorator, that normalizes the differences between\n * TypeScript and Babel. Mainly caused by the fact that legacy-decorator cannot assign\n * values during instance creation to properties that have a getter setter.\n *\n * - Sigh -\n *\n * Also takes care of the difference between @decorator field and @decorator(args) field, and different forms of values.\n * For performance (cpu and mem) reasons the properties are always defined on the prototype (at least initially).\n * This means that these properties despite being enumerable might not show up in Object.keys() (but they will show up in for...in loops).\n */\nfunction createClassPropertyDecorator(\n    /**\n     * This function is invoked once, when the property is added to a new instance.\n     * When this happens is not strictly determined due to differences in TS and Babel:\n     * Typescript: Usually when constructing the new instance\n     * Babel, sometimes Typescript: during the first get / set\n     * Both: when calling `runLazyInitializers(instance)`\n     */\n    onInitialize, get, set, enumerable, \n    /**\n     * Can this decorator invoked with arguments? e.g. @decorator(args)\n     */\n    allowCustomArguments) {\n    function classPropertyDecorator(target, key, descriptor, customArgs, argLen) {\n        if (argLen === void 0) { argLen = 0; }\n        invariant(allowCustomArguments || quacksLikeADecorator(arguments), \"This function is a decorator, but it wasn't invoked like a decorator\");\n        if (!descriptor) {\n            // typescript (except for getter / setters)\n            var newDescriptor = {\n                enumerable: enumerable,\n                configurable: true,\n                get: function () {\n                    if (!this.__mobxInitializedProps || this.__mobxInitializedProps[key] !== true)\n                        typescriptInitializeProperty(this, key, undefined, onInitialize, customArgs, descriptor);\n                    return get.call(this, key);\n                },\n                set: function (v) {\n                    if (!this.__mobxInitializedProps || this.__mobxInitializedProps[key] !== true) {\n                        typescriptInitializeProperty(this, key, v, onInitialize, customArgs, descriptor);\n                    }\n                    else {\n                        set.call(this, key, v);\n                    }\n                }\n            };\n            if (arguments.length < 3 || (arguments.length === 5 && argLen < 3)) {\n                // Typescript target is ES3, so it won't define property for us\n                // or using Reflect.decorate polyfill, which will return no descriptor\n                // (see https://github.com/mobxjs/mobx/issues/333)\n                Object.defineProperty(target, key, newDescriptor);\n            }\n            return newDescriptor;\n        }\n        else {\n            // babel and typescript getter / setter props\n            if (!hasOwnProperty(target, \"__mobxLazyInitializers\")) {\n                addHiddenProp(target, \"__mobxLazyInitializers\", (target.__mobxLazyInitializers && target.__mobxLazyInitializers.slice()) || [] // support inheritance\n                );\n            }\n            var value_1 = descriptor.value, initializer_1 = descriptor.initializer;\n            target.__mobxLazyInitializers.push(function (instance) {\n                onInitialize(instance, key, initializer_1 ? initializer_1.call(instance) : value_1, customArgs, descriptor);\n            });\n            return {\n                enumerable: enumerable,\n                configurable: true,\n                get: function () {\n                    if (this.__mobxDidRunLazyInitializers !== true)\n                        runLazyInitializers(this);\n                    return get.call(this, key);\n                },\n                set: function (v) {\n                    if (this.__mobxDidRunLazyInitializers !== true)\n                        runLazyInitializers(this);\n                    set.call(this, key, v);\n                }\n            };\n        }\n    }\n    if (allowCustomArguments) {\n        /** If custom arguments are allowed, we should return a function that returns a decorator */\n        return function () {\n            /** Direct invocation: @decorator bla */\n            if (quacksLikeADecorator(arguments))\n                return classPropertyDecorator.apply(null, arguments);\n            /** Indirect invocation: @decorator(args) bla */\n            var outerArgs = arguments;\n            var argLen = arguments.length;\n            return function (target, key, descriptor) {\n                return classPropertyDecorator(target, key, descriptor, outerArgs, argLen);\n            };\n        };\n    }\n    return classPropertyDecorator;\n}\nfunction typescriptInitializeProperty(instance, key, v, onInitialize, customArgs, baseDescriptor) {\n    if (!hasOwnProperty(instance, \"__mobxInitializedProps\"))\n        addHiddenProp(instance, \"__mobxInitializedProps\", {});\n    instance.__mobxInitializedProps[key] = true;\n    onInitialize(instance, key, v, customArgs, baseDescriptor);\n}\nfunction runLazyInitializers(instance) {\n    if (instance.__mobxDidRunLazyInitializers === true)\n        return;\n    if (instance.__mobxLazyInitializers) {\n        addHiddenProp(instance, \"__mobxDidRunLazyInitializers\", true);\n        instance.__mobxDidRunLazyInitializers &&\n            instance.__mobxLazyInitializers.forEach(function (initializer) { return initializer(instance); });\n    }\n}\nfunction quacksLikeADecorator(args) {\n    return (args.length === 2 || args.length === 3) && typeof args[1] === \"string\";\n}\n\nvar actionFieldDecorator = createClassPropertyDecorator(function (target, key, value, args, originalDescriptor) {\n    var actionName = args && args.length === 1 ? args[0] : value.name || key || \"<unnamed action>\";\n    var wrappedAction = action(actionName, value);\n    addHiddenProp(target, key, wrappedAction);\n}, function (key) {\n    return this[key];\n}, function () {\n    invariant(false, getMessage(\"m001\"));\n}, false, true);\nvar boundActionDecorator = createClassPropertyDecorator(function (target, key, value) {\n    defineBoundAction(target, key, value);\n}, function (key) {\n    return this[key];\n}, function () {\n    invariant(false, getMessage(\"m001\"));\n}, false, false);\nvar action = function action(arg1, arg2, arg3, arg4) {\n    if (arguments.length === 1 && typeof arg1 === \"function\")\n        return createAction(arg1.name || \"<unnamed action>\", arg1);\n    if (arguments.length === 2 && typeof arg2 === \"function\")\n        return createAction(arg1, arg2);\n    if (arguments.length === 1 && typeof arg1 === \"string\")\n        return namedActionDecorator(arg1);\n    return namedActionDecorator(arg2).apply(null, arguments);\n};\naction.bound = function boundAction(arg1, arg2, arg3) {\n    if (typeof arg1 === \"function\") {\n        var action_1 = createAction(\"<not yet bound action>\", arg1);\n        action_1.autoBind = true;\n        return action_1;\n    }\n    return boundActionDecorator.apply(null, arguments);\n};\nfunction namedActionDecorator(name) {\n    return function (target, prop, descriptor) {\n        if (descriptor && typeof descriptor.value === \"function\") {\n            // TypeScript @action method() { }. Defined on proto before being decorated\n            // Don't use the field decorator if we are just decorating a method\n            descriptor.value = createAction(name, descriptor.value);\n            descriptor.enumerable = false;\n            descriptor.configurable = true;\n            return descriptor;\n        }\n        if (descriptor !== undefined && descriptor.get !== undefined) {\n            throw new Error(\"[mobx] action is not expected to be used with getters\");\n        }\n        // bound instance methods\n        return actionFieldDecorator(name).apply(this, arguments);\n    };\n}\nfunction runInAction(arg1, arg2, arg3) {\n    var actionName = typeof arg1 === \"string\" ? arg1 : arg1.name || \"<unnamed action>\";\n    var fn = typeof arg1 === \"function\" ? arg1 : arg2;\n    var scope = typeof arg1 === \"function\" ? arg2 : arg3;\n    invariant(typeof fn === \"function\", getMessage(\"m002\"));\n    invariant(fn.length === 0, getMessage(\"m003\"));\n    invariant(typeof actionName === \"string\" && actionName.length > 0, \"actions should have valid names, got: '\" + actionName + \"'\");\n    return executeAction(actionName, fn, scope, undefined);\n}\nfunction isAction(thing) {\n    return typeof thing === \"function\" && thing.isMobxAction === true;\n}\nfunction defineBoundAction(target, propertyName, fn) {\n    var res = function () {\n        return executeAction(propertyName, fn, target, arguments);\n    };\n    res.isMobxAction = true;\n    addHiddenProp(target, propertyName, res);\n}\n\nfunction identityComparer(a, b) {\n    return a === b;\n}\nfunction structuralComparer(a, b) {\n    return deepEqual(a, b);\n}\nfunction defaultComparer(a, b) {\n    return areBothNaN(a, b) || identityComparer(a, b);\n}\nvar comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer\n};\n\nfunction autorun(arg1, arg2, arg3) {\n    var name, view, scope;\n    if (typeof arg1 === \"string\") {\n        name = arg1;\n        view = arg2;\n        scope = arg3;\n    }\n    else {\n        name = arg1.name || \"Autorun@\" + getNextId();\n        view = arg1;\n        scope = arg2;\n    }\n    invariant(typeof view === \"function\", getMessage(\"m004\"));\n    invariant(isAction(view) === false, getMessage(\"m005\"));\n    if (scope)\n        view = view.bind(scope);\n    var reaction = new Reaction(name, function () {\n        this.track(reactionRunner);\n    });\n    function reactionRunner() {\n        view(reaction);\n    }\n    reaction.schedule();\n    return reaction.getDisposer();\n}\nfunction when(arg1, arg2, arg3, arg4) {\n    var name, predicate, effect, scope;\n    if (typeof arg1 === \"string\") {\n        name = arg1;\n        predicate = arg2;\n        effect = arg3;\n        scope = arg4;\n    }\n    else {\n        name = \"When@\" + getNextId();\n        predicate = arg1;\n        effect = arg2;\n        scope = arg3;\n    }\n    var disposer = autorun(name, function (r) {\n        if (predicate.call(scope)) {\n            r.dispose();\n            var prevUntracked = untrackedStart();\n            effect.call(scope);\n            untrackedEnd(prevUntracked);\n        }\n    });\n    return disposer;\n}\nfunction autorunAsync(arg1, arg2, arg3, arg4) {\n    var name, func, delay, scope;\n    if (typeof arg1 === \"string\") {\n        name = arg1;\n        func = arg2;\n        delay = arg3;\n        scope = arg4;\n    }\n    else {\n        name = arg1.name || \"AutorunAsync@\" + getNextId();\n        func = arg1;\n        delay = arg2;\n        scope = arg3;\n    }\n    invariant(isAction(func) === false, getMessage(\"m006\"));\n    if (delay === void 0)\n        delay = 1;\n    if (scope)\n        func = func.bind(scope);\n    var isScheduled = false;\n    var r = new Reaction(name, function () {\n        if (!isScheduled) {\n            isScheduled = true;\n            setTimeout(function () {\n                isScheduled = false;\n                if (!r.isDisposed)\n                    r.track(reactionRunner);\n            }, delay);\n        }\n    });\n    function reactionRunner() {\n        func(r);\n    }\n    r.schedule();\n    return r.getDisposer();\n}\nfunction reaction(expression, effect, arg3) {\n    if (arguments.length > 3) {\n        fail(getMessage(\"m007\"));\n    }\n    if (isModifierDescriptor(expression)) {\n        fail(getMessage(\"m008\"));\n    }\n    var opts;\n    if (typeof arg3 === \"object\") {\n        opts = arg3;\n    }\n    else {\n        opts = {};\n    }\n    opts.name =\n        opts.name || expression.name || effect.name || \"Reaction@\" + getNextId();\n    opts.fireImmediately = arg3 === true || opts.fireImmediately === true;\n    opts.delay = opts.delay || 0;\n    opts.compareStructural = opts.compareStructural || opts.struct || false;\n    // TODO: creates ugly spy events, use `effect = (r) => runInAction(opts.name, () => effect(r))` instead\n    effect = action(opts.name, opts.context ? effect.bind(opts.context) : effect);\n    if (opts.context) {\n        expression = expression.bind(opts.context);\n    }\n    var firstTime = true;\n    var isScheduled = false;\n    var value;\n    var equals = opts.equals\n        ? opts.equals\n        : opts.compareStructural || opts.struct ? comparer.structural : comparer.default;\n    var r = new Reaction(opts.name, function () {\n        if (firstTime || opts.delay < 1) {\n            reactionRunner();\n        }\n        else if (!isScheduled) {\n            isScheduled = true;\n            setTimeout(function () {\n                isScheduled = false;\n                reactionRunner();\n            }, opts.delay);\n        }\n    });\n    function reactionRunner() {\n        if (r.isDisposed)\n            return;\n        var changed = false;\n        r.track(function () {\n            var nextValue = expression(r);\n            changed = firstTime || !equals(value, nextValue);\n            value = nextValue;\n        });\n        if (firstTime && opts.fireImmediately)\n            effect(value, r);\n        if (!firstTime && changed === true)\n            effect(value, r);\n        if (firstTime)\n            firstTime = false;\n    }\n    r.schedule();\n    return r.getDisposer();\n}\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nvar ComputedValue = (function () {\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structualComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce an new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    function ComputedValue(derivation, scope, equals, name, setter) {\n        this.derivation = derivation;\n        this.scope = scope;\n        this.equals = equals;\n        this.dependenciesState = exports.IDerivationState.NOT_TRACKING;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = null; // during tracking it's an array with new observed observers\n        this.isPendingUnobservation = false;\n        this.observers = [];\n        this.observersIndexes = {};\n        this.diffValue = 0;\n        this.runId = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = exports.IDerivationState.UP_TO_DATE;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId();\n        this.value = new CaughtException(null);\n        this.isComputing = false; // to check for cycles\n        this.isRunningSetter = false;\n        this.name = name || \"ComputedValue@\" + getNextId();\n        if (setter)\n            this.setter = createAction(name + \"-setter\", setter);\n    }\n    ComputedValue.prototype.onBecomeStale = function () {\n        propagateMaybeChanged(this);\n    };\n    ComputedValue.prototype.onBecomeUnobserved = function () {\n        clearObserving(this);\n        this.value = undefined;\n    };\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    ComputedValue.prototype.get = function () {\n        invariant(!this.isComputing, \"Cycle detected in computation \" + this.name, this.derivation);\n        if (globalState.inBatch === 0) {\n            // This is an minor optimization which could be omitted to simplify the code\n            // The computedValue is accessed outside of any mobx stuff. Batch observing should be enough and don't need\n            // tracking as it will never be called again inside this batch.\n            startBatch();\n            if (shouldCompute(this))\n                this.value = this.computeValue(false);\n            endBatch();\n        }\n        else {\n            reportObserved(this);\n            if (shouldCompute(this))\n                if (this.trackAndCompute())\n                    propagateChangeConfirmed(this);\n        }\n        var result = this.value;\n        if (isCaughtException(result))\n            throw result.cause;\n        return result;\n    };\n    ComputedValue.prototype.peek = function () {\n        var res = this.computeValue(false);\n        if (isCaughtException(res))\n            throw res.cause;\n        return res;\n    };\n    ComputedValue.prototype.set = function (value) {\n        if (this.setter) {\n            invariant(!this.isRunningSetter, \"The setter of computed value '\" + this\n                .name + \"' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?\");\n            this.isRunningSetter = true;\n            try {\n                this.setter.call(this.scope, value);\n            }\n            finally {\n                this.isRunningSetter = false;\n            }\n        }\n        else\n            invariant(false, \"[ComputedValue '\" + this\n                .name + \"'] It is not possible to assign a new value to a computed value.\");\n    };\n    ComputedValue.prototype.trackAndCompute = function () {\n        if (isSpyEnabled()) {\n            spyReport({\n                object: this.scope,\n                type: \"compute\",\n                fn: this.derivation\n            });\n        }\n        var oldValue = this.value;\n        var wasSuspended = this.dependenciesState === exports.IDerivationState.NOT_TRACKING;\n        var newValue = (this.value = this.computeValue(true));\n        return (wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals(oldValue, newValue));\n    };\n    ComputedValue.prototype.computeValue = function (track) {\n        this.isComputing = true;\n        globalState.computationDepth++;\n        var res;\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope);\n        }\n        else {\n            try {\n                res = this.derivation.call(this.scope);\n            }\n            catch (e) {\n                res = new CaughtException(e);\n            }\n        }\n        globalState.computationDepth--;\n        this.isComputing = false;\n        return res;\n    };\n    ComputedValue.prototype.observe = function (listener, fireImmediately) {\n        var _this = this;\n        var firstTime = true;\n        var prevValue = undefined;\n        return autorun(function () {\n            var newValue = _this.get();\n            if (!firstTime || fireImmediately) {\n                var prevU = untrackedStart();\n                listener({\n                    type: \"update\",\n                    object: _this,\n                    newValue: newValue,\n                    oldValue: prevValue\n                });\n                untrackedEnd(prevU);\n            }\n            firstTime = false;\n            prevValue = newValue;\n        });\n    };\n    ComputedValue.prototype.toJSON = function () {\n        return this.get();\n    };\n    ComputedValue.prototype.toString = function () {\n        return this.name + \"[\" + this.derivation.toString() + \"]\";\n    };\n    ComputedValue.prototype.valueOf = function () {\n        return toPrimitive(this.get());\n    };\n    ComputedValue.prototype.whyRun = function () {\n        var isTracking = Boolean(globalState.trackingDerivation);\n        var observing = unique(this.isComputing ? this.newObserving : this.observing).map(function (dep) { return dep.name; });\n        var observers = unique(getObservers(this).map(function (dep) { return dep.name; }));\n        return (\"\\nWhyRun? computation '\" + this.name + \"':\\n * Running because: \" + (isTracking\n            ? \"[active] the value of this computation is needed by a reaction\"\n            : this.isComputing\n                ? \"[get] The value of this computed was requested outside a reaction\"\n                : \"[idle] not running at the moment\") + \"\\n\" +\n            (this.dependenciesState === exports.IDerivationState.NOT_TRACKING\n                ? getMessage(\"m032\")\n                : \" * This computation will re-run if any of the following observables changes:\\n    \" + joinStrings(observing) + \"\\n    \" + (this.isComputing && isTracking\n                    ? \" (... or any observable accessed during the remainder of the current run)\"\n                    : \"\") + \"\\n    \" + getMessage(\"m038\") + \"\\n\\n  * If the outcome of this computation changes, the following observers will be re-run:\\n    \" + joinStrings(observers) + \"\\n\"));\n    };\n    return ComputedValue;\n}());\nComputedValue.prototype[primitiveSymbol()] = ComputedValue.prototype.valueOf;\nvar isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue);\n\nvar ObservableObjectAdministration = (function () {\n    function ObservableObjectAdministration(target, name) {\n        this.target = target;\n        this.name = name;\n        this.values = {};\n        this.changeListeners = null;\n        this.interceptors = null;\n    }\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    ObservableObjectAdministration.prototype.observe = function (callback, fireImmediately) {\n        invariant(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable objects.\");\n        return registerListener(this, callback);\n    };\n    ObservableObjectAdministration.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    return ObservableObjectAdministration;\n}());\nfunction asObservableObject(target, name) {\n    if (isObservableObject(target) && target.hasOwnProperty(\"$mobx\"))\n        return target.$mobx;\n    invariant(Object.isExtensible(target), getMessage(\"m035\"));\n    if (!isPlainObject(target))\n        name = (target.constructor.name || \"ObservableObject\") + \"@\" + getNextId();\n    if (!name)\n        name = \"ObservableObject@\" + getNextId();\n    var adm = new ObservableObjectAdministration(target, name);\n    addHiddenFinalProp(target, \"$mobx\", adm);\n    return adm;\n}\nfunction defineObservablePropertyFromDescriptor(adm, propName, descriptor, defaultEnhancer) {\n    if (adm.values[propName] && !isComputedValue(adm.values[propName])) {\n        // already observable property\n        invariant(\"value\" in descriptor, \"The property \" + propName + \" in \" + adm.name + \" is already observable, cannot redefine it as computed property\");\n        adm.target[propName] = descriptor.value; // the property setter will make 'value' reactive if needed.\n        return;\n    }\n    // not yet observable property\n    if (\"value\" in descriptor) {\n        // not a computed value\n        if (isModifierDescriptor(descriptor.value)) {\n            // x : ref(someValue)\n            var modifierDescriptor = descriptor.value;\n            defineObservableProperty(adm, propName, modifierDescriptor.initialValue, modifierDescriptor.enhancer);\n        }\n        else if (isAction(descriptor.value) && descriptor.value.autoBind === true) {\n            defineBoundAction(adm.target, propName, descriptor.value.originalFn);\n        }\n        else if (isComputedValue(descriptor.value)) {\n            // x: computed(someExpr)\n            defineComputedPropertyFromComputedValue(adm, propName, descriptor.value);\n        }\n        else {\n            // x: someValue\n            defineObservableProperty(adm, propName, descriptor.value, defaultEnhancer);\n        }\n    }\n    else {\n        // get x() { return 3 } set x(v) { }\n        defineComputedProperty(adm, propName, descriptor.get, descriptor.set, comparer.default, true);\n    }\n}\nfunction defineObservableProperty(adm, propName, newValue, enhancer) {\n    assertPropertyConfigurable(adm.target, propName);\n    if (hasInterceptors(adm)) {\n        var change = interceptChange(adm, {\n            object: adm.target,\n            name: propName,\n            type: \"add\",\n            newValue: newValue\n        });\n        if (!change)\n            return;\n        newValue = change.newValue;\n    }\n    var observable = (adm.values[propName] = new ObservableValue(newValue, enhancer, adm.name + \".\" + propName, false));\n    newValue = observable.value; // observableValue might have changed it\n    Object.defineProperty(adm.target, propName, generateObservablePropConfig(propName));\n    notifyPropertyAddition(adm, adm.target, propName, newValue);\n}\nfunction defineComputedProperty(adm, propName, getter, setter, equals, asInstanceProperty) {\n    if (asInstanceProperty)\n        assertPropertyConfigurable(adm.target, propName);\n    adm.values[propName] = new ComputedValue(getter, adm.target, equals, adm.name + \".\" + propName, setter);\n    if (asInstanceProperty) {\n        Object.defineProperty(adm.target, propName, generateComputedPropConfig(propName));\n    }\n}\nfunction defineComputedPropertyFromComputedValue(adm, propName, computedValue) {\n    var name = adm.name + \".\" + propName;\n    computedValue.name = name;\n    if (!computedValue.scope)\n        computedValue.scope = adm.target;\n    adm.values[propName] = computedValue;\n    Object.defineProperty(adm.target, propName, generateComputedPropConfig(propName));\n}\nvar observablePropertyConfigs = {};\nvar computedPropertyConfigs = {};\nfunction generateObservablePropConfig(propName) {\n    return (observablePropertyConfigs[propName] ||\n        (observablePropertyConfigs[propName] = {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return this.$mobx.values[propName].get();\n            },\n            set: function (v) {\n                setPropertyValue(this, propName, v);\n            }\n        }));\n}\nfunction generateComputedPropConfig(propName) {\n    return (computedPropertyConfigs[propName] ||\n        (computedPropertyConfigs[propName] = {\n            configurable: true,\n            enumerable: false,\n            get: function () {\n                return this.$mobx.values[propName].get();\n            },\n            set: function (v) {\n                return this.$mobx.values[propName].set(v);\n            }\n        }));\n}\nfunction setPropertyValue(instance, name, newValue) {\n    var adm = instance.$mobx;\n    var observable = adm.values[name];\n    // intercept\n    if (hasInterceptors(adm)) {\n        var change = interceptChange(adm, {\n            type: \"update\",\n            object: instance,\n            name: name,\n            newValue: newValue\n        });\n        if (!change)\n            return;\n        newValue = change.newValue;\n    }\n    newValue = observable.prepareNewValue(newValue);\n    // notify spy & observers\n    if (newValue !== UNCHANGED) {\n        var notify = hasListeners(adm);\n        var notifySpy = isSpyEnabled();\n        var change = notify || notifySpy\n            ? {\n                type: \"update\",\n                object: instance,\n                oldValue: observable.value,\n                name: name,\n                newValue: newValue\n            }\n            : null;\n        if (notifySpy)\n            spyReportStart(change);\n        observable.setNewValue(newValue);\n        if (notify)\n            notifyListeners(adm, change);\n        if (notifySpy)\n            spyReportEnd();\n    }\n}\nfunction notifyPropertyAddition(adm, object, name, newValue) {\n    var notify = hasListeners(adm);\n    var notifySpy = isSpyEnabled();\n    var change = notify || notifySpy\n        ? {\n            type: \"add\",\n            object: object,\n            name: name,\n            newValue: newValue\n        }\n        : null;\n    if (notifySpy)\n        spyReportStart(change);\n    if (notify)\n        notifyListeners(adm, change);\n    if (notifySpy)\n        spyReportEnd();\n}\nvar isObservableObjectAdministration = createInstanceofPredicate(\"ObservableObjectAdministration\", ObservableObjectAdministration);\nfunction isObservableObject(thing) {\n    if (isObject(thing)) {\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        runLazyInitializers(thing);\n        return isObservableObjectAdministration(thing.$mobx);\n    }\n    return false;\n}\n\n/**\n * Returns true if the provided value is reactive.\n * @param value object, function or array\n * @param property if property is specified, checks whether value.property is reactive.\n */\nfunction isObservable(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (isObservableArray(value) || isObservableMap(value))\n            throw new Error(getMessage(\"m019\"));\n        else if (isObservableObject(value)) {\n            var o = value.$mobx;\n            return o.values && !!o.values[property];\n        }\n        return false;\n    }\n    // For first check, see #701\n    return (isObservableObject(value) ||\n        !!value.$mobx ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value));\n}\n\nfunction createDecoratorForEnhancer(enhancer) {\n    invariant(!!enhancer, \":(\");\n    return createClassPropertyDecorator(function (target, name, baseValue, _, baseDescriptor) {\n        assertPropertyConfigurable(target, name);\n        invariant(!baseDescriptor || !baseDescriptor.get, getMessage(\"m022\"));\n        var adm = asObservableObject(target, undefined);\n        defineObservableProperty(adm, name, baseValue, enhancer);\n    }, function (name) {\n        var observable = this.$mobx.values[name];\n        if (observable === undefined // See #505\n        )\n            return undefined;\n        return observable.get();\n    }, function (name, value) {\n        setPropertyValue(this, name, value);\n    }, true, false);\n}\n\nfunction extendObservable(target) {\n    var properties = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        properties[_i - 1] = arguments[_i];\n    }\n    return extendObservableHelper(target, deepEnhancer, properties);\n}\nfunction extendShallowObservable(target) {\n    var properties = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        properties[_i - 1] = arguments[_i];\n    }\n    return extendObservableHelper(target, referenceEnhancer, properties);\n}\nfunction extendObservableHelper(target, defaultEnhancer, properties) {\n    invariant(arguments.length >= 2, getMessage(\"m014\"));\n    invariant(typeof target === \"object\", getMessage(\"m015\"));\n    invariant(!isObservableMap(target), getMessage(\"m016\"));\n    properties.forEach(function (propSet) {\n        invariant(typeof propSet === \"object\", getMessage(\"m017\"));\n        invariant(!isObservable(propSet), getMessage(\"m018\"));\n    });\n    var adm = asObservableObject(target);\n    var definedProps = {};\n    // Note could be optimised if properties.length === 1\n    for (var i = properties.length - 1; i >= 0; i--) {\n        var propSet = properties[i];\n        for (var key in propSet)\n            if (definedProps[key] !== true && hasOwnProperty(propSet, key)) {\n                definedProps[key] = true;\n                if (target === propSet && !isPropertyConfigurable(target, key))\n                    continue; // see #111, skip non-configurable or non-writable props for `observable(object)`.\n                var descriptor = Object.getOwnPropertyDescriptor(propSet, key);\n                defineObservablePropertyFromDescriptor(adm, key, descriptor, defaultEnhancer);\n            }\n    }\n    return target;\n}\n\nvar deepDecorator = createDecoratorForEnhancer(deepEnhancer);\nvar shallowDecorator = createDecoratorForEnhancer(shallowEnhancer);\nvar refDecorator = createDecoratorForEnhancer(referenceEnhancer);\nvar deepStructDecorator = createDecoratorForEnhancer(deepStructEnhancer);\nvar refStructDecorator = createDecoratorForEnhancer(refStructEnhancer);\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v) {\n    if (v === void 0) { v = undefined; }\n    // @observable someProp;\n    if (typeof arguments[1] === \"string\")\n        return deepDecorator.apply(null, arguments);\n    invariant(arguments.length <= 1, getMessage(\"m021\"));\n    invariant(!isModifierDescriptor(v), getMessage(\"m020\"));\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    var res = deepEnhancer(v, undefined, undefined);\n    // this value could be converted to a new observable data structure, return it\n    if (res !== v)\n        return res;\n    // otherwise, just box it\n    return observable.box(v);\n}\nvar observableFactories = {\n    box: function (value, name) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"box\");\n        return new ObservableValue(value, deepEnhancer, name);\n    },\n    shallowBox: function (value, name) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"shallowBox\");\n        return new ObservableValue(value, referenceEnhancer, name);\n    },\n    array: function (initialValues, name) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"array\");\n        return new ObservableArray(initialValues, deepEnhancer, name);\n    },\n    shallowArray: function (initialValues, name) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"shallowArray\");\n        return new ObservableArray(initialValues, referenceEnhancer, name);\n    },\n    map: function (initialValues, name) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"map\");\n        return new ObservableMap(initialValues, deepEnhancer, name);\n    },\n    shallowMap: function (initialValues, name) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"shallowMap\");\n        return new ObservableMap(initialValues, referenceEnhancer, name);\n    },\n    object: function (props, name) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"object\");\n        var res = {};\n        // convert to observable object\n        asObservableObject(res, name);\n        // add properties\n        extendObservable(res, props);\n        return res;\n    },\n    shallowObject: function (props, name) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"shallowObject\");\n        var res = {};\n        asObservableObject(res, name);\n        extendShallowObservable(res, props);\n        return res;\n    },\n    ref: function () {\n        if (arguments.length < 2) {\n            // although ref creates actually a modifier descriptor, the type of the resultig properties\n            // of the object is `T` in the end, when the descriptors are interpreted\n            return createModifierDescriptor(referenceEnhancer, arguments[0]);\n        }\n        else {\n            return refDecorator.apply(null, arguments);\n        }\n    },\n    shallow: function () {\n        if (arguments.length < 2) {\n            // although ref creates actually a modifier descriptor, the type of the resultig properties\n            // of the object is `T` in the end, when the descriptors are interpreted\n            return createModifierDescriptor(shallowEnhancer, arguments[0]);\n        }\n        else {\n            return shallowDecorator.apply(null, arguments);\n        }\n    },\n    deep: function () {\n        if (arguments.length < 2) {\n            // although ref creates actually a modifier descriptor, the type of the resultig properties\n            // of the object is `T` in the end, when the descriptors are interpreted\n            return createModifierDescriptor(deepEnhancer, arguments[0]);\n        }\n        else {\n            return deepDecorator.apply(null, arguments);\n        }\n    },\n    struct: function () {\n        if (arguments.length < 2) {\n            // although ref creates actually a modifier descriptor, the type of the resultig properties\n            // of the object is `T` in the end, when the descriptors are interpreted\n            return createModifierDescriptor(deepStructEnhancer, arguments[0]);\n        }\n        else {\n            return deepStructDecorator.apply(null, arguments);\n        }\n    }\n};\nvar observable = createObservable;\n// weird trick to keep our typings nicely with our funcs, and still extend the observable function\nObject.keys(observableFactories).forEach(function (name) { return (observable[name] = observableFactories[name]); });\nobservable.deep.struct = observable.struct;\nobservable.ref.struct = function () {\n    if (arguments.length < 2) {\n        return createModifierDescriptor(refStructEnhancer, arguments[0]);\n    }\n    else {\n        return refStructDecorator.apply(null, arguments);\n    }\n};\nfunction incorrectlyUsedAsDecorator(methodName) {\n    fail(\"Expected one or two arguments to observable.\" + methodName + \". Did you accidentally try to use observable.\" + methodName + \" as decorator?\");\n}\n\nfunction isModifierDescriptor(thing) {\n    return typeof thing === \"object\" && thing !== null && thing.isMobxModifierDescriptor === true;\n}\nfunction createModifierDescriptor(enhancer, initialValue) {\n    invariant(!isModifierDescriptor(initialValue), \"Modifiers cannot be nested\");\n    return {\n        isMobxModifierDescriptor: true,\n        initialValue: initialValue,\n        enhancer: enhancer\n    };\n}\nfunction deepEnhancer(v, _, name) {\n    if (isModifierDescriptor(v))\n        fail(\"You tried to assign a modifier wrapped value to a collection, please define modifiers when creating the collection, not when modifying it\");\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    if (Array.isArray(v))\n        return observable.array(v, name);\n    if (isPlainObject(v))\n        return observable.object(v, name);\n    if (isES6Map(v))\n        return observable.map(v, name);\n    return v;\n}\nfunction shallowEnhancer(v, _, name) {\n    if (isModifierDescriptor(v))\n        fail(\"You tried to assign a modifier wrapped value to a collection, please define modifiers when creating the collection, not when modifying it\");\n    if (v === undefined || v === null)\n        return v;\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v))\n        return v;\n    if (Array.isArray(v))\n        return observable.shallowArray(v, name);\n    if (isPlainObject(v))\n        return observable.shallowObject(v, name);\n    if (isES6Map(v))\n        return observable.shallowMap(v, name);\n    return fail(\"The shallow modifier / decorator can only used in combination with arrays, objects and maps\");\n}\nfunction referenceEnhancer(newValue) {\n    // never turn into an observable\n    return newValue;\n}\nfunction deepStructEnhancer(v, oldValue, name) {\n    // don't confuse structurally compare enhancer with ref enhancer! The latter is probably\n    // more suited for immutable objects\n    if (deepEqual(v, oldValue))\n        return oldValue;\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    if (Array.isArray(v))\n        return new ObservableArray(v, deepStructEnhancer, name);\n    if (isES6Map(v))\n        return new ObservableMap(v, deepStructEnhancer, name);\n    if (isPlainObject(v)) {\n        var res = {};\n        asObservableObject(res, name);\n        extendObservableHelper(res, deepStructEnhancer, [v]);\n        return res;\n    }\n    return v;\n}\nfunction refStructEnhancer(v, oldValue, name) {\n    if (deepEqual(v, oldValue))\n        return oldValue;\n    return v;\n}\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nfunction transaction(action, thisArg) {\n    if (thisArg === void 0) { thisArg = undefined; }\n    startBatch();\n    try {\n        return action.apply(thisArg);\n    }\n    finally {\n        endBatch();\n    }\n}\n\nvar ObservableMapMarker = {};\nvar ObservableMap = (function () {\n    function ObservableMap(initialData, enhancer, name) {\n        if (enhancer === void 0) { enhancer = deepEnhancer; }\n        if (name === void 0) { name = \"ObservableMap@\" + getNextId(); }\n        this.enhancer = enhancer;\n        this.name = name;\n        this.$mobx = ObservableMapMarker;\n        this._data = Object.create(null);\n        this._hasMap = Object.create(null); // hasMap, not hashMap >-).\n        this._keys = new ObservableArray(undefined, referenceEnhancer, this.name + \".keys()\", true);\n        this.interceptors = null;\n        this.changeListeners = null;\n        this.dehancer = undefined;\n        this.merge(initialData);\n    }\n    ObservableMap.prototype._has = function (key) {\n        return typeof this._data[key] !== \"undefined\";\n    };\n    ObservableMap.prototype.has = function (key) {\n        if (!this.isValidKey(key))\n            return false;\n        key = \"\" + key;\n        if (this._hasMap[key])\n            return this._hasMap[key].get();\n        return this._updateHasMapEntry(key, false).get();\n    };\n    ObservableMap.prototype.set = function (key, value) {\n        this.assertValidKey(key);\n        key = \"\" + key;\n        var hasKey = this._has(key);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: hasKey ? \"update\" : \"add\",\n                object: this,\n                newValue: value,\n                name: key\n            });\n            if (!change)\n                return this;\n            value = change.newValue;\n        }\n        if (hasKey) {\n            this._updateValue(key, value);\n        }\n        else {\n            this._addValue(key, value);\n        }\n        return this;\n    };\n    ObservableMap.prototype.delete = function (key) {\n        var _this = this;\n        this.assertValidKey(key);\n        key = \"\" + key;\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: \"delete\",\n                object: this,\n                name: key\n            });\n            if (!change)\n                return false;\n        }\n        if (this._has(key)) {\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: this._data[key].value,\n                    name: key\n                }\n                : null;\n            if (notifySpy)\n                spyReportStart(change);\n            transaction(function () {\n                _this._keys.remove(key);\n                _this._updateHasMapEntry(key, false);\n                var observable$$1 = _this._data[key];\n                observable$$1.setNewValue(undefined);\n                _this._data[key] = undefined;\n            });\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy)\n                spyReportEnd();\n            return true;\n        }\n        return false;\n    };\n    ObservableMap.prototype._updateHasMapEntry = function (key, value) {\n        // optimization; don't fill the hasMap if we are not observing, or remove entry if there are no observers anymore\n        var entry = this._hasMap[key];\n        if (entry) {\n            entry.setNewValue(value);\n        }\n        else {\n            entry = this._hasMap[key] = new ObservableValue(value, referenceEnhancer, this.name + \".\" + key + \"?\", false);\n        }\n        return entry;\n    };\n    ObservableMap.prototype._updateValue = function (name, newValue) {\n        var observable$$1 = this._data[name];\n        newValue = observable$$1.prepareNewValue(newValue);\n        if (newValue !== UNCHANGED) {\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this,\n                    oldValue: observable$$1.value,\n                    name: name,\n                    newValue: newValue\n                }\n                : null;\n            if (notifySpy)\n                spyReportStart(change);\n            observable$$1.setNewValue(newValue);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy)\n                spyReportEnd();\n        }\n    };\n    ObservableMap.prototype._addValue = function (name, newValue) {\n        var _this = this;\n        transaction(function () {\n            var observable$$1 = (_this._data[name] = new ObservableValue(newValue, _this.enhancer, _this.name + \".\" + name, false));\n            newValue = observable$$1.value; // value might have been changed\n            _this._updateHasMapEntry(name, true);\n            _this._keys.push(name);\n        });\n        var notifySpy = isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this,\n                name: name,\n                newValue: newValue\n            }\n            : null;\n        if (notifySpy)\n            spyReportStart(change);\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy)\n            spyReportEnd();\n    };\n    ObservableMap.prototype.get = function (key) {\n        key = \"\" + key;\n        if (this.has(key))\n            return this.dehanceValue(this._data[key].get());\n        return this.dehanceValue(undefined);\n    };\n    ObservableMap.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    };\n    ObservableMap.prototype.keys = function () {\n        return arrayAsIterator(this._keys.slice());\n    };\n    ObservableMap.prototype.values = function () {\n        return arrayAsIterator(this._keys.map(this.get, this));\n    };\n    ObservableMap.prototype.entries = function () {\n        var _this = this;\n        return arrayAsIterator(this._keys.map(function (key) { return [key, _this.get(key)]; }));\n    };\n    ObservableMap.prototype.forEach = function (callback, thisArg) {\n        var _this = this;\n        this.keys().forEach(function (key) { return callback.call(thisArg, _this.get(key), key, _this); });\n    };\n    /** Merge another object into this object, returns this. */\n    ObservableMap.prototype.merge = function (other) {\n        var _this = this;\n        if (isObservableMap(other)) {\n            other = other.toJS();\n        }\n        transaction(function () {\n            if (isPlainObject(other))\n                Object.keys(other).forEach(function (key) { return _this.set(key, other[key]); });\n            else if (Array.isArray(other))\n                other.forEach(function (_a) {\n                    var key = _a[0], value = _a[1];\n                    return _this.set(key, value);\n                });\n            else if (isES6Map(other))\n                other.forEach(function (value, key) { return _this.set(key, value); });\n            else if (other !== null && other !== undefined)\n                fail(\"Cannot initialize map from \" + other);\n        });\n        return this;\n    };\n    ObservableMap.prototype.clear = function () {\n        var _this = this;\n        transaction(function () {\n            untracked(function () {\n                _this.keys().forEach(_this.delete, _this);\n            });\n        });\n    };\n    ObservableMap.prototype.replace = function (values) {\n        var _this = this;\n        transaction(function () {\n            // grab all the keys that are present in the new map but not present in the current map\n            // and delete them from the map, then merge the new map\n            // this will cause reactions only on changed values\n            var newKeys = getMapLikeKeys(values);\n            var oldKeys = _this.keys();\n            var missingKeys = oldKeys.filter(function (k) { return newKeys.indexOf(k) === -1; });\n            missingKeys.forEach(function (k) { return _this.delete(k); });\n            _this.merge(values);\n        });\n        return this;\n    };\n    Object.defineProperty(ObservableMap.prototype, \"size\", {\n        get: function () {\n            return this._keys.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a shallow non observable object clone of this map.\n     * Note that the values might still be observable. For a deep clone use mobx.toJS.\n     */\n    ObservableMap.prototype.toJS = function () {\n        var _this = this;\n        var res = {};\n        this.keys().forEach(function (key) { return (res[key] = _this.get(key)); });\n        return res;\n    };\n    ObservableMap.prototype.toJSON = function () {\n        // Used by JSON.stringify\n        return this.toJS();\n    };\n    ObservableMap.prototype.isValidKey = function (key) {\n        if (key === null || key === undefined)\n            return false;\n        if (typeof key === \"string\" || typeof key === \"number\" || typeof key === \"boolean\")\n            return true;\n        return false;\n    };\n    ObservableMap.prototype.assertValidKey = function (key) {\n        if (!this.isValidKey(key))\n            throw new Error(\"[mobx.map] Invalid key: '\" + key + \"', only strings, numbers and booleans are accepted as key in observable maps.\");\n    };\n    ObservableMap.prototype.toString = function () {\n        var _this = this;\n        return (this.name +\n            \"[{ \" +\n            this.keys().map(function (key) { return key + \": \" + (\"\" + _this.get(key)); }).join(\", \") +\n            \" }]\");\n    };\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    ObservableMap.prototype.observe = function (listener, fireImmediately) {\n        invariant(fireImmediately !== true, getMessage(\"m033\"));\n        return registerListener(this, listener);\n    };\n    ObservableMap.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    return ObservableMap;\n}());\ndeclareIterator(ObservableMap.prototype, function () {\n    return this.entries();\n});\nfunction map(initialValues) {\n    deprecated(\"`mobx.map` is deprecated, use `new ObservableMap` or `mobx.observable.map` instead\");\n    return observable.map(initialValues);\n}\n/* 'var' fixes small-build issue */\nvar isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap);\n\nvar EMPTY_ARRAY = [];\nObject.freeze(EMPTY_ARRAY);\nfunction getGlobal() {\n    return typeof window !== \"undefined\" ? window : global;\n}\nfunction getNextId() {\n    return ++globalState.mobxGuid;\n}\nfunction fail(message, thing) {\n    invariant(false, message, thing);\n    throw \"X\"; // unreachable\n}\nfunction invariant(check, message, thing) {\n    if (!check)\n        throw new Error(\"[mobx] Invariant failed: \" + message + (thing ? \" in '\" + thing + \"'\" : \"\"));\n}\n/**\n * Prints a deprecation message, but only one time.\n * Returns false if the deprecated message was already printed before\n */\nvar deprecatedMessages = [];\nfunction deprecated(msg) {\n    if (deprecatedMessages.indexOf(msg) !== -1)\n        return false;\n    deprecatedMessages.push(msg);\n    console.error(\"[mobx] Deprecated: \" + msg);\n    return true;\n}\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nfunction once(func) {\n    var invoked = false;\n    return function () {\n        if (invoked)\n            return;\n        invoked = true;\n        return func.apply(this, arguments);\n    };\n}\nvar noop = function () { };\nfunction unique(list) {\n    var res = [];\n    list.forEach(function (item) {\n        if (res.indexOf(item) === -1)\n            res.push(item);\n    });\n    return res;\n}\nfunction joinStrings(things, limit, separator) {\n    if (limit === void 0) { limit = 100; }\n    if (separator === void 0) { separator = \" - \"; }\n    if (!things)\n        return \"\";\n    var sliced = things.slice(0, limit);\n    return \"\" + sliced.join(separator) + (things.length > limit\n        ? \" (... and \" + (things.length - limit) + \"more)\"\n        : \"\");\n}\nfunction isObject(value) {\n    return value !== null && typeof value === \"object\";\n}\nfunction isPlainObject(value) {\n    if (value === null || typeof value !== \"object\")\n        return false;\n    var proto = Object.getPrototypeOf(value);\n    return proto === Object.prototype || proto === null;\n}\nfunction objectAssign() {\n    var res = arguments[0];\n    for (var i = 1, l = arguments.length; i < l; i++) {\n        var source = arguments[i];\n        for (var key in source)\n            if (hasOwnProperty(source, key)) {\n                res[key] = source[key];\n            }\n    }\n    return res;\n}\nvar prototypeHasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwnProperty(object, propName) {\n    return prototypeHasOwnProperty.call(object, propName);\n}\nfunction makeNonEnumerable(object, propNames) {\n    for (var i = 0; i < propNames.length; i++) {\n        addHiddenProp(object, propNames[i], object[propNames[i]]);\n    }\n}\nfunction addHiddenProp(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value: value\n    });\n}\nfunction addHiddenFinalProp(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value: value\n    });\n}\nfunction isPropertyConfigurable(object, prop) {\n    var descriptor = Object.getOwnPropertyDescriptor(object, prop);\n    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);\n}\nfunction assertPropertyConfigurable(object, prop) {\n    invariant(isPropertyConfigurable(object, prop), \"Cannot make property '\" + prop + \"' observable, it is not configurable and writable in the target object\");\n}\nfunction getEnumerableKeys(obj) {\n    var res = [];\n    for (var key in obj)\n        res.push(key);\n    return res;\n}\n/**\n * Naive deepEqual. Doesn't check for prototype, non-enumerable or out-of-range properties on arrays.\n * If you have such a case, you probably should use this function but something fancier :).\n */\nfunction deepEqual(a, b) {\n    if (a === null && b === null)\n        return true;\n    if (a === undefined && b === undefined)\n        return true;\n    if (areBothNaN(a, b))\n        return true;\n    if (typeof a !== \"object\")\n        return a === b;\n    var aIsArray = isArrayLike(a);\n    var aIsMap = isMapLike(a);\n    if (aIsArray !== isArrayLike(b)) {\n        return false;\n    }\n    else if (aIsMap !== isMapLike(b)) {\n        return false;\n    }\n    else if (aIsArray) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = a.length - 1; i >= 0; i--)\n            if (!deepEqual(a[i], b[i]))\n                return false;\n        return true;\n    }\n    else if (aIsMap) {\n        if (a.size !== b.size)\n            return false;\n        var equals_1 = true;\n        a.forEach(function (value, key) {\n            equals_1 = equals_1 && deepEqual(b.get(key), value);\n        });\n        return equals_1;\n    }\n    else if (typeof a === \"object\" && typeof b === \"object\") {\n        if (a === null || b === null)\n            return false;\n        if (isMapLike(a) && isMapLike(b)) {\n            if (a.size !== b.size)\n                return false;\n            // Freaking inefficient.... Create PR if you run into this :) Much appreciated!\n            return deepEqual(observable.shallowMap(a).entries(), observable.shallowMap(b).entries());\n        }\n        if (getEnumerableKeys(a).length !== getEnumerableKeys(b).length)\n            return false;\n        for (var prop in a) {\n            if (!(prop in b))\n                return false;\n            if (!deepEqual(a[prop], b[prop]))\n                return false;\n        }\n        return true;\n    }\n    return false;\n}\nfunction createInstanceofPredicate(name, clazz) {\n    var propName = \"isMobX\" + name;\n    clazz.prototype[propName] = true;\n    return function (x) {\n        return isObject(x) && x[propName] === true;\n    };\n}\nfunction areBothNaN(a, b) {\n    return (typeof a === \"number\" && typeof b === \"number\" && isNaN(a) && isNaN(b));\n}\n/**\n * Returns whether the argument is an array, disregarding observability.\n */\nfunction isArrayLike(x) {\n    return Array.isArray(x) || isObservableArray(x);\n}\nfunction isMapLike(x) {\n    return isES6Map(x) || isObservableMap(x);\n}\nfunction isES6Map(thing) {\n    if (getGlobal().Map !== undefined && thing instanceof getGlobal().Map)\n        return true;\n    return false;\n}\nfunction getMapLikeKeys(map$$1) {\n    var keys;\n    if (isPlainObject(map$$1))\n        keys = Object.keys(map$$1);\n    else if (Array.isArray(map$$1))\n        keys = map$$1.map(function (_a) {\n            var key = _a[0];\n            return key;\n        });\n    else if (isMapLike(map$$1))\n        keys = Array.from(map$$1.keys());\n    else\n        fail(\"Cannot get keys from \" + map$$1);\n    return keys;\n}\nfunction primitiveSymbol() {\n    return (typeof Symbol === \"function\" && Symbol.toPrimitive) || \"@@toPrimitive\";\n}\nfunction toPrimitive(value) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value;\n}\n\n/**\n * These values will persist if global state is reset\n */\nvar persistentKeys = [\"mobxGuid\", \"resetId\", \"spyListeners\", \"strictMode\", \"runId\"];\nvar MobXGlobals = (function () {\n    function MobXGlobals() {\n        /**\n         * MobXGlobals version.\n         * MobX compatiblity with other versions loaded in memory as long as this version matches.\n         * It indicates that the global state still stores similar information\n         */\n        this.version = 5;\n        /**\n         * Currently running derivation\n         */\n        this.trackingDerivation = null;\n        /**\n         * Are we running a computation currently? (not a reaction)\n         */\n        this.computationDepth = 0;\n        /**\n         * Each time a derivation is tracked, it is assigned a unique run-id\n         */\n        this.runId = 0;\n        /**\n         * 'guid' for general purpose. Will be persisted amongst resets.\n         */\n        this.mobxGuid = 0;\n        /**\n         * Are we in a batch block? (and how many of them)\n         */\n        this.inBatch = 0;\n        /**\n         * Observables that don't have observers anymore, and are about to be\n         * suspended, unless somebody else accesses it in the same batch\n         *\n         * @type {IObservable[]}\n         */\n        this.pendingUnobservations = [];\n        /**\n         * List of scheduled, not yet executed, reactions.\n         */\n        this.pendingReactions = [];\n        /**\n         * Are we currently processing reactions?\n         */\n        this.isRunningReactions = false;\n        /**\n         * Is it allowed to change observables at this point?\n         * In general, MobX doesn't allow that when running computations and React.render.\n         * To ensure that those functions stay pure.\n         */\n        this.allowStateChanges = true;\n        /**\n         * If strict mode is enabled, state changes are by default not allowed\n         */\n        this.strictMode = false;\n        /**\n         * Used by createTransformer to detect that the global state has been reset.\n         */\n        this.resetId = 0;\n        /**\n         * Spy callbacks\n         */\n        this.spyListeners = [];\n        /**\n         * Globally attached error handlers that react specifically to errors in reactions\n         */\n        this.globalReactionErrorHandlers = [];\n    }\n    return MobXGlobals;\n}());\nvar globalState = new MobXGlobals();\nvar shareGlobalStateCalled = false;\nvar runInIsolationCalled = false;\nvar warnedAboutMultipleInstances = false;\n{\n    var global_1 = getGlobal();\n    if (!global_1.__mobxInstanceCount) {\n        global_1.__mobxInstanceCount = 1;\n    }\n    else {\n        global_1.__mobxInstanceCount++;\n        setTimeout(function () {\n            if (!shareGlobalStateCalled && !runInIsolationCalled && !warnedAboutMultipleInstances) {\n                warnedAboutMultipleInstances = true;\n                console.warn(\"[mobx] Warning: there are multiple mobx instances active. This might lead to unexpected results. See https://github.com/mobxjs/mobx/issues/1082 for details.\");\n            }\n        });\n    }\n}\nfunction isolateGlobalState() {\n    runInIsolationCalled = true;\n    getGlobal().__mobxInstanceCount--;\n}\nfunction shareGlobalState() {\n    // TODO: remove in 4.0; just use peer dependencies instead.\n    deprecated(\"Using `shareGlobalState` is not recommended, use peer dependencies instead. See https://github.com/mobxjs/mobx/issues/1082 for details.\");\n    shareGlobalStateCalled = true;\n    var global = getGlobal();\n    var ownState = globalState;\n    /**\n     * Backward compatibility check\n     */\n    if (global.__mobservableTrackingStack || global.__mobservableViewStack)\n        throw new Error(\"[mobx] An incompatible version of mobservable is already loaded.\");\n    if (global.__mobxGlobal && global.__mobxGlobal.version !== ownState.version)\n        throw new Error(\"[mobx] An incompatible version of mobx is already loaded.\");\n    if (global.__mobxGlobal)\n        globalState = global.__mobxGlobal;\n    else\n        global.__mobxGlobal = ownState;\n}\nfunction getGlobalState() {\n    return globalState;\n}\n\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nfunction resetGlobalState() {\n    globalState.resetId++;\n    var defaultGlobals = new MobXGlobals();\n    for (var key in defaultGlobals)\n        if (persistentKeys.indexOf(key) === -1)\n            globalState[key] = defaultGlobals[key];\n    globalState.allowStateChanges = !globalState.strictMode;\n}\n\nfunction hasObservers(observable) {\n    return observable.observers && observable.observers.length > 0;\n}\nfunction getObservers(observable) {\n    return observable.observers;\n}\nfunction addObserver(observable, node) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n    var l = observable.observers.length;\n    if (l) {\n        // because object assignment is relatively expensive, let's not store data about index 0.\n        observable.observersIndexes[node.__mapid] = l;\n    }\n    observable.observers[l] = node;\n    if (observable.lowestObserverState > node.dependenciesState)\n        observable.lowestObserverState = node.dependenciesState;\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\nfunction removeObserver(observable, node) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    if (observable.observers.length === 1) {\n        // deleting last observer\n        observable.observers.length = 0;\n        queueForUnobservation(observable);\n    }\n    else {\n        // deleting from _observersIndexes is straight forward, to delete from _observers, let's swap `node` with last element\n        var list = observable.observers;\n        var map = observable.observersIndexes;\n        var filler = list.pop(); // get last element, which should fill the place of `node`, so the array doesn't have holes\n        if (filler !== node) {\n            // otherwise node was the last element, which already got removed from array\n            var index = map[node.__mapid] || 0; // getting index of `node`. this is the only place we actually use map.\n            if (index) {\n                // map store all indexes but 0, see comment in `addObserver`\n                map[filler.__mapid] = index;\n            }\n            else {\n                delete map[filler.__mapid];\n            }\n            list[index] = filler;\n        }\n        delete map[node.__mapid];\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\nfunction queueForUnobservation(observable) {\n    if (!observable.isPendingUnobservation) {\n        // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation = true;\n        globalState.pendingUnobservations.push(observable);\n    }\n}\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nfunction startBatch() {\n    globalState.inBatch++;\n}\nfunction endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions();\n        // the batch is actually about to finish, all unobserving should happen here.\n        var list = globalState.pendingUnobservations;\n        for (var i = 0; i < list.length; i++) {\n            var observable = list[i];\n            observable.isPendingUnobservation = false;\n            if (observable.observers.length === 0) {\n                observable.onBecomeUnobserved();\n                // NOTE: onBecomeUnobserved might push to `pendingUnobservations`\n            }\n        }\n        globalState.pendingUnobservations = [];\n    }\n}\nfunction reportObserved(observable) {\n    var derivation = globalState.trackingDerivation;\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId !== observable.lastAccessedBy) {\n            observable.lastAccessedBy = derivation.runId;\n            derivation.newObserving[derivation.unboundDepsCount++] = observable;\n        }\n    }\n    else if (observable.observers.length === 0) {\n        queueForUnobservation(observable);\n    }\n}\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n// Called by Atom when its value changes\nfunction propagateChanged(observable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState === exports.IDerivationState.STALE)\n        return;\n    observable.lowestObserverState = exports.IDerivationState.STALE;\n    var observers = observable.observers;\n    var i = observers.length;\n    while (i--) {\n        var d = observers[i];\n        if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE)\n            d.onBecomeStale();\n        d.dependenciesState = exports.IDerivationState.STALE;\n    }\n    // invariantLOS(observable, \"changed end\");\n}\n// Called by ComputedValue when it recalculate and its value changed\nfunction propagateChangeConfirmed(observable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState === exports.IDerivationState.STALE)\n        return;\n    observable.lowestObserverState = exports.IDerivationState.STALE;\n    var observers = observable.observers;\n    var i = observers.length;\n    while (i--) {\n        var d = observers[i];\n        if (d.dependenciesState === exports.IDerivationState.POSSIBLY_STALE)\n            d.dependenciesState = exports.IDerivationState.STALE;\n        else if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE // this happens during computing of `d`, just keep lowestObserverState up to date.\n        )\n            observable.lowestObserverState = exports.IDerivationState.UP_TO_DATE;\n    }\n    // invariantLOS(observable, \"confirmed end\");\n}\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nfunction propagateMaybeChanged(observable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState !== exports.IDerivationState.UP_TO_DATE)\n        return;\n    observable.lowestObserverState = exports.IDerivationState.POSSIBLY_STALE;\n    var observers = observable.observers;\n    var i = observers.length;\n    while (i--) {\n        var d = observers[i];\n        if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE) {\n            d.dependenciesState = exports.IDerivationState.POSSIBLY_STALE;\n            d.onBecomeStale();\n        }\n    }\n    // invariantLOS(observable, \"maybe end\");\n}\n\n(function (IDerivationState) {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    IDerivationState[IDerivationState[\"NOT_TRACKING\"] = -1] = \"NOT_TRACKING\";\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    IDerivationState[IDerivationState[\"UP_TO_DATE\"] = 0] = \"UP_TO_DATE\";\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    IDerivationState[IDerivationState[\"POSSIBLY_STALE\"] = 1] = \"POSSIBLY_STALE\";\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    IDerivationState[IDerivationState[\"STALE\"] = 2] = \"STALE\";\n})(exports.IDerivationState || (exports.IDerivationState = {}));\nvar CaughtException = (function () {\n    function CaughtException(cause) {\n        this.cause = cause;\n        // Empty\n    }\n    return CaughtException;\n}());\nfunction isCaughtException(e) {\n    return e instanceof CaughtException;\n}\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nfunction shouldCompute(derivation) {\n    switch (derivation.dependenciesState) {\n        case exports.IDerivationState.UP_TO_DATE:\n            return false;\n        case exports.IDerivationState.NOT_TRACKING:\n        case exports.IDerivationState.STALE:\n            return true;\n        case exports.IDerivationState.POSSIBLY_STALE: {\n            var prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            var obs = derivation.observing, l = obs.length;\n            for (var i = 0; i < l; i++) {\n                var obj = obs[i];\n                if (isComputedValue(obj)) {\n                    try {\n                        obj.get();\n                    }\n                    catch (e) {\n                        // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                        untrackedEnd(prevUntracked);\n                        return true;\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    if (derivation.dependenciesState === exports.IDerivationState.STALE) {\n                        untrackedEnd(prevUntracked);\n                        return true;\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation);\n            untrackedEnd(prevUntracked);\n            return false;\n        }\n    }\n}\nfunction isComputingDerivation() {\n    return globalState.trackingDerivation !== null; // filter out actions inside computations\n}\nfunction checkIfStateModificationsAreAllowed(atom) {\n    var hasObservers$$1 = atom.observers.length > 0;\n    // Should never be possible to change an observed observable from inside computed, see #798\n    if (globalState.computationDepth > 0 && hasObservers$$1)\n        fail(getMessage(\"m031\") + atom.name);\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (!globalState.allowStateChanges && hasObservers$$1)\n        fail(getMessage(globalState.strictMode ? \"m030a\" : \"m030b\") + atom.name);\n}\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nfunction trackDerivedFunction(derivation, f, context) {\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation);\n    derivation.newObserving = new Array(derivation.observing.length + 100);\n    derivation.unboundDepsCount = 0;\n    derivation.runId = ++globalState.runId;\n    var prevTracking = globalState.trackingDerivation;\n    globalState.trackingDerivation = derivation;\n    var result;\n    try {\n        result = f.call(context);\n    }\n    catch (e) {\n        result = new CaughtException(e);\n    }\n    globalState.trackingDerivation = prevTracking;\n    bindDependencies(derivation);\n    return result;\n}\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    var prevObserving = derivation.observing;\n    var observing = (derivation.observing = derivation.newObserving);\n    var lowestNewObservingDerivationState = exports.IDerivationState.UP_TO_DATE;\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    var i0 = 0, l = derivation.unboundDepsCount;\n    for (var i = 0; i < l; i++) {\n        var dep = observing[i];\n        if (dep.diffValue === 0) {\n            dep.diffValue = 1;\n            if (i0 !== i)\n                observing[i0] = dep;\n            i0++;\n        }\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if (dep.dependenciesState > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = dep.dependenciesState;\n        }\n    }\n    observing.length = i0;\n    derivation.newObserving = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length;\n    while (l--) {\n        var dep = prevObserving[l];\n        if (dep.diffValue === 0) {\n            removeObserver(dep, derivation);\n        }\n        dep.diffValue = 0;\n    }\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        var dep = observing[i0];\n        if (dep.diffValue === 1) {\n            dep.diffValue = 0;\n            addObserver(dep, derivation);\n        }\n    }\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== exports.IDerivationState.UP_TO_DATE) {\n        derivation.dependenciesState = lowestNewObservingDerivationState;\n        derivation.onBecomeStale();\n    }\n}\nfunction clearObserving(derivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    var obs = derivation.observing;\n    derivation.observing = [];\n    var i = obs.length;\n    while (i--)\n        removeObserver(obs[i], derivation);\n    derivation.dependenciesState = exports.IDerivationState.NOT_TRACKING;\n}\nfunction untracked(action) {\n    var prev = untrackedStart();\n    var res = action();\n    untrackedEnd(prev);\n    return res;\n}\nfunction untrackedStart() {\n    var prev = globalState.trackingDerivation;\n    globalState.trackingDerivation = null;\n    return prev;\n}\nfunction untrackedEnd(prev) {\n    globalState.trackingDerivation = prev;\n}\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nfunction changeDependenciesStateTo0(derivation) {\n    if (derivation.dependenciesState === exports.IDerivationState.UP_TO_DATE)\n        return;\n    derivation.dependenciesState = exports.IDerivationState.UP_TO_DATE;\n    var obs = derivation.observing;\n    var i = obs.length;\n    while (i--)\n        obs[i].lowestObserverState = exports.IDerivationState.UP_TO_DATE;\n}\n\nvar Reaction = (function () {\n    function Reaction(name, onInvalidate) {\n        if (name === void 0) { name = \"Reaction@\" + getNextId(); }\n        this.name = name;\n        this.onInvalidate = onInvalidate;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = [];\n        this.dependenciesState = exports.IDerivationState.NOT_TRACKING;\n        this.diffValue = 0;\n        this.runId = 0;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId();\n        this.isDisposed = false;\n        this._isScheduled = false;\n        this._isTrackPending = false;\n        this._isRunning = false;\n    }\n    Reaction.prototype.onBecomeStale = function () {\n        this.schedule();\n    };\n    Reaction.prototype.schedule = function () {\n        if (!this._isScheduled) {\n            this._isScheduled = true;\n            globalState.pendingReactions.push(this);\n            runReactions();\n        }\n    };\n    Reaction.prototype.isScheduled = function () {\n        return this._isScheduled;\n    };\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    Reaction.prototype.runReaction = function () {\n        if (!this.isDisposed) {\n            startBatch();\n            this._isScheduled = false;\n            if (shouldCompute(this)) {\n                this._isTrackPending = true;\n                this.onInvalidate();\n                if (this._isTrackPending && isSpyEnabled()) {\n                    // onInvalidate didn't trigger track right away..\n                    spyReport({\n                        object: this,\n                        type: \"scheduled-reaction\"\n                    });\n                }\n            }\n            endBatch();\n        }\n    };\n    Reaction.prototype.track = function (fn) {\n        startBatch();\n        var notify = isSpyEnabled();\n        var startTime;\n        if (notify) {\n            startTime = Date.now();\n            spyReportStart({\n                object: this,\n                type: \"reaction\",\n                fn: fn\n            });\n        }\n        this._isRunning = true;\n        var result = trackDerivedFunction(this, fn, undefined);\n        this._isRunning = false;\n        this._isTrackPending = false;\n        if (this.isDisposed) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this);\n        }\n        if (isCaughtException(result))\n            this.reportExceptionInDerivation(result.cause);\n        if (notify) {\n            spyReportEnd({\n                time: Date.now() - startTime\n            });\n        }\n        endBatch();\n    };\n    Reaction.prototype.reportExceptionInDerivation = function (error) {\n        var _this = this;\n        if (this.errorHandler) {\n            this.errorHandler(error, this);\n            return;\n        }\n        var message = \"[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '\" + this;\n        var messageToUser = getMessage(\"m037\");\n        console.error(message || messageToUser /* latter will not be true, make sure uglify doesn't remove */, error);\n        /** If debugging brought you here, please, read the above message :-). Tnx! */\n        if (isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                message: message,\n                error: error,\n                object: this\n            });\n        }\n        globalState.globalReactionErrorHandlers.forEach(function (f) { return f(error, _this); });\n    };\n    Reaction.prototype.dispose = function () {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            if (!this._isRunning) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch();\n                clearObserving(this);\n                endBatch();\n            }\n        }\n    };\n    Reaction.prototype.getDisposer = function () {\n        var r = this.dispose.bind(this);\n        r.$mobx = this;\n        r.onError = registerErrorHandler;\n        return r;\n    };\n    Reaction.prototype.toString = function () {\n        return \"Reaction[\" + this.name + \"]\";\n    };\n    Reaction.prototype.whyRun = function () {\n        var observing = unique(this._isRunning ? this.newObserving : this.observing).map(function (dep) { return dep.name; });\n        return \"\\nWhyRun? reaction '\" + this.name + \"':\\n * Status: [\" + (this.isDisposed\n            ? \"stopped\"\n            : this._isRunning ? \"running\" : this.isScheduled() ? \"scheduled\" : \"idle\") + \"]\\n * This reaction will re-run if any of the following observables changes:\\n    \" + joinStrings(observing) + \"\\n    \" + (this._isRunning\n            ? \" (... or any observable accessed during the remainder of the current run)\"\n            : \"\") + \"\\n\\t\" + getMessage(\"m038\") + \"\\n\";\n    };\n    return Reaction;\n}());\nfunction registerErrorHandler(handler) {\n    invariant(this && this.$mobx && isReaction(this.$mobx), \"Invalid `this`\");\n    invariant(!this.$mobx.errorHandler, \"Only one onErrorHandler can be registered\");\n    this.$mobx.errorHandler = handler;\n}\nfunction onReactionError(handler) {\n    globalState.globalReactionErrorHandlers.push(handler);\n    return function () {\n        var idx = globalState.globalReactionErrorHandlers.indexOf(handler);\n        if (idx >= 0)\n            globalState.globalReactionErrorHandlers.splice(idx, 1);\n    };\n}\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nvar MAX_REACTION_ITERATIONS = 100;\nvar reactionScheduler = function (f) { return f(); };\nfunction runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions)\n        return;\n    reactionScheduler(runReactionsHelper);\n}\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true;\n    var allReactions = globalState.pendingReactions;\n    var iterations = 0;\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(\"Reaction doesn't converge to a stable state after \" + MAX_REACTION_ITERATIONS + \" iterations.\" +\n                (\" Probably there is a cycle in the reactive function: \" + allReactions[0]));\n            allReactions.splice(0); // clear reactions\n        }\n        var remainingReactions = allReactions.splice(0);\n        for (var i = 0, l = remainingReactions.length; i < l; i++)\n            remainingReactions[i].runReaction();\n    }\n    globalState.isRunningReactions = false;\n}\nvar isReaction = createInstanceofPredicate(\"Reaction\", Reaction);\nfunction setReactionScheduler(fn) {\n    var baseScheduler = reactionScheduler;\n    reactionScheduler = function (f) { return fn(function () { return baseScheduler(f); }); };\n}\n\nfunction asReference(value) {\n    deprecated(\"asReference is deprecated, use observable.ref instead\");\n    return observable.ref(value);\n}\nfunction asStructure(value) {\n    deprecated(\"asStructure is deprecated. Use observable.struct, computed.struct or reaction options instead.\");\n    return observable.struct(value);\n}\nfunction asFlat(value) {\n    deprecated(\"asFlat is deprecated, use observable.shallow instead\");\n    return observable.shallow(value);\n}\nfunction asMap(data) {\n    deprecated(\"asMap is deprecated, use observable.map or observable.shallowMap instead\");\n    return observable.map(data || {});\n}\n\nfunction createComputedDecorator(equals) {\n    return createClassPropertyDecorator(function (target, name, _, __, originalDescriptor) {\n        invariant(typeof originalDescriptor !== \"undefined\", getMessage(\"m009\"));\n        invariant(typeof originalDescriptor.get === \"function\", getMessage(\"m010\"));\n        var adm = asObservableObject(target, \"\");\n        defineComputedProperty(adm, name, originalDescriptor.get, originalDescriptor.set, equals, false);\n    }, function (name) {\n        var observable = this.$mobx.values[name];\n        if (observable === undefined // See #505\n        )\n            return undefined;\n        return observable.get();\n    }, function (name, value) {\n        this.$mobx.values[name].set(value);\n    }, false, false);\n}\nvar computedDecorator = createComputedDecorator(comparer.default);\nvar computedStructDecorator = createComputedDecorator(comparer.structural);\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nvar computed = function computed(arg1, arg2, arg3) {\n    if (typeof arg2 === \"string\") {\n        return computedDecorator.apply(null, arguments);\n    }\n    invariant(typeof arg1 === \"function\", getMessage(\"m011\"));\n    invariant(arguments.length < 3, getMessage(\"m012\"));\n    var opts = typeof arg2 === \"object\" ? arg2 : {};\n    opts.setter = typeof arg2 === \"function\" ? arg2 : opts.setter;\n    var equals = opts.equals\n        ? opts.equals\n        : opts.compareStructural || opts.struct ? comparer.structural : comparer.default;\n    return new ComputedValue(arg1, opts.context, equals, opts.name || arg1.name || \"\", opts.setter);\n};\ncomputed.struct = computedStructDecorator;\ncomputed.equals = createComputedDecorator;\n\nfunction getAtom(thing, property) {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            invariant(property === undefined, getMessage(\"m036\"));\n            return thing.$mobx.atom;\n        }\n        if (isObservableMap(thing)) {\n            var anyThing = thing;\n            if (property === undefined)\n                return getAtom(anyThing._keys);\n            var observable = anyThing._data[property] || anyThing._hasMap[property];\n            invariant(!!observable, \"the entry '\" + property + \"' does not exist in the observable map '\" + getDebugName(thing) + \"'\");\n            return observable;\n        }\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        runLazyInitializers(thing);\n        if (property && !thing.$mobx)\n            thing[property]; // See #1072 // TODO: remove in 4.0\n        if (isObservableObject(thing)) {\n            if (!property)\n                return fail(\"please specify a property\");\n            var observable = thing.$mobx.values[property];\n            invariant(!!observable, \"no observable property '\" + property + \"' found on the observable object '\" + getDebugName(thing) + \"'\");\n            return observable;\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing;\n        }\n    }\n    else if (typeof thing === \"function\") {\n        if (isReaction(thing.$mobx)) {\n            // disposer function\n            return thing.$mobx;\n        }\n    }\n    return fail(\"Cannot obtain atom from \" + thing);\n}\nfunction getAdministration(thing, property) {\n    invariant(thing, \"Expecting some object\");\n    if (property !== undefined)\n        return getAdministration(getAtom(thing, property));\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing))\n        return thing;\n    if (isObservableMap(thing))\n        return thing;\n    // Initializers run lazily when transpiling to babel, so make sure they are run...\n    runLazyInitializers(thing);\n    if (thing.$mobx)\n        return thing.$mobx;\n    invariant(false, \"Cannot obtain administration from \" + thing);\n}\nfunction getDebugName(thing, property) {\n    var named;\n    if (property !== undefined)\n        named = getAtom(thing, property);\n    else if (isObservableObject(thing) || isObservableMap(thing))\n        named = getAdministration(thing);\n    else\n        named = getAtom(thing); // valid for arrays as well\n    return named.name;\n}\n\nfunction isComputed(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (isObservableObject(value) === false)\n            return false;\n        if (!value.$mobx.values[property])\n            return false;\n        var atom = getAtom(value, property);\n        return isComputedValue(atom);\n    }\n    return isComputedValue(value);\n}\n\nfunction observe(thing, propOrCb, cbOrFire, fireImmediately) {\n    if (typeof cbOrFire === \"function\")\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n    else\n        return observeObservable(thing, propOrCb, cbOrFire);\n}\nfunction observeObservable(thing, listener, fireImmediately) {\n    return getAdministration(thing).observe(listener, fireImmediately);\n}\nfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n    return getAdministration(thing, property).observe(listener, fireImmediately);\n}\n\nfunction intercept(thing, propOrHandler, handler) {\n    if (typeof handler === \"function\")\n        return interceptProperty(thing, propOrHandler, handler);\n    else\n        return interceptInterceptable(thing, propOrHandler);\n}\nfunction interceptInterceptable(thing, handler) {\n    return getAdministration(thing).intercept(handler);\n}\nfunction interceptProperty(thing, property, handler) {\n    return getAdministration(thing, property).intercept(handler);\n}\n\n/**\n * expr can be used to create temporarily views inside views.\n * This can be improved to improve performance if a value changes often, but usually doesn't affect the outcome of an expression.\n *\n * In the following example the expression prevents that a component is rerender _each time_ the selection changes;\n * instead it will only rerenders when the current todo is (de)selected.\n *\n * reactiveComponent((props) => {\n *     const todo = props.todo;\n *     const isSelected = mobx.expr(() => props.viewState.selection === todo);\n *     return <div className={isSelected ? \"todo todo-selected\" : \"todo\"}>{todo.title}</div>\n * });\n *\n */\nfunction expr(expr, scope) {\n    if (!isComputingDerivation())\n        console.warn(getMessage(\"m013\"));\n    // optimization: would be more efficient if the expr itself wouldn't be evaluated first on the next change, but just a 'changed' signal would be fired\n    return computed(expr, { context: scope }).get();\n}\n\nfunction toJS(source, detectCycles, __alreadySeen) {\n    if (detectCycles === void 0) { detectCycles = true; }\n    if (__alreadySeen === void 0) { __alreadySeen = []; }\n    // optimization: using ES6 map would be more efficient!\n    // optimization: lift this function outside toJS, this makes recursion expensive\n    function cache(value) {\n        if (detectCycles)\n            __alreadySeen.push([source, value]);\n        return value;\n    }\n    if (isObservable(source)) {\n        if (detectCycles && __alreadySeen === null)\n            __alreadySeen = [];\n        if (detectCycles && source !== null && typeof source === \"object\") {\n            for (var i = 0, l = __alreadySeen.length; i < l; i++)\n                if (__alreadySeen[i][0] === source)\n                    return __alreadySeen[i][1];\n        }\n        if (isObservableArray(source)) {\n            var res = cache([]);\n            var toAdd = source.map(function (value) { return toJS(value, detectCycles, __alreadySeen); });\n            res.length = toAdd.length;\n            for (var i = 0, l = toAdd.length; i < l; i++)\n                res[i] = toAdd[i];\n            return res;\n        }\n        if (isObservableObject(source)) {\n            var res = cache({});\n            for (var key in source)\n                res[key] = toJS(source[key], detectCycles, __alreadySeen);\n            return res;\n        }\n        if (isObservableMap(source)) {\n            var res_1 = cache({});\n            source.forEach(function (value, key) { return (res_1[key] = toJS(value, detectCycles, __alreadySeen)); });\n            return res_1;\n        }\n        if (isObservableValue(source))\n            return toJS(source.get(), detectCycles, __alreadySeen);\n    }\n    return source;\n}\n\nfunction createTransformer(transformer, onCleanup) {\n    invariant(typeof transformer === \"function\" && transformer.length < 2, \"createTransformer expects a function that accepts one argument\");\n    // Memoizes: object id -> reactive view that applies transformer to the object\n    var objectCache = {};\n    // If the resetId changes, we will clear the object cache, see #163\n    // This construction is used to avoid leaking refs to the objectCache directly\n    var resetId = globalState.resetId;\n    // Local transformer class specifically for this transformer\n    var Transformer = (function (_super) {\n        __extends(Transformer, _super);\n        function Transformer(sourceIdentifier, sourceObject) {\n            var _this = _super.call(this, function () { return transformer(sourceObject); }, undefined, comparer.default, \"Transformer-\" + transformer.name + \"-\" + sourceIdentifier, undefined) || this;\n            _this.sourceIdentifier = sourceIdentifier;\n            _this.sourceObject = sourceObject;\n            return _this;\n        }\n        Transformer.prototype.onBecomeUnobserved = function () {\n            var lastValue = this.value;\n            _super.prototype.onBecomeUnobserved.call(this);\n            delete objectCache[this.sourceIdentifier];\n            if (onCleanup)\n                onCleanup(lastValue, this.sourceObject);\n        };\n        return Transformer;\n    }(ComputedValue));\n    return function (object) {\n        if (resetId !== globalState.resetId) {\n            objectCache = {};\n            resetId = globalState.resetId;\n        }\n        var identifier = getMemoizationId(object);\n        var reactiveTransformer = objectCache[identifier];\n        if (reactiveTransformer)\n            return reactiveTransformer.get();\n        // Not in cache; create a reactive view\n        reactiveTransformer = objectCache[identifier] = new Transformer(identifier, object);\n        return reactiveTransformer.get();\n    };\n}\nfunction getMemoizationId(object) {\n    if (typeof object === \"string\" || typeof object === \"number\")\n        return object;\n    if (object === null || typeof object !== \"object\")\n        throw new Error(\"[mobx] transform expected some kind of object or primitive value, got: \" + object);\n    var tid = object.$transformId;\n    if (tid === undefined) {\n        tid = getNextId();\n        addHiddenProp(object, \"$transformId\", tid);\n    }\n    return tid;\n}\n\nfunction log(msg) {\n    console.log(msg);\n    return msg;\n}\nfunction whyRun(thing, prop) {\n    switch (arguments.length) {\n        case 0:\n            thing = globalState.trackingDerivation;\n            if (!thing)\n                return log(getMessage(\"m024\"));\n            break;\n        case 2:\n            thing = getAtom(thing, prop);\n            break;\n    }\n    thing = getAtom(thing);\n    if (isComputedValue(thing))\n        return log(thing.whyRun());\n    else if (isReaction(thing))\n        return log(thing.whyRun());\n    return fail(getMessage(\"m025\"));\n}\n\nfunction getDependencyTree(thing, property) {\n    return nodeToDependencyTree(getAtom(thing, property));\n}\nfunction nodeToDependencyTree(node) {\n    var result = {\n        name: node.name\n    };\n    if (node.observing && node.observing.length > 0)\n        result.dependencies = unique(node.observing).map(nodeToDependencyTree);\n    return result;\n}\nfunction getObserverTree(thing, property) {\n    return nodeToObserverTree(getAtom(thing, property));\n}\nfunction nodeToObserverTree(node) {\n    var result = {\n        name: node.name\n    };\n    if (hasObservers(node))\n        result.observers = getObservers(node).map(nodeToObserverTree);\n    return result;\n}\n\nfunction interceptReads(thing, propOrHandler, handler) {\n    var target;\n    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n        target = getAdministration(thing);\n    }\n    else if (isObservableObject(thing)) {\n        if (typeof propOrHandler !== \"string\")\n            return fail(\"InterceptReads can only be used with a specific property, not with an object in general\");\n        target = getAdministration(thing, propOrHandler);\n    }\n    else {\n        return fail(\"Expected observable map, object or array as first array\");\n    }\n    if (target.dehancer !== undefined)\n        return fail(\"An intercept reader was already established\");\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler;\n    return function () {\n        target.dehancer = undefined;\n    };\n}\n\n/**\n * (c) Michel Weststrate 2015 - 2016\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get an global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nvar extras = {\n    allowStateChanges: allowStateChanges,\n    deepEqual: deepEqual,\n    getAtom: getAtom,\n    getDebugName: getDebugName,\n    getDependencyTree: getDependencyTree,\n    getAdministration: getAdministration,\n    getGlobalState: getGlobalState,\n    getObserverTree: getObserverTree,\n    interceptReads: interceptReads,\n    isComputingDerivation: isComputingDerivation,\n    isSpyEnabled: isSpyEnabled,\n    onReactionError: onReactionError,\n    reserveArrayBuffer: reserveArrayBuffer,\n    resetGlobalState: resetGlobalState,\n    isolateGlobalState: isolateGlobalState,\n    shareGlobalState: shareGlobalState,\n    spyReport: spyReport,\n    spyReportEnd: spyReportEnd,\n    spyReportStart: spyReportStart,\n    setReactionScheduler: setReactionScheduler\n};\nvar everything = {\n    Reaction: Reaction,\n    untracked: untracked,\n    Atom: Atom,\n    BaseAtom: BaseAtom,\n    useStrict: useStrict,\n    isStrictModeEnabled: isStrictModeEnabled,\n    spy: spy,\n    comparer: comparer,\n    asReference: asReference,\n    asFlat: asFlat,\n    asStructure: asStructure,\n    asMap: asMap,\n    isModifierDescriptor: isModifierDescriptor,\n    isObservableObject: isObservableObject,\n    isBoxedObservable: isObservableValue,\n    isObservableArray: isObservableArray,\n    ObservableMap: ObservableMap,\n    isObservableMap: isObservableMap,\n    map: map,\n    transaction: transaction,\n    observable: observable,\n    computed: computed,\n    isObservable: isObservable,\n    isComputed: isComputed,\n    extendObservable: extendObservable,\n    extendShallowObservable: extendShallowObservable,\n    observe: observe,\n    intercept: intercept,\n    autorun: autorun,\n    autorunAsync: autorunAsync,\n    when: when,\n    reaction: reaction,\n    action: action,\n    isAction: isAction,\n    runInAction: runInAction,\n    expr: expr,\n    toJS: toJS,\n    createTransformer: createTransformer,\n    whyRun: whyRun,\n    isArrayLike: isArrayLike,\n    extras: extras\n};\nvar warnedAboutDefaultExport = false;\nvar _loop_1 = function (p) {\n    var val = everything[p];\n    Object.defineProperty(everything, p, {\n        get: function () {\n            if (!warnedAboutDefaultExport) {\n                warnedAboutDefaultExport = true;\n                console.warn(\"Using default export (`import mobx from 'mobx'`) is deprecated \" +\n                    \"and won’t work in mobx@4.0.0\\n\" +\n                    \"Use `import * as mobx from 'mobx'` instead\");\n            }\n            return val;\n        }\n    });\n};\nfor (var p in everything) {\n    _loop_1(p);\n}\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({ spy: spy, extras: extras });\n}\n\nexports.extras = extras;\nexports['default'] = everything;\nexports.Reaction = Reaction;\nexports.untracked = untracked;\nexports.Atom = Atom;\nexports.BaseAtom = BaseAtom;\nexports.useStrict = useStrict;\nexports.isStrictModeEnabled = isStrictModeEnabled;\nexports.spy = spy;\nexports.comparer = comparer;\nexports.asReference = asReference;\nexports.asFlat = asFlat;\nexports.asStructure = asStructure;\nexports.asMap = asMap;\nexports.isModifierDescriptor = isModifierDescriptor;\nexports.isObservableObject = isObservableObject;\nexports.isBoxedObservable = isObservableValue;\nexports.isObservableArray = isObservableArray;\nexports.ObservableMap = ObservableMap;\nexports.isObservableMap = isObservableMap;\nexports.map = map;\nexports.transaction = transaction;\nexports.observable = observable;\nexports.computed = computed;\nexports.isObservable = isObservable;\nexports.isComputed = isComputed;\nexports.extendObservable = extendObservable;\nexports.extendShallowObservable = extendShallowObservable;\nexports.observe = observe;\nexports.intercept = intercept;\nexports.autorun = autorun;\nexports.autorunAsync = autorunAsync;\nexports.when = when;\nexports.reaction = reaction;\nexports.action = action;\nexports.isAction = isAction;\nexports.runInAction = runInAction;\nexports.expr = expr;\nexports.toJS = toJS;\nexports.createTransformer = createTransformer;\nexports.whyRun = whyRun;\nexports.isArrayLike = isArrayLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mobx/lib/mobx.js\n// module id = 5\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/custom-react-scripts/~/promise/lib/core.js\n// module id = 7\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/shallowEqual.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 9\n// module chunks = 0","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"konva\"), require(\"react-reconciler\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([, , ], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactKonva\"] = factory(require(\"react\"), require(\"konva\"), require(\"react-reconciler\"));\n\telse\n\t\troot[\"ReactKonva\"] = factory(root[\"React\"], root[\"Konva\"], root[undefined]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Based on ReactKonva.js\n * Copyright (c) 2017-present Lavrenov Anton.\n * All rights reserved.\n *\n * MIT\n */\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar invariant = __webpack_require__(3);\nvar emptyObject = __webpack_require__(4);\nvar React = __webpack_require__(5);\nvar Konva = __webpack_require__(6);\nvar ReactFiberReconciler = __webpack_require__(7);\nvar ReactDOMFrameScheduling = __webpack_require__(8);\n\nvar Component = React.Component;\n\n\nvar propsToSkip = { children: true, ref: true, key: true, style: true };\n\nvar warningShowed = false;\n\nfunction applyNodeProps(instance, props) {\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!warningShowed && 'id' in props) {\n    var message = 'ReactKonva: You are using \"id\" attribute for a Konva node. In some very rare cases it may produce bugs. Currently we recommend not to use it and use \"name\" attribute instead.\\nYou are using id = \"' + props.id + '\".\\nFor me info see: https://github.com/lavrton/react-konva/issues/119';\n    console.warn(message);\n    warningShowed = true;\n  }\n\n  var updatedProps = {};\n  var hasUpdates = false;\n  for (var key in oldProps) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var propChanged = oldProps[key] !== props[key];\n    if (isEvent && propChanged) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      instance.off(eventName, oldProps[key]);\n    }\n    var toRemove = !props.hasOwnProperty(key);\n    if (toRemove) {\n      instance.setAttr(key, undefined);\n    }\n  }\n  for (var key in props) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var toAdd = oldProps[key] !== props[key];\n    if (isEvent && toAdd) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      if (props[key]) {\n        instance.on(eventName, props[key]);\n      }\n    }\n    if (!isEvent && (props[key] !== oldProps[key] || props[key] !== instance.getAttr(key))) {\n      hasUpdates = true;\n      updatedProps[key] = props[key];\n    }\n  }\n\n  if (hasUpdates) {\n    instance.setAttrs(updatedProps);\n    updatePicture(instance);\n  }\n}\n\nfunction updatePicture(node) {\n  var drawingNode = node.getLayer() || node.getStage();\n  drawingNode && drawingNode.batchDraw();\n}\n\nvar Stage = function (_Component) {\n  _inherits(Stage, _Component);\n\n  function Stage() {\n    _classCallCheck(this, Stage);\n\n    return _possibleConstructorReturn(this, (Stage.__proto__ || Object.getPrototypeOf(Stage)).apply(this, arguments));\n  }\n\n  _createClass(Stage, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          height = _props.height,\n          width = _props.width;\n\n\n      this._stage = new Konva.Stage({\n        width: width,\n        height: this.props.height,\n        container: this._tagRef\n      });\n\n      applyNodeProps(this._stage, this.props);\n\n      this._mountNode = KonvaRenderer.createContainer(this._stage);\n      KonvaRenderer.updateContainer(this.props.children, this._mountNode, this);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var props = this.props;\n\n      applyNodeProps(this._stage, this.props, prevProps);\n\n      KonvaRenderer.updateContainer(this.props.children, this._mountNode, this);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      KonvaRenderer.updateContainer(null, this._mountNode, this);\n      this._stage.destroy();\n    }\n  }, {\n    key: 'getStage',\n    value: function getStage() {\n      return this._stage;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n\n      return React.createElement('div', {\n        ref: function ref(_ref) {\n          return _this2._tagRef = _ref;\n        },\n        accessKey: props.accessKey,\n        className: props.className,\n        role: props.role,\n        style: props.style,\n        tabIndex: props.tabIndex,\n        title: props.title\n      });\n    }\n  }]);\n\n  return Stage;\n}(Component);\n\nvar KONVA_NODES = ['Layer', 'FastLayer', 'Group', 'Label', 'Rect', 'Circle', 'Ellipse', 'Wedge', 'Line', 'Sprite', 'Image', 'Text', 'TextPath', 'Star', 'Ring', 'Arc', 'Tag', 'Path', 'RegularPolygon', 'Arrow', 'Shape'];\n\nvar TYPES = {};\n\nKONVA_NODES.forEach(function (nodeName) {\n  TYPES[nodeName] = nodeName;\n});\n\nvar UPDATE_SIGNAL = {};\n\nvar KonvaRenderer = ReactFiberReconciler({\n  appendInitialChild: function appendInitialChild(parentInstance, child) {\n    if (typeof child === 'string') {\n      // Noop for string children of Text (eg <Text>{'foo'}{'bar'}</Text>)\n      invariant(false, 'Don not use plain text as child of Konva.Node. You are using text: \"%s\"', child);\n      return;\n    }\n\n    parentInstance.add(child);\n\n    updatePicture(parentInstance);\n  },\n  createInstance: function createInstance(type, props, internalInstanceHandle) {\n    var NodeClass = Konva[type];\n    if (!NodeClass) {\n      invariant(instance, 'ReactKonva does not support the type \"%s\"', type);\n      return;\n    }\n\n    var instance = new NodeClass();\n    instance._applyProps = applyNodeProps;\n    instance._applyProps(instance, props);\n\n    return instance;\n  },\n  createTextInstance: function createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n    invariant(false, 'Text components are not supported for now in ReactKonva.');\n  },\n  finalizeInitialChildren: function finalizeInitialChildren(domElement, type, props) {\n    return false;\n  },\n  getPublicInstance: function getPublicInstance(instance) {\n    return instance;\n  },\n  prepareForCommit: function prepareForCommit() {\n    // Noop\n  },\n  prepareUpdate: function prepareUpdate(domElement, type, oldProps, newProps) {\n    return UPDATE_SIGNAL;\n  },\n  resetAfterCommit: function resetAfterCommit() {\n    // Noop\n  },\n  resetTextContent: function resetTextContent(domElement) {\n    // Noop\n  },\n  shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {\n    return false;\n  },\n  getRootHostContext: function getRootHostContext() {\n    return emptyObject;\n  },\n  getChildHostContext: function getChildHostContext() {\n    return emptyObject;\n  },\n\n\n  scheduleDeferredCallback: ReactDOMFrameScheduling.rIC,\n\n  shouldSetTextContent: function shouldSetTextContent(type, props) {\n    return false;\n  },\n\n\n  now: ReactDOMFrameScheduling.now,\n\n  useSyncScheduling: true,\n\n  mutation: {\n    appendChild: function appendChild(parentInstance, child) {\n      if (child.parent === parentInstance) {\n        child.moveToTop();\n      } else {\n        parentInstance.add(child);\n      }\n\n      updatePicture(parentInstance);\n    },\n    appendChildToContainer: function appendChildToContainer(parentInstance, child) {\n      if (child.parent === parentInstance) {\n        child.moveToTop();\n      } else {\n        parentInstance.add(child);\n      }\n      updatePicture(parentInstance);\n    },\n    insertBefore: function insertBefore(parentInstance, child, beforeChild) {\n      invariant(child !== beforeChild, 'ReactKonva: Can not insert node before itself');\n      // remove and add back to reset zIndex\n      child.remove();\n      parentInstance.add(child);\n      child.setZIndex(beforeChild.getZIndex());\n      updatePicture(parentInstance);\n    },\n    insertInContainerBefore: function insertInContainerBefore(parentInstance, child, beforeChild) {\n      invariant(child !== beforeChild, 'ReactKonva: Can not insert node before itself');\n      // remove and add back to reset zIndex\n      child.remove();\n      parentInstance.add(child);\n      child.setZIndex(beforeChild.getZIndex());\n      updatePicture(parentInstance);\n    },\n    removeChild: function removeChild(parentInstance, child) {\n      child.destroy();\n      updatePicture(parentInstance);\n    },\n    removeChildFromContainer: function removeChildFromContainer(parentInstance, child) {\n      child.destroy();\n      updatePicture(parentInstance);\n    },\n    commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {\n      invariant(false, 'Text components are not yet supported in ReactKonva.');\n    },\n    commitMount: function commitMount(instance, type, newProps) {\n      // Noop\n    },\n    commitUpdate: function commitUpdate(instance, updatePayload, type, oldProps, newProps, fiberInstance) {\n      instance._applyProps(instance, newProps, oldProps);\n    }\n  }\n});\n\n/** API */\n\nmodule.exports = Object.assign({}, TYPES, { Stage: Stage });\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// adapted FROM: https://github.com/facebook/react/blob/3019210df2b486416ed94d7b9becffaf254e81c4/src/renderers/shared/ReactDOMFrameScheduling.js\n\n\n\n// This is a built-in polyfill for requestIdleCallback. It works by scheduling\n// a requestAnimationFrame, storing the time for the start of the frame, then\n// scheduling a postMessage which gets scheduled after paint. Within the\n// postMessage handler do as much work as possible until time + frame rate.\n// By separating the idle call into a separate event tick we ensure that\n// layout, paint and other browser work is counted against the available time.\n// The frame rate is dynamically adjusted.\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar ExecutionEnvironment = __webpack_require__(9);\n\nvar hasNativePerformanceNow = (typeof performance === 'undefined' ? 'undefined' : _typeof(performance)) === 'object' && typeof performance.now === 'function';\n\nvar now = void 0;\nif (hasNativePerformanceNow) {\n  now = function now() {\n    return performance.now();\n  };\n} else {\n  now = function now() {\n    return Date.now();\n  };\n}\n\n// TODO: There's no way to cancel, because Fiber doesn't atm.\nvar rIC = void 0;\n\nif (!ExecutionEnvironment.canUseDOM) {\n  rIC = function rIC(frameCallback) {\n    setTimeout(function () {\n      frameCallback({\n        timeRemaining: function timeRemaining() {\n          return Infinity;\n        }\n      });\n    });\n    return 0;\n  };\n} else if (typeof requestIdleCallback !== 'function') {\n  // Polyfill requestIdleCallback.\n\n  var scheduledRAFCallback = null;\n  var scheduledRICCallback = null;\n\n  var isIdleScheduled = false;\n  var isAnimationFrameScheduled = false;\n\n  var frameDeadline = 0;\n  // We start out assuming that we run at 30fps but then the heuristic tracking\n  // will adjust this value to a faster fps if we get more frequent animation\n  // frames.\n  var previousFrameTime = 33;\n  var activeFrameTime = 33;\n\n  var frameDeadlineObject;\n  if (hasNativePerformanceNow) {\n    frameDeadlineObject = {\n      timeRemaining: function timeRemaining() {\n        // We assume that if we have a performance timer that the rAF callback\n        // gets a performance timer value. Not sure if this is always true.\n        return frameDeadline - performance.now();\n      }\n    };\n  } else {\n    frameDeadlineObject = {\n      timeRemaining: function timeRemaining() {\n        // Fallback to Date.now()\n        return frameDeadline - Date.now();\n      }\n    };\n  }\n\n  // We use the postMessage trick to defer idle work until after the repaint.\n  var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);\n  var idleTick = function idleTick(event) {\n    if (event.source !== window || event.data !== messageKey) {\n      return;\n    }\n    isIdleScheduled = false;\n    var callback = scheduledRICCallback;\n    scheduledRICCallback = null;\n    if (callback !== null) {\n      callback(frameDeadlineObject);\n    }\n  };\n  // Assumes that we have addEventListener in this environment. Might need\n  // something better for old IE.\n  window.addEventListener('message', idleTick, false);\n\n  var animationTick = function animationTick(rafTime) {\n    isAnimationFrameScheduled = false;\n    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;\n    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {\n      if (nextFrameTime < 8) {\n        // Defensive coding. We don't support higher frame rates than 120hz.\n        // If we get lower than that, it is probably a bug.\n        nextFrameTime = 8;\n      }\n      // If one frame goes long, then the next one can be short to catch up.\n      // If two frames are short in a row, then that's an indication that we\n      // actually have a higher frame rate than what we're currently optimizing.\n      // We adjust our heuristic dynamically accordingly. For example, if we're\n      // running on 120hz display or 90hz VR display.\n      // Take the max of the two in case one of them was an anomaly due to\n      // missed frame deadlines.\n      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;\n    } else {\n      previousFrameTime = nextFrameTime;\n    }\n    frameDeadline = rafTime + activeFrameTime;\n    if (!isIdleScheduled) {\n      isIdleScheduled = true;\n      window.postMessage(messageKey, '*');\n    }\n    var callback = scheduledRAFCallback;\n    scheduledRAFCallback = null;\n    if (callback !== null) {\n      callback(rafTime);\n    }\n  };\n\n  rIC = function rIC(callback) {\n    // This assumes that we only schedule one callback at a time because that's\n    // how Fiber uses it.\n    scheduledRICCallback = callback;\n    if (!isAnimationFrameScheduled) {\n      // If rAF didn't already schedule one, we need to schedule a frame.\n      // TODO: If this rAF doesn't materialize because the browser throttles, we\n      // might want to still have setTimeout trigger rIC as a backup to ensure\n      // that we keep performing work.\n      isAnimationFrameScheduled = true;\n      requestAnimationFrame(animationTick);\n    }\n    return 0;\n  };\n} else {\n  rIC = requestIdleCallback;\n}\n\nexports.now = now;\nexports.rIC = rIC;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n/***/ })\n/******/ ]);\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-konva/react-konva.js\n// module id = 10\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 11\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/custom-react-scripts/config/polyfills.js\n// module id = 12\n// module chunks = 0","import React, { Component } from \"react\";\n\nimport { Provider as MobXProvider, observer } from \"mobx-react\";\n\nimport Physics from \"../logic/Physics\";\nimport Sprite from \"../logic/Sprite\";\nimport MarbleList from \"./MarbleList\";\n\n@observer\nclass App extends Component {\n    componentWillMount() {\n        Sprite.loadSprite(() => Physics.startGameLoop());\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\">\n                    <h2>Inelastic collisions</h2>\n                    <p>Rendered on canvas, built with React and Konva</p>\n                </div>\n                <div className=\"App-intro\">\n                    <MobXProvider physics={Physics} sprite={Sprite}>\n                        <MarbleList />\n                    </MobXProvider>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/App.js","\nimport React, { Component } from 'react';\nimport { Circle } from 'react-konva';\nimport { inject, observer } from 'mobx-react';\n\n@inject('physics', 'sprite') @observer\nclass Marble extends Component {\n    onDragStart() {\n        const { physics, id } = this.props;\n\n        this.setState({\n            origX: physics.marbles[id].x,\n            origY: physics.marbles[id].y,\n            startTime: new Date()\n        });\n    }\n\n    onDragMove() {\n        const { physics, id } = this.props;\n        const { x, y } = this.refs.circle.attrs;\n\n        physics.marbles[id].x = x;\n        physics.marbles[id].y = y;\n    }\n\n    onDragEnd() {\n        const { physics } = this.props,\n              circle = this.refs.circle,\n              { origX, origY } = this.state,\n              { x, y } = circle.attrs;\n\n\n        const delta_t = new Date() - this.state.startTime,\n              dist = (x - origX) ** 2 + (y - origY) ** 2,\n              v = Math.sqrt(dist)/(delta_t/16); // distance per frame (= 16ms)\n\n        physics.shoot({\n           x: x,\n           y: y,\n           vx: (x - origX)/(v/3), // /3 is a speedup factor\n           vy: (y - origY)/(v/3)\n           }, this.props.id);\n    }\n\n    render() {\n        const { sprite, type, draggable, id, physics } = this.props;\n        const MarbleDefinitions = sprite.marbleDefinitions;\n        const { x, y, r } = physics.marbles[id];\n\n        return (\n            <Circle x={x} y={y} radius={r}\n                    fillPatternImage={sprite.sprite}\n                    fillPatternOffset={MarbleDefinitions[type]}\n                    fillPatternScale={{ x: r*2/111, y: r*2/111 }}\n                    shadowColor={MarbleDefinitions[type].c}\n                    shadowBlur=\"15\"\n                    shadowOpacity=\"1\"\n                    draggable={draggable}\n                    onDragStart={this.onDragStart.bind(this)}\n                    onDragEnd={this.onDragEnd.bind(this)}\n                    onDragMove={this.onDragMove.bind(this)}\n                    ref=\"circle\"\n                    />\n        );\n    }\n}\n\nexport default Marble;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Marble.js","\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Stage, Layer, Group } from 'react-konva';\n\n\nimport Marble from './Marble';\n\nconst MarbleList = inject('physics', 'sprite')(observer(({ physics, sprite }) => {\n    const { width, height, marbles } = physics;\n    const { marbleTypes } = sprite;\n\n    return (\n        <Stage width={width} height={height}>\n            <Layer>\n                <Group>\n                    {marbles.map(({ x, y, id }, i) => (\n                        <Marble x={x}\n                                y={y}\n                                type={marbleTypes[i%marbleTypes.length]}\n                                draggable=\"true\"\n                                id={id}\n                                key={`marble-${id}`} />\n                    ))}\n                </Group>\n            </Layer>\n        </Stage>\n    );\n}));\n\nexport default MarbleList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/MarbleList.js","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","\nimport { observable, computed, action } from 'mobx';\nimport { range } from 'd3-array';\nimport { timer } from 'd3-timer';\nimport { quadtree } from 'd3-quadtree';\n\nclass Physics {\n    @observable MarbleR = 25;\n    @observable width = 800;\n    @observable height = 600;\n    @observable marbles = [];\n    timer = null;\n\n    @computed get initialPositions() {\n        const { width, height, MarbleR } = this,\n              center = width/2;\n\n        const lines = 4,\n              maxY = 200;\n\n        let marbles = range(lines, 0, -1).map(y => {\n            if (y === lines) return [{ x: center, y: maxY,\n                                       vx: 0, vy: 0, r: this.MarbleR}];\n\n            const left = center - y*(MarbleR+5),\n                  right = center + y*(MarbleR+5);\n\n            return range(left, right, MarbleR*2+5).map(x => ({\n                x: x,\n                y: maxY-y*(MarbleR*2+5),\n                vx: 0,\n                vy: 0,\n                r: this.MarbleR\n            }));\n        }).reduce((acc, pos) => acc.concat(pos), []);\n\n        marbles = [].concat(marbles, {\n            x: width/2,\n            y: height-150,\n            vx: 0,\n            vy: 0,\n            r: this.MarbleR\n        });\n\n        marbles.forEach((m, i) => marbles[i].id = i);\n\n        return marbles;\n    }\n\n    @action startGameLoop() {\n        this.marbles = this.initialPositions;\n\n        this.timer = timer(() => this.simulationStep());\n    }\n\n    @action simulationStep() {\n        const { width, height, MarbleR } = this;\n\n        const moveMarble = ({x, y, vx, vy, id}) => {\n            let _vx = ((x+vx < MarbleR) ? -vx : (x+vx > width-MarbleR) ? -vx : vx)*.99,\n                _vy = ((y+vy < MarbleR) ? -vy : (y+vy > height-MarbleR) ? -vy : vy)*.99;\n\n            // nearest marble is a collision candidate\n            const subdividedSpace = quadtree().extent([[-1, -1],\n                                                       [this.width+1, this.height+1]])\n                                              .x(d => d.x)\n                                              .y(d => d.y)\n                                              .addAll(this.marbles\n                                                          .filter(m => id !== m.id)),\n                  candidate = subdividedSpace.find(x, y, MarbleR*2);\n\n            if (candidate) {\n\n                // borrowing @air_hadoken's implementation from here:\n                // https://github.com/airhadoken/game_of_circles/blob/master/circles.js#L64\n                const cx = candidate.x,\n                      cy = candidate.y,\n                      normx = cx - x,\n                      normy = cy - y,\n                      dist = (normx ** 2 + normy ** 2),\n                      c = (_vx * normx + _vy * normy) / dist * 2.3;\n\n                _vx = (_vx - c * normx)/2.3;\n                _vy = (_vy - c * normy)/2.3;\n\n                candidate.vx += -_vx;\n                candidate.vy += -_vy;\n                candidate.x += -_vx;\n                candidate.y += -_vy;\n            }\n\n            return {\n                x: x + _vx,\n                y: y + _vy,\n                vx: _vx,\n                vy: _vy\n            }\n        };\n\n        this.marbles.forEach((marble, i) => {\n            const { x, y, vx, vy } = moveMarble(marble);\n\n            this.marbles[i].x = x;\n            this.marbles[i].y = y;\n            this.marbles[i].vx = vx;\n            this.marbles[i].vy = vy;\n        });\n    }\n\n    @action shoot({ x, y, vx, vy }, i) {\n        const maxSpeed = 20;\n\n        this.marbles[i].x = x;\n        this.marbles[i].y = y;\n        this.marbles[i].vx = vx < maxSpeed ? vx : maxSpeed;\n        this.marbles[i].vy = vy < maxSpeed ? vy : maxSpeed;\n    }\n}\n\nexport default new Physics();\n\n\n\n// WEBPACK FOOTER //\n// ./src/logic/Physics.js","\nimport { observable, action, computed } from 'mobx';\n\n// marbles sprite from https://dribbble.com/shots/2186007-Monster-Marbles\nimport MarbleSprite from '../monster-marbles-sprite-sheets.jpg';\n\nconst MarbleDefinitions = {\n    dino: { x: -222, y: -177, c: '#8664d5' },\n    redHeart: { x: -222, y: -299, c: '#e47178' },\n    sun: { x: -222, y: -420, c: '#5c96ac' },\n\n    yellowHeart: { x: -400, y: -177, c: '#c8b405' },\n    mouse: { x: -400, y: -299, c: '#7d7e82' },\n    pumpkin: { x: -400, y: -420, c: '#fa9801' },\n\n    frog: { x: -576, y: -177, c: '#98b42b' },\n    moon: { x: -575, y: -299, c: '#b20717' },\n    bear: { x: -576, y: -421, c: '#a88534' }\n};\n\n\nclass Sprite {\n    @observable sprite = null;\n\n    @action loadSprite(callback = () => null) {\n        const sprite = new Image();\n        sprite.src = MarbleSprite;\n\n        sprite.onload = () => {\n            this.sprite = sprite;\n\n            callback();\n        };\n    }\n\n    @computed get marbleTypes() {\n        return Object.keys(MarbleDefinitions);\n    }\n\n    @computed get marbleDefinitions() {\n        return MarbleDefinitions;\n    }\n}\n\nexport default new Sprite();\nexport { MarbleDefinitions };\n\n\n\n// WEBPACK FOOTER //\n// ./src/logic/Sprite.js","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/custom-react-scripts/~/object-assign/index.js\n// module id = 19\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/custom-react-scripts/~/promise/lib/es6-extensions.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/custom-react-scripts/~/promise/lib/rejection-tracking.js\n// module id = 21\n// module chunks = 0","// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 22\n// module chunks = 0","// https://d3js.org/d3-quadtree/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nexports.quadtree = quadtree;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-quadtree/build/d3-quadtree.js\n// module id = 23\n// module chunks = 0","// https://d3js.org/d3-timer/ Version 1.0.7. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-timer/build/d3-timer.js\n// module id = 24\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/EventListener.js\n// module id = 26\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/ExecutionEnvironment.js\n// module id = 27\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/containsNode.js\n// module id = 28\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/focusNode.js\n// module id = 29\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/getActiveElement.js\n// module id = 30\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/isNode.js\n// module id = 31\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/isTextNode.js\n// module id = 32\n// module chunks = 0","/*\n * Konva JavaScript Framework v1.7.6\n * http://konvajs.github.io/\n * Licensed under the MIT or GPL Version 2 licenses.\n * Date: Wed Nov 01 2017\n *\n * Original work Copyright (C) 2011 - 2013 by Eric Rowell (KineticJS)\n * Modified work Copyright (C) 2014 - 2017 by Anton Lavrenov (Konva)\n *\n * @license\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n// runtime check for already included Konva\n(function() {\n  'use strict';\n  /**\n     * @namespace Konva\n     */\n\n  var PI_OVER_180 = Math.PI / 180;\n\n  var Konva = {\n    // public\n    version: '1.7.6',\n\n    // private\n    stages: [],\n    idCounter: 0,\n    ids: {},\n    names: {},\n    shapes: {},\n    listenClickTap: false,\n    inDblClickWindow: false,\n\n    isBrowser:\n      typeof window !== 'undefined' &&\n      // browser case\n      ({}.toString.call(window) === '[object Window]' ||\n        // electron case\n        {}.toString.call(window) === '[object global]'),\n\n    // configurations\n    enableTrace: false,\n    traceArrMax: 100,\n    dblClickWindow: 400,\n    /**\n         * Global pixel ratio configuration. KonvaJS automatically detect pixel ratio of current device.\n         * But you may override such property, if you want to use your value.\n         * @property pixelRatio\n         * @default undefined\n         * @memberof Konva\n         * @example\n         * Konva.pixelRatio = 1;\n         */\n    pixelRatio: undefined,\n    /**\n         * Drag distance property. If you start to drag a node you may want to wait until pointer is moved to some distance from start point,\n         * only then start dragging. Default is 3px.\n         * @property dragDistance\n         * @default 0\n         * @memberof Konva\n         * @example\n         * Konva.dragDistance = 10;\n         */\n    dragDistance: 3,\n    /**\n         * Use degree values for angle properties. You may set this property to false if you want to use radiant values.\n         * @property angleDeg\n         * @default true\n         * @memberof Konva\n         * @example\n         * node.rotation(45); // 45 degrees\n         * Konva.angleDeg = false;\n         * node.rotation(Math.PI / 2); // PI/2 radian\n         */\n    angleDeg: true,\n    /**\n         * Show different warnings about errors or wrong API usage\n         * @property showWarnings\n         * @default true\n         * @memberof Konva\n         * @example\n         * Konva.showWarnings = false;\n         */\n    showWarnings: true,\n\n    /**\n         * @namespace Filters\n         * @memberof Konva\n         */\n    Filters: {},\n\n    /**\n         * returns whether or not drag and drop is currently active\n         * @method\n         * @memberof Konva\n         */\n    isDragging: function() {\n      var dd = Konva.DD;\n\n      // if DD is not included with the build, then\n      // drag and drop is not even possible\n      if (dd) {\n        return dd.isDragging;\n      }\n      return false;\n    },\n    /**\n        * returns whether or not a drag and drop operation is ready, but may\n        *  not necessarily have started\n        * @method\n        * @memberof Konva\n        */\n    isDragReady: function() {\n      var dd = Konva.DD;\n\n      // if DD is not included with the build, then\n      // drag and drop is not even possible\n      if (dd) {\n        return !!dd.node;\n      }\n      return false;\n    },\n    _addId: function(node, id) {\n      if (id !== undefined) {\n        this.ids[id] = node;\n      }\n    },\n    _removeId: function(id) {\n      if (id !== undefined) {\n        delete this.ids[id];\n      }\n    },\n    _addName: function(node, name) {\n      if (name) {\n        if (!this.names[name]) {\n          this.names[name] = [];\n        }\n        this.names[name].push(node);\n      }\n    },\n    _removeName: function(name, _id) {\n      if (!name) {\n        return;\n      }\n      var nodes = this.names[name];\n      if (!nodes) {\n        return;\n      }\n      for (var n = 0; n < nodes.length; n++) {\n        var no = nodes[n];\n        if (no._id === _id) {\n          nodes.splice(n, 1);\n        }\n      }\n      if (nodes.length === 0) {\n        delete this.names[name];\n      }\n    },\n    getAngle: function(angle) {\n      return this.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    _detectIE: function(ua) {\n      var msie = ua.indexOf('msie ');\n      if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n      }\n\n      var trident = ua.indexOf('trident/');\n      if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n      }\n\n      var edge = ua.indexOf('edge/');\n      if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n      }\n\n      // other browser\n      return false;\n    },\n    _parseUA: function(userAgent) {\n      var ua = userAgent.toLowerCase(),\n        // jQuery UA regex\n        match =\n          /(chrome)[ /]([\\w.]+)/.exec(ua) ||\n          /(webkit)[ /]([\\w.]+)/.exec(ua) ||\n          /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua) ||\n          /(msie) ([\\w.]+)/.exec(ua) ||\n          (ua.indexOf('compatible') < 0 &&\n            /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) ||\n          [],\n        // adding mobile flag as well\n        mobile = !!userAgent.match(\n          /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i\n        ),\n        ieMobile = !!userAgent.match(/IEMobile/i);\n\n      return {\n        browser: match[1] || '',\n        version: match[2] || '0',\n        isIE: Konva._detectIE(ua),\n        // adding mobile flab\n        mobile: mobile,\n        ieMobile: ieMobile // If this is true (i.e., WP8), then Konva touch events are executed instead of equivalent Konva mouse events\n      };\n    },\n    // user agent\n    UA: undefined\n  };\n\n  var glob =\n    typeof global !== 'undefined'\n      ? global\n      : typeof window !== 'undefined'\n        ? window\n        : typeof WorkerGlobalScope !== 'undefined' ? self : {};\n\n  Konva.UA = Konva._parseUA((glob.navigator && glob.navigator.userAgent) || '');\n\n  if (glob.Konva) {\n    console.error(\n      'Konva instance is already exist in current eviroment. ' +\n        'Please use only one instance.'\n    );\n  }\n  glob.Konva = Konva;\n  Konva.global = glob;\n  Konva.window = glob;\n  Konva.document = glob.document;\n\n  if (typeof exports === 'object') {\n    module.exports = Konva;\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function() {\n      return Konva;\n    });\n  }\n})();\n\n/*eslint-disable  eqeqeq, no-cond-assign, no-empty*/\n(function() {\n  'use strict';\n  /**\n     * Collection constructor.  Collection extends\n     *  Array.  This class is used in conjunction with {@link Konva.Container#get}\n     * @constructor\n     * @memberof Konva\n     */\n  Konva.Collection = function() {\n    var args = [].slice.call(arguments),\n      length = args.length,\n      i = 0;\n\n    this.length = length;\n    for (; i < length; i++) {\n      this[i] = args[i];\n    }\n    return this;\n  };\n  Konva.Collection.prototype = [];\n  /**\n     * iterate through node array and run a function for each node.\n     *  The node and index is passed into the function\n     * @method\n     * @memberof Konva.Collection.prototype\n     * @param {Function} func\n     * @example\n     * // get all nodes with name foo inside layer, and set x to 10 for each\n     * layer.get('.foo').each(function(shape, n) {\n     *   shape.setX(10);\n     * });\n     */\n  Konva.Collection.prototype.each = function(func) {\n    for (var n = 0; n < this.length; n++) {\n      func(this[n], n);\n    }\n  };\n  /**\n     * convert collection into an array\n     * @method\n     * @memberof Konva.Collection.prototype\n     */\n  Konva.Collection.prototype.toArray = function() {\n    var arr = [],\n      len = this.length,\n      n;\n\n    for (n = 0; n < len; n++) {\n      arr.push(this[n]);\n    }\n    return arr;\n  };\n  /**\n     * convert array into a collection\n     * @method\n     * @memberof Konva.Collection\n     * @param {Array} arr\n     */\n  Konva.Collection.toCollection = function(arr) {\n    var collection = new Konva.Collection(),\n      len = arr.length,\n      n;\n\n    for (n = 0; n < len; n++) {\n      collection.push(arr[n]);\n    }\n    return collection;\n  };\n\n  // map one method by it's name\n  Konva.Collection._mapMethod = function(methodName) {\n    Konva.Collection.prototype[methodName] = function() {\n      var len = this.length,\n        i;\n\n      var args = [].slice.call(arguments);\n      for (i = 0; i < len; i++) {\n        this[i][methodName].apply(this[i], args);\n      }\n\n      return this;\n    };\n  };\n\n  Konva.Collection.mapMethods = function(constructor) {\n    var prot = constructor.prototype;\n    for (var methodName in prot) {\n      Konva.Collection._mapMethod(methodName);\n    }\n  };\n\n  /*\n    * Last updated November 2011\n    * By Simon Sarris\n    * www.simonsarris.com\n    * sarris@acm.org\n    *\n    * Free to use and distribute at will\n    * So long as you are nice to people, etc\n    */\n\n  /*\n    * The usage of this class was inspired by some of the work done by a forked\n    * project, KineticJS-Ext by Wappworks, which is based on Simon's Transform\n    * class.  Modified by Eric Rowell\n    */\n\n  /**\n     * Transform constructor\n     * @constructor\n     * @param {Array} [m] Optional six-element matrix\n     * @memberof Konva\n     */\n  Konva.Transform = function(m) {\n    this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n  };\n\n  Konva.Transform.prototype = {\n    /**\n         * Copy Konva.Transform object\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @returns {Konva.Transform}\n         */\n    copy: function() {\n      return new Konva.Transform(this.m);\n    },\n    /**\n         * Transform point\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Object} point 2D point(x, y)\n         * @returns {Object} 2D point(x, y)\n         */\n    point: function(point) {\n      var m = this.m;\n      return {\n        x: m[0] * point.x + m[2] * point.y + m[4],\n        y: m[1] * point.x + m[3] * point.y + m[5]\n      };\n    },\n    /**\n         * Apply translation\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Number} x\n         * @param {Number} y\n         * @returns {Konva.Transform}\n         */\n    translate: function(x, y) {\n      this.m[4] += this.m[0] * x + this.m[2] * y;\n      this.m[5] += this.m[1] * x + this.m[3] * y;\n      return this;\n    },\n    /**\n         * Apply scale\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Number} sx\n         * @param {Number} sy\n         * @returns {Konva.Transform}\n         */\n    scale: function(sx, sy) {\n      this.m[0] *= sx;\n      this.m[1] *= sx;\n      this.m[2] *= sy;\n      this.m[3] *= sy;\n      return this;\n    },\n    /**\n         * Apply rotation\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Number} rad  Angle in radians\n         * @returns {Konva.Transform}\n         */\n    rotate: function(rad) {\n      var c = Math.cos(rad);\n      var s = Math.sin(rad);\n      var m11 = this.m[0] * c + this.m[2] * s;\n      var m12 = this.m[1] * c + this.m[3] * s;\n      var m21 = this.m[0] * -s + this.m[2] * c;\n      var m22 = this.m[1] * -s + this.m[3] * c;\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      return this;\n    },\n    /**\n         * Returns the translation\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @returns {Object} 2D point(x, y)\n         */\n    getTranslation: function() {\n      return {\n        x: this.m[4],\n        y: this.m[5]\n      };\n    },\n    /**\n         * Apply skew\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Number} sx\n         * @param {Number} sy\n         * @returns {Konva.Transform}\n         */\n    skew: function(sx, sy) {\n      var m11 = this.m[0] + this.m[2] * sy;\n      var m12 = this.m[1] + this.m[3] * sy;\n      var m21 = this.m[2] + this.m[0] * sx;\n      var m22 = this.m[3] + this.m[1] * sx;\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      return this;\n    },\n    /**\n         * Transform multiplication\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @param {Konva.Transform} matrix\n         * @returns {Konva.Transform}\n         */\n    multiply: function(matrix) {\n      var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n      var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n      var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n      var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n      var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n      var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      this.m[4] = dx;\n      this.m[5] = dy;\n      return this;\n    },\n    /**\n         * Invert the matrix\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @returns {Konva.Transform}\n         */\n    invert: function() {\n      var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n      var m0 = this.m[3] * d;\n      var m1 = -this.m[1] * d;\n      var m2 = -this.m[2] * d;\n      var m3 = this.m[0] * d;\n      var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n      var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n      this.m[0] = m0;\n      this.m[1] = m1;\n      this.m[2] = m2;\n      this.m[3] = m3;\n      this.m[4] = m4;\n      this.m[5] = m5;\n      return this;\n    },\n    /**\n         * return matrix\n         * @method\n         * @memberof Konva.Transform.prototype\n         */\n    getMatrix: function() {\n      return this.m;\n    },\n    /**\n         * set to absolute position via translation\n         * @method\n         * @memberof Konva.Transform.prototype\n         * @returns {Konva.Transform}\n         * @author ericdrowell\n         */\n    setAbsolutePosition: function(x, y) {\n      var m0 = this.m[0],\n        m1 = this.m[1],\n        m2 = this.m[2],\n        m3 = this.m[3],\n        m4 = this.m[4],\n        m5 = this.m[5],\n        yt = (m0 * (y - m5) - m1 * (x - m4)) / (m0 * m3 - m1 * m2),\n        xt = (x - m4 - m2 * yt) / m0;\n\n      return this.translate(xt, yt);\n    }\n  };\n\n  // CONSTANTS\n  var CONTEXT_2D = '2d',\n    OBJECT_ARRAY = '[object Array]',\n    OBJECT_NUMBER = '[object Number]',\n    OBJECT_STRING = '[object String]',\n    PI_OVER_DEG180 = Math.PI / 180,\n    DEG180_OVER_PI = 180 / Math.PI,\n    HASH = '#',\n    EMPTY_STRING = '',\n    ZERO = '0',\n    KONVA_WARNING = 'Konva warning: ',\n    KONVA_ERROR = 'Konva error: ',\n    RGB_PAREN = 'rgb(',\n    COLORS = {\n      aliceblue: [240, 248, 255],\n      antiquewhite: [250, 235, 215],\n      aqua: [0, 255, 255],\n      aquamarine: [127, 255, 212],\n      azure: [240, 255, 255],\n      beige: [245, 245, 220],\n      bisque: [255, 228, 196],\n      black: [0, 0, 0],\n      blanchedalmond: [255, 235, 205],\n      blue: [0, 0, 255],\n      blueviolet: [138, 43, 226],\n      brown: [165, 42, 42],\n      burlywood: [222, 184, 135],\n      cadetblue: [95, 158, 160],\n      chartreuse: [127, 255, 0],\n      chocolate: [210, 105, 30],\n      coral: [255, 127, 80],\n      cornflowerblue: [100, 149, 237],\n      cornsilk: [255, 248, 220],\n      crimson: [220, 20, 60],\n      cyan: [0, 255, 255],\n      darkblue: [0, 0, 139],\n      darkcyan: [0, 139, 139],\n      darkgoldenrod: [184, 132, 11],\n      darkgray: [169, 169, 169],\n      darkgreen: [0, 100, 0],\n      darkgrey: [169, 169, 169],\n      darkkhaki: [189, 183, 107],\n      darkmagenta: [139, 0, 139],\n      darkolivegreen: [85, 107, 47],\n      darkorange: [255, 140, 0],\n      darkorchid: [153, 50, 204],\n      darkred: [139, 0, 0],\n      darksalmon: [233, 150, 122],\n      darkseagreen: [143, 188, 143],\n      darkslateblue: [72, 61, 139],\n      darkslategray: [47, 79, 79],\n      darkslategrey: [47, 79, 79],\n      darkturquoise: [0, 206, 209],\n      darkviolet: [148, 0, 211],\n      deeppink: [255, 20, 147],\n      deepskyblue: [0, 191, 255],\n      dimgray: [105, 105, 105],\n      dimgrey: [105, 105, 105],\n      dodgerblue: [30, 144, 255],\n      firebrick: [178, 34, 34],\n      floralwhite: [255, 255, 240],\n      forestgreen: [34, 139, 34],\n      fuchsia: [255, 0, 255],\n      gainsboro: [220, 220, 220],\n      ghostwhite: [248, 248, 255],\n      gold: [255, 215, 0],\n      goldenrod: [218, 165, 32],\n      gray: [128, 128, 128],\n      green: [0, 128, 0],\n      greenyellow: [173, 255, 47],\n      grey: [128, 128, 128],\n      honeydew: [240, 255, 240],\n      hotpink: [255, 105, 180],\n      indianred: [205, 92, 92],\n      indigo: [75, 0, 130],\n      ivory: [255, 255, 240],\n      khaki: [240, 230, 140],\n      lavender: [230, 230, 250],\n      lavenderblush: [255, 240, 245],\n      lawngreen: [124, 252, 0],\n      lemonchiffon: [255, 250, 205],\n      lightblue: [173, 216, 230],\n      lightcoral: [240, 128, 128],\n      lightcyan: [224, 255, 255],\n      lightgoldenrodyellow: [250, 250, 210],\n      lightgray: [211, 211, 211],\n      lightgreen: [144, 238, 144],\n      lightgrey: [211, 211, 211],\n      lightpink: [255, 182, 193],\n      lightsalmon: [255, 160, 122],\n      lightseagreen: [32, 178, 170],\n      lightskyblue: [135, 206, 250],\n      lightslategray: [119, 136, 153],\n      lightslategrey: [119, 136, 153],\n      lightsteelblue: [176, 196, 222],\n      lightyellow: [255, 255, 224],\n      lime: [0, 255, 0],\n      limegreen: [50, 205, 50],\n      linen: [250, 240, 230],\n      magenta: [255, 0, 255],\n      maroon: [128, 0, 0],\n      mediumaquamarine: [102, 205, 170],\n      mediumblue: [0, 0, 205],\n      mediumorchid: [186, 85, 211],\n      mediumpurple: [147, 112, 219],\n      mediumseagreen: [60, 179, 113],\n      mediumslateblue: [123, 104, 238],\n      mediumspringgreen: [0, 250, 154],\n      mediumturquoise: [72, 209, 204],\n      mediumvioletred: [199, 21, 133],\n      midnightblue: [25, 25, 112],\n      mintcream: [245, 255, 250],\n      mistyrose: [255, 228, 225],\n      moccasin: [255, 228, 181],\n      navajowhite: [255, 222, 173],\n      navy: [0, 0, 128],\n      oldlace: [253, 245, 230],\n      olive: [128, 128, 0],\n      olivedrab: [107, 142, 35],\n      orange: [255, 165, 0],\n      orangered: [255, 69, 0],\n      orchid: [218, 112, 214],\n      palegoldenrod: [238, 232, 170],\n      palegreen: [152, 251, 152],\n      paleturquoise: [175, 238, 238],\n      palevioletred: [219, 112, 147],\n      papayawhip: [255, 239, 213],\n      peachpuff: [255, 218, 185],\n      peru: [205, 133, 63],\n      pink: [255, 192, 203],\n      plum: [221, 160, 203],\n      powderblue: [176, 224, 230],\n      purple: [128, 0, 128],\n      rebeccapurple: [102, 51, 153],\n      red: [255, 0, 0],\n      rosybrown: [188, 143, 143],\n      royalblue: [65, 105, 225],\n      saddlebrown: [139, 69, 19],\n      salmon: [250, 128, 114],\n      sandybrown: [244, 164, 96],\n      seagreen: [46, 139, 87],\n      seashell: [255, 245, 238],\n      sienna: [160, 82, 45],\n      silver: [192, 192, 192],\n      skyblue: [135, 206, 235],\n      slateblue: [106, 90, 205],\n      slategray: [119, 128, 144],\n      slategrey: [119, 128, 144],\n      snow: [255, 255, 250],\n      springgreen: [0, 255, 127],\n      steelblue: [70, 130, 180],\n      tan: [210, 180, 140],\n      teal: [0, 128, 128],\n      thistle: [216, 191, 216],\n      transparent: [255, 255, 255, 0],\n      tomato: [255, 99, 71],\n      turquoise: [64, 224, 208],\n      violet: [238, 130, 238],\n      wheat: [245, 222, 179],\n      white: [255, 255, 255],\n      whitesmoke: [245, 245, 245],\n      yellow: [255, 255, 0],\n      yellowgreen: [154, 205, 5]\n    },\n    RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\n\n  /**\n     * @namespace Util\n     * @memberof Konva\n     */\n  Konva.Util = {\n    /*\n         * cherry-picked utilities from underscore.js\n         */\n    _isElement: function(obj) {\n      return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction: function(obj) {\n      return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isObject: function(obj) {\n      return !!obj && obj.constructor === Object;\n    },\n    _isArray: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_NUMBER;\n    },\n    _isString: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    // Returns a function, that, when invoked, will only be triggered at most once\n    // during a given window of time. Normally, the throttled function will run\n    // as much as it can, without ever going more than once per `wait` duration;\n    // but if you'd like to disable the execution on the leading edge, pass\n    // `{leading: false}`. To disable execution on the trailing edge, ditto.\n    _throttle: function(func, wait, opts) {\n      var context, args, result;\n      var timeout = null;\n      var previous = 0;\n      var options = opts || {};\n      var later = function() {\n        previous = options.leading === false ? 0 : new Date().getTime();\n        timeout = null;\n        result = func.apply(context, args);\n        context = args = null;\n      };\n      return function() {\n        var now = new Date().getTime();\n        if (!previous && options.leading === false) {\n          previous = now;\n        }\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n          clearTimeout(timeout);\n          timeout = null;\n          previous = now;\n          result = func.apply(context, args);\n          context = args = null;\n        } else if (!timeout && options.trailing !== false) {\n          timeout = setTimeout(later, remaining);\n        }\n        return result;\n      };\n    },\n    /*\n         * other utils\n         */\n    _hasMethods: function(obj) {\n      var names = [],\n        key;\n\n      for (key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        if (this._isFunction(obj[key])) {\n          names.push(key);\n        }\n      }\n      return names.length > 0;\n    },\n    isValidSelector: function(selector) {\n      if (typeof selector !== 'string') {\n        return false;\n      }\n      var firstChar = selector[0];\n      return (\n        firstChar === '#' ||\n        firstChar === '.' ||\n        firstChar === firstChar.toUpperCase()\n      );\n    },\n    createCanvasElement: function() {\n      var canvas = Konva.isBrowser\n        ? Konva.document.createElement('canvas')\n        : new Konva._nodeCanvas();\n      // on some environments canvas.style is readonly\n      try {\n        canvas.style = canvas.style || {};\n      } catch (e) {}\n      return canvas;\n    },\n    _isInDocument: function(el) {\n      while ((el = el.parentNode)) {\n        if (el == Konva.document) {\n          return true;\n        }\n      }\n      return false;\n    },\n    _simplifyArray: function(arr) {\n      var retArr = [],\n        len = arr.length,\n        util = Konva.Util,\n        n,\n        val;\n\n      for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n          val = Math.round(val * 1000) / 1000;\n        } else if (!util._isString(val)) {\n          val = val.toString();\n        }\n\n        retArr.push(val);\n      }\n\n      return retArr;\n    },\n    /*\n         * arg can be an image object or image data\n         */\n    _getImage: function(arg, callback) {\n      var imageObj, canvas;\n\n      // if arg is null or undefined\n      if (!arg) {\n        callback(null);\n      } else if (this._isElement(arg)) {\n        // if arg is already an image object\n        callback(arg);\n      } else if (this._isString(arg)) {\n        // if arg is a string, then it's a data url\n        imageObj = new Konva.window.Image();\n        imageObj.onload = function() {\n          callback(imageObj);\n        };\n        imageObj.src = arg;\n      } else if (arg.data) {\n        //if arg is an object that contains the data property, it's an image object\n        canvas = Konva.Util.createCanvasElement();\n        canvas.width = arg.width;\n        canvas.height = arg.height;\n        var _context = canvas.getContext(CONTEXT_2D);\n        _context.putImageData(arg, 0, 0);\n        this._getImage(canvas.toDataURL(), callback);\n      } else {\n        callback(null);\n      }\n    },\n    _getRGBAString: function(obj) {\n      var red = obj.red || 0,\n        green = obj.green || 0,\n        blue = obj.blue || 0,\n        alpha = obj.alpha || 1;\n\n      return ['rgba(', red, ',', green, ',', blue, ',', alpha, ')'].join(\n        EMPTY_STRING\n      );\n    },\n    _rgbToHex: function(r, g, b) {\n      return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb: function(hex) {\n      hex = hex.replace(HASH, EMPTY_STRING);\n      var bigint = parseInt(hex, 16);\n      return {\n        r: (bigint >> 16) & 255,\n        g: (bigint >> 8) & 255,\n        b: bigint & 255\n      };\n    },\n    /**\n         * return random hex color\n         * @method\n         * @memberof Konva.Util.prototype\n         */\n    getRandomColor: function() {\n      var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n      while (randColor.length < 6) {\n        randColor = ZERO + randColor;\n      }\n      return HASH + randColor;\n    },\n    /**\n         * return value with default fallback\n         * @method\n         * @memberof Konva.Util.prototype\n         */\n    get: function(val, def) {\n      if (val === undefined) {\n        return def;\n      } else {\n        return val;\n      }\n    },\n    /**\n         * get RGB components of a color\n         * @method\n         * @memberof Konva.Util.prototype\n         * @param {String} color\n         * @example\n         * // each of the following examples return {r:0, g:0, b:255}\n         * var rgb = Konva.Util.getRGB('blue');\n         * var rgb = Konva.Util.getRGB('#0000ff');\n         * var rgb = Konva.Util.getRGB('rgb(0,0,255)');\n         */\n    getRGB: function(color) {\n      var rgb;\n      // color string\n      if (color in COLORS) {\n        rgb = COLORS[color];\n        return {\n          r: rgb[0],\n          g: rgb[1],\n          b: rgb[2]\n        };\n      } else if (color[0] === HASH) {\n        // hex\n        return this._hexToRgb(color.substring(1));\n      } else if (color.substr(0, 4) === RGB_PAREN) {\n        // rgb string\n        rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n        return {\n          r: parseInt(rgb[1], 10),\n          g: parseInt(rgb[2], 10),\n          b: parseInt(rgb[3], 10)\n        };\n      } else {\n        // default\n        return {\n          r: 0,\n          g: 0,\n          b: 0\n        };\n      }\n    },\n    // convert any color string to RGBA object\n    // from https://github.com/component/color-parser\n    colorToRGBA: function(str) {\n      str = str || 'black';\n      return (\n        Konva.Util._namedColorToRBA(str) ||\n        Konva.Util._hex3ColorToRGBA(str) ||\n        Konva.Util._hex6ColorToRGBA(str) ||\n        Konva.Util._rgbColorToRGBA(str) ||\n        Konva.Util._rgbaColorToRGBA(str)\n      );\n    },\n    // Parse named css color. Like \"green\"\n    _namedColorToRBA: function(str) {\n      var c = COLORS[str.toLowerCase()];\n      if (!c) {\n        return null;\n      }\n      return {\n        r: c[0],\n        g: c[1],\n        b: c[2],\n        a: 1\n      };\n    },\n    // Parse rgb(n, n, n)\n    _rgbColorToRGBA: function(str) {\n      if (str.indexOf('rgb(') === 0) {\n        str = str.match(/rgb\\(([^)]+)\\)/)[1];\n        var parts = str.split(/ *, */).map(Number);\n        return {\n          r: parts[0],\n          g: parts[1],\n          b: parts[2],\n          a: 1\n        };\n      }\n    },\n    // Parse rgba(n, n, n, n)\n    _rgbaColorToRGBA: function(str) {\n      if (str.indexOf('rgba(') === 0) {\n        str = str.match(/rgba\\(([^)]+)\\)/)[1];\n        var parts = str.split(/ *, */).map(Number);\n        return {\n          r: parts[0],\n          g: parts[1],\n          b: parts[2],\n          a: parts[3]\n        };\n      }\n    },\n    // Parse #nnnnnn\n    _hex6ColorToRGBA: function(str) {\n      if (str[0] === '#' && str.length === 7) {\n        return {\n          r: parseInt(str.slice(1, 3), 16),\n          g: parseInt(str.slice(3, 5), 16),\n          b: parseInt(str.slice(5, 7), 16),\n          a: 1\n        };\n      }\n    },\n    // Parse #nnn\n    _hex3ColorToRGBA: function(str) {\n      if (str[0] === '#' && str.length === 4) {\n        return {\n          r: parseInt(str[1] + str[1], 16),\n          g: parseInt(str[2] + str[2], 16),\n          b: parseInt(str[3] + str[3], 16),\n          a: 1\n        };\n      }\n    },\n    // o1 takes precedence over o2\n    _merge: function(o1, o2) {\n      var retObj = this._clone(o2);\n      for (var key in o1) {\n        if (this._isObject(o1[key])) {\n          retObj[key] = this._merge(o1[key], retObj[key]);\n        } else {\n          retObj[key] = o1[key];\n        }\n      }\n      return retObj;\n    },\n    cloneObject: function(obj) {\n      var retObj = {};\n      for (var key in obj) {\n        if (this._isObject(obj[key])) {\n          retObj[key] = this.cloneObject(obj[key]);\n        } else if (this._isArray(obj[key])) {\n          retObj[key] = this.cloneArray(obj[key]);\n        } else {\n          retObj[key] = obj[key];\n        }\n      }\n      return retObj;\n    },\n    cloneArray: function(arr) {\n      return arr.slice(0);\n    },\n    _degToRad: function(deg) {\n      return deg * PI_OVER_DEG180;\n    },\n    _radToDeg: function(rad) {\n      return rad * DEG180_OVER_PI;\n    },\n    _capitalize: function(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw: function(str) {\n      throw new Error(KONVA_ERROR + str);\n    },\n    error: function(str) {\n      console.error(KONVA_ERROR + str);\n    },\n    warn: function(str) {\n      /*\n             * IE9 on Windows7 64bit will throw a JS error\n             * if we don't use window.console in the conditional\n             */\n      if (Konva.global.console && console.warn && Konva.showWarnings) {\n        console.warn(KONVA_WARNING + str);\n      }\n    },\n    extend: function(child, parent) {\n      function Ctor() {\n        this.constructor = child;\n      }\n      Ctor.prototype = parent.prototype;\n      var oldProto = child.prototype;\n      child.prototype = new Ctor();\n      for (var key in oldProto) {\n        if (oldProto.hasOwnProperty(key)) {\n          child.prototype[key] = oldProto[key];\n        }\n      }\n      child.__super__ = parent.prototype;\n      // create reference to parent\n      child.super = parent;\n    },\n    /**\n         * adds methods to a constructor prototype\n         * @method\n         * @memberof Konva.Util.prototype\n         * @param {Function} constructor\n         * @param {Object} methods\n         */\n    addMethods: function(constructor, methods) {\n      var key;\n\n      for (key in methods) {\n        constructor.prototype[key] = methods[key];\n      }\n    },\n    _getControlPoints: function(x0, y0, x1, y1, x2, y2, t) {\n      var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),\n        d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n        fa = t * d01 / (d01 + d12),\n        fb = t * d12 / (d01 + d12),\n        p1x = x1 - fa * (x2 - x0),\n        p1y = y1 - fa * (y2 - y0),\n        p2x = x1 + fb * (x2 - x0),\n        p2y = y1 + fb * (y2 - y0);\n\n      return [p1x, p1y, p2x, p2y];\n    },\n    _expandPoints: function(p, tension) {\n      var len = p.length,\n        allPoints = [],\n        n,\n        cp;\n\n      for (n = 2; n < len - 2; n += 2) {\n        cp = Konva.Util._getControlPoints(\n          p[n - 2],\n          p[n - 1],\n          p[n],\n          p[n + 1],\n          p[n + 2],\n          p[n + 3],\n          tension\n        );\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n      }\n\n      return allPoints;\n    },\n    _removeLastLetter: function(str) {\n      return str.substring(0, str.length - 1);\n    },\n    each: function(obj, func) {\n      for (var key in obj) {\n        func(key, obj[key]);\n      }\n    },\n    _getProjectionToSegment: function(x1, y1, x2, y2, x3, y3) {\n      var x, y, dist;\n\n      var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n      if (pd2 == 0) {\n        x = x1;\n        y = y1;\n        dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n      } else {\n        var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n        if (u < 0) {\n          x = x1;\n          y = y1;\n          dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n        } else if (u > 1.0) {\n          x = x2;\n          y = y2;\n          dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n        } else {\n          x = x1 + u * (x2 - x1);\n          y = y1 + u * (y2 - y1);\n          dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n        }\n      }\n      return [x, y, dist];\n    },\n    // line as array of points.\n    // line might be closed\n    _getProjectionToLine: function(pt, line, isClosed) {\n      var pc = Konva.Util.cloneObject(pt);\n      var dist = Number.MAX_VALUE;\n      line.forEach(function(p1, i) {\n        if (!isClosed && i === line.length - 1) {\n          return;\n        }\n        var p2 = line[(i + 1) % line.length];\n        var proj = Konva.Util._getProjectionToSegment(\n          p1.x,\n          p1.y,\n          p2.x,\n          p2.y,\n          pt.x,\n          pt.y\n        );\n        var px = proj[0],\n          py = proj[1],\n          pdist = proj[2];\n        if (pdist < dist) {\n          pc.x = px;\n          pc.y = py;\n          dist = pdist;\n        }\n      });\n      return pc;\n    },\n    _prepareArrayForTween: function(startArray, endArray, isClosed) {\n      var n,\n        start = [],\n        end = [];\n      if (startArray.length > endArray.length) {\n        var temp = endArray;\n        endArray = startArray;\n        startArray = temp;\n      }\n      for (n = 0; n < startArray.length; n += 2) {\n        start.push({\n          x: startArray[n],\n          y: startArray[n + 1]\n        });\n      }\n      for (n = 0; n < endArray.length; n += 2) {\n        end.push({\n          x: endArray[n],\n          y: endArray[n + 1]\n        });\n      }\n\n      var newStart = [];\n      end.forEach(function(point) {\n        var pr = Konva.Util._getProjectionToLine(point, start, isClosed);\n        newStart.push(pr.x);\n        newStart.push(pr.y);\n      });\n      return newStart;\n    },\n    _prepareToStringify: function(obj) {\n      var desc;\n\n      obj.visitedByCircularReferenceRemoval = true;\n\n      for (var key in obj) {\n        if (\n          !(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')\n        ) {\n          continue;\n        }\n        desc = Object.getOwnPropertyDescriptor(obj, key);\n        if (\n          obj[key].visitedByCircularReferenceRemoval ||\n          Konva.Util._isElement(obj[key])\n        ) {\n          if (desc.configurable) {\n            delete obj[key];\n          } else {\n            return null;\n          }\n        } else if (Konva.Util._prepareToStringify(obj[key]) === null) {\n          if (desc.configurable) {\n            delete obj[key];\n          } else {\n            return null;\n          }\n        }\n      }\n\n      delete obj.visitedByCircularReferenceRemoval;\n\n      return obj;\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  // calculate pixel ratio\n\n  var _pixelRatio;\n  function getDevicePixelRatio() {\n    if (_pixelRatio) {\n      return _pixelRatio;\n    }\n    var canvas = Konva.Util.createCanvasElement();\n    var context = canvas.getContext('2d');\n    _pixelRatio = (function() {\n      var devicePixelRatio = Konva.window.devicePixelRatio || 1,\n        backingStoreRatio =\n          context.webkitBackingStorePixelRatio ||\n          context.mozBackingStorePixelRatio ||\n          context.msBackingStorePixelRatio ||\n          context.oBackingStorePixelRatio ||\n          context.backingStorePixelRatio ||\n          1;\n      return devicePixelRatio / backingStoreRatio;\n    })();\n    return _pixelRatio;\n  }\n\n  /**\n     * Canvas Renderer constructor\n     * @constructor\n     * @abstract\n     * @memberof Konva\n     * @param {Object} config\n     * @param {Number} config.width\n     * @param {Number} config.height\n     * @param {Number} config.pixelRatio KonvaJS automatically handles pixel ratio adjustments in order to render crisp drawings\n     *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n     *  of 1.  Some high end tablets and phones, like iPhones and iPads (not the mini) have a device pixel ratio\n     *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n     *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n     *  specified, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n     *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n     */\n  Konva.Canvas = function(config) {\n    this.init(config);\n  };\n\n  Konva.Canvas.prototype = {\n    init: function(config) {\n      var conf = config || {};\n\n      var pixelRatio =\n        conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n\n      this.pixelRatio = pixelRatio;\n      this._canvas = Konva.Util.createCanvasElement();\n\n      // set inline styles\n      this._canvas.style.padding = 0;\n      this._canvas.style.margin = 0;\n      this._canvas.style.border = 0;\n      this._canvas.style.background = 'transparent';\n      this._canvas.style.position = 'absolute';\n      this._canvas.style.top = 0;\n      this._canvas.style.left = 0;\n    },\n    /**\n         * get canvas context\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {CanvasContext} context\n         */\n    getContext: function() {\n      return this.context;\n    },\n    /**\n         * get pixel ratio\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {Number} pixel ratio\n         */\n    getPixelRatio: function() {\n      return this.pixelRatio;\n    },\n    /**\n         * get pixel ratio\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} pixelRatio KonvaJS automatically handles pixel ratio adustments in order to render crisp drawings\n         *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n         *  of 1.  Some high end tablets and phones, like iPhones and iPads have a device pixel ratio\n         *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n         *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n         *  specificed, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n         *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n         */\n    setPixelRatio: function(pixelRatio) {\n      var previousRatio = this.pixelRatio;\n      this.pixelRatio = pixelRatio;\n      this.setSize(\n        this.getWidth() / previousRatio,\n        this.getHeight() / previousRatio\n      );\n    },\n    /**\n         * set width\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} width\n         */\n    setWidth: function(width) {\n      // take into account pixel ratio\n      this.width = this._canvas.width = width * this.pixelRatio;\n      this._canvas.style.width = width + 'px';\n\n      var pixelRatio = this.pixelRatio,\n        _context = this.getContext()._context;\n      _context.scale(pixelRatio, pixelRatio);\n    },\n    /**\n         * set height\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} height\n         */\n    setHeight: function(height) {\n      // take into account pixel ratio\n      this.height = this._canvas.height = height * this.pixelRatio;\n      this._canvas.style.height = height + 'px';\n      var pixelRatio = this.pixelRatio,\n        _context = this.getContext()._context;\n      _context.scale(pixelRatio, pixelRatio);\n    },\n    /**\n         * get width\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {Number} width\n         */\n    getWidth: function() {\n      return this.width;\n    },\n    /**\n         * get height\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {Number} height\n         */\n    getHeight: function() {\n      return this.height;\n    },\n    /**\n         * set size\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} width\n         * @param {Number} height\n         */\n    setSize: function(width, height) {\n      this.setWidth(width);\n      this.setHeight(height);\n    },\n    /**\n         * to data url\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {String} mimeType\n         * @param {Number} quality between 0 and 1 for jpg mime types\n         * @returns {String} data url string\n         */\n    toDataURL: function(mimeType, quality) {\n      try {\n        // If this call fails (due to browser bug, like in Firefox 3.6),\n        // then revert to previous no-parameter image/png behavior\n        return this._canvas.toDataURL(mimeType, quality);\n      } catch (e) {\n        try {\n          return this._canvas.toDataURL();\n        } catch (err) {\n          Konva.Util.warn('Unable to get data URL. ' + err.message);\n          return '';\n        }\n      }\n    }\n  };\n\n  Konva.SceneCanvas = function(config) {\n    var conf = config || {};\n    var width = conf.width || 0,\n      height = conf.height || 0;\n\n    Konva.Canvas.call(this, conf);\n    this.context = new Konva.SceneContext(this);\n    this.setSize(width, height);\n  };\n\n  Konva.Util.extend(Konva.SceneCanvas, Konva.Canvas);\n\n  Konva.HitCanvas = function(config) {\n    var conf = config || {};\n    var width = conf.width || 0,\n      height = conf.height || 0;\n\n    Konva.Canvas.call(this, conf);\n    this.context = new Konva.HitContext(this);\n    this.setSize(width, height);\n    this.hitCanvas = true;\n  };\n  Konva.Util.extend(Konva.HitCanvas, Konva.Canvas);\n})();\n\n(function() {\n  'use strict';\n  var COMMA = ',',\n    OPEN_PAREN = '(',\n    CLOSE_PAREN = ')',\n    OPEN_PAREN_BRACKET = '([',\n    CLOSE_BRACKET_PAREN = '])',\n    SEMICOLON = ';',\n    DOUBLE_PAREN = '()',\n    // EMPTY_STRING = '',\n    EQUALS = '=',\n    // SET = 'set',\n    CONTEXT_METHODS = [\n      'arc',\n      'arcTo',\n      'beginPath',\n      'bezierCurveTo',\n      'clearRect',\n      'clip',\n      'closePath',\n      'createLinearGradient',\n      'createPattern',\n      'createRadialGradient',\n      'drawImage',\n      'fill',\n      'fillText',\n      'getImageData',\n      'createImageData',\n      'lineTo',\n      'moveTo',\n      'putImageData',\n      'quadraticCurveTo',\n      'rect',\n      'restore',\n      'rotate',\n      'save',\n      'scale',\n      'setLineDash',\n      'setTransform',\n      'stroke',\n      'strokeText',\n      'transform',\n      'translate'\n    ];\n\n  var CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation'\n  ];\n\n  /**\n     * Canvas Context constructor\n     * @constructor\n     * @abstract\n     * @memberof Konva\n     */\n  Konva.Context = function(canvas) {\n    this.init(canvas);\n  };\n\n  Konva.Context.prototype = {\n    init: function(canvas) {\n      this.canvas = canvas;\n      this._context = canvas._canvas.getContext('2d');\n\n      if (Konva.enableTrace) {\n        this.traceArr = [];\n        this._enableTrace();\n      }\n    },\n    /**\n         * fill shape\n         * @method\n         * @memberof Konva.Context.prototype\n         * @param {Konva.Shape} shape\n         */\n    fillShape: function(shape) {\n      if (shape.getFillEnabled()) {\n        this._fill(shape);\n      }\n    },\n    /**\n         * stroke shape\n         * @method\n         * @memberof Konva.Context.prototype\n         * @param {Konva.Shape} shape\n         */\n    strokeShape: function(shape) {\n      if (shape.getStrokeEnabled()) {\n        this._stroke(shape);\n      }\n    },\n    /**\n         * fill then stroke\n         * @method\n         * @memberof Konva.Context.prototype\n         * @param {Konva.Shape} shape\n         */\n    fillStrokeShape: function(shape) {\n      var fillEnabled = shape.getFillEnabled();\n      if (fillEnabled) {\n        this._fill(shape);\n      }\n      if (shape.getStrokeEnabled()) {\n        this._stroke(shape);\n      }\n    },\n    /**\n         * get context trace if trace is enabled\n         * @method\n         * @memberof Konva.Context.prototype\n         * @param {Boolean} relaxed if false, return strict context trace, which includes method names, method parameters\n         *  properties, and property values.  If true, return relaxed context trace, which only returns method names and\n         *  properites.\n         * @returns {String}\n         */\n    getTrace: function(relaxed) {\n      var traceArr = this.traceArr,\n        len = traceArr.length,\n        str = '',\n        n,\n        trace,\n        method,\n        args;\n\n      for (n = 0; n < len; n++) {\n        trace = traceArr[n];\n        method = trace.method;\n\n        // methods\n        if (method) {\n          args = trace.args;\n          str += method;\n          if (relaxed) {\n            str += DOUBLE_PAREN;\n          } else {\n            if (Konva.Util._isArray(args[0])) {\n              str +=\n                OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n            } else {\n              str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n            }\n          }\n        } else {\n          // properties\n          str += trace.property;\n          if (!relaxed) {\n            str += EQUALS + trace.val;\n          }\n        }\n\n        str += SEMICOLON;\n      }\n\n      return str;\n    },\n    /**\n         * clear trace if trace is enabled\n         * @method\n         * @memberof Konva.Context.prototype\n         */\n    clearTrace: function() {\n      this.traceArr = [];\n    },\n    _trace: function(str) {\n      var traceArr = this.traceArr, len;\n\n      traceArr.push(str);\n      len = traceArr.length;\n\n      if (len >= Konva.traceArrMax) {\n        traceArr.shift();\n      }\n    },\n    /**\n         * reset canvas context transform\n         * @method\n         * @memberof Konva.Context.prototype\n         */\n    reset: function() {\n      var pixelRatio = this.getCanvas().getPixelRatio();\n      this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    },\n    /**\n         * get canvas\n         * @method\n         * @memberof Konva.Context.prototype\n         * @returns {Konva.Canvas}\n         */\n    getCanvas: function() {\n      return this.canvas;\n    },\n    /**\n         * clear canvas\n         * @method\n         * @memberof Konva.Context.prototype\n         * @param {Object} [bounds]\n         * @param {Number} [bounds.x]\n         * @param {Number} [bounds.y]\n         * @param {Number} [bounds.width]\n         * @param {Number} [bounds.height]\n         */\n    clear: function(bounds) {\n      var canvas = this.getCanvas();\n\n      if (bounds) {\n        this.clearRect(\n          bounds.x || 0,\n          bounds.y || 0,\n          bounds.width || 0,\n          bounds.height || 0\n        );\n      } else {\n        this.clearRect(\n          0,\n          0,\n          canvas.getWidth() / canvas.pixelRatio,\n          canvas.getHeight() / canvas.pixelRatio\n        );\n      }\n    },\n    _applyLineCap: function(shape) {\n      var lineCap = shape.getLineCap();\n      if (lineCap) {\n        this.setAttr('lineCap', lineCap);\n      }\n    },\n    _applyOpacity: function(shape) {\n      var absOpacity = shape.getAbsoluteOpacity();\n      if (absOpacity !== 1) {\n        this.setAttr('globalAlpha', absOpacity);\n      }\n    },\n    _applyLineJoin: function(shape) {\n      var lineJoin = shape.getLineJoin();\n      if (lineJoin) {\n        this.setAttr('lineJoin', lineJoin);\n      }\n    },\n    setAttr: function(attr, val) {\n      this._context[attr] = val;\n    },\n\n    // context pass through methods\n    arc: function() {\n      var a = arguments;\n      this._context.arc(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    beginPath: function() {\n      this._context.beginPath();\n    },\n    bezierCurveTo: function() {\n      var a = arguments;\n      this._context.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    clearRect: function() {\n      var a = arguments;\n      this._context.clearRect(a[0], a[1], a[2], a[3]);\n    },\n    clip: function() {\n      this._context.clip();\n    },\n    closePath: function() {\n      this._context.closePath();\n    },\n    createImageData: function() {\n      var a = arguments;\n      if (a.length === 2) {\n        return this._context.createImageData(a[0], a[1]);\n      } else if (a.length === 1) {\n        return this._context.createImageData(a[0]);\n      }\n    },\n    createLinearGradient: function() {\n      var a = arguments;\n      return this._context.createLinearGradient(a[0], a[1], a[2], a[3]);\n    },\n    createPattern: function() {\n      var a = arguments;\n      return this._context.createPattern(a[0], a[1]);\n    },\n    createRadialGradient: function() {\n      var a = arguments;\n      return this._context.createRadialGradient(\n        a[0],\n        a[1],\n        a[2],\n        a[3],\n        a[4],\n        a[5]\n      );\n    },\n    drawImage: function() {\n      var a = arguments, _context = this._context;\n\n      if (a.length === 3) {\n        _context.drawImage(a[0], a[1], a[2]);\n      } else if (a.length === 5) {\n        _context.drawImage(a[0], a[1], a[2], a[3], a[4]);\n      } else if (a.length === 9) {\n        _context.drawImage(\n          a[0],\n          a[1],\n          a[2],\n          a[3],\n          a[4],\n          a[5],\n          a[6],\n          a[7],\n          a[8]\n        );\n      }\n    },\n    isPointInPath: function(x, y) {\n      return this._context.isPointInPath(x, y);\n    },\n    fill: function() {\n      this._context.fill();\n    },\n    fillRect: function(x, y, width, height) {\n      this._context.fillRect(x, y, width, height);\n    },\n    strokeRect: function(x, y, width, height) {\n      this._context.strokeRect(x, y, width, height);\n    },\n    fillText: function() {\n      var a = arguments;\n      this._context.fillText(a[0], a[1], a[2]);\n    },\n    measureText: function(text) {\n      return this._context.measureText(text);\n    },\n    getImageData: function() {\n      var a = arguments;\n      return this._context.getImageData(a[0], a[1], a[2], a[3]);\n    },\n    lineTo: function() {\n      var a = arguments;\n      this._context.lineTo(a[0], a[1]);\n    },\n    moveTo: function() {\n      var a = arguments;\n      this._context.moveTo(a[0], a[1]);\n    },\n    rect: function() {\n      var a = arguments;\n      this._context.rect(a[0], a[1], a[2], a[3]);\n    },\n    putImageData: function() {\n      var a = arguments;\n      this._context.putImageData(a[0], a[1], a[2]);\n    },\n    quadraticCurveTo: function() {\n      var a = arguments;\n      this._context.quadraticCurveTo(a[0], a[1], a[2], a[3]);\n    },\n    restore: function() {\n      this._context.restore();\n    },\n    rotate: function() {\n      var a = arguments;\n      this._context.rotate(a[0]);\n    },\n    save: function() {\n      this._context.save();\n    },\n    scale: function() {\n      var a = arguments;\n      this._context.scale(a[0], a[1]);\n    },\n    setLineDash: function() {\n      var a = arguments, _context = this._context;\n\n      // works for Chrome and IE11\n      if (this._context.setLineDash) {\n        _context.setLineDash(a[0]);\n      } else if ('mozDash' in _context) {\n        // verified that this works in firefox\n        _context.mozDash = a[0];\n      } else if ('webkitLineDash' in _context) {\n        // does not currently work for Safari\n        _context.webkitLineDash = a[0];\n      }\n\n      // no support for IE9 and IE10\n    },\n    getLineDash: function() {\n      return this._context.getLineDash();\n    },\n    setTransform: function() {\n      var a = arguments;\n      this._context.setTransform(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    stroke: function() {\n      this._context.stroke();\n    },\n    strokeText: function() {\n      var a = arguments;\n      this._context.strokeText(a[0], a[1], a[2]);\n    },\n    transform: function() {\n      var a = arguments;\n      this._context.transform(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    translate: function() {\n      var a = arguments;\n      this._context.translate(a[0], a[1]);\n    },\n    _enableTrace: function() {\n      var that = this,\n        len = CONTEXT_METHODS.length,\n        _simplifyArray = Konva.Util._simplifyArray,\n        origSetter = this.setAttr,\n        n,\n        args;\n\n      // to prevent creating scope function at each loop\n      var func = function(methodName) {\n        var origMethod = that[methodName], ret;\n\n        that[methodName] = function() {\n          args = _simplifyArray(Array.prototype.slice.call(arguments, 0));\n          ret = origMethod.apply(that, arguments);\n\n          that._trace({\n            method: methodName,\n            args: args\n          });\n\n          return ret;\n        };\n      };\n      // methods\n      for (n = 0; n < len; n++) {\n        func(CONTEXT_METHODS[n]);\n      }\n\n      // attrs\n      that.setAttr = function() {\n        origSetter.apply(that, arguments);\n        var prop = arguments[0];\n        var val = arguments[1];\n        if (\n          prop === 'shadowOffsetX' ||\n          prop === 'shadowOffsetY' ||\n          prop === 'shadowBlur'\n        ) {\n          val = val / this.canvas.getPixelRatio();\n        }\n        that._trace({\n          property: prop,\n          val: val\n        });\n      };\n    }\n  };\n\n  CONTEXT_PROPERTIES.forEach(function(prop) {\n    Object.defineProperty(Konva.Context.prototype, prop, {\n      get: function() {\n        return this._context[prop];\n      },\n      set: function(val) {\n        this._context[prop] = val;\n      }\n    });\n  });\n\n  Konva.SceneContext = function(canvas) {\n    Konva.Context.call(this, canvas);\n  };\n\n  Konva.SceneContext.prototype = {\n    _fillColor: function(shape) {\n      var fill = shape.fill();\n\n      this.setAttr('fillStyle', fill);\n      shape._fillFunc(this);\n    },\n    _fillPattern: function(shape) {\n      var fillPatternX = shape.getFillPatternX(),\n        fillPatternY = shape.getFillPatternY(),\n        fillPatternScale = shape.getFillPatternScale(),\n        fillPatternRotation = Konva.getAngle(shape.getFillPatternRotation()),\n        fillPatternOffset = shape.getFillPatternOffset();\n\n      if (fillPatternX || fillPatternY) {\n        this.translate(fillPatternX || 0, fillPatternY || 0);\n      }\n      if (fillPatternRotation) {\n        this.rotate(fillPatternRotation);\n      }\n      if (fillPatternScale) {\n        this.scale(fillPatternScale.x, fillPatternScale.y);\n      }\n      if (fillPatternOffset) {\n        this.translate(-1 * fillPatternOffset.x, -1 * fillPatternOffset.y);\n      }\n\n      this.setAttr(\n        'fillStyle',\n        this.createPattern(\n          shape.getFillPatternImage(),\n          shape.getFillPatternRepeat() || 'repeat'\n        )\n      );\n      this.fill();\n    },\n    _fillLinearGradient: function(shape) {\n      var start = shape.getFillLinearGradientStartPoint(),\n        end = shape.getFillLinearGradientEndPoint(),\n        colorStops = shape.getFillLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\n      if (colorStops) {\n        // build color stops\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        this.setAttr('fillStyle', grd);\n        shape._fillFunc(this);\n      }\n    },\n    _fillRadialGradient: function(shape) {\n      var start = shape.getFillRadialGradientStartPoint(),\n        end = shape.getFillRadialGradientEndPoint(),\n        startRadius = shape.getFillRadialGradientStartRadius(),\n        endRadius = shape.getFillRadialGradientEndRadius(),\n        colorStops = shape.getFillRadialGradientColorStops(),\n        grd = this.createRadialGradient(\n          start.x,\n          start.y,\n          startRadius,\n          end.x,\n          end.y,\n          endRadius\n        );\n\n      // build color stops\n      for (var n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n      this.setAttr('fillStyle', grd);\n      this.fill();\n    },\n    _fill: function(shape) {\n      var hasColor = shape.fill(),\n        hasPattern = shape.getFillPatternImage(),\n        hasLinearGradient = shape.getFillLinearGradientColorStops(),\n        hasRadialGradient = shape.getFillRadialGradientColorStops(),\n        fillPriority = shape.getFillPriority();\n\n      // priority fills\n      if (hasColor && fillPriority === 'color') {\n        this._fillColor(shape);\n      } else if (hasPattern && fillPriority === 'pattern') {\n        this._fillPattern(shape);\n      } else if (hasLinearGradient && fillPriority === 'linear-gradient') {\n        this._fillLinearGradient(shape);\n      } else if (hasRadialGradient && fillPriority === 'radial-gradient') {\n        this._fillRadialGradient(shape);\n      } else if (hasColor) {\n        // now just try and fill with whatever is available\n        this._fillColor(shape);\n      } else if (hasPattern) {\n        this._fillPattern(shape);\n      } else if (hasLinearGradient) {\n        this._fillLinearGradient(shape);\n      } else if (hasRadialGradient) {\n        this._fillRadialGradient(shape);\n      }\n    },\n    _stroke: function(shape) {\n      var dash = shape.dash(),\n        // ignore strokeScaleEnabled for Text\n        strokeScaleEnabled =\n          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;\n\n      if (shape.hasStroke()) {\n        if (!strokeScaleEnabled) {\n          this.save();\n          this.setTransform(1, 0, 0, 1, 0, 0);\n        }\n\n        this._applyLineCap(shape);\n        if (dash && shape.dashEnabled()) {\n          this.setLineDash(dash);\n          this.setAttr('lineDashOffset', shape.dashOffset());\n        }\n\n        this.setAttr('lineWidth', shape.strokeWidth());\n        this.setAttr('strokeStyle', shape.stroke());\n\n        if (!shape.getShadowForStrokeEnabled()) {\n          this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n        }\n        shape._strokeFunc(this);\n\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    },\n    _applyShadow: function(shape) {\n      var util = Konva.Util,\n        color = util.get(shape.getShadowRGBA(), 'black'),\n        blur = util.get(shape.getShadowBlur(), 5),\n        offset = util.get(shape.getShadowOffset(), {\n          x: 0,\n          y: 0\n        }),\n        // TODO: get this info from transform??\n        scale = shape.getAbsoluteScale(),\n        ratio = this.canvas.getPixelRatio(),\n        scaleX = scale.x * ratio,\n        scaleY = scale.y * ratio;\n\n      this.setAttr('shadowColor', color);\n      this.setAttr(\n        'shadowBlur',\n        blur * ratio * Math.min(Math.abs(scaleX), Math.abs(scaleY))\n      );\n      this.setAttr('shadowOffsetX', offset.x * scaleX);\n      this.setAttr('shadowOffsetY', offset.y * scaleY);\n    },\n    _applyGlobalCompositeOperation: function(shape) {\n      var globalCompositeOperation = shape.getGlobalCompositeOperation();\n      if (globalCompositeOperation !== 'source-over') {\n        this.setAttr('globalCompositeOperation', globalCompositeOperation);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.SceneContext, Konva.Context);\n\n  Konva.HitContext = function(canvas) {\n    Konva.Context.call(this, canvas);\n  };\n\n  Konva.HitContext.prototype = {\n    _fill: function(shape) {\n      this.save();\n      this.setAttr('fillStyle', shape.colorKey);\n      shape._fillFuncHit(this);\n      this.restore();\n    },\n    _stroke: function(shape) {\n      if (shape.hasStroke() && shape.strokeHitEnabled()) {\n        // ignore strokeScaleEnabled for Text\n        var strokeScaleEnabled =\n          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;\n        if (!strokeScaleEnabled) {\n          this.save();\n          this.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        this._applyLineCap(shape);\n        this.setAttr('lineWidth', shape.strokeWidth());\n        this.setAttr('strokeStyle', shape.colorKey);\n        shape._strokeFuncHit(this);\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  };\n  Konva.Util.extend(Konva.HitContext, Konva.Context);\n})();\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var GET = 'get', SET = 'set';\n\n  Konva.Factory = {\n    addGetterSetter: function(constructor, attr, def, validator, after) {\n      this.addGetter(constructor, attr, def);\n      this.addSetter(constructor, attr, validator, after);\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter: function(constructor, attr, def) {\n      var method = GET + Konva.Util._capitalize(attr);\n\n      constructor.prototype[method] = function() {\n        var val = this.attrs[attr];\n        return val === undefined ? def : val;\n      };\n    },\n    addSetter: function(constructor, attr, validator, after) {\n      var method = SET + Konva.Util._capitalize(attr);\n\n      constructor.prototype[method] = function(val) {\n        if (validator) {\n          val = validator.call(this, val);\n        }\n\n        this._setAttr(attr, val);\n\n        if (after) {\n          after.call(this);\n        }\n\n        return this;\n      };\n    },\n    addComponentsGetterSetter: function(\n      constructor,\n      attr,\n      components,\n      validator,\n      after\n    ) {\n      var len = components.length,\n        capitalize = Konva.Util._capitalize,\n        getter = GET + capitalize(attr),\n        setter = SET + capitalize(attr),\n        n,\n        component;\n\n      // getter\n      constructor.prototype[getter] = function() {\n        var ret = {};\n\n        for (n = 0; n < len; n++) {\n          component = components[n];\n          ret[component] = this.getAttr(attr + capitalize(component));\n        }\n\n        return ret;\n      };\n\n      // setter\n      constructor.prototype[setter] = function(val) {\n        var oldVal = this.attrs[attr], key;\n\n        if (validator) {\n          val = validator.call(this, val);\n        }\n\n        for (key in val) {\n          if (!val.hasOwnProperty(key)) {\n            continue;\n          }\n          this._setAttr(attr + capitalize(key), val[key]);\n        }\n\n        this._fireChangeEvent(attr, oldVal, val);\n\n        if (after) {\n          after.call(this);\n        }\n\n        return this;\n      };\n\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter: function(constructor, attr) {\n      var capitalizedAttr = Konva.Util._capitalize(attr),\n        setter = SET + capitalizedAttr,\n        getter = GET + capitalizedAttr;\n\n      constructor.prototype[attr] = function() {\n        // setting\n        if (arguments.length) {\n          this[setter](arguments[0]);\n          return this;\n        }\n        // getting\n        return this[getter]();\n      };\n    },\n    addDeprecatedGetterSetter: function(constructor, attr, def, validator) {\n      var method = GET + Konva.Util._capitalize(attr);\n      var message =\n        attr +\n        ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n      constructor.prototype[method] = function() {\n        Konva.Util.error(message);\n        var val = this.attrs[attr];\n        return val === undefined ? def : val;\n      };\n      this.addSetter(constructor, attr, validator, function() {\n        Konva.Util.error(message);\n      });\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat: function(constructor, methods) {\n      Konva.Util.each(methods, function(oldMethodName, newMethodName) {\n        var method = constructor.prototype[newMethodName];\n        constructor.prototype[oldMethodName] = function() {\n          method.apply(this, arguments);\n          Konva.Util.error(\n            oldMethodName +\n              ' method is deprecated and will be removed soon. Use ' +\n              newMethodName +\n              ' instead'\n          );\n        };\n      });\n    },\n    afterSetFilter: function() {\n      this._filterUpToDate = false;\n    }\n  };\n\n  Konva.Validators = {\n    /**\n         * @return {number}\n         */\n    RGBComponent: function(val) {\n      if (val > 255) {\n        return 255;\n      } else if (val < 0) {\n        return 0;\n      }\n      return Math.round(val);\n    },\n    alphaComponent: function(val) {\n      if (val > 1) {\n        return 1;\n      } else if (val < 0.0001) {\n        // chrome does not honor alpha values of 0\n        return 0.0001;\n      }\n\n      return val;\n    }\n  };\n})();\n\n(function(Konva) {\n  'use strict';\n  // CONSTANTS\n  var ABSOLUTE_OPACITY = 'absoluteOpacity',\n    ABSOLUTE_TRANSFORM = 'absoluteTransform',\n    ABSOLUTE_SCALE = 'absoluteScale',\n    CHANGE = 'Change',\n    CHILDREN = 'children',\n    DOT = '.',\n    EMPTY_STRING = '',\n    GET = 'get',\n    ID = 'id',\n    KONVA = 'konva',\n    LISTENING = 'listening',\n    MOUSEENTER = 'mouseenter',\n    MOUSELEAVE = 'mouseleave',\n    NAME = 'name',\n    SET = 'set',\n    SHAPE = 'Shape',\n    SPACE = ' ',\n    STAGE = 'stage',\n    TRANSFORM = 'transform',\n    UPPER_STAGE = 'Stage',\n    VISIBLE = 'visible',\n    CLONE_BLACK_LIST = ['id'],\n    TRANSFORM_CHANGE_STR = [\n      'xChange.konva',\n      'yChange.konva',\n      'scaleXChange.konva',\n      'scaleYChange.konva',\n      'skewXChange.konva',\n      'skewYChange.konva',\n      'rotationChange.konva',\n      'offsetXChange.konva',\n      'offsetYChange.konva',\n      'transformsEnabledChange.konva'\n    ].join(SPACE),\n    SCALE_CHANGE_STR = ['scaleXChange.konva', 'scaleYChange.konva'].join(SPACE);\n\n  /**\n     * Node constructor. Nodes are entities that can be transformed, layered,\n     * and have bound events. The stage, layers, groups, and shapes all extend Node.\n     * @constructor\n     * @memberof Konva\n     * @abstract\n     * @param {Object} config\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     */\n  Konva.Node = function(config) {\n    this._init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Node, {\n    _init: function(config) {\n      var that = this;\n      this._id = Konva.idCounter++;\n      this.eventListeners = {};\n      this.attrs = {};\n      this._cache = {};\n      this._filterUpToDate = false;\n      this._isUnderCache = false;\n      this.setAttrs(config);\n\n      // event bindings for cache handling\n      this.on(TRANSFORM_CHANGE_STR, function() {\n        this._clearCache(TRANSFORM);\n        that._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      });\n\n      this.on(SCALE_CHANGE_STR, function() {\n        that._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n      });\n\n      this.on('visibleChange.konva', function() {\n        that._clearSelfAndDescendantCache(VISIBLE);\n      });\n      this.on('listeningChange.konva', function() {\n        that._clearSelfAndDescendantCache(LISTENING);\n      });\n      this.on('opacityChange.konva', function() {\n        that._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n      });\n    },\n    _clearCache: function(attr) {\n      if (attr) {\n        delete this._cache[attr];\n      } else {\n        this._cache = {};\n      }\n    },\n    _getCache: function(attr, privateGetter) {\n      var cache = this._cache[attr];\n\n      // if not cached, we need to set it using the private getter method.\n      if (cache === undefined) {\n        this._cache[attr] = privateGetter.call(this);\n      }\n\n      return this._cache[attr];\n    },\n    /*\n         * when the logic for a cached result depends on ancestor propagation, use this\n         * method to clear self and children cache\n         */\n    _clearSelfAndDescendantCache: function(attr) {\n      this._clearCache(attr);\n\n      if (this.children) {\n        this.getChildren().each(function(node) {\n          node._clearSelfAndDescendantCache(attr);\n        });\n      }\n    },\n    /**\n        * clear cached canvas\n        * @method\n        * @memberof Konva.Node.prototype\n        * @returns {Konva.Node}\n        * @example\n        * node.clearCache();\n        */\n    clearCache: function() {\n      delete this._cache.canvas;\n      this._filterUpToDate = false;\n      return this;\n    },\n    /**\n        *  cache node to improve drawing performance, apply filters, or create more accurate\n        *  hit regions. For all basic shapes size of cache canvas will be automatically detected.\n        *  If you need to cache your custom `Konva.Shape` instance you have to pass shape's bounding box\n        *  properties. Look at [link to demo page](link to demo page) for more information.\n        * @method\n        * @memberof Konva.Node.prototype\n        * @param {Object} [config]\n        * @param {Number} [config.x]\n        * @param {Number} [config.y]\n        * @param {Number} [config.width]\n        * @param {Number} [config.height]\n        * @param {Number} [config.offset]  increase canvas size by `offset` pixel in all directions.\n        * @param {Boolean} [config.drawBorder] when set to true, a red border will be drawn around the cached\n        *  region for debugging purposes\n        * @param {Number} [config.pixelRatio] change quality (or pixel ratio) of cached image. pixelRatio = 2 will produce 2x sized cache.\n        * @returns {Konva.Node}\n        * @example\n        * // cache a shape with the x,y position of the bounding box at the center and\n        * // the width and height of the bounding box equal to the width and height of\n        * // the shape obtained from shape.width() and shape.height()\n        * image.cache();\n        *\n        * // cache a node and define the bounding box position and size\n        * node.cache({\n        *   x: -30,\n        *   y: -30,\n        *   width: 100,\n        *   height: 200\n        * });\n        *\n        * // cache a node and draw a red border around the bounding box\n        * // for debugging purposes\n        * node.cache({\n        *   x: -30,\n        *   y: -30,\n        *   width: 100,\n        *   height: 200,\n        *   offset : 10,\n        *   drawBorder: true\n        * });\n        */\n    cache: function(config) {\n      var conf = config || {},\n        rect = this.getClientRect({\n          skipTransform: true,\n          relativeTo: this.getParent()\n        }),\n        width = conf.width || rect.width,\n        height = conf.height || rect.height,\n        pixelRatio = conf.pixelRatio,\n        x = conf.x || rect.x,\n        y = conf.y || rect.y,\n        offset = conf.offset || 0,\n        drawBorder = conf.drawBorder || false;\n\n      if (!width || !height) {\n        // make throw async, because we don't need to stop funcion\n        setTimeout(function() {\n          Konva.Util.throw(\n            'Width or height of caching configuration equals 0. Caching is ignored.'\n          );\n        });\n        return;\n      }\n\n      width += offset * 2;\n      height += offset * 2;\n\n      x -= offset;\n      y -= offset;\n\n      var cachedSceneCanvas = new Konva.SceneCanvas({\n          pixelRatio: pixelRatio,\n          width: width,\n          height: height\n        }),\n        cachedFilterCanvas = new Konva.SceneCanvas({\n          pixelRatio: pixelRatio,\n          width: width,\n          height: height\n        }),\n        cachedHitCanvas = new Konva.HitCanvas({\n          pixelRatio: 1,\n          width: width,\n          height: height\n        }),\n        sceneContext = cachedSceneCanvas.getContext(),\n        hitContext = cachedHitCanvas.getContext();\n\n      cachedHitCanvas.isCache = true;\n\n      this.clearCache();\n\n      sceneContext.save();\n      hitContext.save();\n\n      sceneContext.translate(-x, -y);\n      hitContext.translate(-x, -y);\n\n      // extra flag to skip on getAbsolute opacity calc\n      this._isUnderCache = true;\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n      this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n      this.drawScene(cachedSceneCanvas, this, true);\n      this.drawHit(cachedHitCanvas, this, true);\n      this._isUnderCache = false;\n\n      sceneContext.restore();\n      hitContext.restore();\n\n      // this will draw a red border around the cached box for\n      // debugging purposes\n      if (drawBorder) {\n        sceneContext.save();\n        sceneContext.beginPath();\n        sceneContext.rect(0, 0, width, height);\n        sceneContext.closePath();\n        sceneContext.setAttr('strokeStyle', 'red');\n        sceneContext.setAttr('lineWidth', 5);\n        sceneContext.stroke();\n        sceneContext.restore();\n      }\n\n      this._cache.canvas = {\n        scene: cachedSceneCanvas,\n        filter: cachedFilterCanvas,\n        hit: cachedHitCanvas,\n        x: x,\n        y: y\n      };\n\n      return this;\n    },\n    /**\n         * Return client rectangle {x, y, width, height} of node. This rectangle also include all styling (strokes, shadows, etc).\n         * The rectangle position is relative to parent container.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} config\n         * @param {Boolean} [config.skipTransform] should we apply transform to node for calculating rect?\n         * @param {Object} [config.relativeTo] calculate client rect relative to one of the parents\n         * @returns {Object} rect with {x, y, width, height} properties\n         * @example\n         * var rect = new Konva.Rect({\n         *      width : 100,\n         *      height : 100,\n         *      x : 50,\n         *      y : 50,\n         *      strokeWidth : 4,\n         *      stroke : 'black',\n         *      offsetX : 50,\n         *      scaleY : 2\n         * });\n         *\n         * // get client rect without think off transformations (position, rotation, scale, offset, etc)\n         * rect.getClientRect({ skipTransform: true});\n         * // returns {\n         * //     x : -2,   // two pixels for stroke / 2\n         * //     y : -2,\n         * //     width : 104, // increased by 4 for stroke\n         * //     height : 104\n         * //}\n         *\n         * // get client rect with transformation applied\n         * rect.getClientRect();\n         * // returns Object {x: -2, y: 46, width: 104, height: 208}\n         */\n    getClientRect: function() {\n      // abstract method\n      // redefine in Container and Shape\n      throw new Error('abstract \"getClientRect\" method call');\n    },\n    _transformedRect: function(rect, top) {\n      var points = [\n        { x: rect.x, y: rect.y },\n        { x: rect.x + rect.width, y: rect.y },\n        { x: rect.x + rect.width, y: rect.y + rect.height },\n        { x: rect.x, y: rect.y + rect.height }\n      ];\n      var minX, minY, maxX, maxY;\n      var trans = this.getAbsoluteTransform(top);\n      points.forEach(function(point) {\n        var transformed = trans.point(point);\n        if (minX === undefined) {\n          minX = maxX = transformed.x;\n          minY = maxY = transformed.y;\n        }\n        minX = Math.min(minX, transformed.x);\n        minY = Math.min(minY, transformed.y);\n        maxX = Math.max(maxX, transformed.x);\n        maxY = Math.max(maxY, transformed.y);\n      });\n      return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    },\n    _drawCachedSceneCanvas: function(context) {\n      context.save();\n      context._applyOpacity(this);\n      context._applyGlobalCompositeOperation(this);\n      context.translate(this._cache.canvas.x, this._cache.canvas.y);\n\n      var cacheCanvas = this._getCachedSceneCanvas();\n      var ratio = cacheCanvas.pixelRatio;\n\n      context.drawImage(\n        cacheCanvas._canvas,\n        0,\n        0,\n        cacheCanvas.width / ratio,\n        cacheCanvas.height / ratio\n      );\n      context.restore();\n    },\n    _drawCachedHitCanvas: function(context) {\n      var cachedCanvas = this._cache.canvas,\n        hitCanvas = cachedCanvas.hit;\n      context.save();\n      context.translate(this._cache.canvas.x, this._cache.canvas.y);\n      context.drawImage(hitCanvas._canvas, 0, 0);\n      context.restore();\n    },\n    _getCachedSceneCanvas: function() {\n      var filters = this.filters(),\n        cachedCanvas = this._cache.canvas,\n        sceneCanvas = cachedCanvas.scene,\n        filterCanvas = cachedCanvas.filter,\n        filterContext = filterCanvas.getContext(),\n        len,\n        imageData,\n        n,\n        filter;\n\n      if (filters) {\n        if (!this._filterUpToDate) {\n          var ratio = sceneCanvas.pixelRatio;\n\n          try {\n            len = filters.length;\n            filterContext.clear();\n\n            // copy cached canvas onto filter context\n            filterContext.drawImage(\n              sceneCanvas._canvas,\n              0,\n              0,\n              sceneCanvas.getWidth() / ratio,\n              sceneCanvas.getHeight() / ratio\n            );\n            imageData = filterContext.getImageData(\n              0,\n              0,\n              filterCanvas.getWidth(),\n              filterCanvas.getHeight()\n            );\n\n            // apply filters to filter context\n            for (n = 0; n < len; n++) {\n              filter = filters[n];\n              if (typeof filter !== 'function') {\n                Konva.Util.error(\n                  'Filter should be type of function, but got ' +\n                    typeof filter +\n                    ' insted. Please check correct filters'\n                );\n                continue;\n              }\n              filter.call(this, imageData);\n              filterContext.putImageData(imageData, 0, 0);\n            }\n          } catch (e) {\n            Konva.Util.error('Unable to apply filter. ' + e.message);\n          }\n\n          this._filterUpToDate = true;\n        }\n\n        return filterCanvas;\n      }\n      return sceneCanvas;\n    },\n    /**\n         * bind events to the node. KonvaJS supports mouseover, mousemove,\n         *  mouseout, mouseenter, mouseleave, mousedown, mouseup, wheel, click, dblclick, touchstart, touchmove,\n         *  touchend, tap, dbltap, dragstart, dragmove, and dragend events. The Konva Stage supports\n         *  contentMouseover, contentMousemove, contentMouseout, contentMousedown, contentMouseup, contentWheel, contentContextmenu\n         *  contentClick, contentDblclick, contentTouchstart, contentTouchmove, contentTouchend, contentTap,\n         *  and contentDblTap.  Pass in a string of events delimmited by a space to bind multiple events at once\n         *  such as 'mousedown mouseup mousemove'. Include a namespace to bind an\n         *  event by name such as 'click.foobar'.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', 'mousedown.foo touchstart.foo'\n         * @param {Function} handler The handler function is passed an event object\n         * @returns {Konva.Node}\n         * @example\n         * // add click listener\n         * node.on('click', function() {\n         *   console.log('you clicked me!');\n         * });\n         *\n         * // get the target node\n         * node.on('click', function(evt) {\n         *   console.log(evt.target);\n         * });\n         *\n         * // stop event propagation\n         * node.on('click', function(evt) {\n         *   evt.cancelBubble = true;\n         * });\n         *\n         * // bind multiple listeners\n         * node.on('click touchstart', function() {\n         *   console.log('you clicked/touched me!');\n         * });\n         *\n         * // namespace listener\n         * node.on('click.foo', function() {\n         *   console.log('you clicked/touched me!');\n         * });\n         *\n         * // get the event type\n         * node.on('click tap', function(evt) {\n         *   var eventType = evt.type;\n         * });\n         *\n         * // get native event object\n         * node.on('click tap', function(evt) {\n         *   var nativeEvent = evt.evt;\n         * });\n         *\n         * // for change events, get the old and new val\n         * node.on('xChange', function(evt) {\n         *   var oldVal = evt.oldVal;\n         *   var newVal = evt.newVal;\n         * });\n         *\n         * // get event targets\n         * // with event delegations\n         * layer.on('click', 'Group', function(evt) {\n         *   var shape = evt.target;\n         *   var group = evtn.currentTarger;\n         * });\n         */\n    on: function(evtStr, handler) {\n      if (arguments.length === 3) {\n        return this._delegate.apply(this, arguments);\n      }\n      var events = evtStr.split(SPACE),\n        len = events.length,\n        n,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n      /*\n             * loop through types and attach event listeners to\n             * each one.  eg. 'click mouseover.namespace mouseout'\n             * will create three event bindings\n             */\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split(DOT);\n        baseEvent = parts[0];\n        name = parts[1] || EMPTY_STRING;\n\n        // create events array if it doesn't exist\n        if (!this.eventListeners[baseEvent]) {\n          this.eventListeners[baseEvent] = [];\n        }\n\n        this.eventListeners[baseEvent].push({\n          name: name,\n          handler: handler\n        });\n      }\n\n      return this;\n    },\n    /**\n         * remove event bindings from the node. Pass in a string of\n         *  event types delimmited by a space to remove multiple event\n         *  bindings at once such as 'mousedown mouseup mousemove'.\n         *  include a namespace to remove an event binding by name\n         *  such as 'click.foobar'. If you only give a name like '.foobar',\n         *  all events in that namespace will be removed.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', '.foobar'\n         * @returns {Konva.Node}\n         * @example\n         * // remove listener\n         * node.off('click');\n         *\n         * // remove multiple listeners\n         * node.off('click touchstart');\n         *\n         * // remove listener by name\n         * node.off('click.foo');\n         */\n    off: function(evtStr) {\n      var events = (evtStr || '').split(SPACE),\n        len = events.length,\n        n,\n        t,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n      if (!evtStr) {\n        // remove all events\n        for (t in this.eventListeners) {\n          this._off(t);\n        }\n      }\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split(DOT);\n        baseEvent = parts[0];\n        name = parts[1];\n\n        if (baseEvent) {\n          if (this.eventListeners[baseEvent]) {\n            this._off(baseEvent, name);\n          }\n        } else {\n          for (t in this.eventListeners) {\n            this._off(t, name);\n          }\n        }\n      }\n      return this;\n    },\n    // some event aliases for third party integration like HammerJS\n    dispatchEvent: function(evt) {\n      var e = {\n        target: this,\n        type: evt.type,\n        evt: evt\n      };\n      this.fire(evt.type, e);\n      return this;\n    },\n    addEventListener: function(type, handler) {\n      // we have to pass native event to handler\n      this.on(type, function(evt) {\n        handler.call(this, evt.evt);\n      });\n      return this;\n    },\n    removeEventListener: function(type) {\n      this.off(type);\n      return this;\n    },\n    // like node.on\n    _delegate: function(event, selector, handler) {\n      var stopNode = this;\n      this.on(event, function(evt) {\n        var targets = evt.target.findAncestors(selector, true, stopNode);\n        for (var i = 0; i < targets.length; i++) {\n          evt = Konva.Util.cloneObject(evt);\n          evt.currentTarget = targets[i];\n          handler.call(targets[i], evt);\n        }\n      });\n    },\n    /**\n         * remove self from parent, but don't destroy\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Node}\n         * @example\n         * node.remove();\n         */\n    remove: function() {\n      var parent = this.getParent();\n\n      if (parent && parent.children) {\n        parent.children.splice(this.index, 1);\n        parent._setChildrenIndices();\n        delete this.parent;\n      }\n\n      // every cached attr that is calculated via node tree\n      // traversal must be cleared when removing a node\n      this._clearSelfAndDescendantCache(STAGE);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      this._clearSelfAndDescendantCache(VISIBLE);\n      this._clearSelfAndDescendantCache(LISTENING);\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n      return this;\n    },\n    /**\n         * remove and destroy self\n         * @method\n         * @memberof Konva.Node.prototype\n         * @example\n         * node.destroy();\n         */\n    destroy: function() {\n      // remove from ids and names hashes\n      Konva._removeId(this.getId());\n\n      // remove all names\n      var names = (this.getName() || '').split(/\\s/g);\n      for (var i = 0; i < names.length; i++) {\n        var subname = names[i];\n        Konva._removeName(subname, this._id);\n      }\n\n      this.remove();\n      return this;\n    },\n    /**\n         * get attr\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} attr\n         * @returns {Integer|String|Object|Array}\n         * @example\n         * var x = node.getAttr('x');\n         */\n    getAttr: function(attr) {\n      var method = GET + Konva.Util._capitalize(attr);\n      if (Konva.Util._isFunction(this[method])) {\n        return this[method]();\n      }\n      // otherwise get directly\n      return this.attrs[attr];\n    },\n    /**\n        * get ancestors\n        * @method\n        * @memberof Konva.Node.prototype\n        * @returns {Konva.Collection}\n        * @example\n        * shape.getAncestors().each(function(node) {\n        *   console.log(node.getId());\n        * })\n        */\n    getAncestors: function() {\n      var parent = this.getParent(),\n        ancestors = new Konva.Collection();\n\n      while (parent) {\n        ancestors.push(parent);\n        parent = parent.getParent();\n      }\n\n      return ancestors;\n    },\n    /**\n         * get attrs object literal\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Object}\n         */\n    getAttrs: function() {\n      return this.attrs || {};\n    },\n    /**\n         * set multiple attrs at once using an object literal\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} config object containing key value pairs\n         * @returns {Konva.Node}\n         * @example\n         * node.setAttrs({\n         *   x: 5,\n         *   fill: 'red'\n         * });\n         */\n    setAttrs: function(config) {\n      var key, method;\n\n      if (!config) {\n        return this;\n      }\n      for (key in config) {\n        if (key === CHILDREN) {\n          continue;\n        }\n        method = SET + Konva.Util._capitalize(key);\n        // use setter if available\n        if (Konva.Util._isFunction(this[method])) {\n          this[method](config[key]);\n        } else {\n          // otherwise set directly\n          this._setAttr(key, config[key]);\n        }\n      }\n      return this;\n    },\n    /**\n         * determine if node is listening for events by taking into account ancestors.\n         *\n         * Parent    | Self      | isListening\n         * listening | listening |\n         * ----------+-----------+------------\n         * T         | T         | T\n         * T         | F         | F\n         * F         | T         | T\n         * F         | F         | F\n         * ----------+-----------+------------\n         * T         | I         | T\n         * F         | I         | F\n         * I         | I         | T\n         *\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n    isListening: function() {\n      return this._getCache(LISTENING, this._isListening);\n    },\n    _isListening: function() {\n      var listening = this.getListening(),\n        parent = this.getParent();\n\n      // the following conditions are a simplification of the truth table above.\n      // please modify carefully\n      if (listening === 'inherit') {\n        if (parent) {\n          return parent.isListening();\n        } else {\n          return true;\n        }\n      } else {\n        return listening;\n      }\n    },\n    /**\n         * determine if node is visible by taking into account ancestors.\n         *\n         * Parent    | Self      | isVisible\n         * visible   | visible   |\n         * ----------+-----------+------------\n         * T         | T         | T\n         * T         | F         | F\n         * F         | T         | T\n         * F         | F         | F\n         * ----------+-----------+------------\n         * T         | I         | T\n         * F         | I         | F\n         * I         | I         | T\n\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n    isVisible: function() {\n      return this._getCache(VISIBLE, this._isVisible);\n    },\n    _isVisible: function() {\n      var visible = this.getVisible(),\n        parent = this.getParent();\n\n      // the following conditions are a simplification of the truth table above.\n      // please modify carefully\n      if (visible === 'inherit') {\n        if (parent) {\n          return parent.isVisible();\n        } else {\n          return true;\n        }\n      } else {\n        return visible;\n      }\n    },\n    /**\n         * determine if listening is enabled by taking into account descendants.  If self or any children\n         * have _isListeningEnabled set to true, then self also has listening enabled.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n    shouldDrawHit: function(canvas) {\n      var layer = this.getLayer();\n      return (\n        (canvas && canvas.isCache) ||\n        (layer &&\n          layer.hitGraphEnabled() &&\n          this.isListening() &&\n          this.isVisible())\n      );\n    },\n    /**\n         * show node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Node}\n         */\n    show: function() {\n      this.setVisible(true);\n      return this;\n    },\n    /**\n         * hide node.  Hidden nodes are no longer detectable\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Node}\n         */\n    hide: function() {\n      this.setVisible(false);\n      return this;\n    },\n    /**\n         * get zIndex relative to the node's siblings who share the same parent\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Integer}\n         */\n    getZIndex: function() {\n      return this.index || 0;\n    },\n    /**\n         * get absolute z-index which takes into account sibling\n         *  and ancestor indices\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Integer}\n         */\n    getAbsoluteZIndex: function() {\n      var depth = this.getDepth(),\n        that = this,\n        index = 0,\n        nodes,\n        len,\n        n,\n        child;\n\n      function addChildren(children) {\n        nodes = [];\n        len = children.length;\n        for (n = 0; n < len; n++) {\n          child = children[n];\n          index++;\n\n          if (child.nodeType !== SHAPE) {\n            nodes = nodes.concat(child.getChildren().toArray());\n          }\n\n          if (child._id === that._id) {\n            n = len;\n          }\n        }\n\n        if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n          addChildren(nodes);\n        }\n      }\n      if (that.nodeType !== UPPER_STAGE) {\n        addChildren(that.getStage().getChildren());\n      }\n\n      return index;\n    },\n    /**\n         * get node depth in node tree.  Returns an integer.\n         *  e.g. Stage depth will always be 0.  Layers will always be 1.  Groups and Shapes will always\n         *  be >= 2\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Integer}\n         */\n    getDepth: function() {\n      var depth = 0,\n        parent = this.parent;\n\n      while (parent) {\n        depth++;\n        parent = parent.parent;\n      }\n      return depth;\n    },\n    setPosition: function(pos) {\n      this.setX(pos.x);\n      this.setY(pos.y);\n      return this;\n    },\n    getPosition: function() {\n      return {\n        x: this.getX(),\n        y: this.getY()\n      };\n    },\n    /**\n         * get absolute position relative to the top left corner of the stage container div\n         * or relative to passed node\n         * @method\n         * @param {Object} [top] optional parent node\n         * @memberof Konva.Node.prototype\n         * @returns {Object}\n         */\n    getAbsolutePosition: function(top) {\n      var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n        absoluteTransform = new Konva.Transform(),\n        offset = this.offset();\n\n      // clone the matrix array\n      absoluteTransform.m = absoluteMatrix.slice();\n      absoluteTransform.translate(offset.x, offset.y);\n\n      return absoluteTransform.getTranslation();\n    },\n    /**\n         * set absolute position\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} pos\n         * @param {Number} pos.x\n         * @param {Number} pos.y\n         * @returns {Konva.Node}\n         */\n    setAbsolutePosition: function(pos) {\n      var origTrans = this._clearTransform(),\n        it;\n\n      // don't clear translation\n      this.attrs.x = origTrans.x;\n      this.attrs.y = origTrans.y;\n      delete origTrans.x;\n      delete origTrans.y;\n\n      // unravel transform\n      it = this.getAbsoluteTransform();\n\n      it.invert();\n      it.translate(pos.x, pos.y);\n      pos = {\n        x: this.attrs.x + it.getTranslation().x,\n        y: this.attrs.y + it.getTranslation().y\n      };\n\n      this.setPosition({ x: pos.x, y: pos.y });\n      this._setTransform(origTrans);\n\n      return this;\n    },\n    _setTransform: function(trans) {\n      var key;\n\n      for (key in trans) {\n        this.attrs[key] = trans[key];\n      }\n\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    },\n    _clearTransform: function() {\n      var trans = {\n        x: this.getX(),\n        y: this.getY(),\n        rotation: this.getRotation(),\n        scaleX: this.getScaleX(),\n        scaleY: this.getScaleY(),\n        offsetX: this.getOffsetX(),\n        offsetY: this.getOffsetY(),\n        skewX: this.getSkewX(),\n        skewY: this.getSkewY()\n      };\n\n      this.attrs.x = 0;\n      this.attrs.y = 0;\n      this.attrs.rotation = 0;\n      this.attrs.scaleX = 1;\n      this.attrs.scaleY = 1;\n      this.attrs.offsetX = 0;\n      this.attrs.offsetY = 0;\n      this.attrs.skewX = 0;\n      this.attrs.skewY = 0;\n\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n      // return original transform\n      return trans;\n    },\n    /**\n         * move node by an amount relative to its current position\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} change\n         * @param {Number} change.x\n         * @param {Number} change.y\n         * @returns {Konva.Node}\n         * @example\n         * // move node in x direction by 1px and y direction by 2px\n         * node.move({\n         *   x: 1,\n         *   y: 2)\n         * });\n         */\n    move: function(change) {\n      var changeX = change.x,\n        changeY = change.y,\n        x = this.getX(),\n        y = this.getY();\n\n      if (changeX !== undefined) {\n        x += changeX;\n      }\n\n      if (changeY !== undefined) {\n        y += changeY;\n      }\n\n      this.setPosition({ x: x, y: y });\n      return this;\n    },\n    _eachAncestorReverse: function(func, top) {\n      var family = [],\n        parent = this.getParent(),\n        len,\n        n;\n\n      // if top node is defined, and this node is top node,\n      // there's no need to build a family tree.  just execute\n      // func with this because it will be the only node\n      if (top && top._id === this._id) {\n        func(this);\n        return true;\n      }\n\n      family.unshift(this);\n\n      while (parent && (!top || parent._id !== top._id)) {\n        family.unshift(parent);\n        parent = parent.parent;\n      }\n\n      len = family.length;\n      for (n = 0; n < len; n++) {\n        func(family[n]);\n      }\n    },\n    /**\n         * rotate node by an amount in degrees relative to its current rotation\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Number} theta\n         * @returns {Konva.Node}\n         */\n    rotate: function(theta) {\n      this.setRotation(this.getRotation() + theta);\n      return this;\n    },\n    /**\n         * move node to the top of its siblings\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n    moveToTop: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveToTop function is ignored.');\n        return false;\n      }\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.push(this);\n      this.parent._setChildrenIndices();\n      return true;\n    },\n    /**\n         * move node up\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean} flag is moved or not\n         */\n    moveUp: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveUp function is ignored.');\n        return false;\n      }\n      var index = this.index,\n        len = this.parent.getChildren().length;\n      if (index < len - 1) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index + 1, 0, this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n         * move node down\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n    moveDown: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveDown function is ignored.');\n        return false;\n      }\n      var index = this.index;\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index - 1, 0, this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n         * move node to the bottom of its siblings\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Boolean}\n         */\n    moveToBottom: function() {\n      if (!this.parent) {\n        Konva.Util.warn(\n          'Node has no parent. moveToBottom function is ignored.'\n        );\n        return false;\n      }\n      var index = this.index;\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.unshift(this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n         * set zIndex relative to siblings\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Integer} zIndex\n         * @returns {Konva.Node}\n         */\n    setZIndex: function(zIndex) {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. zIndex parameter is ignored.');\n        return false;\n      }\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(zIndex, 0, this);\n      this.parent._setChildrenIndices();\n      return this;\n    },\n    /**\n         * get absolute opacity\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Number}\n         */\n    getAbsoluteOpacity: function() {\n      return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    },\n    _getAbsoluteOpacity: function() {\n      var absOpacity = this.getOpacity();\n      var parent = this.getParent();\n      if (parent && !parent._isUnderCache) {\n        absOpacity *= this.getParent().getAbsoluteOpacity();\n      }\n      return absOpacity;\n    },\n    /**\n         * move node to another container\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Container} newContainer\n         * @returns {Konva.Node}\n         * @example\n         * // move node from current layer into layer2\n         * node.moveTo(layer2);\n         */\n    moveTo: function(newContainer) {\n      // do nothing if new container is already parent\n      if (this.getParent() !== newContainer) {\n        // this.remove my be overrided by drag and drop\n        // buy we need original\n        (this.__originalRemove || this.remove).call(this);\n        newContainer.add(this);\n      }\n      return this;\n    },\n    /**\n         * convert Node into an object for serialization.  Returns an object.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Object}\n         */\n    toObject: function() {\n      var obj = {},\n        attrs = this.getAttrs(),\n        key,\n        val,\n        getter,\n        defaultValue;\n\n      obj.attrs = {};\n\n      for (key in attrs) {\n        val = attrs[key];\n        getter = this[key];\n        // remove attr value so that we can extract the default value from the getter\n        delete attrs[key];\n        defaultValue = getter ? getter.call(this) : null;\n        // restore attr value\n        attrs[key] = val;\n        if (defaultValue !== val) {\n          obj.attrs[key] = val;\n        }\n      }\n\n      obj.className = this.getClassName();\n      return Konva.Util._prepareToStringify(obj);\n    },\n    /**\n         * convert Node into a JSON string.  Returns a JSON string.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {String}}\n         */\n    toJSON: function() {\n      return JSON.stringify(this.toObject());\n    },\n    /**\n         * get parent container\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Node}\n         */\n    getParent: function() {\n      return this.parent;\n    },\n    /**\n         * get all ancestros (parent then parent of the parent, etc) of the node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} [selector] selector for search\n         * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n         * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n         * @returns {Array} [ancestors]\n         * @example\n         * // get one of the parent group\n         * var parentGroups = node.findAncestors('Group');\n         */\n    findAncestors: function(selector, includeSelf, stopNode) {\n      var res = [];\n\n      if (includeSelf && this._isMatch(selector)) {\n        res.push(this);\n      }\n      var ancestor = this.parent;\n      while (ancestor) {\n        if (ancestor === stopNode) {\n          return res;\n        }\n        if (ancestor._isMatch(selector)) {\n          res.push(ancestor);\n        }\n        ancestor = ancestor.parent;\n      }\n      return res;\n    },\n    /**\n         * get ancestor (parent or parent of the parent, etc) of the node that match passed selector\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} [selector] selector for search\n         * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n         * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n         * @returns {Konva.Node} ancestor\n         * @example\n         * // get one of the parent group\n         * var group = node.findAncestors('.mygroup');\n         */\n    findAncestor: function(selector, includeSelf, stopNode) {\n      return this.findAncestors(selector, includeSelf, stopNode)[0];\n    },\n    // is current node match passed selector?\n    _isMatch: function(selector) {\n      if (!selector) {\n        return false;\n      }\n      var selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        sel;\n\n      for (n = 0; n < len; n++) {\n        sel = selectorArr[n];\n        if (!Konva.Util.isValidSelector(sel)) {\n          Konva.Util.warn(\n            'Selector \"' +\n              sel +\n              '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".'\n          );\n          Konva.Util.warn(\n            'If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".'\n          );\n          Konva.Util.warn('Konva is awesome, right?');\n        }\n        // id selector\n        if (sel.charAt(0) === '#') {\n          if (this.id() === sel.slice(1)) {\n            return true;\n          }\n        } else if (sel.charAt(0) === '.') {\n          // name selector\n          if (this.hasName(sel.slice(1))) {\n            return true;\n          }\n        } else if (this._get(sel).length !== 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n    /**\n         * get layer ancestor\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Layer}\n         */\n    getLayer: function() {\n      var parent = this.getParent();\n      return parent ? parent.getLayer() : null;\n    },\n    /**\n         * get stage ancestor\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Stage}\n         */\n    getStage: function() {\n      return this._getCache(STAGE, this._getStage);\n    },\n    _getStage: function() {\n      var parent = this.getParent();\n      if (parent) {\n        return parent.getStage();\n      } else {\n        return undefined;\n      }\n    },\n    /**\n         * fire event\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} eventType event type.  can be a regular event, like click, mouseover, or mouseout, or it can be a custom event, like myCustomEvent\n         * @param {Event} [evt] event object\n         * @param {Boolean} [bubble] setting the value to false, or leaving it undefined, will result in the event\n         *  not bubbling.  Setting the value to true will result in the event bubbling.\n         * @returns {Konva.Node}\n         * @example\n         * // manually fire click event\n         * node.fire('click');\n         *\n         * // fire custom event\n         * node.fire('foo');\n         *\n         * // fire custom event with custom event object\n         * node.fire('foo', {\n         *   bar: 10\n         * });\n         *\n         * // fire click event that bubbles\n         * node.fire('click', null, true);\n         */\n    fire: function(eventType, evt, bubble) {\n      evt = evt || {};\n      evt.target = evt.target || this;\n      // bubble\n      if (bubble) {\n        this._fireAndBubble(eventType, evt);\n      } else {\n        // no bubble\n        this._fire(eventType, evt);\n      }\n      return this;\n    },\n    /**\n         * get absolute transform of the node which takes into\n         *  account its ancestor transforms\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Transform}\n         */\n    getAbsoluteTransform: function(top) {\n      // if using an argument, we can't cache the result.\n      if (top) {\n        return this._getAbsoluteTransform(top);\n      } else {\n        // if no argument, we can cache the result\n        return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n      }\n    },\n    _getAbsoluteTransform: function(top) {\n      var at = new Konva.Transform(),\n        transformsEnabled,\n        trans;\n\n      // start with stage and traverse downwards to self\n      this._eachAncestorReverse(function(node) {\n        transformsEnabled = node.transformsEnabled();\n        trans = node.getTransform();\n\n        if (transformsEnabled === 'all') {\n          at.multiply(trans);\n        } else if (transformsEnabled === 'position') {\n          at.translate(node.x(), node.y());\n        }\n      }, top);\n      return at;\n    },\n    /**\n         * get absolute scale of the node which takes into\n         *  account its ancestor scales\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Transform}\n         */\n    getAbsoluteScale: function(top) {\n      // if using an argument, we can't cache the result.\n      if (top) {\n        return this._getAbsoluteScale(top);\n      } else {\n        // if no argument, we can cache the result\n        return this._getCache(ABSOLUTE_SCALE, this._getAbsoluteScale);\n      }\n    },\n    _getAbsoluteScale: function(top) {\n      // this is special logic for caching with some shapes with shadow\n      var parent = this;\n      while (parent) {\n        if (parent._isUnderCache) {\n          top = parent;\n        }\n        parent = parent.getParent();\n      }\n\n      var scaleX = 1,\n        scaleY = 1;\n\n      // start with stage and traverse downwards to self\n      this._eachAncestorReverse(function(node) {\n        scaleX *= node.scaleX();\n        scaleY *= node.scaleY();\n      }, top);\n      return {\n        x: scaleX,\n        y: scaleY\n      };\n    },\n    /**\n         * get transform of the node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Transform}\n         */\n    getTransform: function() {\n      return this._getCache(TRANSFORM, this._getTransform);\n    },\n    _getTransform: function() {\n      var m = new Konva.Transform(),\n        x = this.getX(),\n        y = this.getY(),\n        rotation = Konva.getAngle(this.getRotation()),\n        scaleX = this.getScaleX(),\n        scaleY = this.getScaleY(),\n        skewX = this.getSkewX(),\n        skewY = this.getSkewY(),\n        offsetX = this.getOffsetX(),\n        offsetY = this.getOffsetY();\n\n      if (x !== 0 || y !== 0) {\n        m.translate(x, y);\n      }\n      if (rotation !== 0) {\n        m.rotate(rotation);\n      }\n      if (skewX !== 0 || skewY !== 0) {\n        m.skew(skewX, skewY);\n      }\n      if (scaleX !== 1 || scaleY !== 1) {\n        m.scale(scaleX, scaleY);\n      }\n      if (offsetX !== 0 || offsetY !== 0) {\n        m.translate(-1 * offsetX, -1 * offsetY);\n      }\n\n      return m;\n    },\n    /**\n         * clone node.  Returns a new Node instance with identical attributes.  You can also override\n         *  the node properties with an object literal, enabling you to use an existing node as a template\n         *  for another node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} obj override attrs\n         * @returns {Konva.Node}\n         * @example\n         * // simple clone\n         * var clone = node.clone();\n         *\n         * // clone a node and override the x position\n         * var clone = rect.clone({\n         *   x: 5\n         * });\n         */\n    clone: function(obj) {\n      // instantiate new node\n      var attrs = Konva.Util.cloneObject(this.attrs),\n        key,\n        allListeners,\n        len,\n        n,\n        listener;\n      // filter black attrs\n      for (var i in CLONE_BLACK_LIST) {\n        var blockAttr = CLONE_BLACK_LIST[i];\n        delete attrs[blockAttr];\n      }\n      // apply attr overrides\n      for (key in obj) {\n        attrs[key] = obj[key];\n      }\n\n      var node = new this.constructor(attrs);\n      // copy over listeners\n      for (key in this.eventListeners) {\n        allListeners = this.eventListeners[key];\n        len = allListeners.length;\n        for (n = 0; n < len; n++) {\n          listener = allListeners[n];\n          /*\n                     * don't include konva namespaced listeners because\n                     *  these are generated by the constructors\n                     */\n          if (listener.name.indexOf(KONVA) < 0) {\n            // if listeners array doesn't exist, then create it\n            if (!node.eventListeners[key]) {\n              node.eventListeners[key] = [];\n            }\n            node.eventListeners[key].push(listener);\n          }\n        }\n      }\n      return node;\n    },\n    _toKonvaCanvas: function(config) {\n      config = config || {};\n\n      var stage = this.getStage(),\n        x = config.x || 0,\n        y = config.y || 0,\n        pixelRatio = config.pixelRatio || 1,\n        canvas = new Konva.SceneCanvas({\n          width:\n            config.width || this.getWidth() || (stage ? stage.getWidth() : 0),\n          height:\n            config.height ||\n            this.getHeight() ||\n            (stage ? stage.getHeight() : 0),\n          pixelRatio: pixelRatio\n        }),\n        context = canvas.getContext();\n\n      context.save();\n\n      if (x || y) {\n        context.translate(-1 * x, -1 * y);\n      }\n\n      this.drawScene(canvas);\n      context.restore();\n\n      return canvas;\n    },\n    /**\n         * converts node into an canvas element.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} config\n         * @param {Function} config.callback function executed when the composite has completed\n         * @param {Number} [config.x] x position of canvas section\n         * @param {Number} [config.y] y position of canvas section\n         * @param {Number} [config.width] width of canvas section\n         * @param {Number} [config.height] height of canvas section\n         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n         * @example\n         * var canvas = node.toCanvas();\n         */\n    toCanvas: function(config) {\n      return this._toKonvaCanvas(config)._canvas;\n    },\n    /**\n         * Creates a composite data URL. If MIME type is not\n         * specified, then \"image/png\" will result. For \"image/jpeg\", specify a quality\n         * level as quality (range 0.0 - 1.0)\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} config\n         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n         *  \"image/png\" is the default\n         * @param {Number} [config.x] x position of canvas section\n         * @param {Number} [config.y] y position of canvas section\n         * @param {Number} [config.width] width of canvas section\n         * @param {Number} [config.height] height of canvas section\n         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n         *  is very high quality\n         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image url. Default is 1\n         * @returns {String}\n         */\n    toDataURL: function(config) {\n      config = config || {};\n      var mimeType = config.mimeType || null,\n        quality = config.quality || null;\n      return this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n    },\n    /**\n         * converts node into an image.  Since the toImage\n         *  method is asynchronous, a callback is required.  toImage is most commonly used\n         *  to cache complex drawings as an image so that they don't have to constantly be redrawn\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {Object} config\n         * @param {Function} config.callback function executed when the composite has completed\n         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n         *  \"image/png\" is the default\n         * @param {Number} [config.x] x position of canvas section\n         * @param {Number} [config.y] y position of canvas section\n         * @param {Number} [config.width] width of canvas section\n         * @param {Number} [config.height] height of canvas section\n         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n         *  is very high quality\n         * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n         * @example\n         * var image = node.toImage({\n         *   callback: function(img) {\n         *     // do stuff with img\n         *   }\n         * });\n         */\n    toImage: function(config) {\n      if (!config || !config.callback) {\n        throw 'callback required for toImage method config argument';\n      }\n      Konva.Util._getImage(this.toDataURL(config), function(img) {\n        config.callback(img);\n      });\n    },\n    setSize: function(size) {\n      this.setWidth(size.width);\n      this.setHeight(size.height);\n      return this;\n    },\n    getSize: function() {\n      return {\n        width: this.getWidth(),\n        height: this.getHeight()\n      };\n    },\n    getWidth: function() {\n      return this.attrs.width || 0;\n    },\n    getHeight: function() {\n      return this.attrs.height || 0;\n    },\n    /**\n         * get class name, which may return Stage, Layer, Group, or shape class names like Rect, Circle, Text, etc.\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {String}\n         */\n    getClassName: function() {\n      return this.className || this.nodeType;\n    },\n    /**\n         * get the node type, which may return Stage, Layer, Group, or Node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {String}\n         */\n    getType: function() {\n      return this.nodeType;\n    },\n    getDragDistance: function() {\n      // compare with undefined because we need to track 0 value\n      if (this.attrs.dragDistance !== undefined) {\n        return this.attrs.dragDistance;\n      } else if (this.parent) {\n        return this.parent.getDragDistance();\n      } else {\n        return Konva.dragDistance;\n      }\n    },\n    _get: function(selector) {\n      return this.className === selector || this.nodeType === selector\n        ? [this]\n        : [];\n    },\n    _off: function(type, name) {\n      var evtListeners = this.eventListeners[type],\n        i,\n        evtName;\n\n      for (i = 0; i < evtListeners.length; i++) {\n        evtName = evtListeners[i].name;\n        // the following two conditions must be true in order to remove a handler:\n        // 1) the current event name cannot be konva unless the event name is konva\n        //    this enables developers to force remove a konva specific listener for whatever reason\n        // 2) an event name is not specified, or if one is specified, it matches the current event name\n        if (\n          (evtName !== 'konva' || name === 'konva') &&\n          (!name || evtName === name)\n        ) {\n          evtListeners.splice(i, 1);\n          if (evtListeners.length === 0) {\n            delete this.eventListeners[type];\n            break;\n          }\n          i--;\n        }\n      }\n    },\n    _fireChangeEvent: function(attr, oldVal, newVal) {\n      this._fire(attr + CHANGE, {\n        oldVal: oldVal,\n        newVal: newVal\n      });\n    },\n    setId: function(id) {\n      var oldId = this.getId();\n\n      Konva._removeId(oldId);\n      Konva._addId(this, id);\n      this._setAttr(ID, id);\n      return this;\n    },\n    setName: function(name) {\n      var oldNames = (this.getName() || '').split(/\\s/g);\n      var newNames = (name || '').split(/\\s/g);\n      var subname, i;\n      // remove all subnames\n      for (i = 0; i < oldNames.length; i++) {\n        subname = oldNames[i];\n        if (newNames.indexOf(subname) === -1 && subname) {\n          Konva._removeName(subname, this._id);\n        }\n      }\n\n      // add new names\n      for (i = 0; i < newNames.length; i++) {\n        subname = newNames[i];\n        if (oldNames.indexOf(subname) === -1 && subname) {\n          Konva._addName(this, subname);\n        }\n      }\n\n      this._setAttr(NAME, name);\n      return this;\n    },\n    // naming methods\n    /**\n         * add name to node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} name\n         * @returns {Konva.Node}\n         * @example\n         * node.name('red');\n         * node.addName('selected');\n         * node.name(); // return 'red selected'\n         */\n    addName: function(name) {\n      if (!this.hasName(name)) {\n        var oldName = this.name();\n        var newName = oldName ? oldName + ' ' + name : name;\n        this.setName(newName);\n      }\n      return this;\n    },\n    /**\n         * check is node has name\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} name\n         * @returns {Boolean}\n         * @example\n         * node.name('red');\n         * node.hasName('red');   // return true\n         * node.hasName('selected'); // return false\n         */\n    hasName: function(name) {\n      var names = (this.name() || '').split(/\\s/g);\n      return names.indexOf(name) !== -1;\n    },\n    /**\n         * remove name from node\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} name\n         * @returns {Konva.Node}\n         * @example\n         * node.name('red selected');\n         * node.removeName('selected');\n         * node.hasName('selected'); // return false\n         * node.name(); // return 'red'\n         */\n    removeName: function(name) {\n      var names = (this.name() || '').split(/\\s/g);\n      var index = names.indexOf(name);\n      if (index !== -1) {\n        names.splice(index, 1);\n        this.setName(names.join(' '));\n      }\n      return this;\n    },\n    /**\n         * set attr\n         * @method\n         * @memberof Konva.Node.prototype\n         * @param {String} attr\n         * @param {*} val\n         * @returns {Konva.Node}\n         * @example\n         * node.setAttr('x', 5);\n         */\n    setAttr: function(attr, val) {\n      var method = SET + Konva.Util._capitalize(attr),\n        func = this[method];\n\n      if (Konva.Util._isFunction(func)) {\n        func.call(this, val);\n      } else {\n        // otherwise set directly\n        this._setAttr(attr, val);\n      }\n      return this;\n    },\n    _setAttr: function(key, val) {\n      var oldVal;\n      oldVal = this.attrs[key];\n      if (oldVal === val) {\n        return;\n      }\n      if (val === undefined || val === null) {\n        delete this.attrs[key];\n      } else {\n        this.attrs[key] = val;\n      }\n      this._fireChangeEvent(key, oldVal, val);\n    },\n    _setComponentAttr: function(key, component, val) {\n      var oldVal;\n      if (val !== undefined) {\n        oldVal = this.attrs[key];\n\n        if (!oldVal) {\n          // set value to default value using getAttr\n          this.attrs[key] = this.getAttr(key);\n        }\n\n        this.attrs[key][component] = val;\n        this._fireChangeEvent(key, oldVal, val);\n      }\n    },\n    _fireAndBubble: function(eventType, evt, compareShape) {\n      var okayToRun = true;\n\n      if (evt && this.nodeType === SHAPE) {\n        evt.target = this;\n      }\n\n      if (\n        eventType === MOUSEENTER &&\n        compareShape &&\n        (this._id === compareShape._id ||\n          (this.isAncestorOf && this.isAncestorOf(compareShape)))\n      ) {\n        okayToRun = false;\n      } else if (\n        eventType === MOUSELEAVE &&\n        compareShape &&\n        (this._id === compareShape._id ||\n          (this.isAncestorOf && this.isAncestorOf(compareShape)))\n      ) {\n        okayToRun = false;\n      }\n      if (okayToRun) {\n        this._fire(eventType, evt);\n\n        // simulate event bubbling\n        var stopBubble =\n          (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n          (compareShape &&\n            compareShape.isAncestorOf &&\n            compareShape.isAncestorOf(this) &&\n            !compareShape.isAncestorOf(this.parent));\n        if (\n          ((evt && !evt.cancelBubble) || !evt) &&\n          this.parent &&\n          this.parent.isListening() &&\n          !stopBubble\n        ) {\n          if (compareShape && compareShape.parent) {\n            this._fireAndBubble.call(\n              this.parent,\n              eventType,\n              evt,\n              compareShape.parent\n            );\n          } else {\n            this._fireAndBubble.call(this.parent, eventType, evt);\n          }\n        }\n      }\n    },\n    _fire: function(eventType, evt) {\n      var events = this.eventListeners[eventType],\n        i;\n\n      evt = evt || {};\n      evt.currentTarget = this;\n      evt.type = eventType;\n\n      if (events) {\n        for (i = 0; i < events.length; i++) {\n          events[i].handler.call(this, evt);\n        }\n      }\n    },\n    /**\n         * draw both scene and hit graphs.  If the node being drawn is the stage, all of the layers will be cleared and redrawn\n         * @method\n         * @memberof Konva.Node.prototype\n         * @returns {Konva.Node}\n         */\n    draw: function() {\n      this.drawScene();\n      this.drawHit();\n      return this;\n    }\n  });\n\n  /**\n     * create node with JSON string or an Object.  De-serializtion does not generate custom\n     *  shape drawing functions, images, or event handlers (this would make the\n     *  serialized object huge).  If your app uses custom shapes, images, and\n     *  event handlers (it probably does), then you need to select the appropriate\n     *  shapes after loading the stage and set these properties via on(), setDrawFunc(),\n     *  and setImage() methods\n     * @method\n     * @memberof Konva.Node\n     * @param {String|Object} json string or object\n     * @param {Element} [container] optional container dom element used only if you're\n     *  creating a stage node\n     */\n  Konva.Node.create = function(data, container) {\n    if (Konva.Util._isString(data)) {\n      data = JSON.parse(data);\n    }\n    return this._createNode(data, container);\n  };\n  Konva.Node._createNode = function(obj, container) {\n    var className = Konva.Node.prototype.getClassName.call(obj),\n      children = obj.children,\n      no,\n      len,\n      n;\n\n    // if container was passed in, add it to attrs\n    if (container) {\n      obj.attrs.container = container;\n    }\n\n    no = new Konva[className](obj.attrs);\n    if (children) {\n      len = children.length;\n      for (n = 0; n < len; n++) {\n        no.add(this._createNode(children[n]));\n      }\n    }\n\n    return no;\n  };\n\n  // =========================== add getters setters ===========================\n\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'position');\n  /**\n     * get/set node position relative to parent\n     * @name position\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @returns {Object}\n     * @example\n     * // get position\n     * var position = node.position();\n     *\n     * // set position\n     * node.position({\n     *   x: 5\n     *   y: 10\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'x', 0);\n\n  /**\n     * get/set x position\n     * @name x\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} x\n     * @returns {Object}\n     * @example\n     * // get x\n     * var x = node.x();\n     *\n     * // set x\n     * node.x(5);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'y', 0);\n\n  /**\n     * get/set y position\n     * @name y\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} y\n     * @returns {Integer}\n     * @example\n     * // get y\n     * var y = node.y();\n     *\n     * // set y\n     * node.y(5);\n     */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'globalCompositeOperation',\n    'source-over'\n  );\n\n  /**\n     * get/set globalCompositeOperation of a shape\n     * @name globalCompositeOperation\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} blur\n     * @returns {Number}\n     * @example\n     * // get shadow blur\n     * var globalCompositeOperation = shape.globalCompositeOperation();\n     *\n     * // set shadow blur\n     * shape.globalCompositeOperation('source-in');\n     */\n  Konva.Factory.addGetterSetter(Konva.Node, 'opacity', 1);\n\n  /**\n     * get/set opacity.  Opacity values range from 0 to 1.\n     *  A node with an opacity of 0 is fully transparent, and a node\n     *  with an opacity of 1 is fully opaque\n     * @name opacity\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} opacity\n     * @returns {Number}\n     * @example\n     * // get opacity\n     * var opacity = node.opacity();\n     *\n     * // set opacity\n     * node.opacity(0.5);\n     */\n\n  Konva.Factory.addGetter(Konva.Node, 'name');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'name');\n\n  /**\n     * get/set name\n     * @name name\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {String}\n     * @example\n     * // get name\n     * var name = node.name();\n     *\n     * // set name\n     * node.name('foo');\n     *\n     * // also node may have multiple names (as css classes)\n     * node.name('foo bar');\n     */\n\n  Konva.Factory.addGetter(Konva.Node, 'id');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'id');\n\n  /**\n     * get/set id. Id is global for whole page.\n     * @name id\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} id\n     * @returns {String}\n     * @example\n     * // get id\n     * var name = node.id();\n     *\n     * // set id\n     * node.id('foo');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'rotation', 0);\n\n  /**\n     * get/set rotation in degrees\n     * @name rotation\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} rotation\n     * @returns {Number}\n     * @example\n     * // get rotation in degrees\n     * var rotation = node.rotation();\n     *\n     * // set rotation in degrees\n     * node.rotation(45);\n     */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'scale', ['x', 'y']);\n\n  /**\n     * get/set scale\n     * @name scale\n     * @param {Object} scale\n     * @param {Number} scale.x\n     * @param {Number} scale.y\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     * @example\n     * // get scale\n     * var scale = node.scale();\n     *\n     * // set scale\n     * shape.scale({\n     *   x: 2\n     *   y: 3\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'scaleX', 1);\n\n  /**\n     * get/set scale x\n     * @name scaleX\n     * @param {Number} x\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     * @example\n     * // get scale x\n     * var scaleX = node.scaleX();\n     *\n     * // set scale x\n     * node.scaleX(2);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'scaleY', 1);\n\n  /**\n     * get/set scale y\n     * @name scaleY\n     * @param {Number} y\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     * @example\n     * // get scale y\n     * var scaleY = node.scaleY();\n     *\n     * // set scale y\n     * node.scaleY(2);\n     */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'skew', ['x', 'y']);\n\n  /**\n     * get/set skew\n     * @name skew\n     * @param {Object} skew\n     * @param {Number} skew.x\n     * @param {Number} skew.y\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     * @example\n     * // get skew\n     * var skew = node.skew();\n     *\n     * // set skew\n     * node.skew({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'skewX', 0);\n\n  /**\n     * get/set skew x\n     * @name skewX\n     * @param {Number} x\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     * @example\n     * // get skew x\n     * var skewX = node.skewX();\n     *\n     * // set skew x\n     * node.skewX(3);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'skewY', 0);\n\n  /**\n     * get/set skew y\n     * @name skewY\n     * @param {Number} y\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     * @example\n     * // get skew y\n     * var skewY = node.skewY();\n     *\n     * // set skew y\n     * node.skewY(3);\n     */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'offset', ['x', 'y']);\n\n  /**\n     * get/set offset.  Offsets the default position and rotation point\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} offset\n     * @param {Number} offset.x\n     * @param {Number} offset.y\n     * @returns {Object}\n     * @example\n     * // get offset\n     * var offset = node.offset();\n     *\n     * // set offset\n     * node.offset({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'offsetX', 0);\n\n  /**\n     * get/set offset x\n     * @name offsetX\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get offset x\n     * var offsetX = node.offsetX();\n     *\n     * // set offset x\n     * node.offsetX(3);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'offsetY', 0);\n\n  /**\n     * get/set offset y\n     * @name offsetY\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get offset y\n     * var offsetY = node.offsetY();\n     *\n     * // set offset y\n     * node.offsetY(3);\n     */\n\n  Konva.Factory.addSetter(Konva.Node, 'dragDistance');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'dragDistance');\n\n  /**\n     * get/set drag distance\n     * @name dragDistance\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} distance\n     * @returns {Number}\n     * @example\n     * // get drag distance\n     * var dragDistance = node.dragDistance();\n     *\n     * // set distance\n     * // node starts dragging only if pointer moved more then 3 pixels\n     * node.dragDistance(3);\n     * // or set globally\n     * Konva.dragDistance = 3;\n     */\n\n  Konva.Factory.addSetter(Konva.Node, 'width', 0);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'width');\n  /**\n     * get/set width\n     * @name width\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} width\n     * @returns {Number}\n     * @example\n     * // get width\n     * var width = node.width();\n     *\n     * // set width\n     * node.width(100);\n     */\n\n  Konva.Factory.addSetter(Konva.Node, 'height', 0);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'height');\n  /**\n     * get/set height\n     * @name height\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} height\n     * @returns {Number}\n     * @example\n     * // get height\n     * var height = node.height();\n     *\n     * // set height\n     * node.height(100);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'listening', 'inherit');\n  /**\n     * get/set listenig attr.  If you need to determine if a node is listening or not\n     *   by taking into account its parents, use the isListening() method\n     * @name listening\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Boolean|String} listening Can be \"inherit\", true, or false.  The default is \"inherit\".\n     * @returns {Boolean|String}\n     * @example\n     * // get listening attr\n     * var listening = node.listening();\n     *\n     * // stop listening for events\n     * node.listening(false);\n     *\n     * // listen for events\n     * node.listening(true);\n     *\n     * // listen to events according to the parent\n     * node.listening('inherit');\n     */\n\n  /**\n      * get/set preventDefault\n      * By default all shapes will prevent default behaviour\n      * of a browser on a pointer move or tap.\n      * that will prevent native scrolling when you are trying to drag&drop a node\n      * but sometimes you may need to enable default actions\n      * in that case you can set the property to false\n      * @name preventDefault\n      * @method\n      * @memberof Konva.Node.prototype\n      * @param {Number} preventDefault\n      * @returns {Number}\n      * @example\n      * // get preventDefault\n      * var shouldPrevent = shape.preventDefault();\n      *\n      * // set preventDefault\n      * shape.preventDefault(false);\n      */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'preventDefault', true);\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'filters', undefined, function(\n    val\n  ) {\n    this._filterUpToDate = false;\n    return val;\n  });\n  /**\n     * get/set filters.  Filters are applied to cached canvases\n     * @name filters\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Array} filters array of filters\n     * @returns {Array}\n     * @example\n     * // get filters\n     * var filters = node.filters();\n     *\n     * // set a single filter\n     * node.cache();\n     * node.filters([Konva.Filters.Blur]);\n     *\n     * // set multiple filters\n     * node.cache();\n     * node.filters([\n     *   Konva.Filters.Blur,\n     *   Konva.Filters.Sepia,\n     *   Konva.Filters.Invert\n     * ]);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'visible', 'inherit');\n  /**\n     * get/set visible attr.  Can be \"inherit\", true, or false.  The default is \"inherit\".\n     *   If you need to determine if a node is visible or not\n     *   by taking into account its parents, use the isVisible() method\n     * @name visible\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Boolean|String} visible\n     * @returns {Boolean|String}\n     * @example\n     * // get visible attr\n     * var visible = node.visible();\n     *\n     * // make invisible\n     * node.visible(false);\n     *\n     * // make visible\n     * node.visible(true);\n     *\n     * // make visible according to the parent\n     * node.visible('inherit');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'transformsEnabled', 'all');\n\n  /**\n     * get/set transforms that are enabled.  Can be \"all\", \"none\", or \"position\".  The default\n     *  is \"all\"\n     * @name transformsEnabled\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} enabled\n     * @returns {String}\n     * @example\n     * // enable position transform only to improve draw performance\n     * node.transformsEnabled('position');\n     *\n     * // enable all transforms\n     * node.transformsEnabled('all');\n     */\n\n  /**\n     * get/set node size\n     * @name size\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} size\n     * @param {Number} size.width\n     * @param {Number} size.height\n     * @returns {Object}\n     * @example\n     * // get node size\n     * var size = node.size();\n     * var x = size.x;\n     * var y = size.y;\n     *\n     * // set size\n     * node.size({\n     *   width: 100,\n     *   height: 200\n     * });\n     */\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'size');\n\n  Konva.Factory.backCompat(Konva.Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation'\n  });\n\n  Konva.Collection.mapMethods(Konva.Node);\n})(Konva);\n\n(function() {\r\n  'use strict';\r\n  /**\r\n    * Grayscale Filter\r\n    * @function\r\n    * @memberof Konva.Filters\r\n    * @param {Object} imageData\r\n    * @example\r\n    * node.cache();\r\n    * node.filters([Konva.Filters.Grayscale]);\r\n    */\r\n  Konva.Filters.Grayscale = function(imageData) {\r\n    var data = imageData.data, len = data.length, i, brightness;\r\n\r\n    for (i = 0; i < len; i += 4) {\r\n      brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\r\n      // red\r\n      data[i] = brightness;\r\n      // green\r\n      data[i + 1] = brightness;\r\n      // blue\r\n      data[i + 2] = brightness;\r\n    }\r\n  };\r\n})();\r\n\n(function(Konva) {\n  'use strict';\n  /**\n     * Brighten Filter.\n     * @function\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Brighten]);\n     * node.brightness(0.8);\n     */\n  Konva.Filters.Brighten = function(imageData) {\n    var brightness = this.brightness() * 255,\n      data = imageData.data,\n      len = data.length,\n      i;\n\n    for (i = 0; i < len; i += 4) {\n      // red\n      data[i] += brightness;\n      // green\n      data[i + 1] += brightness;\n      // blue\n      data[i + 2] += brightness;\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'brightness',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set filter brightness.  The brightness is a number between -1 and 1.&nbsp; Positive values\n    *  brighten the pixels and negative values darken them. Use with {@link Konva.Filters.Brighten} filter.\n    * @name brightness\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} brightness value between -1 and 1\n    * @returns {Number}\n    */\n})(Konva);\n\n(function() {\r\n  'use strict';\r\n  /**\r\n    * Invert Filter\r\n    * @function\r\n    * @memberof Konva.Filters\r\n    * @param {Object} imageData\r\n    * @example\r\n    * node.cache();\r\n    * node.filters([Konva.Filters.Invert]);\r\n    */\r\n  Konva.Filters.Invert = function(imageData) {\r\n    var data = imageData.data, len = data.length, i;\r\n\r\n    for (i = 0; i < len; i += 4) {\r\n      // red\r\n      data[i] = 255 - data[i];\r\n      // green\r\n      data[i + 1] = 255 - data[i + 1];\r\n      // blue\r\n      data[i + 2] = 255 - data[i + 2];\r\n    }\r\n  };\r\n})();\r\n\n/*\n the Gauss filter\n master repo: https://github.com/pavelpower/kineticjsGaussFilter\n*/\n(function(Konva) {\n  'use strict';\n  /*\n\n     StackBlur - a fast almost Gaussian Blur For Canvas\n\n     Version:   0.5\n     Author:    Mario Klingemann\n     Contact:   mario@quasimondo.com\n     Website:   http://www.quasimondo.com/StackBlurForCanvas\n     Twitter:   @quasimondo\n\n     In case you find this class useful - especially in commercial projects -\n     I am not totally unhappy for a small donation to my PayPal account\n     mario@quasimondo.de\n\n     Or support me on flattr:\n     https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\n     Copyright (c) 2010 Mario Klingemann\n\n     Permission is hereby granted, free of charge, to any person\n     obtaining a copy of this software and associated documentation\n     files (the \"Software\"), to deal in the Software without\n     restriction, including without limitation the rights to use,\n     copy, modify, merge, publish, distribute, sublicense, and/or sell\n     copies of the Software, and to permit persons to whom the\n     Software is furnished to do so, subject to the following\n     conditions:\n\n     The above copyright notice and this permission notice shall be\n     included in all copies or substantial portions of the Software.\n\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n     OTHER DEALINGS IN THE SOFTWARE.\n     */\n\n  function BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n  }\n\n  var mul_table = [\n    512,\n    512,\n    456,\n    512,\n    328,\n    456,\n    335,\n    512,\n    405,\n    328,\n    271,\n    456,\n    388,\n    335,\n    292,\n    512,\n    454,\n    405,\n    364,\n    328,\n    298,\n    271,\n    496,\n    456,\n    420,\n    388,\n    360,\n    335,\n    312,\n    292,\n    273,\n    512,\n    482,\n    454,\n    428,\n    405,\n    383,\n    364,\n    345,\n    328,\n    312,\n    298,\n    284,\n    271,\n    259,\n    496,\n    475,\n    456,\n    437,\n    420,\n    404,\n    388,\n    374,\n    360,\n    347,\n    335,\n    323,\n    312,\n    302,\n    292,\n    282,\n    273,\n    265,\n    512,\n    497,\n    482,\n    468,\n    454,\n    441,\n    428,\n    417,\n    405,\n    394,\n    383,\n    373,\n    364,\n    354,\n    345,\n    337,\n    328,\n    320,\n    312,\n    305,\n    298,\n    291,\n    284,\n    278,\n    271,\n    265,\n    259,\n    507,\n    496,\n    485,\n    475,\n    465,\n    456,\n    446,\n    437,\n    428,\n    420,\n    412,\n    404,\n    396,\n    388,\n    381,\n    374,\n    367,\n    360,\n    354,\n    347,\n    341,\n    335,\n    329,\n    323,\n    318,\n    312,\n    307,\n    302,\n    297,\n    292,\n    287,\n    282,\n    278,\n    273,\n    269,\n    265,\n    261,\n    512,\n    505,\n    497,\n    489,\n    482,\n    475,\n    468,\n    461,\n    454,\n    447,\n    441,\n    435,\n    428,\n    422,\n    417,\n    411,\n    405,\n    399,\n    394,\n    389,\n    383,\n    378,\n    373,\n    368,\n    364,\n    359,\n    354,\n    350,\n    345,\n    341,\n    337,\n    332,\n    328,\n    324,\n    320,\n    316,\n    312,\n    309,\n    305,\n    301,\n    298,\n    294,\n    291,\n    287,\n    284,\n    281,\n    278,\n    274,\n    271,\n    268,\n    265,\n    262,\n    259,\n    257,\n    507,\n    501,\n    496,\n    491,\n    485,\n    480,\n    475,\n    470,\n    465,\n    460,\n    456,\n    451,\n    446,\n    442,\n    437,\n    433,\n    428,\n    424,\n    420,\n    416,\n    412,\n    408,\n    404,\n    400,\n    396,\n    392,\n    388,\n    385,\n    381,\n    377,\n    374,\n    370,\n    367,\n    363,\n    360,\n    357,\n    354,\n    350,\n    347,\n    344,\n    341,\n    338,\n    335,\n    332,\n    329,\n    326,\n    323,\n    320,\n    318,\n    315,\n    312,\n    310,\n    307,\n    304,\n    302,\n    299,\n    297,\n    294,\n    292,\n    289,\n    287,\n    285,\n    282,\n    280,\n    278,\n    275,\n    273,\n    271,\n    269,\n    267,\n    265,\n    263,\n    261,\n    259\n  ];\n\n  var shg_table = [\n    9,\n    11,\n    12,\n    13,\n    13,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24\n  ];\n\n  function filterGaussBlurRGBA(imageData, radius) {\n    var pixels = imageData.data,\n      width = imageData.width,\n      height = imageData.height;\n\n    var x,\n      y,\n      i,\n      p,\n      yp,\n      yi,\n      yw,\n      r_sum,\n      g_sum,\n      b_sum,\n      a_sum,\n      r_out_sum,\n      g_out_sum,\n      b_out_sum,\n      a_out_sum,\n      r_in_sum,\n      g_in_sum,\n      b_in_sum,\n      a_in_sum,\n      pr,\n      pg,\n      pb,\n      pa,\n      rbs;\n\n    var div = radius + radius + 1,\n      widthMinus1 = width - 1,\n      heightMinus1 = height - 1,\n      radiusPlus1 = radius + 1,\n      sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2,\n      stackStart = new BlurStack(),\n      stackEnd = null,\n      stack = stackStart,\n      stackIn = null,\n      stackOut = null,\n      mul_sum = mul_table[radius],\n      shg_sum = shg_table[radius];\n\n    for (i = 1; i < div; i++) {\n      stack = stack.next = new BlurStack();\n      if (i === radiusPlus1) {\n        stackEnd = stack;\n      }\n    }\n\n    stack.next = stackStart;\n\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n\n      r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n      r_sum += sumFactor * pr;\n      g_sum += sumFactor * pg;\n      b_sum += sumFactor * pb;\n      a_sum += sumFactor * pa;\n\n      stack = stackStart;\n\n      for (i = 0; i < radiusPlus1; i++) {\n        stack.r = pr;\n        stack.g = pg;\n        stack.b = pb;\n        stack.a = pa;\n        stack = stack.next;\n      }\n\n      for (i = 1; i < radiusPlus1; i++) {\n        p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n        r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n        g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n        b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n        a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n\n        r_in_sum += pr;\n        g_in_sum += pg;\n        b_in_sum += pb;\n        a_in_sum += pa;\n\n        stack = stack.next;\n      }\n\n      stackIn = stackStart;\n      stackOut = stackEnd;\n      for (x = 0; x < width; x++) {\n        pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n        if (pa !== 0) {\n          pa = 255 / pa;\n          pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n          pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n          pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n        } else {\n          pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n        }\n\n        r_sum -= r_out_sum;\n        g_sum -= g_out_sum;\n        b_sum -= b_out_sum;\n        a_sum -= a_out_sum;\n\n        r_out_sum -= stackIn.r;\n        g_out_sum -= stackIn.g;\n        b_out_sum -= stackIn.b;\n        a_out_sum -= stackIn.a;\n\n        p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n\n        r_in_sum += stackIn.r = pixels[p];\n        g_in_sum += stackIn.g = pixels[p + 1];\n        b_in_sum += stackIn.b = pixels[p + 2];\n        a_in_sum += stackIn.a = pixels[p + 3];\n\n        r_sum += r_in_sum;\n        g_sum += g_in_sum;\n        b_sum += b_in_sum;\n        a_sum += a_in_sum;\n\n        stackIn = stackIn.next;\n\n        r_out_sum += pr = stackOut.r;\n        g_out_sum += pg = stackOut.g;\n        b_out_sum += pb = stackOut.b;\n        a_out_sum += pa = stackOut.a;\n\n        r_in_sum -= pr;\n        g_in_sum -= pg;\n        b_in_sum -= pb;\n        a_in_sum -= pa;\n\n        stackOut = stackOut.next;\n\n        yi += 4;\n      }\n      yw += width;\n    }\n\n    for (x = 0; x < width; x++) {\n      g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n\n      yi = x << 2;\n      r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n      r_sum += sumFactor * pr;\n      g_sum += sumFactor * pg;\n      b_sum += sumFactor * pb;\n      a_sum += sumFactor * pa;\n\n      stack = stackStart;\n\n      for (i = 0; i < radiusPlus1; i++) {\n        stack.r = pr;\n        stack.g = pg;\n        stack.b = pb;\n        stack.a = pa;\n        stack = stack.next;\n      }\n\n      yp = width;\n\n      for (i = 1; i <= radius; i++) {\n        yi = (yp + x) << 2;\n\n        r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n        g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n        b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n        a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n\n        r_in_sum += pr;\n        g_in_sum += pg;\n        b_in_sum += pb;\n        a_in_sum += pa;\n\n        stack = stack.next;\n\n        if (i < heightMinus1) {\n          yp += width;\n        }\n      }\n\n      yi = x;\n      stackIn = stackStart;\n      stackOut = stackEnd;\n      for (y = 0; y < height; y++) {\n        p = yi << 2;\n        pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n        if (pa > 0) {\n          pa = 255 / pa;\n          pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n          pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n          pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n        } else {\n          pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n        }\n\n        r_sum -= r_out_sum;\n        g_sum -= g_out_sum;\n        b_sum -= b_out_sum;\n        a_sum -= a_out_sum;\n\n        r_out_sum -= stackIn.r;\n        g_out_sum -= stackIn.g;\n        b_out_sum -= stackIn.b;\n        a_out_sum -= stackIn.a;\n\n        p =\n          (x +\n            ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) *\n              width) <<\n          2;\n\n        r_sum += r_in_sum += stackIn.r = pixels[p];\n        g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n        b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n        a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n\n        stackIn = stackIn.next;\n\n        r_out_sum += pr = stackOut.r;\n        g_out_sum += pg = stackOut.g;\n        b_out_sum += pb = stackOut.b;\n        a_out_sum += pa = stackOut.a;\n\n        r_in_sum -= pr;\n        g_in_sum -= pg;\n        b_in_sum -= pb;\n        a_in_sum -= pa;\n\n        stackOut = stackOut.next;\n\n        yi += width;\n      }\n    }\n  }\n\n  /**\n     * Blur Filter\n     * @function\n     * @name Blur\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Blur]);\n     * node.blurRadius(10);\n     */\n  Konva.Filters.Blur = function Blur(imageData) {\n    var radius = Math.round(this.blurRadius());\n\n    if (radius > 0) {\n      filterGaussBlurRGBA(imageData, radius);\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blurRadius',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n    * get/set blur radius. Use with {@link Konva.Filters.Blur} filter\n    * @name blurRadius\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} radius\n    * @returns {Integer}\n    */\n})(Konva);\n\n/*eslint-disable  max-depth */\n(function() {\n  'use strict';\n  function pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(\n      idata.data[idx++],\n      idata.data[idx++],\n      idata.data[idx++],\n      idata.data[idx++]\n    );\n    return d;\n  }\n\n  function rgbDistance(p1, p2) {\n    return Math.sqrt(\n      Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2)\n    );\n  }\n\n  function rgbMean(pTab) {\n    var m = [0, 0, 0];\n\n    for (var i = 0; i < pTab.length; i++) {\n      m[0] += pTab[i][0];\n      m[1] += pTab[i][1];\n      m[2] += pTab[i][2];\n    }\n\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n\n    return m;\n  }\n\n  function backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n\n    var thres = threshold || 10;\n    if (\n      rgbDistance(rgbv_no, rgbv_ne) < thres &&\n      rgbDistance(rgbv_ne, rgbv_se) < thres &&\n      rgbDistance(rgbv_se, rgbv_so) < thres &&\n      rgbDistance(rgbv_so, rgbv_no) < thres\n    ) {\n      // Mean color\n      var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n\n      // Mask based on color distance\n      var mask = [];\n      for (var i = 0; i < idata.width * idata.height; i++) {\n        var d = rgbDistance(mean, [\n          idata.data[i * 4],\n          idata.data[i * 4 + 1],\n          idata.data[i * 4 + 2]\n        ]);\n        mask[i] = d < thres ? 0 : 255;\n      }\n\n      return mask;\n    }\n  }\n\n  function applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n      idata.data[4 * i + 3] = mask[i];\n    }\n  }\n\n  function erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a === 255 * 8 ? 255 : 0;\n      }\n    }\n\n    return maskResult;\n  }\n\n  function dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a >= 255 * 4 ? 255 : 0;\n      }\n    }\n\n    return maskResult;\n  }\n\n  function smoothEdgeMask(mask, sw, sh) {\n    var weights = [\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9\n    ];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a;\n      }\n    }\n\n    return maskResult;\n  }\n\n  /**\n\t * Mask Filter\n\t * @function\n\t * @name Mask\n\t * @memberof Konva.Filters\n\t * @param {Object} imageData\n\t * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Mask]);\n     * node.threshold(200);\n\t */\n  Konva.Filters.Mask = function(imageData) {\n    // Detect pixels close to the background color\n    var threshold = this.threshold(),\n      mask = backgroundMask(imageData, threshold);\n    if (mask) {\n      // Erode\n      mask = erodeMask(mask, imageData.width, imageData.height);\n\n      // Dilate\n      mask = dilateMask(mask, imageData.width, imageData.height);\n\n      // Gradient\n      mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n\n      // Apply mask\n      applyMask(imageData, mask);\n\n      // todo : Update hit region function according to mask\n    }\n\n    return imageData;\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'threshold',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function() {\n  'use strict';\n  /**\n     * RGB Filter\n     * @function\n     * @name RGB\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @author ippo615\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.RGB]);\n     * node.blue(120);\n     * node.green(200);\n     */\n  Konva.Filters.RGB = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      red = this.red(),\n      green = this.green(),\n      blue = this.blue(),\n      i,\n      brightness;\n\n    for (i = 0; i < nPixels; i += 4) {\n      brightness =\n        (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n      data[i] = brightness * red; // r\n      data[i + 1] = brightness * green; // g\n      data[i + 2] = brightness * blue; // b\n      data[i + 3] = data[i + 3]; // alpha\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n    * get/set filter red value. Use with {@link Konva.Filters.RGB} filter.\n    * @name red\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} red value between 0 and 255\n    * @returns {Integer}\n    */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n    * get/set filter green value. Use with {@link Konva.Filters.RGB} filter.\n    * @name green\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} green value between 0 and 255\n    * @returns {Integer}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blue',\n    0,\n    Konva.Validators.RGBComponent,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set filter blue value. Use with {@link Konva.Filters.RGB} filter.\n    * @name blue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} blue value between 0 and 255\n    * @returns {Integer}\n    */\n})();\n\n(function() {\n  'use strict';\n  /**\n     * RGBA Filter\n     * @function\n     * @name RGBA\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @author codefo\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.RGBA]);\n     * node.blue(120);\n     * node.green(200);\n     * node.alpha(0.3);\n     */\n  Konva.Filters.RGBA = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      red = this.red(),\n      green = this.green(),\n      blue = this.blue(),\n      alpha = this.alpha(),\n      i,\n      ia;\n\n    for (i = 0; i < nPixels; i += 4) {\n      ia = 1 - alpha;\n\n      data[i] = red * alpha + data[i] * ia; // r\n      data[i + 1] = green * alpha + data[i + 1] * ia; // g\n      data[i + 2] = blue * alpha + data[i + 2] * ia; // b\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n    * get/set filter red value. Use with {@link Konva.Filters.RGBA} filter.\n    * @name red\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} red value between 0 and 255\n    * @returns {Integer}\n    */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n    * get/set filter green value. Use with {@link Konva.Filters.RGBA} filter.\n    * @name green\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} green value between 0 and 255\n    * @returns {Integer}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blue',\n    0,\n    Konva.Validators.RGBComponent,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set filter blue value. Use with {@link Konva.Filters.RGBA} filter.\n    * @name blue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} blue value between 0 and 255\n    * @returns {Integer}\n    */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'alpha', 1, function(val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n      return 1;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return val;\n    }\n  });\n  /**\n     * get/set filter alpha value. Use with {@link Konva.Filters.RGBA} filter.\n     * @name alpha\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Float} alpha value between 0 and 1\n     * @returns {Float}\n     */\n})();\n\n(function() {\n  'use strict';\n  /**\n    * HSV Filter. Adjusts the hue, saturation and value\n    * @function\n    * @name HSV\n    * @memberof Konva.Filters\n    * @param {Object} imageData\n    * @author ippo615\n    * @example\n    * image.filters([Konva.Filters.HSV]);\n    * image.value(200);\n    */\n\n  Konva.Filters.HSV = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      v = Math.pow(2, this.value()),\n      s = Math.pow(2, this.saturation()),\n      h = Math.abs(this.hue() + 360) % 360,\n      i;\n\n    // Basis for the technique used:\n    // http://beesbuzz.biz/code/hsv_color_transforms.php\n    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n    // H is the hue shift in degrees (0 to 360)\n    // vsu = V*S*cos(H*PI/180);\n    // vsw = V*S*sin(H*PI/180);\n    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\n    // Precompute the values in the matrix:\n    var vsu = v * s * Math.cos(h * Math.PI / 180),\n      vsw = v * s * Math.sin(h * Math.PI / 180);\n    // (result spot)(source spot)\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n      rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,\n      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,\n      bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,\n      bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;\n\n    var r, g, b, a;\n\n    for (i = 0; i < nPixels; i += 4) {\n      r = data[i + 0];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n\n      data[i + 0] = rr * r + rg * g + rb * b;\n      data[i + 1] = gr * r + gg * g + gb * b;\n      data[i + 2] = br * r + bg * g + bb * b;\n      data[i + 3] = a; // alpha\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'hue',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n    * @name hue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} hue value between 0 and 359\n    * @returns {Number}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'saturation',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n    * @name saturation\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n    * @returns {Number}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'value',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set hsv value. Use with {@link Konva.Filters.HSV} filter.\n    * @name value\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n    * @returns {Number}\n    */\n})();\n\n(function() {\n  'use strict';\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'hue',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n    * @name hue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} hue value between 0 and 359\n    * @returns {Number}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'saturation',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n    * @name saturation\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n    * @returns {Number}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'luminance',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set hsl luminance. Use with {@link Konva.Filters.HSL} filter.\n    * @name value\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n    * @returns {Number}\n    */\n\n  /**\n    * HSL Filter. Adjusts the hue, saturation and luminance (or lightness)\n    * @function\n    * @memberof Konva.Filters\n    * @param {Object} imageData\n    * @author ippo615\n    * @example\n    * image.filters([Konva.Filters.HSL]);\n    * image.luminance(200);\n    */\n\n  Konva.Filters.HSL = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      v = 1,\n      s = Math.pow(2, this.saturation()),\n      h = Math.abs(this.hue() + 360) % 360,\n      l = this.luminance() * 127,\n      i;\n\n    // Basis for the technique used:\n    // http://beesbuzz.biz/code/hsv_color_transforms.php\n    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n    // H is the hue shift in degrees (0 to 360)\n    // vsu = V*S*cos(H*PI/180);\n    // vsw = V*S*sin(H*PI/180);\n    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\n    // Precompute the values in the matrix:\n    var vsu = v * s * Math.cos(h * Math.PI / 180),\n      vsw = v * s * Math.sin(h * Math.PI / 180);\n    // (result spot)(source spot)\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n      rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,\n      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,\n      bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,\n      bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;\n\n    var r, g, b, a;\n\n    for (i = 0; i < nPixels; i += 4) {\n      r = data[i + 0];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n\n      data[i + 0] = rr * r + rg * g + rb * b + l;\n      data[i + 1] = gr * r + gg * g + gb * b + l;\n      data[i + 2] = br * r + bg * g + bb * b + l;\n      data[i + 3] = a; // alpha\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Emboss Filter.\n     * Pixastic Lib - Emboss filter - v0.1.0\n     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n     * License: [http://www.pixastic.com/lib/license.txt]\n     * @function\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Emboss]);\n     * node.embossStrength(0.8);\n     * node.embossWhiteLevel(0.3);\n     * node.embossDirection('right');\n     * node.embossBlend(true);\n     */\n  Konva.Filters.Emboss = function(imageData) {\n    // pixastic strength is between 0 and 10.  I want it between 0 and 1\n    // pixastic greyLevel is between 0 and 255.  I want it between 0 and 1.  Also,\n    // a max value of greyLevel yields a white emboss, and the min value yields a black\n    // emboss.  Therefore, I changed greyLevel to whiteLevel\n    var strength = this.embossStrength() * 10,\n      greyLevel = this.embossWhiteLevel() * 255,\n      direction = this.embossDirection(),\n      blend = this.embossBlend(),\n      dirY = 0,\n      dirX = 0,\n      data = imageData.data,\n      w = imageData.width,\n      h = imageData.height,\n      w4 = w * 4,\n      y = h;\n\n    switch (direction) {\n      case 'top-left':\n        dirY = -1;\n        dirX = -1;\n        break;\n      case 'top':\n        dirY = -1;\n        dirX = 0;\n        break;\n      case 'top-right':\n        dirY = -1;\n        dirX = 1;\n        break;\n      case 'right':\n        dirY = 0;\n        dirX = 1;\n        break;\n      case 'bottom-right':\n        dirY = 1;\n        dirX = 1;\n        break;\n      case 'bottom':\n        dirY = 1;\n        dirX = 0;\n        break;\n      case 'bottom-left':\n        dirY = 1;\n        dirX = -1;\n        break;\n      case 'left':\n        dirY = 0;\n        dirX = -1;\n        break;\n      default:\n        Konva.Util.error('Unknown emboss direction: ' + direction);\n    }\n\n    do {\n      var offsetY = (y - 1) * w4;\n\n      var otherY = dirY;\n      if (y + otherY < 1) {\n        otherY = 0;\n      }\n      if (y + otherY > h) {\n        otherY = 0;\n      }\n\n      var offsetYOther = (y - 1 + otherY) * w * 4;\n\n      var x = w;\n      do {\n        var offset = offsetY + (x - 1) * 4;\n\n        var otherX = dirX;\n        if (x + otherX < 1) {\n          otherX = 0;\n        }\n        if (x + otherX > w) {\n          otherX = 0;\n        }\n\n        var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n\n        var dR = data[offset] - data[offsetOther];\n        var dG = data[offset + 1] - data[offsetOther + 1];\n        var dB = data[offset + 2] - data[offsetOther + 2];\n\n        var dif = dR;\n        var absDif = dif > 0 ? dif : -dif;\n\n        var absG = dG > 0 ? dG : -dG;\n        var absB = dB > 0 ? dB : -dB;\n\n        if (absG > absDif) {\n          dif = dG;\n        }\n        if (absB > absDif) {\n          dif = dB;\n        }\n\n        dif *= strength;\n\n        if (blend) {\n          var r = data[offset] + dif;\n          var g = data[offset + 1] + dif;\n          var b = data[offset + 2] + dif;\n\n          data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n          data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n          data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n        } else {\n          var grey = greyLevel - dif;\n          if (grey < 0) {\n            grey = 0;\n          } else if (grey > 255) {\n            grey = 255;\n          }\n\n          data[offset] = data[offset + 1] = data[offset + 2] = grey;\n        }\n      } while (--x);\n    } while (--y);\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossStrength',\n    0.5,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set emboss strength. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossStrength\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} level between 0 and 1.  Default is 0.5\n    * @returns {Number}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossWhiteLevel',\n    0.5,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set emboss white level. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossWhiteLevel\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} embossWhiteLevel between 0 and 1.  Default is 0.5\n    * @returns {Number}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossDirection',\n    'top-left',\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set emboss direction. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossDirection\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {String} embossDirection can be top-left, top, top-right, right, bottom-right, bottom, bottom-left or left\n    *   The default is top-left\n    * @returns {String}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossBlend',\n    false,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set emboss blend. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossBlend\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Boolean} embossBlend\n    * @returns {Boolean}\n    */\n})();\n\n(function() {\n  'use strict';\n  function remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    // Compute the range of the data\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n\n    // If either range is 0, then the value can only be mapped to 1 value\n    if (fromRange === 0) {\n      return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n      return toMin;\n    }\n\n    // (1) untranslate, (2) unscale, (3) rescale, (4) retranslate\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n\n    return toValue;\n  }\n\n  /**\n    * Enhance Filter. Adjusts the colors so that they span the widest\n    *  possible range (ie 0-255). Performs w*h pixel reads and w*h pixel\n    *  writes.\n    * @function\n    * @name Enhance\n    * @memberof Konva.Filters\n    * @param {Object} imageData\n    * @author ippo615\n    * @example\n    * node.cache();\n    * node.filters([Konva.Filters.Enhance]);\n    * node.enhance(0.4);\n    */\n  Konva.Filters.Enhance = function(imageData) {\n    var data = imageData.data,\n      nSubPixels = data.length,\n      rMin = data[0],\n      rMax = rMin,\n      r,\n      gMin = data[1],\n      gMax = gMin,\n      g,\n      bMin = data[2],\n      bMax = bMin,\n      b,\n      i;\n\n    // If we are not enhancing anything - don't do any computation\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n      return;\n    }\n\n    // 1st Pass - find the min and max for each channel:\n    for (i = 0; i < nSubPixels; i += 4) {\n      r = data[i + 0];\n      if (r < rMin) {\n        rMin = r;\n      } else if (r > rMax) {\n        rMax = r;\n      }\n      g = data[i + 1];\n      if (g < gMin) {\n        gMin = g;\n      } else if (g > gMax) {\n        gMax = g;\n      }\n      b = data[i + 2];\n      if (b < bMin) {\n        bMin = b;\n      } else if (b > bMax) {\n        bMax = b;\n      }\n      //a = data[i + 3];\n      //if (a < aMin) { aMin = a; } else\n      //if (a > aMax) { aMax = a; }\n    }\n\n    // If there is only 1 level - don't remap\n    if (rMax === rMin) {\n      rMax = 255;\n      rMin = 0;\n    }\n    if (gMax === gMin) {\n      gMax = 255;\n      gMin = 0;\n    }\n    if (bMax === bMin) {\n      bMax = 255;\n      bMin = 0;\n    }\n\n    var rMid,\n      rGoalMax,\n      rGoalMin,\n      gMid,\n      gGoalMax,\n      gGoalMin,\n      bMid,\n      bGoalMax,\n      bGoalMin;\n\n    // If the enhancement is positive - stretch the histogram\n    if (enhanceAmount > 0) {\n      rGoalMax = rMax + enhanceAmount * (255 - rMax);\n      rGoalMin = rMin - enhanceAmount * (rMin - 0);\n      gGoalMax = gMax + enhanceAmount * (255 - gMax);\n      gGoalMin = gMin - enhanceAmount * (gMin - 0);\n      bGoalMax = bMax + enhanceAmount * (255 - bMax);\n      bGoalMin = bMin - enhanceAmount * (bMin - 0);\n      // If the enhancement is negative -   compress the histogram\n    } else {\n      rMid = (rMax + rMin) * 0.5;\n      rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n      rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n      gMid = (gMax + gMin) * 0.5;\n      gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n      gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n      bMid = (bMax + bMin) * 0.5;\n      bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n      bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n\n    // Pass 2 - remap everything, except the alpha\n    for (i = 0; i < nSubPixels; i += 4) {\n      data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n      data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n      data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n      //data[i + 3] = remap(data[i + 3], aMin, aMax, aGoalMin, aGoalMax);\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'enhance',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n    * get/set enhance. Use with {@link Konva.Filters.Enhance} filter.\n    * @name enhance\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Float} amount\n    * @returns {Float}\n    */\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Posterize Filter. Adjusts the channels so that there are no more\n     *  than n different values for that channel. This is also applied\n     *  to the alpha channel.\n     * @function\n     * @name Posterize\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Posterize]);\n     * node.levels(0.8); // between 0 and 1\n     */\n\n  Konva.Filters.Posterize = function(imageData) {\n    // level must be between 1 and 255\n    var levels = Math.round(this.levels() * 254) + 1,\n      data = imageData.data,\n      len = data.length,\n      scale = 255 / levels,\n      i;\n\n    for (i = 0; i < len; i += 1) {\n      data[i] = Math.floor(data[i] / scale) * scale;\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'levels',\n    0.5,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n    * get/set levels.  Must be a number between 0 and 1.  Use with {@link Konva.Filters.Posterize} filter.\n    * @name levels\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} level between 0 and 1\n    * @returns {Number}\n    */\n})();\n\n(function() {\r\n  'use strict';\r\n  /**\r\n     * Noise Filter. Randomly adds or substracts to the color channels\r\n     * @function\r\n     * @name Noise\r\n     * @memberof Konva.Filters\r\n     * @param {Object} imageData\r\n     * @author ippo615\r\n     * @example\r\n     * node.cache();\r\n     * node.filters([Konva.Filters.Noise]);\r\n     * node.noise(0.8);\r\n     */\r\n  Konva.Filters.Noise = function(imageData) {\r\n    var amount = this.noise() * 255,\r\n      data = imageData.data,\r\n      nPixels = data.length,\r\n      half = amount / 2,\r\n      i;\r\n\r\n    for (i = 0; i < nPixels; i += 4) {\r\n      data[i + 0] += half - 2 * half * Math.random();\r\n      data[i + 1] += half - 2 * half * Math.random();\r\n      data[i + 2] += half - 2 * half * Math.random();\r\n    }\r\n  };\r\n\r\n  Konva.Factory.addGetterSetter(\r\n    Konva.Node,\r\n    'noise',\r\n    0.2,\r\n    null,\r\n    Konva.Factory.afterSetFilter\r\n  );\r\n  /**\r\n    * get/set noise amount.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Noise} filter.\r\n    * @name noise\r\n    * @method\r\n    * @memberof Konva.Node.prototype\r\n    * @param {Number} noise\r\n    * @returns {Number}\r\n    */\r\n})();\r\n\n/*eslint-disable max-depth */\r\n(function() {\r\n  'use strict';\r\n  /**\r\n     * Pixelate Filter. Averages groups of pixels and redraws\r\n     *  them as larger pixels\r\n     * @function\r\n     * @name Pixelate\r\n     * @memberof Konva.Filters\r\n     * @param {Object} imageData\r\n     * @author ippo615\r\n     * @example\r\n     * node.cache();\r\n     * node.filters([Konva.Filters.Pixelate]);\r\n     * node.pixelSize(10);\r\n     */\r\n\r\n  Konva.Filters.Pixelate = function(imageData) {\r\n    var pixelSize = Math.ceil(this.pixelSize()),\r\n      width = imageData.width,\r\n      height = imageData.height,\r\n      x,\r\n      y,\r\n      i,\r\n      //pixelsPerBin = pixelSize * pixelSize,\r\n      red,\r\n      green,\r\n      blue,\r\n      alpha,\r\n      nBinsX = Math.ceil(width / pixelSize),\r\n      nBinsY = Math.ceil(height / pixelSize),\r\n      xBinStart,\r\n      xBinEnd,\r\n      yBinStart,\r\n      yBinEnd,\r\n      xBin,\r\n      yBin,\r\n      pixelsInBin;\r\n    imageData = imageData.data;\r\n\r\n    if (pixelSize <= 0) {\r\n      Konva.Util.error('pixelSize value can not be <= 0');\r\n      return;\r\n    }\r\n\r\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\r\n      for (yBin = 0; yBin < nBinsY; yBin += 1) {\r\n        // Initialize the color accumlators to 0\r\n        red = 0;\r\n        green = 0;\r\n        blue = 0;\r\n        alpha = 0;\r\n\r\n        // Determine which pixels are included in this bin\r\n        xBinStart = xBin * pixelSize;\r\n        xBinEnd = xBinStart + pixelSize;\r\n        yBinStart = yBin * pixelSize;\r\n        yBinEnd = yBinStart + pixelSize;\r\n\r\n        // Add all of the pixels to this bin!\r\n        pixelsInBin = 0;\r\n        for (x = xBinStart; x < xBinEnd; x += 1) {\r\n          if (x >= width) {\r\n            continue;\r\n          }\r\n          for (y = yBinStart; y < yBinEnd; y += 1) {\r\n            if (y >= height) {\r\n              continue;\r\n            }\r\n            i = (width * y + x) * 4;\r\n            red += imageData[i + 0];\r\n            green += imageData[i + 1];\r\n            blue += imageData[i + 2];\r\n            alpha += imageData[i + 3];\r\n            pixelsInBin += 1;\r\n          }\r\n        }\r\n\r\n        // Make sure the channels are between 0-255\r\n        red = red / pixelsInBin;\r\n        green = green / pixelsInBin;\r\n        blue = blue / pixelsInBin;\r\n\r\n        // Draw this bin\r\n        for (x = xBinStart; x < xBinEnd; x += 1) {\r\n          if (x >= width) {\r\n            continue;\r\n          }\r\n          for (y = yBinStart; y < yBinEnd; y += 1) {\r\n            if (y >= height) {\r\n              continue;\r\n            }\r\n            i = (width * y + x) * 4;\r\n            imageData[i + 0] = red;\r\n            imageData[i + 1] = green;\r\n            imageData[i + 2] = blue;\r\n            imageData[i + 3] = alpha;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  Konva.Factory.addGetterSetter(\r\n    Konva.Node,\r\n    'pixelSize',\r\n    8,\r\n    null,\r\n    Konva.Factory.afterSetFilter\r\n  );\r\n  /**\r\n    * get/set pixel size. Use with {@link Konva.Filters.Pixelate} filter.\r\n    * @name pixelSize\r\n    * @method\r\n    * @memberof Konva.Node.prototype\r\n    * @param {Integer} pixelSize\r\n    * @returns {Integer}\r\n    */\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n  /**\r\n     * Threshold Filter. Pushes any value above the mid point to\r\n     *  the max and any value below the mid point to the min.\r\n     *  This affects the alpha channel.\r\n     * @function\r\n     * @name Threshold\r\n     * @memberof Konva.Filters\r\n     * @param {Object} imageData\r\n     * @author ippo615\r\n     * @example\r\n     * node.cache();\r\n     * node.filters([Konva.Filters.Threshold]);\r\n     * node.threshold(0.1);\r\n     */\r\n\r\n  Konva.Filters.Threshold = function(imageData) {\r\n    var level = this.threshold() * 255,\r\n      data = imageData.data,\r\n      len = data.length,\r\n      i;\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n      data[i] = data[i] < level ? 0 : 255;\r\n    }\r\n  };\r\n\r\n  Konva.Factory.addGetterSetter(\r\n    Konva.Node,\r\n    'threshold',\r\n    0.5,\r\n    null,\r\n    Konva.Factory.afterSetFilter\r\n  );\r\n  /**\r\n    * get/set threshold.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Threshold} or {@link Konva.Filters.Mask} filter.\r\n    * @name threshold\r\n    * @method\r\n    * @memberof Konva.Node.prototype\r\n    * @param {Number} threshold\r\n    * @returns {Number}\r\n    */\r\n})();\r\n\n(function() {\n  'use strict';\n  /**\n     * Sepia Filter\n     * Based on: Pixastic Lib - Sepia filter - v0.1.0\n     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n     * @function\n     * @name Sepia\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @author Jacob Seidelin <jseidelin@nihilogic.dk>\n     * @license MPL v1.1 [http://www.pixastic.com/lib/license.txt]\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Sepia]);\n     */\n  Konva.Filters.Sepia = function(imageData) {\n    var data = imageData.data,\n      w = imageData.width,\n      y = imageData.height,\n      w4 = w * 4,\n      offsetY,\n      x,\n      offset,\n      or,\n      og,\n      ob,\n      r,\n      g,\n      b;\n\n    do {\n      offsetY = (y - 1) * w4;\n      x = w;\n      do {\n        offset = offsetY + (x - 1) * 4;\n\n        or = data[offset];\n        og = data[offset + 1];\n        ob = data[offset + 2];\n\n        r = or * 0.393 + og * 0.769 + ob * 0.189;\n        g = or * 0.349 + og * 0.686 + ob * 0.168;\n        b = or * 0.272 + og * 0.534 + ob * 0.131;\n\n        data[offset] = r > 255 ? 255 : r;\n        data[offset + 1] = g > 255 ? 255 : g;\n        data[offset + 2] = b > 255 ? 255 : b;\n        data[offset + 3] = data[offset + 3];\n      } while (--x);\n    } while (--y);\n  };\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Solarize Filter\n     * Pixastic Lib - Solarize filter - v0.1.0\n     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n     * License: [http://www.pixastic.com/lib/license.txt]\n     * @function\n     * @name Solarize\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Solarize]);\n     */\n  Konva.Filters.Solarize = function(imageData) {\n    var data = imageData.data,\n      w = imageData.width,\n      h = imageData.height,\n      w4 = w * 4,\n      y = h;\n\n    do {\n      var offsetY = (y - 1) * w4;\n      var x = w;\n      do {\n        var offset = offsetY + (x - 1) * 4;\n        var r = data[offset];\n        var g = data[offset + 1];\n        var b = data[offset + 2];\n\n        if (r > 127) {\n          r = 255 - r;\n        }\n        if (g > 127) {\n          g = 255 - g;\n        }\n        if (b > 127) {\n          b = 255 - b;\n        }\n\n        data[offset] = r;\n        data[offset + 1] = g;\n        data[offset + 2] = b;\n      } while (--x);\n    } while (--y);\n  };\n})();\n\n(function() {\n  'use strict';\n  /*\n   * ToPolar Filter. Converts image data to polar coordinates. Performs\n   *  w*h*4 pixel reads and w*h pixel writes. The r axis is placed along\n   *  what would be the y axis and the theta axis along the x axis.\n   * @function\n   * @author ippo615\n   * @memberof Konva.Filters\n   * @param {ImageData} src, the source image data (what will be transformed)\n   * @param {ImageData} dst, the destination image data (where it will be saved)\n   * @param {Object} opt\n   * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n   *  default is in the middle\n   * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n   *  default is in the middle\n   */\n\n  var ToPolar = function(src, dst, opt) {\n    var srcPixels = src.data,\n      dstPixels = dst.data,\n      xSize = src.width,\n      ySize = src.height,\n      xMid = opt.polarCenterX || xSize / 2,\n      yMid = opt.polarCenterY || ySize / 2,\n      i,\n      x,\n      y,\n      r = 0,\n      g = 0,\n      b = 0,\n      a = 0;\n\n    // Find the largest radius\n    var rad,\n      rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n\n    // We'll be uisng y as the radius, and x as the angle (theta=t)\n    var rSize = ySize,\n      tSize = xSize,\n      radius,\n      theta;\n\n    // We want to cover all angles (0-360) and we need to convert to\n    // radians (*PI/180)\n    var conversion = 360 / tSize * Math.PI / 180,\n      sin,\n      cos;\n\n    // var x1, x2, x1i, x2i, y1, y2, y1i, y2i, scale;\n\n    for (theta = 0; theta < tSize; theta += 1) {\n      sin = Math.sin(theta * conversion);\n      cos = Math.cos(theta * conversion);\n      for (radius = 0; radius < rSize; radius += 1) {\n        x = Math.floor(xMid + rMax * radius / rSize * cos);\n        y = Math.floor(yMid + rMax * radius / rSize * sin);\n        i = (y * xSize + x) * 4;\n        r = srcPixels[i + 0];\n        g = srcPixels[i + 1];\n        b = srcPixels[i + 2];\n        a = srcPixels[i + 3];\n\n        // Store it\n        //i = (theta * xSize  +  radius) * 4;\n        i = (theta + radius * xSize) * 4;\n        dstPixels[i + 0] = r;\n        dstPixels[i + 1] = g;\n        dstPixels[i + 2] = b;\n        dstPixels[i + 3] = a;\n      }\n    }\n  };\n\n  /*\n     * FromPolar Filter. Converts image data from polar coordinates back to rectangular.\n     *  Performs w*h*4 pixel reads and w*h pixel writes.\n     * @function\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @param {ImageData} src, the source image data (what will be transformed)\n     * @param {ImageData} dst, the destination image data (where it will be saved)\n     * @param {Object} opt\n     * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n     *  default is in the middle\n     * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n     *  default is in the middle\n     * @param {Number} [opt.polarRotation] amount to rotate the image counterclockwis,\n     *  0 is no rotation, 360 degrees is a full rotation\n     */\n\n  var FromPolar = function(src, dst, opt) {\n    var srcPixels = src.data,\n      dstPixels = dst.data,\n      xSize = src.width,\n      ySize = src.height,\n      xMid = opt.polarCenterX || xSize / 2,\n      yMid = opt.polarCenterY || ySize / 2,\n      i,\n      x,\n      y,\n      dx,\n      dy,\n      r = 0,\n      g = 0,\n      b = 0,\n      a = 0;\n\n    // Find the largest radius\n    var rad,\n      rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n\n    // We'll be uisng x as the radius, and y as the angle (theta=t)\n    var rSize = ySize,\n      tSize = xSize,\n      radius,\n      theta,\n      phaseShift = opt.polarRotation || 0;\n\n    // We need to convert to degrees and we need to make sure\n    // it's between (0-360)\n    // var conversion = tSize/360*180/Math.PI;\n    //var conversion = tSize/360*180/Math.PI;\n\n    var x1, y1;\n\n    for (x = 0; x < xSize; x += 1) {\n      for (y = 0; y < ySize; y += 1) {\n        dx = x - xMid;\n        dy = y - yMid;\n        radius = Math.sqrt(dx * dx + dy * dy) * rSize / rMax;\n        theta = (Math.atan2(dy, dx) * 180 / Math.PI + 360 + phaseShift) % 360;\n        theta = theta * tSize / 360;\n        x1 = Math.floor(theta);\n        y1 = Math.floor(radius);\n        i = (y1 * xSize + x1) * 4;\n        r = srcPixels[i + 0];\n        g = srcPixels[i + 1];\n        b = srcPixels[i + 2];\n        a = srcPixels[i + 3];\n\n        // Store it\n        i = (y * xSize + x) * 4;\n        dstPixels[i + 0] = r;\n        dstPixels[i + 1] = g;\n        dstPixels[i + 2] = b;\n        dstPixels[i + 3] = a;\n      }\n    }\n  };\n\n  //Konva.Filters.ToPolar = Konva.Util._FilterWrapDoubleBuffer(ToPolar);\n  //Konva.Filters.FromPolar = Konva.Util._FilterWrapDoubleBuffer(FromPolar);\n\n  // create a temporary canvas for working - shared between multiple calls\n\n  /*\n     * Kaleidoscope Filter.\n     * @function\n     * @name Kaleidoscope\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Kaleidoscope]);\n     * node.kaleidoscopePower(3);\n     * node.kaleidoscopeAngle(45);\n     */\n  Konva.Filters.Kaleidoscope = function(imageData) {\n    var xSize = imageData.width,\n      ySize = imageData.height;\n\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    var power = Math.round(this.kaleidoscopePower());\n    var angle = Math.round(this.kaleidoscopeAngle());\n    var offset = Math.floor(xSize * (angle % 360) / 360);\n\n    if (power < 1) {\n      return;\n    }\n\n    // Work with our shared buffer canvas\n    var tempCanvas = Konva.Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    var scratchData = tempCanvas\n      .getContext('2d')\n      .getImageData(0, 0, xSize, ySize);\n\n    // Convert thhe original to polar coordinates\n    ToPolar(imageData, scratchData, {\n      polarCenterX: xSize / 2,\n      polarCenterY: ySize / 2\n    });\n\n    // Determine how big each section will be, if it's too small\n    // make it bigger\n    var minSectionSize = xSize / Math.pow(2, power);\n    while (minSectionSize <= 8) {\n      minSectionSize = minSectionSize * 2;\n      power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    var sectionSize = minSectionSize;\n\n    // Copy the offset region to 0\n    // Depending on the size of filter and location of the offset we may need\n    // to copy the section backwards to prevent it from rewriting itself\n    var xStart = 0,\n      xEnd = sectionSize,\n      xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n      xStart = sectionSize;\n      xEnd = 0;\n      xDelta = -1;\n    }\n    for (y = 0; y < ySize; y += 1) {\n      for (x = xStart; x !== xEnd; x += xDelta) {\n        xoff = Math.round(x + offset) % xSize;\n        srcPos = (xSize * y + xoff) * 4;\n        r = scratchData.data[srcPos + 0];\n        g = scratchData.data[srcPos + 1];\n        b = scratchData.data[srcPos + 2];\n        a = scratchData.data[srcPos + 3];\n        dstPos = (xSize * y + x) * 4;\n        scratchData.data[dstPos + 0] = r;\n        scratchData.data[dstPos + 1] = g;\n        scratchData.data[dstPos + 2] = b;\n        scratchData.data[dstPos + 3] = a;\n      }\n    }\n\n    // Perform the actual effect\n    for (y = 0; y < ySize; y += 1) {\n      sectionSize = Math.floor(minSectionSize);\n      for (i = 0; i < power; i += 1) {\n        for (x = 0; x < sectionSize + 1; x += 1) {\n          srcPos = (xSize * y + x) * 4;\n          r = scratchData.data[srcPos + 0];\n          g = scratchData.data[srcPos + 1];\n          b = scratchData.data[srcPos + 2];\n          a = scratchData.data[srcPos + 3];\n          dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n          scratchData.data[dstPos + 0] = r;\n          scratchData.data[dstPos + 1] = g;\n          scratchData.data[dstPos + 2] = b;\n          scratchData.data[dstPos + 3] = a;\n        }\n        sectionSize *= 2;\n      }\n    }\n\n    // Convert back from polar coordinates\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\n  };\n\n  /**\n    * get/set kaleidoscope power. Use with {@link Konva.Filters.Kaleidoscope} filter.\n    * @name kaleidoscopePower\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} power of kaleidoscope\n    * @returns {Integer}\n    */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'kaleidoscopePower',\n    2,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n    * get/set kaleidoscope angle. Use with {@link Konva.Filters.Kaleidoscope} filter.\n    * @name kaleidoscopeAngle\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} degrees\n    * @returns {Integer}\n    */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'kaleidoscopeAngle',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Container constructor.&nbsp; Containers are used to contain nodes or other containers\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Node\n     * @abstract\n     * @param {Object} config\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     */\n  Konva.Container = function(config) {\n    this.__init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Container, {\n    __init: function(config) {\n      this.children = new Konva.Collection();\n      Konva.Node.call(this, config);\n    },\n    /**\n         * returns a {@link Konva.Collection} of direct descendant nodes\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {Function} [filterFunc] filter function\n         * @returns {Konva.Collection}\n         * @example\n         * // get all children\n         * var children = layer.getChildren();\n         *\n         * // get only circles\n         * var circles = layer.getChildren(function(node){\n         *    return node.getClassName() === 'Circle';\n         * });\n         */\n    getChildren: function(filterFunc) {\n      if (!filterFunc) {\n        return this.children;\n      }\n\n      var results = new Konva.Collection();\n      this.children.each(function(child) {\n        if (filterFunc(child)) {\n          results.push(child);\n        }\n      });\n      return results;\n    },\n    /**\n         * determine if node has children\n         * @method\n         * @memberof Konva.Container.prototype\n         * @returns {Boolean}\n         */\n    hasChildren: function() {\n      return this.getChildren().length > 0;\n    },\n    /**\n         * remove all children\n         * @method\n         * @memberof Konva.Container.prototype\n         */\n    removeChildren: function() {\n      var children = Konva.Collection.toCollection(this.children);\n      var child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        // reset parent to prevent many _setChildrenIndices calls\n        delete child.parent;\n        child.index = 0;\n        child.remove();\n      }\n      children = null;\n      this.children = new Konva.Collection();\n      return this;\n    },\n    /**\n         * destroy all children\n         * @method\n         * @memberof Konva.Container.prototype\n         */\n    destroyChildren: function() {\n      var children = Konva.Collection.toCollection(this.children);\n      var child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        // reset parent to prevent many _setChildrenIndices calls\n        delete child.parent;\n        child.index = 0;\n        child.destroy();\n      }\n      children = null;\n      this.children = new Konva.Collection();\n      return this;\n    },\n    /**\n         * Add node or nodes to container.\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {...Konva.Node} child\n         * @returns {Container}\n         * @example\n         * layer.add(shape1, shape2, shape3);\n         */\n    add: function(child) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      if (child.getParent()) {\n        child.moveTo(this);\n        return this;\n      }\n      var children = this.children;\n      this._validateAdd(child);\n      child.index = children.length;\n      child.parent = this;\n      children.push(child);\n      this._fire('add', {\n        child: child\n      });\n\n      // if node under drag we need to update drag animation\n      if (Konva.DD && child.isDragging()) {\n        Konva.DD.anim.setLayers(child.getLayer());\n      }\n\n      // chainable\n      return this;\n    },\n    destroy: function() {\n      // destroy children\n      if (this.hasChildren()) {\n        this.destroyChildren();\n      }\n      // then destroy self\n      Konva.Node.prototype.destroy.call(this);\n      return this;\n    },\n    /**\n         * return a {@link Konva.Collection} of nodes that match the selector.  Use '#' for id selections\n         * and '.' for name selections.  You can also select by type or class name. Pass multiple selectors\n         * separated by a space.\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {String} selector\n         * @returns {Collection}\n         * @example\n         * // select node with id foo\n         * var node = stage.find('#foo');\n         *\n         * // select nodes with name bar inside layer\n         * var nodes = layer.find('.bar');\n         *\n         * // select all groups inside layer\n         * var nodes = layer.find('Group');\n         *\n         * // select all rectangles inside layer\n         * var nodes = layer.find('Rect');\n         *\n         * // select node with an id of foo or a name of bar inside layer\n         * var nodes = layer.find('#foo, .bar');\n         */\n    find: function(selector) {\n      var retArr = [],\n        selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        i,\n        sel,\n        arr,\n        node,\n        children,\n        clen;\n\n      for (n = 0; n < len; n++) {\n        sel = selectorArr[n];\n        if (!Konva.Util.isValidSelector(sel)) {\n          Konva.Util.warn(\n            'Selector \"' +\n              sel +\n              '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".'\n          );\n          Konva.Util.warn(\n            'If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".'\n          );\n          Konva.Util.warn('Konva is awesome, right?');\n        }\n        // id selector\n        if (sel.charAt(0) === '#') {\n          node = this._getNodeById(sel.slice(1));\n          if (node) {\n            retArr.push(node);\n          }\n        } else if (sel.charAt(0) === '.') {\n          // name selector\n          arr = this._getNodesByName(sel.slice(1));\n          retArr = retArr.concat(arr);\n        } else {\n          // unrecognized selector, pass to children\n          children = this.getChildren();\n          clen = children.length;\n          for (i = 0; i < clen; i++) {\n            retArr = retArr.concat(children[i]._get(sel));\n          }\n        }\n      }\n\n      return Konva.Collection.toCollection(retArr);\n    },\n    /**\n         * return a first node from `find` method\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {String} selector\n         * @returns {Konva.Node}\n         * @example\n         * // select node with id foo\n         * var node = stage.findOne('#foo');\n         *\n         * // select node with name bar inside layer\n         * var nodes = layer.findOne('.bar');\n         */\n    findOne: function(selector) {\n      return this.find(selector)[0];\n    },\n    _getNodeById: function(key) {\n      var node = Konva.ids[key];\n\n      if (node !== undefined && this.isAncestorOf(node)) {\n        return node;\n      }\n      return null;\n    },\n    _getNodesByName: function(key) {\n      var arr = Konva.names[key] || [];\n      return this._getDescendants(arr);\n    },\n    _get: function(selector) {\n      var retArr = Konva.Node.prototype._get.call(this, selector);\n      var children = this.getChildren();\n      var len = children.length;\n      for (var n = 0; n < len; n++) {\n        retArr = retArr.concat(children[n]._get(selector));\n      }\n      return retArr;\n    },\n    // extenders\n    toObject: function() {\n      var obj = Konva.Node.prototype.toObject.call(this);\n\n      obj.children = [];\n\n      var children = this.getChildren();\n      var len = children.length;\n      for (var n = 0; n < len; n++) {\n        var child = children[n];\n        obj.children.push(child.toObject());\n      }\n\n      return obj;\n    },\n    _getDescendants: function(arr) {\n      var retArr = [];\n      var len = arr.length;\n      for (var n = 0; n < len; n++) {\n        var node = arr[n];\n        if (this.isAncestorOf(node)) {\n          retArr.push(node);\n        }\n      }\n\n      return retArr;\n    },\n    /**\n         * determine if node is an ancestor\n         * of descendant\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {Konva.Node} node\n         */\n    isAncestorOf: function(node) {\n      var parent = node.getParent();\n      while (parent) {\n        if (parent._id === this._id) {\n          return true;\n        }\n        parent = parent.getParent();\n      }\n\n      return false;\n    },\n    clone: function(obj) {\n      // call super method\n      var node = Konva.Node.prototype.clone.call(this, obj);\n\n      this.getChildren().each(function(no) {\n        node.add(no.clone());\n      });\n      return node;\n    },\n    /**\n         * get all shapes that intersect a point.  Note: because this method must clear a temporary\n         * canvas and redraw every shape inside the container, it should only be used for special sitations\n         * because it performs very poorly.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n         * because it performs much better\n         * @method\n         * @memberof Konva.Container.prototype\n         * @param {Object} pos\n         * @param {Number} pos.x\n         * @param {Number} pos.y\n         * @returns {Array} array of shapes\n         */\n    getAllIntersections: function(pos) {\n      var arr = [];\n\n      this.find('Shape').each(function(shape) {\n        if (shape.isVisible() && shape.intersects(pos)) {\n          arr.push(shape);\n        }\n      });\n\n      return arr;\n    },\n    _setChildrenIndices: function() {\n      this.children.each(function(child, n) {\n        child.index = n;\n      });\n    },\n    drawScene: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.getCanvas()),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\n      if (this.isVisible()) {\n        if (!caching && cachedSceneCanvas) {\n          context.save();\n          layer._applyTransform(this, context, top);\n          this._drawCachedSceneCanvas(context);\n          context.restore();\n        } else {\n          this._drawChildren(canvas, 'drawScene', top, false, caching);\n        }\n      }\n      return this;\n    },\n    drawHit: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.hitCanvas),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n      if (this.shouldDrawHit(canvas)) {\n        if (layer) {\n          layer.clearHitCache();\n        }\n        if (!caching && cachedHitCanvas) {\n          context.save();\n          layer._applyTransform(this, context, top);\n          this._drawCachedHitCanvas(context);\n          context.restore();\n        } else {\n          this._drawChildren(canvas, 'drawHit', top);\n        }\n      }\n      return this;\n    },\n    _drawChildren: function(canvas, drawMethod, top, caching, skipBuffer) {\n      var layer = this.getLayer(),\n        context = canvas && canvas.getContext(),\n        clipWidth = this.getClipWidth(),\n        clipHeight = this.getClipHeight(),\n        clipFunc = this.getClipFunc(),\n        hasClip = (clipWidth && clipHeight) || clipFunc,\n        clipX,\n        clipY;\n\n      if (hasClip && layer) {\n        context.save();\n        var transform = this.getAbsoluteTransform(top);\n        var m = transform.getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        context.beginPath();\n        if (clipFunc) {\n          clipFunc.call(this, context, this);\n        } else {\n          clipX = this.getClipX();\n          clipY = this.getClipY();\n          context.rect(clipX, clipY, clipWidth, clipHeight);\n        }\n        context.clip();\n        m = transform.copy().invert().getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n\n      this.children.each(function(child) {\n        child[drawMethod](canvas, top, caching, skipBuffer);\n      });\n\n      if (hasClip) {\n        context.restore();\n      }\n    },\n    shouldDrawHit: function(canvas) {\n      var layer = this.getLayer();\n      var dd = Konva.DD;\n      var layerUnderDrag =\n        dd &&\n        Konva.isDragging() &&\n        Konva.DD.anim.getLayers().indexOf(layer) !== -1;\n      return (\n        (canvas && canvas.isCache) ||\n        (layer &&\n          layer.hitGraphEnabled() &&\n          this.isVisible() &&\n          !layerUnderDrag)\n      );\n    },\n    getClientRect: function(attrs) {\n      attrs = attrs || {};\n      var skipTransform = attrs.skipTransform;\n      var relativeTo = attrs.relativeTo;\n\n      var minX, minY, maxX, maxY;\n      var selfRect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n      var that = this;\n      this.children.each(function(child) {\n        // skip invisible children\n        if (!child.isVisible()) {\n          return;\n        }\n        var rect = child.getClientRect({ relativeTo: that });\n\n        // skip invisible children (like empty groups)\n        // or don't skip... hmmm...\n        // if (rect.width === 0 && rect.height === 0) {\n        //     return;\n        // }\n\n        if (minX === undefined) {\n          // initial value for first child\n          minX = rect.x;\n          minY = rect.y;\n          maxX = rect.x + rect.width;\n          maxY = rect.y + rect.height;\n        } else {\n          minX = Math.min(minX, rect.x);\n          minY = Math.min(minY, rect.y);\n          maxX = Math.max(maxX, rect.x + rect.width);\n          maxY = Math.max(maxY, rect.y + rect.height);\n        }\n      });\n\n      if (this.children.length !== 0) {\n        selfRect = {\n          x: minX,\n          y: minY,\n          width: maxX - minX,\n          height: maxY - minY\n        };\n      }\n\n      if (!skipTransform) {\n        return this._transformedRect(selfRect, relativeTo);\n      }\n      return selfRect;\n    }\n  });\n\n  Konva.Util.extend(Konva.Container, Konva.Node);\n  // deprecated methods\n  Konva.Container.prototype.get = Konva.Container.prototype.find;\n\n  // add getters setters\n  Konva.Factory.addComponentsGetterSetter(Konva.Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height'\n  ]);\n  /**\n     * get/set clip\n     * @method\n     * @name clip\n     * @memberof Konva.Container.prototype\n     * @param {Object} clip\n     * @param {Number} clip.x\n     * @param {Number} clip.y\n     * @param {Number} clip.width\n     * @param {Number} clip.height\n     * @returns {Object}\n     * @example\n     * // get clip\n     * var clip = container.clip();\n     *\n     * // set clip\n     * container.setClip({\n     *   x: 20,\n     *   y: 20,\n     *   width: 20,\n     *   height: 20\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipX');\n  /**\n     * get/set clip x\n     * @name clipX\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get clip x\n     * var clipX = container.clipX();\n     *\n     * // set clip x\n     * container.clipX(10);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipY');\n  /**\n     * get/set clip y\n     * @name clipY\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get clip y\n     * var clipY = container.clipY();\n     *\n     * // set clip y\n     * container.clipY(10);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipWidth');\n  /**\n     * get/set clip width\n     * @name clipWidth\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Number} width\n     * @returns {Number}\n     * @example\n     * // get clip width\n     * var clipWidth = container.clipWidth();\n     *\n     * // set clip width\n     * container.clipWidth(100);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipHeight');\n  /**\n     * get/set clip height\n     * @name clipHeight\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Number} height\n     * @returns {Number}\n     * @example\n     * // get clip height\n     * var clipHeight = container.clipHeight();\n     *\n     * // set clip height\n     * container.clipHeight(100);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipFunc');\n  /**\n      * get/set clip function\n      * @name clipFunc\n      * @method\n      * @memberof Konva.Container.prototype\n      * @param {Function} function\n      * @returns {Function}\n      * @example\n      * // get clip function\n      * var clipFunction = container.clipFunc();\n      *\n      * // set clip height\n      * container.clipFunc(function(ctx) {\n      *   ctx.rect(0, 0, 100, 100);\n      * });\n      */\n\n  Konva.Collection.mapMethods(Konva.Container);\n})();\n\n(function(Konva) {\n  'use strict';\n  var HAS_SHADOW = 'hasShadow';\n  var SHADOW_RGBA = 'shadowRGBA';\n\n  function _fillFunc(context) {\n    context.fill();\n  }\n  function _strokeFunc(context) {\n    context.stroke();\n  }\n  function _fillFuncHit(context) {\n    context.fill();\n  }\n  function _strokeFuncHit(context) {\n    context.stroke();\n  }\n\n  function _clearHasShadowCache() {\n    this._clearCache(HAS_SHADOW);\n  }\n\n  function _clearGetShadowRGBACache() {\n    this._clearCache(SHADOW_RGBA);\n  }\n\n  /**\n     * Shape constructor.  Shapes are primitive objects such as rectangles,\n     *  circles, text, lines, etc.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Node\n     * @param {Object} config\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var customShape = new Konva.Shape({\n         *   x: 5,\n         *   y: 10,\n         *   fill: 'red',\n         *   // a Konva.Canvas renderer is passed into the drawFunc function\n         *   drawFunc: function(context) {\n         *     context.beginPath();\n         *     context.moveTo(200, 50);\n         *     context.lineTo(420, 80);\n         *     context.quadraticCurveTo(300, 100, 260, 170);\n         *     context.closePath();\n         *     context.fillStrokeShape(this);\n         *   }\n         *});\n     */\n  Konva.Shape = function(config) {\n    this.__init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Shape, {\n    __init: function(config) {\n      this.nodeType = 'Shape';\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this._fillFuncHit = _fillFuncHit;\n      this._strokeFuncHit = _strokeFuncHit;\n\n      // set colorKey\n      var shapes = Konva.shapes;\n      var key;\n\n      while (true) {\n        key = Konva.Util.getRandomColor();\n        if (key && !(key in shapes)) {\n          break;\n        }\n      }\n\n      this.colorKey = key;\n      shapes[key] = this;\n\n      // call super constructor\n      Konva.Node.call(this, config);\n\n      this.on(\n        'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',\n        _clearHasShadowCache\n      );\n\n      this.on(\n        'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',\n        _clearGetShadowRGBACache\n      );\n    },\n    hasChildren: function() {\n      return false;\n    },\n    getChildren: function() {\n      return [];\n    },\n    /**\n         * get canvas context tied to the layer\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Konva.Context}\n         */\n    getContext: function() {\n      return this.getLayer().getContext();\n    },\n    /**\n         * get canvas renderer tied to the layer.  Note that this returns a canvas renderer, not a canvas element\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Konva.Canvas}\n         */\n    getCanvas: function() {\n      return this.getLayer().getCanvas();\n    },\n    /**\n         * returns whether or not a shadow will be rendered\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Boolean}\n         */\n    hasShadow: function() {\n      return this._getCache(HAS_SHADOW, this._hasShadow);\n    },\n    _hasShadow: function() {\n      return (\n        this.getShadowEnabled() &&\n        (this.getShadowOpacity() !== 0 &&\n          !!(this.getShadowColor() ||\n            this.getShadowBlur() ||\n            this.getShadowOffsetX() ||\n            this.getShadowOffsetY()))\n      );\n    },\n    getShadowRGBA: function() {\n      return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    },\n    _getShadowRGBA: function() {\n      if (this.hasShadow()) {\n        var rgba = Konva.Util.colorToRGBA(this.shadowColor());\n        return (\n          'rgba(' +\n          rgba.r +\n          ',' +\n          rgba.g +\n          ',' +\n          rgba.b +\n          ',' +\n          rgba.a * (this.getShadowOpacity() || 1) +\n          ')'\n        );\n      }\n    },\n    /**\n         * returns whether or not the shape will be filled\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Boolean}\n         */\n    hasFill: function() {\n      return !!(this.getFill() ||\n        this.getFillPatternImage() ||\n        this.getFillLinearGradientColorStops() ||\n        this.getFillRadialGradientColorStops());\n    },\n    /**\n         * returns whether or not the shape will be stroked\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Boolean}\n         */\n    hasStroke: function() {\n      return this.strokeEnabled() && !!this.stroke();\n    },\n    /**\n         * determines if point is in the shape, regardless if other shapes are on top of it.  Note: because\n         *  this method clears a temporary canvas and then redraws the shape, it performs very poorly if executed many times\n         *  consecutively.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n         *  because it performs much better\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @param {Object} point\n         * @param {Number} point.x\n         * @param {Number} point.y\n         * @returns {Boolean}\n         */\n    intersects: function(point) {\n      var stage = this.getStage(), bufferHitCanvas = stage.bufferHitCanvas, p;\n\n      bufferHitCanvas.getContext().clear();\n      this.drawHit(bufferHitCanvas);\n      p = bufferHitCanvas.context.getImageData(\n        Math.round(point.x),\n        Math.round(point.y),\n        1,\n        1\n      ).data;\n      return p[3] > 0;\n    },\n    // extends Node.prototype.destroy\n    destroy: function() {\n      Konva.Node.prototype.destroy.call(this);\n      delete Konva.shapes[this.colorKey];\n      return this;\n    },\n    _useBufferCanvas: function(caching) {\n      return (\n        (!caching &&\n          (this.perfectDrawEnabled() &&\n            this.getAbsoluteOpacity() !== 1 &&\n            this.hasFill() &&\n            this.hasStroke() &&\n            this.getStage())) ||\n        (this.perfectDrawEnabled() &&\n          this.hasShadow() &&\n          this.getAbsoluteOpacity() !== 1 &&\n          this.hasFill() &&\n          this.hasStroke() &&\n          this.getStage())\n      );\n    },\n    /**\n         * return self rectangle (x, y, width, height) of shape.\n         * This method are not taken into account transformation and styles.\n         * @method\n         * @memberof Konva.Shape.prototype\n         * @returns {Object} rect with {x, y, width, height} properties\n         * @example\n         *\n         * rect.getSelfRect();  // return {x:0, y:0, width:rect.width(), height:rect.height()}\n         * circle.getSelfRect();  // return {x: - circle.width() / 2, y: - circle.height() / 2, width:circle.width(), height:circle.height()}\n         *\n         */\n    getSelfRect: function() {\n      var size = this.getSize();\n      return {\n        x: this._centroid ? Math.round(-size.width / 2) : 0,\n        y: this._centroid ? Math.round(-size.height / 2) : 0,\n        width: size.width,\n        height: size.height\n      };\n    },\n    getClientRect: function(attrs) {\n      attrs = attrs || {};\n      var skipTransform = attrs.skipTransform;\n      var relativeTo = attrs.relativeTo;\n\n      var fillRect = this.getSelfRect();\n\n      var strokeWidth = (this.hasStroke() && this.strokeWidth()) || 0;\n      var fillAndStrokeWidth = fillRect.width + strokeWidth;\n      var fillAndStrokeHeight = fillRect.height + strokeWidth;\n\n      var shadowOffsetX = this.hasShadow() ? this.shadowOffsetX() : 0;\n      var shadowOffsetY = this.hasShadow() ? this.shadowOffsetY() : 0;\n\n      var preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n      var preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n\n      var blurRadius = (this.hasShadow() && this.shadowBlur()) || 0;\n\n      var width = preWidth + blurRadius * 2;\n      var height = preHeight + blurRadius * 2;\n\n      // if stroke, for example = 3\n      // we need to set x to 1.5, but after Math.round it will be 2\n      // as we have additional offset we need to increase width and height by 1 pixel\n      var roundingOffset = 0;\n      if (Math.round(strokeWidth / 2) !== strokeWidth / 2) {\n        roundingOffset = 1;\n      }\n      var rect = {\n        width: width + roundingOffset,\n        height: height + roundingOffset,\n        x: -Math.round(strokeWidth / 2 + blurRadius) +\n          Math.min(shadowOffsetX, 0) +\n          fillRect.x,\n        y: -Math.round(strokeWidth / 2 + blurRadius) +\n          Math.min(shadowOffsetY, 0) +\n          fillRect.y\n      };\n      if (!skipTransform) {\n        return this._transformedRect(rect, relativeTo);\n      }\n      return rect;\n    },\n    drawScene: function(can, top, caching, skipBuffer) {\n      var layer = this.getLayer(),\n        canvas = can || layer.getCanvas(),\n        context = canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        drawFunc = this.sceneFunc(),\n        hasShadow = this.hasShadow(),\n        hasStroke = this.hasStroke(),\n        stage,\n        bufferCanvas,\n        bufferContext;\n\n      if (!this.isVisible()) {\n        return this;\n      }\n      if (cachedCanvas) {\n        context.save();\n        layer._applyTransform(this, context, top);\n        this._drawCachedSceneCanvas(context);\n        context.restore();\n        return this;\n      }\n      if (!drawFunc) {\n        return this;\n      }\n      context.save();\n      // if buffer canvas is needed\n      if (this._useBufferCanvas(caching) && !skipBuffer) {\n        stage = this.getStage();\n        bufferCanvas = stage.bufferCanvas;\n        bufferContext = bufferCanvas.getContext();\n        bufferContext.clear();\n        bufferContext.save();\n        bufferContext._applyLineJoin(this);\n        // layer might be undefined if we are using cache before adding to layer\n        if (!caching) {\n          if (layer) {\n            layer._applyTransform(this, bufferContext, top);\n          } else {\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n          }\n        }\n\n        drawFunc.call(this, bufferContext);\n        bufferContext.restore();\n\n        var ratio = bufferCanvas.pixelRatio;\n        if (hasShadow && !canvas.hitCanvas) {\n          context.save();\n\n          context._applyShadow(this);\n          context._applyOpacity(this);\n          context._applyGlobalCompositeOperation(this);\n          context.drawImage(\n            bufferCanvas._canvas,\n            0,\n            0,\n            bufferCanvas.width / ratio,\n            bufferCanvas.height / ratio\n          );\n          context.restore();\n        } else {\n          context._applyOpacity(this);\n          context._applyGlobalCompositeOperation(this);\n          context.drawImage(\n            bufferCanvas._canvas,\n            0,\n            0,\n            bufferCanvas.width / ratio,\n            bufferCanvas.height / ratio\n          );\n        }\n      } else {\n        // if buffer canvas is not needed\n        context._applyLineJoin(this);\n        // layer might be undefined if we are using cache before adding to layer\n        if (!caching) {\n          if (layer) {\n            layer._applyTransform(this, context, top);\n          } else {\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n          }\n        }\n\n        if (hasShadow && hasStroke && !canvas.hitCanvas) {\n          context.save();\n          // apply shadow\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          context._applyShadow(this);\n\n          drawFunc.call(this, context);\n          context.restore();\n          // if shape has stroke we need to redraw shape\n          // otherwise we will see a shadow under stroke (and over fill)\n          // but I think this is unexpected behavior\n          if (this.hasFill() && this.getShadowForStrokeEnabled()) {\n            drawFunc.call(this, context);\n          }\n        } else if (hasShadow && !canvas.hitCanvas) {\n          context.save();\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          context._applyShadow(this);\n          drawFunc.call(this, context);\n          context.restore();\n        } else {\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          drawFunc.call(this, context);\n        }\n      }\n      context.restore();\n      return this;\n    },\n    drawHit: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || layer.hitCanvas,\n        context = canvas.getContext(),\n        drawFunc = this.hitFunc() || this.sceneFunc(),\n        cachedCanvas = this._cache.canvas,\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n      if (!this.shouldDrawHit(canvas)) {\n        return this;\n      }\n      if (layer) {\n        layer.clearHitCache();\n      }\n      if (cachedHitCanvas) {\n        context.save();\n        layer._applyTransform(this, context, top);\n        this._drawCachedHitCanvas(context);\n        context.restore();\n        return this;\n      }\n      if (!drawFunc) {\n        return this;\n      }\n      context.save();\n      context._applyLineJoin(this);\n      if (!caching) {\n        if (layer) {\n          layer._applyTransform(this, context, top);\n        } else {\n          var o = this.getAbsoluteTransform(top).getMatrix();\n          context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n      }\n      drawFunc.call(this, context);\n      context.restore();\n      return this;\n    },\n    /**\n        * draw hit graph using the cached scene canvas\n        * @method\n        * @memberof Konva.Shape.prototype\n        * @param {Integer} alphaThreshold alpha channel threshold that determines whether or not\n        *  a pixel should be drawn onto the hit graph.  Must be a value between 0 and 255.\n        *  The default is 0\n        * @returns {Konva.Shape}\n        * @example\n        * shape.cache();\n        * shape.drawHitFromCache();\n        */\n    drawHitFromCache: function(alphaThreshold) {\n      var threshold = alphaThreshold || 0,\n        cachedCanvas = this._cache.canvas,\n        sceneCanvas = this._getCachedSceneCanvas(),\n        hitCanvas = cachedCanvas.hit,\n        hitContext = hitCanvas.getContext(),\n        hitWidth = hitCanvas.getWidth(),\n        hitHeight = hitCanvas.getHeight(),\n        hitImageData,\n        hitData,\n        len,\n        rgbColorKey,\n        i,\n        alpha;\n\n      hitContext.clear();\n      hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n\n      try {\n        hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n        hitData = hitImageData.data;\n        len = hitData.length;\n        rgbColorKey = Konva.Util._hexToRgb(this.colorKey);\n\n        // replace non transparent pixels with color key\n        for (i = 0; i < len; i += 4) {\n          alpha = hitData[i + 3];\n          if (alpha > threshold) {\n            hitData[i] = rgbColorKey.r;\n            hitData[i + 1] = rgbColorKey.g;\n            hitData[i + 2] = rgbColorKey.b;\n            hitData[i + 3] = 255;\n          } else {\n            hitData[i + 3] = 0;\n          }\n        }\n        hitContext.putImageData(hitImageData, 0, 0);\n      } catch (e) {\n        Konva.Util.error(\n          'Unable to draw hit graph from cached scene canvas. ' + e.message\n        );\n      }\n\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.Shape, Konva.Node);\n\n  // add getters and setters\n  Konva.Factory.addGetterSetter(Konva.Shape, 'stroke');\n\n  /**\n     * get/set stroke color\n     * @name stroke\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} color\n     * @returns {String}\n     * @example\n     * // get stroke color\n     * var stroke = shape.stroke();\n     *\n     * // set stroke color with color string\n     * shape.stroke('green');\n     *\n     * // set stroke color with hex\n     * shape.stroke('#00ff00');\n     *\n     * // set stroke color with rgb\n     * shape.stroke('rgb(0,255,0)');\n     *\n     * // set stroke color with rgba and make it 50% opaque\n     * shape.stroke('rgba(0,255,0,0.5');\n     */\n\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'strokeRed',\n    0,\n    Konva.Validators.RGBComponent\n  );\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'strokeGreen',\n    0,\n    Konva.Validators.RGBComponent\n  );\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'strokeBlue',\n    0,\n    Konva.Validators.RGBComponent\n  );\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'strokeAlpha',\n    1,\n    Konva.Validators.alphaComponent\n  );\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeWidth', 2);\n\n  /**\n     * get/set stroke width\n     * @name strokeWidth\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} strokeWidth\n     * @returns {Number}\n     * @example\n     * // get stroke width\n     * var strokeWidth = shape.strokeWidth();\n     *\n     * // set stroke width\n     * shape.strokeWidth();\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeHitEnabled', true);\n\n  /**\n     * get/set strokeHitEnabled property. Useful for performance optimization.\n     * You may set `shape.strokeHitEnabled(false)`. In this case stroke will be no draw on hit canvas, so hit area\n     * of shape will be decreased (by lineWidth / 2). Remember that non closed line with `strokeHitEnabled = false`\n     * will be not drawn on hit canvas, that is mean line will no trigger pointer events (like mouseover)\n     * Default value is true\n     * @name strokeHitEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} strokeHitEnabled\n     * @returns {Boolean}\n     * @example\n     * // get strokeHitEnabled\n     * var strokeHitEnabled = shape.strokeHitEnabled();\n     *\n     * // set strokeHitEnabled\n     * shape.strokeHitEnabled();\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'perfectDrawEnabled', true);\n\n  /**\n     * get/set perfectDrawEnabled. If a shape has fill, stroke and opacity you may set `perfectDrawEnabled` to false to improve performance.\n     * See http://konvajs.github.io/docs/performance/Disable_Perfect_Draw.html for more information.\n     * Default value is true\n     * @name perfectDrawEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} perfectDrawEnabled\n     * @returns {Boolean}\n     * @example\n     * // get perfectDrawEnabled\n     * var perfectDrawEnabled = shape.perfectDrawEnabled();\n     *\n     * // set perfectDrawEnabled\n     * shape.perfectDrawEnabled();\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowForStrokeEnabled', true);\n\n  /**\n     * get/set shadowForStrokeEnabled. Useful for performance optimization.\n     * You may set `shape.shadowForStrokeEnabled(false)`. In this case stroke will be no draw shadow for stroke.\n     * Remember if you set `shadowForStrokeEnabled = false` for non closed line - that line with have no shadow!.\n     * Default value is true\n     * @name shadowForStrokeEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} shadowForStrokeEnabled\n     * @returns {Boolean}\n     * @example\n     * // get shadowForStrokeEnabled\n     * var shadowForStrokeEnabled = shape.shadowForStrokeEnabled();\n     *\n     * // set shadowForStrokeEnabled\n     * shape.shadowForStrokeEnabled();\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'lineJoin');\n\n  /**\n     * get/set line join.  Can be miter, round, or bevel.  The\n     *  default is miter\n     * @name lineJoin\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} lineJoin\n     * @returns {String}\n     * @example\n     * // get line join\n     * var lineJoin = shape.lineJoin();\n     *\n     * // set line join\n     * shape.lineJoin('round');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'lineCap');\n\n  /**\n     * get/set line cap.  Can be butt, round, or square\n     * @name lineCap\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} lineCap\n     * @returns {String}\n     * @example\n     * // get line cap\n     * var lineCap = shape.lineCap();\n     *\n     * // set line cap\n     * shape.lineCap('round');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'sceneFunc');\n\n  /**\n     * get/set scene draw function\n     * @name sceneFunc\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Function} drawFunc drawing function\n     * @returns {Function}\n     * @example\n     * // get scene draw function\n     * var sceneFunc = shape.sceneFunc();\n     *\n     * // set scene draw function\n     * shape.sceneFunc(function(context) {\n     *   context.beginPath();\n     *   context.rect(0, 0, this.width(), this.height());\n     *   context.closePath();\n     *   context.fillStrokeShape(this);\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'hitFunc');\n\n  /**\n     * get/set hit draw function\n     * @name hitFunc\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Function} drawFunc drawing function\n     * @returns {Function}\n     * @example\n     * // get hit draw function\n     * var hitFunc = shape.hitFunc();\n     *\n     * // set hit draw function\n     * shape.hitFunc(function(context) {\n     *   context.beginPath();\n     *   context.rect(0, 0, this.width(), this.height());\n     *   context.closePath();\n     *   context.fillStrokeShape(this);\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'dash');\n\n  /**\n     * get/set dash array for stroke.\n     * @name dash\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Array} dash\n     * @returns {Array}\n     * @example\n     *  // apply dashed stroke that is 10px long and 5 pixels apart\n     *  line.dash([10, 5]);\n     *  // apply dashed stroke that is made up of alternating dashed\n     *  // lines that are 10px long and 20px apart, and dots that have\n     *  // a radius of 5px and are 20px apart\n     *  line.dash([10, 20, 0.001, 20]);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'dashOffset', 0);\n\n  /**\n     * get/set dash offset for stroke.\n     * @name dash\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} dash offset\n     * @returns {Number}\n     * @example\n     *  // apply dashed stroke that is 10px long and 5 pixels apart with an offset of 5px\n     *  line.dash([10, 5]);\n     *  line.dashOffset(5);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowColor');\n\n  /**\n     * get/set shadow color\n     * @name shadowColor\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} color\n     * @returns {String}\n     * @example\n     * // get shadow color\n     * var shadow = shape.shadowColor();\n     *\n     * // set shadow color with color string\n     * shape.shadowColor('green');\n     *\n     * // set shadow color with hex\n     * shape.shadowColor('#00ff00');\n     *\n     * // set shadow color with rgb\n     * shape.shadowColor('rgb(0,255,0)');\n     *\n     * // set shadow color with rgba and make it 50% opaque\n     * shape.shadowColor('rgba(0,255,0,0.5');\n     */\n\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'shadowRed',\n    0,\n    Konva.Validators.RGBComponent\n  );\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'shadowGreen',\n    0,\n    Konva.Validators.RGBComponent\n  );\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'shadowBlue',\n    0,\n    Konva.Validators.RGBComponent\n  );\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'shadowAlpha',\n    1,\n    Konva.Validators.alphaComponent\n  );\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowBlur');\n\n  /**\n     * get/set shadow blur\n     * @name shadowBlur\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} blur\n     * @returns {Number}\n     * @example\n     * // get shadow blur\n     * var shadowBlur = shape.shadowBlur();\n     *\n     * // set shadow blur\n     * shape.shadowBlur(10);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOpacity');\n\n  /**\n     * get/set shadow opacity.  must be a value between 0 and 1\n     * @name shadowOpacity\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} opacity\n     * @returns {Number}\n     * @example\n     * // get shadow opacity\n     * var shadowOpacity = shape.shadowOpacity();\n     *\n     * // set shadow opacity\n     * shape.shadowOpacity(0.5);\n     */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'shadowOffset', [\n    'x',\n    'y'\n  ]);\n\n  /**\n     * get/set shadow offset\n     * @name shadowOffset\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} offset\n     * @param {Number} offset.x\n     * @param {Number} offset.y\n     * @returns {Object}\n     * @example\n     * // get shadow offset\n     * var shadowOffset = shape.shadowOffset();\n     *\n     * // set shadow offset\n     * shape.shadowOffset({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetX', 0);\n\n  /**\n     * get/set shadow offset x\n     * @name shadowOffsetX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get shadow offset x\n     * var shadowOffsetX = shape.shadowOffsetX();\n     *\n     * // set shadow offset x\n     * shape.shadowOffsetX(5);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetY', 0);\n\n  /**\n     * get/set shadow offset y\n     * @name shadowOffsetY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get shadow offset y\n     * var shadowOffsetY = shape.shadowOffsetY();\n     *\n     * // set shadow offset y\n     * shape.shadowOffsetY(5);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternImage');\n\n  /**\n     * get/set fill pattern image\n     * @name fillPatternImage\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Image} image object\n     * @returns {Image}\n     * @example\n     * // get fill pattern image\n     * var fillPatternImage = shape.fillPatternImage();\n     *\n     * // set fill pattern image\n     * var imageObj = new Image();\n     * imageObj.onload = function() {\n     *   shape.fillPatternImage(imageObj);\n     * };\n     * imageObj.src = 'path/to/image/jpg';\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fill');\n\n  /**\n     * get/set fill color\n     * @name fill\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} color\n     * @returns {String}\n     * @example\n     * // get fill color\n     * var fill = shape.fill();\n     *\n     * // set fill color with color string\n     * shape.fill('green');\n     *\n     * // set fill color with hex\n     * shape.fill('#00ff00');\n     *\n     * // set fill color with rgb\n     * shape.fill('rgb(0,255,0)');\n     *\n     * // set fill color with rgba and make it 50% opaque\n     * shape.fill('rgba(0,255,0,0.5');\n     *\n     * // shape without fill\n     * shape.fill(null);\n     */\n\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'fillRed',\n    0,\n    Konva.Validators.RGBComponent\n  );\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'fillGreen',\n    0,\n    Konva.Validators.RGBComponent\n  );\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'fillBlue',\n    0,\n    Konva.Validators.RGBComponent\n  );\n  Konva.Factory.addDeprecatedGetterSetter(\n    Konva.Shape,\n    'fillAlpha',\n    1,\n    Konva.Validators.alphaComponent\n  );\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternX', 0);\n\n  /**\n     * get/set fill pattern x\n     * @name fillPatternX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill pattern x\n     * var fillPatternX = shape.fillPatternX();\n     * // set fill pattern x\n     * shape.fillPatternX(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternY', 0);\n\n  /**\n     * get/set fill pattern y\n     * @name fillPatternY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill pattern y\n     * var fillPatternY = shape.fillPatternY();\n     * // set fill pattern y\n     * shape.fillPatternY(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientColorStops');\n\n  /**\n     * get/set fill linear gradient color stops\n     * @name fillLinearGradientColorStops\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Array} colorStops\n     * @returns {Array} colorStops\n     * @example\n     * // get fill linear gradient color stops\n     * var colorStops = shape.fillLinearGradientColorStops();\n     *\n     * // create a linear gradient that starts with red, changes to blue\n     * // halfway through, and then changes to green\n     * shape.fillLinearGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n     */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartRadius',\n    0\n  );\n\n  /**\n     * get/set fill radial gradient start radius\n     * @name fillRadialGradientStartRadius\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} radius\n     * @returns {Number}\n     * @example\n     * // get radial gradient start radius\n     * var startRadius = shape.fillRadialGradientStartRadius();\n     *\n     * // set radial gradient start radius\n     * shape.fillRadialGradientStartRadius(0);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndRadius', 0);\n\n  /**\n     * get/set fill radial gradient end radius\n     * @name fillRadialGradientEndRadius\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} radius\n     * @returns {Number}\n     * @example\n     * // get radial gradient end radius\n     * var endRadius = shape.fillRadialGradientEndRadius();\n     *\n     * // set radial gradient end radius\n     * shape.fillRadialGradientEndRadius(100);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientColorStops');\n\n  /**\n     * get/set fill radial gradient color stops\n     * @name fillRadialGradientColorStops\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} colorStops\n     * @returns {Array}\n     * @example\n     * // get fill radial gradient color stops\n     * var colorStops = shape.fillRadialGradientColorStops();\n     *\n     * // create a radial gradient that starts with red, changes to blue\n     * // halfway through, and then changes to green\n     * shape.fillRadialGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRepeat', 'repeat');\n\n  /**\n     * get/set fill pattern repeat.  Can be 'repeat', 'repeat-x', 'repeat-y', or 'no-repeat'.  The default is 'repeat'\n     * @name fillPatternRepeat\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} repeat\n     * @returns {String}\n     * @example\n     * // get fill pattern repeat\n     * var repeat = shape.fillPatternRepeat();\n     *\n     * // repeat pattern in x direction only\n     * shape.fillPatternRepeat('repeat-x');\n     *\n     * // do not repeat the pattern\n     * shape.fillPatternRepeat('no repeat');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillEnabled', true);\n\n  /**\n     * get/set fill enabled flag\n     * @name fillEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get fill enabled flag\n     * var fillEnabled = shape.fillEnabled();\n     *\n     * // disable fill\n     * shape.fillEnabled(false);\n     *\n     * // enable fill\n     * shape.fillEnabled(true);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeEnabled', true);\n\n  /**\n     * get/set stroke enabled flag\n     * @name strokeEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get stroke enabled flag\n     * var strokeEnabled = shape.strokeEnabled();\n     *\n     * // disable stroke\n     * shape.strokeEnabled(false);\n     *\n     * // enable stroke\n     * shape.strokeEnabled(true);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowEnabled', true);\n\n  /**\n     * get/set shadow enabled flag\n     * @name shadowEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get shadow enabled flag\n     * var shadowEnabled = shape.shadowEnabled();\n     *\n     * // disable shadow\n     * shape.shadowEnabled(false);\n     *\n     * // enable shadow\n     * shape.shadowEnabled(true);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'dashEnabled', true);\n\n  /**\n     * get/set dash enabled flag\n     * @name dashEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get dash enabled flag\n     * var dashEnabled = shape.dashEnabled();\n     *\n     * // disable dash\n     * shape.dashEnabled(false);\n     *\n     * // enable dash\n     * shape.dashEnabled(true);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeScaleEnabled', true);\n\n  /**\n     * get/set strokeScale enabled flag\n     * @name strokeScaleEnabled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get stroke scale enabled flag\n     * var strokeScaleEnabled = shape.strokeScaleEnabled();\n     *\n     * // disable stroke scale\n     * shape.strokeScaleEnabled(false);\n     *\n     * // enable stroke scale\n     * shape.strokeScaleEnabled(true);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPriority', 'color');\n\n  /**\n     * get/set fill priority.  can be color, pattern, linear-gradient, or radial-gradient.  The default is color.\n     *   This is handy if you want to toggle between different fill types.\n     * @name fillPriority\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {String} priority\n     * @returns {String}\n     * @example\n     * // get fill priority\n     * var fillPriority = shape.fillPriority();\n     *\n     * // set fill priority\n     * shape.fillPriority('linear-gradient');\n     */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternOffset', [\n    'x',\n    'y'\n  ]);\n\n  /**\n     * get/set fill pattern offset\n     * @name fillPatternOffset\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} offset\n     * @param {Number} offset.x\n     * @param {Number} offset.y\n     * @returns {Object}\n     * @example\n     * // get fill pattern offset\n     * var patternOffset = shape.fillPatternOffset();\n     *\n     * // set fill pattern offset\n     * shape.fillPatternOffset({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetX', 0);\n  /**\n     * get/set fill pattern offset x\n     * @name fillPatternOffsetX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill pattern offset x\n     * var patternOffsetX = shape.fillPatternOffsetX();\n     *\n     * // set fill pattern offset x\n     * shape.fillPatternOffsetX(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetY', 0);\n  /**\n     * get/set fill pattern offset y\n     * @name fillPatternOffsetY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill pattern offset y\n     * var patternOffsetY = shape.fillPatternOffsetY();\n     *\n     * // set fill pattern offset y\n     * shape.fillPatternOffsetY(10);\n     */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternScale', [\n    'x',\n    'y'\n  ]);\n\n  /**\n     * get/set fill pattern scale\n     * @name fillPatternScale\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} scale\n     * @param {Number} scale.x\n     * @param {Number} scale.y\n     * @returns {Object}\n     * @example\n     * // get fill pattern scale\n     * var patternScale = shape.fillPatternScale();\n     *\n     * // set fill pattern scale\n     * shape.fillPatternScale({\n     *   x: 2\n     *   y: 2\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleX', 1);\n  /**\n     * get/set fill pattern scale x\n     * @name fillPatternScaleX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill pattern scale x\n     * var patternScaleX = shape.fillPatternScaleX();\n     *\n     * // set fill pattern scale x\n     * shape.fillPatternScaleX(2);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleY', 1);\n  /**\n     * get/set fill pattern scale y\n     * @name fillPatternScaleY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill pattern scale y\n     * var patternScaleY = shape.fillPatternScaleY();\n     *\n     * // set fill pattern scale y\n     * shape.fillPatternScaleY(2);\n     */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n     * get/set fill linear gradient start point\n     * @name fillLinearGradientStartPoint\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} startPoint\n     * @param {Number} startPoint.x\n     * @param {Number} startPoint.y\n     * @returns {Object}\n     * @example\n     * // get fill linear gradient start point\n     * var startPoint = shape.fillLinearGradientStartPoint();\n     *\n     * // set fill linear gradient start point\n     * shape.fillLinearGradientStartPoint({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPointX',\n    0\n  );\n  /**\n     * get/set fill linear gradient start point x\n     * @name fillLinearGradientStartPointX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill linear gradient start point x\n     * var startPointX = shape.fillLinearGradientStartPointX();\n     *\n     * // set fill linear gradient start point x\n     * shape.fillLinearGradientStartPointX(20);\n     */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPointY',\n    0\n  );\n  /**\n     * get/set fill linear gradient start point y\n     * @name fillLinearGradientStartPointY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill linear gradient start point y\n     * var startPointY = shape.fillLinearGradientStartPointY();\n     *\n     * // set fill linear gradient start point y\n     * shape.fillLinearGradientStartPointY(20);\n     */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n     * get/set fill linear gradient end point\n     * @name fillLinearGradientEndPoint\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} endPoint\n     * @param {Number} endPoint.x\n     * @param {Number} endPoint.y\n     * @returns {Object}\n     * @example\n     * // get fill linear gradient end point\n     * var endPoint = shape.fillLinearGradientEndPoint();\n     *\n     * // set fill linear gradient end point\n     * shape.fillLinearGradientEndPoint({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointX', 0);\n  /**\n     * get/set fill linear gradient end point x\n     * @name fillLinearGradientEndPointX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill linear gradient end point x\n     * var endPointX = shape.fillLinearGradientEndPointX();\n     *\n     * // set fill linear gradient end point x\n     * shape.fillLinearGradientEndPointX(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointY', 0);\n  /**\n     * get/set fill linear gradient end point y\n     * @name fillLinearGradientEndPointY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill linear gradient end point y\n     * var endPointY = shape.fillLinearGradientEndPointY();\n     *\n     * // set fill linear gradient end point y\n     * shape.fillLinearGradientEndPointY(20);\n     */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n     * get/set fill radial gradient start point\n     * @name fillRadialGradientStartPoint\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} startPoint\n     * @param {Number} startPoint.x\n     * @param {Number} startPoint.y\n     * @returns {Object}\n     * @example\n     * // get fill radial gradient start point\n     * var startPoint = shape.fillRadialGradientStartPoint();\n     *\n     * // set fill radial gradient start point\n     * shape.fillRadialGradientStartPoint({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPointX',\n    0\n  );\n  /**\n     * get/set fill radial gradient start point x\n     * @name fillRadialGradientStartPointX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill radial gradient start point x\n     * var startPointX = shape.fillRadialGradientStartPointX();\n     *\n     * // set fill radial gradient start point x\n     * shape.fillRadialGradientStartPointX(20);\n     */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPointY',\n    0\n  );\n  /**\n     * get/set fill radial gradient start point y\n     * @name fillRadialGradientStartPointY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill radial gradient start point y\n     * var startPointY = shape.fillRadialGradientStartPointY();\n     *\n     * // set fill radial gradient start point y\n     * shape.fillRadialGradientStartPointY(20);\n     */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n     * get/set fill radial gradient end point\n     * @name fillRadialGradientEndPoint\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} endPoint\n     * @param {Number} endPoint.x\n     * @param {Number} endPoint.y\n     * @returns {Object}\n     * @example\n     * // get fill radial gradient end point\n     * var endPoint = shape.fillRadialGradientEndPoint();\n     *\n     * // set fill radial gradient end point\n     * shape.fillRadialGradientEndPoint({\n     *   x: 20\n     *   y: 10\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointX', 0);\n  /**\n     * get/set fill radial gradient end point x\n     * @name fillRadialGradientEndPointX\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get fill radial gradient end point x\n     * var endPointX = shape.fillRadialGradientEndPointX();\n     *\n     * // set fill radial gradient end point x\n     * shape.fillRadialGradientEndPointX(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointY', 0);\n  /**\n     * get/set fill radial gradient end point y\n     * @name fillRadialGradientEndPointY\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get fill radial gradient end point y\n     * var endPointY = shape.fillRadialGradientEndPointY();\n     *\n     * // set fill radial gradient end point y\n     * shape.fillRadialGradientEndPointY(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRotation', 0);\n\n  /**\n     * get/set fill pattern rotation in degrees\n     * @name fillPatternRotation\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Number} rotation\n     * @returns {Konva.Shape}\n     * @example\n     * // get fill pattern rotation\n     * var patternRotation = shape.fillPatternRotation();\n     *\n     * // set fill pattern rotation\n     * shape.fillPatternRotation(20);\n     */\n\n  Konva.Factory.backCompat(Konva.Shape, {\n    dashArray: 'dash',\n    getDashArray: 'getDash',\n    setDashArray: 'getDash',\n\n    drawFunc: 'sceneFunc',\n    getDrawFunc: 'getSceneFunc',\n    setDrawFunc: 'setSceneFunc',\n\n    drawHitFunc: 'hitFunc',\n    getDrawHitFunc: 'getHitFunc',\n    setDrawHitFunc: 'setHitFunc'\n  });\n\n  Konva.Collection.mapMethods(Konva.Shape);\n})(Konva);\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var STAGE = 'Stage',\n    STRING = 'string',\n    PX = 'px',\n    MOUSEOUT = 'mouseout',\n    MOUSELEAVE = 'mouseleave',\n    MOUSEOVER = 'mouseover',\n    MOUSEENTER = 'mouseenter',\n    MOUSEMOVE = 'mousemove',\n    MOUSEDOWN = 'mousedown',\n    MOUSEUP = 'mouseup',\n    CONTEXTMENU = 'contextmenu',\n    CLICK = 'click',\n    DBL_CLICK = 'dblclick',\n    TOUCHSTART = 'touchstart',\n    TOUCHEND = 'touchend',\n    TAP = 'tap',\n    DBL_TAP = 'dbltap',\n    TOUCHMOVE = 'touchmove',\n    WHEEL = 'wheel',\n    CONTENT_MOUSEOUT = 'contentMouseout',\n    CONTENT_MOUSEOVER = 'contentMouseover',\n    CONTENT_MOUSEMOVE = 'contentMousemove',\n    CONTENT_MOUSEDOWN = 'contentMousedown',\n    CONTENT_MOUSEUP = 'contentMouseup',\n    CONTENT_CONTEXTMENU = 'contentContextmenu',\n    CONTENT_CLICK = 'contentClick',\n    CONTENT_DBL_CLICK = 'contentDblclick',\n    CONTENT_TOUCHSTART = 'contentTouchstart',\n    CONTENT_TOUCHEND = 'contentTouchend',\n    CONTENT_DBL_TAP = 'contentDbltap',\n    CONTENT_TAP = 'contentTap',\n    CONTENT_TOUCHMOVE = 'contentTouchmove',\n    CONTENT_WHEEL = 'contentWheel',\n    DIV = 'div',\n    RELATIVE = 'relative',\n    KONVA_CONTENT = 'konvajs-content',\n    SPACE = ' ',\n    UNDERSCORE = '_',\n    CONTAINER = 'container',\n    EMPTY_STRING = '',\n    EVENTS = [\n      MOUSEDOWN,\n      MOUSEMOVE,\n      MOUSEUP,\n      MOUSEOUT,\n      TOUCHSTART,\n      TOUCHMOVE,\n      TOUCHEND,\n      MOUSEOVER,\n      WHEEL,\n      CONTEXTMENU\n    ],\n    // cached variables\n    eventsLength = EVENTS.length;\n\n  function addEvent(ctx, eventName) {\n    ctx.content.addEventListener(\n      eventName,\n      function(evt) {\n        ctx[UNDERSCORE + eventName](evt);\n      },\n      false\n    );\n  }\n\n  /**\n     * Stage constructor.  A stage is used to contain multiple layers\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Container\n     * @param {Object} config\n     * @param {String|Element} config.container Container selector or DOM element\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var stage = new Konva.Stage({\n         *   width: 500,\n         *   height: 800,\n         *   container: 'containerId' // or \"#containerId\" or \".containerClass\"\n         * });\n     */\n  Konva.Stage = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Stage, {\n    ___init: function(config) {\n      this.nodeType = STAGE;\n      // call super constructor\n      Konva.Container.call(this, config);\n      this._id = Konva.idCounter++;\n      this._buildDOM();\n      this._bindContentEvents();\n      this._enableNestedTransforms = false;\n      Konva.stages.push(this);\n    },\n    _validateAdd: function(child) {\n      if (child.getType() !== 'Layer') {\n        Konva.Util.throw('You may only add layers to the stage.');\n      }\n    },\n    /**\n         * set container dom element which contains the stage wrapper div element\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {DomElement} container can pass in a dom element or id string\n         */\n    setContainer: function(container) {\n      if (typeof container === STRING) {\n        if (container.charAt(0) === '.') {\n          var className = container.slice(1);\n          container = Konva.document.getElementsByClassName(className)[0];\n        } else {\n          var id;\n          if (container.charAt(0) !== '#') {\n            id = container;\n          } else {\n            id = container.slice(1);\n          }\n          container = Konva.document.getElementById(id);\n        }\n        if (!container) {\n          throw 'Can not find container in document with id ' + id;\n        }\n      }\n      this._setAttr(CONTAINER, container);\n      return this;\n    },\n    shouldDrawHit: function() {\n      return true;\n    },\n    draw: function() {\n      Konva.Node.prototype.draw.call(this);\n      return this;\n    },\n    /**\n         * draw layer scene graphs\n         * @name draw\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n\n    /**\n         * draw layer hit graphs\n         * @name drawHit\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n\n    /**\n         * set height\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {Number} height\n         */\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      this._resizeDOM();\n      return this;\n    },\n    /**\n         * set width\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {Number} width\n         */\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      this._resizeDOM();\n      return this;\n    },\n    /**\n         * clear all layers\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n    clear: function() {\n      var layers = this.children,\n        len = layers.length,\n        n;\n\n      for (n = 0; n < len; n++) {\n        layers[n].clear();\n      }\n      return this;\n    },\n    clone: function(obj) {\n      if (!obj) {\n        obj = {};\n      }\n      obj.container = Konva.document.createElement(DIV);\n      return Konva.Container.prototype.clone.call(this, obj);\n    },\n    /**\n         * destroy stage\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n    destroy: function() {\n      var content = this.content;\n      Konva.Container.prototype.destroy.call(this);\n\n      if (content && Konva.Util._isInDocument(content)) {\n        this.getContainer().removeChild(content);\n      }\n      var index = Konva.stages.indexOf(this);\n      if (index > -1) {\n        Konva.stages.splice(index, 1);\n      }\n      return this;\n    },\n    /**\n         * get pointer position which can be a touch position or mouse position\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @returns {Object}\n         */\n    getPointerPosition: function() {\n      return this.pointerPos;\n    },\n    getStage: function() {\n      return this;\n    },\n    /**\n         * get stage content div element which has the\n         *  the class name \"konvajs-content\"\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n    getContent: function() {\n      return this.content;\n    },\n    /**\n         * Creates a composite data URL\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {Object} config\n         * @param {Function} [config.callback] function executed when the composite has completed. Deprecated as method is sync now.\n         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n         *  \"image/png\" is the default\n         * @param {Number} [config.x] x position of canvas section\n         * @param {Number} [config.y] y position of canvas section\n         * @param {Number} [config.width] width of canvas section\n         * @param {Number} [config.height] height of canvas section\n         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n         *  is very high quality\n         */\n    toDataURL: function(config) {\n      config = config || {};\n\n      var mimeType = config.mimeType || null,\n        quality = config.quality || null,\n        x = config.x || 0,\n        y = config.y || 0,\n        canvas = new Konva.SceneCanvas({\n          width: config.width || this.getWidth(),\n          height: config.height || this.getHeight(),\n          pixelRatio: config.pixelRatio\n        }),\n        _context = canvas.getContext()._context,\n        layers = this.children;\n\n      if (x || y) {\n        _context.translate(-1 * x, -1 * y);\n      }\n\n      layers.each(function(layer) {\n        var width = layer.getCanvas().getWidth();\n        var height = layer.getCanvas().getHeight();\n        var ratio = layer.getCanvas().getPixelRatio();\n        _context.drawImage(\n          layer.getCanvas()._canvas,\n          0,\n          0,\n          width / ratio,\n          height / ratio\n        );\n      });\n      var src = canvas.toDataURL(mimeType, quality);\n\n      if (config.callback) {\n        config.callback(src);\n      }\n\n      return src;\n    },\n    /**\n         * converts stage into an image.\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {Object} config\n         * @param {Function} config.callback function executed when the composite has completed\n         * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n         *  \"image/png\" is the default\n         * @param {Number} [config.x] x position of canvas section\n         * @param {Number} [config.y] y position of canvas section\n         * @param {Number} [config.width] width of canvas section\n         * @param {Number} [config.height] height of canvas section\n         * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n         *  is very high quality\n         */\n    toImage: function(config) {\n      var cb = config.callback;\n\n      config.callback = function(dataUrl) {\n        Konva.Util._getImage(dataUrl, function(img) {\n          cb(img);\n        });\n      };\n      this.toDataURL(config);\n    },\n    /**\n         * get visible intersection shape. This is the preferred\n         *  method for determining if a point intersects a shape or not\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {Object} pos\n         * @param {Number} pos.x\n         * @param {Number} pos.y\n         * @param {String} [selector]\n         * @returns {Konva.Node}\n         * @example\n         * var shape = stage.getIntersection({x: 50, y: 50});\n         * // or if you interested in shape parent:\n         * var group = stage.getIntersection({x: 50, y: 50}, 'Group');\n         */\n    getIntersection: function(pos, selector) {\n      var layers = this.getChildren(),\n        len = layers.length,\n        end = len - 1,\n        n,\n        shape;\n\n      for (n = end; n >= 0; n--) {\n        shape = layers[n].getIntersection(pos, selector);\n        if (shape) {\n          return shape;\n        }\n      }\n\n      return null;\n    },\n    _resizeDOM: function() {\n      if (this.content) {\n        var width = this.getWidth(),\n          height = this.getHeight(),\n          layers = this.getChildren(),\n          len = layers.length,\n          n,\n          layer;\n\n        // set content dimensions\n        this.content.style.width = width + PX;\n        this.content.style.height = height + PX;\n\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n\n        // set layer dimensions\n        for (n = 0; n < len; n++) {\n          layer = layers[n];\n          layer.setSize(width, height);\n          layer.draw();\n        }\n      }\n    },\n    /**\n         * add layer or layers to stage\n         * @method\n         * @memberof Konva.Stage.prototype\n         * @param {...Konva.Layer} layer\n         * @example\n         * stage.add(layer1, layer2, layer3);\n         */\n    add: function(layer) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      Konva.Container.prototype.add.call(this, layer);\n      layer._setCanvasSize(this.width(), this.height());\n\n      // draw layer and append canvas to container\n      layer.draw();\n\n      if (Konva.isBrowser) {\n        this.content.appendChild(layer.canvas._canvas);\n      }\n\n      // chainable\n      return this;\n    },\n    getParent: function() {\n      return null;\n    },\n    getLayer: function() {\n      return null;\n    },\n    /**\n         * returns a {@link Konva.Collection} of layers\n         * @method\n         * @memberof Konva.Stage.prototype\n         */\n    getLayers: function() {\n      return this.getChildren();\n    },\n    _bindContentEvents: function() {\n      if (!Konva.isBrowser) {\n        return;\n      }\n      for (var n = 0; n < eventsLength; n++) {\n        addEvent(this, EVENTS[n]);\n      }\n    },\n    _mouseover: function(evt) {\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        this._fire(CONTENT_MOUSEOVER, { evt: evt });\n      }\n    },\n    _mouseout: function(evt) {\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var targetShape = this.targetShape;\n\n        if (targetShape && !Konva.isDragging()) {\n          targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n          targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n          this.targetShape = null;\n        }\n        this.pointerPos = undefined;\n\n        this._fire(CONTENT_MOUSEOUT, { evt: evt });\n      }\n    },\n    _mousemove: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchmove(evt);\n      }\n      // workaround fake mousemove event in chrome browser https://code.google.com/p/chromium/issues/detail?id=161464\n      if (\n        (typeof evt.movementX !== 'undefined' ||\n          typeof evt.movementY !== 'undefined') &&\n        evt.movementY === 0 &&\n        evt.movementX === 0\n      ) {\n        return null;\n      }\n      if (Konva.UA.mobile) {\n        return null;\n      }\n      this._setPointerPosition(evt);\n      var shape;\n\n      if (!Konva.isDragging()) {\n        shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n          if (\n            !Konva.isDragging() &&\n            (!this.targetShape || this.targetShape._id !== shape._id)\n          ) {\n            if (this.targetShape) {\n              this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt }, shape);\n              this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt }, shape);\n            }\n            shape._fireAndBubble(MOUSEOVER, { evt: evt }, this.targetShape);\n            shape._fireAndBubble(MOUSEENTER, { evt: evt }, this.targetShape);\n            this.targetShape = shape;\n          } else {\n            shape._fireAndBubble(MOUSEMOVE, { evt: evt });\n          }\n        } else {\n          /*\n                 * if no shape was detected, clear target shape and try\n                 * to run mouseout from previous target shape\n                 */\n          if (this.targetShape && !Konva.isDragging()) {\n            this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n            this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n            this.targetShape = null;\n          }\n        }\n\n        // content event\n        this._fire(CONTENT_MOUSEMOVE, { evt: evt });\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      if (evt.preventDefault) {\n        evt.preventDefault();\n      }\n    },\n    _mousedown: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchstart(evt);\n      }\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n\n        Konva.listenClickTap = true;\n\n        if (shape && shape.isListening()) {\n          this.clickStartShape = shape;\n          shape._fireAndBubble(MOUSEDOWN, { evt: evt });\n        }\n\n        // content event\n        this._fire(CONTENT_MOUSEDOWN, { evt: evt });\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      if (evt.preventDefault) {\n        evt.preventDefault();\n      }\n    },\n    _mouseup: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchend(evt);\n      }\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var shape = this.getIntersection(this.getPointerPosition()),\n          clickStartShape = this.clickStartShape,\n          clickEndShape = this.clickEndShape,\n          fireDblClick = false,\n          dd = Konva.DD;\n\n        if (Konva.inDblClickWindow) {\n          fireDblClick = true;\n          Konva.inDblClickWindow = false;\n        } else if (!dd || !dd.justDragged) {\n          // don't set inDblClickWindow after dragging\n          Konva.inDblClickWindow = true;\n        } else if (dd) {\n          dd.justDragged = false;\n        }\n\n        setTimeout(function() {\n          Konva.inDblClickWindow = false;\n        }, Konva.dblClickWindow);\n\n        if (shape && shape.isListening()) {\n          this.clickEndShape = shape;\n          shape._fireAndBubble(MOUSEUP, { evt: evt });\n\n          // detect if click or double click occurred\n          if (\n            Konva.listenClickTap &&\n            clickStartShape &&\n            clickStartShape._id === shape._id\n          ) {\n            shape._fireAndBubble(CLICK, { evt: evt });\n\n            if (\n              fireDblClick &&\n              clickEndShape &&\n              clickEndShape._id === shape._id\n            ) {\n              shape._fireAndBubble(DBL_CLICK, { evt: evt });\n            }\n          }\n        }\n        // content events\n        this._fire(CONTENT_MOUSEUP, { evt: evt });\n        if (Konva.listenClickTap) {\n          this._fire(CONTENT_CLICK, { evt: evt });\n          if (fireDblClick) {\n            this._fire(CONTENT_DBL_CLICK, { evt: evt });\n          }\n        }\n\n        Konva.listenClickTap = false;\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      if (evt.preventDefault) {\n        evt.preventDefault();\n      }\n    },\n    _contextmenu: function(evt) {\n      this._fire(CONTENT_CONTEXTMENU, { evt: evt });\n    },\n    _touchstart: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      Konva.listenClickTap = true;\n\n      if (shape && shape.isListening()) {\n        this.tapStartShape = shape;\n        shape._fireAndBubble(TOUCHSTART, { evt: evt });\n\n        // only call preventDefault if the shape is listening for events\n        if (\n          shape.isListening() &&\n          shape.preventDefault() &&\n          evt.preventDefault\n        ) {\n          evt.preventDefault();\n        }\n      }\n      // content event\n      this._fire(CONTENT_TOUCHSTART, { evt: evt });\n    },\n    _touchend: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition()),\n        fireDblClick = false;\n\n      if (Konva.inDblClickWindow) {\n        fireDblClick = true;\n        Konva.inDblClickWindow = false;\n      } else {\n        Konva.inDblClickWindow = true;\n      }\n\n      setTimeout(function() {\n        Konva.inDblClickWindow = false;\n      }, Konva.dblClickWindow);\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(TOUCHEND, { evt: evt });\n\n        // detect if tap or double tap occurred\n        if (\n          Konva.listenClickTap &&\n          this.tapStartShape &&\n          shape._id === this.tapStartShape._id\n        ) {\n          shape._fireAndBubble(TAP, { evt: evt });\n\n          if (fireDblClick) {\n            shape._fireAndBubble(DBL_TAP, { evt: evt });\n          }\n        }\n        // only call preventDefault if the shape is listening for events\n        if (\n          shape.isListening() &&\n          shape.preventDefault() &&\n          evt.preventDefault\n        ) {\n          evt.preventDefault();\n        }\n      }\n      // content events\n      this._fire(CONTENT_TOUCHEND, { evt: evt });\n      if (Konva.listenClickTap) {\n        this._fire(CONTENT_TAP, { evt: evt });\n        if (fireDblClick) {\n          this._fire(CONTENT_DBL_TAP, { evt: evt });\n        }\n      }\n\n      Konva.listenClickTap = false;\n    },\n    _touchmove: function(evt) {\n      this._setPointerPosition(evt);\n      var dd = Konva.DD,\n        shape;\n      if (!Konva.isDragging()) {\n        shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n          shape._fireAndBubble(TOUCHMOVE, { evt: evt });\n          // only call preventDefault if the shape is listening for events\n          if (\n            shape.isListening() &&\n            shape.preventDefault() &&\n            evt.preventDefault\n          ) {\n            evt.preventDefault();\n          }\n        }\n        this._fire(CONTENT_TOUCHMOVE, { evt: evt });\n      }\n      if (dd) {\n        if (Konva.isDragging() && Konva.DD.node.preventDefault()) {\n          evt.preventDefault();\n        }\n      }\n    },\n    _wheel: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(WHEEL, { evt: evt });\n      }\n      this._fire(CONTENT_WHEEL, { evt: evt });\n    },\n    _setPointerPosition: function(evt) {\n      var contentPosition = this._getContentPosition(),\n        x = null,\n        y = null;\n      evt = evt ? evt : window.event;\n\n      // touch events\n      if (evt.touches !== undefined) {\n        // currently, only handle one finger\n        if (evt.touches.length > 0) {\n          var touch = evt.touches[0];\n          // get the information for finger #1\n          x = touch.clientX - contentPosition.left;\n          y = touch.clientY - contentPosition.top;\n        }\n      } else {\n        // mouse events\n        x = evt.clientX - contentPosition.left;\n        y = evt.clientY - contentPosition.top;\n      }\n      if (x !== null && y !== null) {\n        this.pointerPos = {\n          x: x,\n          y: y\n        };\n      }\n    },\n    _getContentPosition: function() {\n      var rect = this.content.getBoundingClientRect\n        ? this.content.getBoundingClientRect()\n        : { top: 0, left: 0 };\n      return {\n        top: rect.top,\n        left: rect.left\n      };\n    },\n    _buildDOM: function() {\n      // the buffer canvas pixel ratio must be 1 because it is used as an\n      // intermediate canvas before copying the result onto a scene canvas.\n      // not setting it to 1 will result in an over compensation\n      this.bufferCanvas = new Konva.SceneCanvas();\n      this.bufferHitCanvas = new Konva.HitCanvas({ pixelRatio: 1 });\n\n      if (!Konva.isBrowser) {\n        return;\n      }\n      var container = this.getContainer();\n      if (!container) {\n        throw 'Stage has no container. A container is required.';\n      }\n      // clear content inside container\n      container.innerHTML = EMPTY_STRING;\n\n      // content\n      this.content = Konva.document.createElement(DIV);\n      this.content.style.position = RELATIVE;\n      this.content.className = KONVA_CONTENT;\n      this.content.setAttribute('role', 'presentation');\n\n      container.appendChild(this.content);\n\n      this._resizeDOM();\n    },\n    _onContent: function(typesStr, handler) {\n      var types = typesStr.split(SPACE),\n        len = types.length,\n        n,\n        baseEvent;\n\n      for (n = 0; n < len; n++) {\n        baseEvent = types[n];\n        this.content.addEventListener(baseEvent, handler, false);\n      }\n    },\n    // currently cache function is now working for stage, because stage has no its own canvas element\n    // TODO: may be it is better to cache all children layers?\n    cache: function() {\n      Konva.Util.warn(\n        'Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.'\n      );\n    },\n    clearCache: function() {}\n  });\n  Konva.Util.extend(Konva.Stage, Konva.Container);\n\n  // add getters and setters\n  Konva.Factory.addGetter(Konva.Stage, 'container');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Stage, 'container');\n\n  /**\n     * get container DOM element\n     * @name container\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @returns {DomElement} container\n     * @example\n     * // get container\n     * var container = stage.container();\n     * // set container\n     * var container = document.createElement('div');\n     * body.appendChild(container);\n     * stage.container(container);\n     */\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n     * BaseLayer constructor.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Container\n     * @param {Object} config\n     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n     * to clear the canvas before each layer draw.  The default value is true.\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     */\n  Konva.BaseLayer = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.BaseLayer, {\n    ___init: function(config) {\n      this.nodeType = 'Layer';\n      Konva.Container.call(this, config);\n    },\n    createPNGStream: function() {\n      return this.canvas._canvas.createPNGStream();\n    },\n    /**\n     * get layer canvas\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getCanvas: function() {\n      return this.canvas;\n    },\n    /**\n     * get layer hit canvas\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getHitCanvas: function() {\n      return this.hitCanvas;\n    },\n    /**\n     * get layer canvas context\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getContext: function() {\n      return this.getCanvas().getContext();\n    },\n    /**\n     * clear scene and hit canvas contexts tied to the layer\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @param {Object} [bounds]\n     * @param {Number} [bounds.x]\n     * @param {Number} [bounds.y]\n     * @param {Number} [bounds.width]\n     * @param {Number} [bounds.height]\n     * @example\n     * layer.clear();\n     * layer.clear({\n     *   x : 0,\n     *   y : 0,\n     *   width : 100,\n     *   height : 100\n     * });\n     */\n    clear: function(bounds) {\n      this.getContext().clear(bounds);\n      return this;\n    },\n    clearHitCache: function() {\n      this._hitImageData = undefined;\n    },\n    // extend Node.prototype.setZIndex\n    setZIndex: function(index) {\n      Konva.Node.prototype.setZIndex.call(this, index);\n      var stage = this.getStage();\n      if (stage) {\n        stage.content.removeChild(this.getCanvas()._canvas);\n\n        if (index < stage.getChildren().length - 1) {\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            stage.getChildren()[index + 1].getCanvas()._canvas\n          );\n        } else {\n          stage.content.appendChild(this.getCanvas()._canvas);\n        }\n      }\n      return this;\n    },\n    // extend Node.prototype.moveToTop\n    moveToTop: function() {\n      Konva.Node.prototype.moveToTop.call(this);\n      var stage = this.getStage();\n      if (stage) {\n        stage.content.removeChild(this.getCanvas()._canvas);\n        stage.content.appendChild(this.getCanvas()._canvas);\n      }\n      return this;\n    },\n    // extend Node.prototype.moveUp\n    moveUp: function() {\n      var moved = Konva.Node.prototype.moveUp.call(this);\n      if (!moved) {\n        return this;\n      }\n      var stage = this.getStage();\n      if (!stage) {\n        return this;\n      }\n      stage.content.removeChild(this.getCanvas()._canvas);\n\n      if (this.index < stage.getChildren().length - 1) {\n        stage.content.insertBefore(\n          this.getCanvas()._canvas,\n          stage.getChildren()[this.index + 1].getCanvas()._canvas\n        );\n      } else {\n        stage.content.appendChild(this.getCanvas()._canvas);\n      }\n      return this;\n    },\n    // extend Node.prototype.moveDown\n    moveDown: function() {\n      if (Konva.Node.prototype.moveDown.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.getChildren();\n          stage.content.removeChild(this.getCanvas()._canvas);\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            children[this.index + 1].getCanvas()._canvas\n          );\n        }\n      }\n      return this;\n    },\n    // extend Node.prototype.moveToBottom\n    moveToBottom: function() {\n      if (Konva.Node.prototype.moveToBottom.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.getChildren();\n          stage.content.removeChild(this.getCanvas()._canvas);\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            children[1].getCanvas()._canvas\n          );\n        }\n      }\n      return this;\n    },\n    getLayer: function() {\n      return this;\n    },\n    remove: function() {\n      var _canvas = this.getCanvas()._canvas;\n\n      Konva.Node.prototype.remove.call(this);\n\n      if (_canvas && _canvas.parentNode && Konva.Util._isInDocument(_canvas)) {\n        _canvas.parentNode.removeChild(_canvas);\n      }\n      return this;\n    },\n    getStage: function() {\n      return this.parent;\n    },\n    setSize: function(width, height) {\n      this.canvas.setSize(width, height);\n      return this;\n    },\n    /**\n     * get/set width of layer.getter return width of stage. setter doing nothing.\n     * if you want change width use `stage.width(value);`\n     * @name width\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @returns {Number}\n     * @example\n     * var width = layer.width();\n     */\n    getWidth: function() {\n      if (this.parent) {\n        return this.parent.getWidth();\n      }\n    },\n    setWidth: function() {\n      Konva.Util.warn(\n        'Can not change width of layer. Use \"stage.width(value)\" function instead.'\n      );\n    },\n    /**\n     * get/set height of layer.getter return height of stage. setter doing nothing.\n     * if you want change height use `stage.height(value);`\n     * @name height\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @returns {Number}\n     * @example\n     * var height = layer.height();\n     */\n    getHeight: function() {\n      if (this.parent) {\n        return this.parent.getHeight();\n      }\n    },\n    setHeight: function() {\n      Konva.Util.warn(\n        'Can not change height of layer. Use \"stage.height(value)\" function instead.'\n      );\n    },\n    // the apply transform method is handled by the Layer and FastLayer class\n    // because it is up to the layer to decide if an absolute or relative transform\n    // should be used\n    _applyTransform: function(shape, context, top) {\n      var m = shape.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n  });\n  Konva.Util.extend(Konva.BaseLayer, Konva.Container);\n\n  // add getters and setters\n  Konva.Factory.addGetterSetter(Konva.BaseLayer, 'clearBeforeDraw', true);\n  /**\n   * get/set clearBeforeDraw flag which determines if the layer is cleared or not\n   *  before drawing\n   * @name clearBeforeDraw\n   * @method\n   * @memberof Konva.BaseLayer.prototype\n   * @param {Boolean} clearBeforeDraw\n   * @returns {Boolean}\n   * @example\n   * // get clearBeforeDraw flag\n   * var clearBeforeDraw = layer.clearBeforeDraw();\n   *\n   * // disable clear before draw\n   * layer.clearBeforeDraw(false);\n   *\n   * // enable clear before draw\n   * layer.clearBeforeDraw(true);\n   */\n\n  Konva.Collection.mapMethods(Konva.BaseLayer);\n})(Konva);\n\n(function() {\n  'use strict';\n  // constants\n  var HASH = '#',\n    BEFORE_DRAW = 'beforeDraw',\n    DRAW = 'draw',\n    /*\n         * 2 - 3 - 4\n         * |       |\n         * 1 - 0   5\n         *         |\n         * 8 - 7 - 6\n         */\n    INTERSECTION_OFFSETS = [\n      { x: 0, y: 0 }, // 0\n      { x: -1, y: 0 }, // 1\n      { x: -1, y: -1 }, // 2\n      { x: 0, y: -1 }, // 3\n      { x: 1, y: -1 }, // 4\n      { x: 1, y: 0 }, // 5\n      { x: 1, y: 1 }, // 6\n      { x: 0, y: 1 }, // 7\n      { x: -1, y: 1 } // 8\n    ],\n    INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\n\n  /**\n     * Layer constructor.  Layers are tied to their own canvas element and are used\n     * to contain groups or shapes.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.BaseLayer\n     * @param {Object} config\n     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n     * to clear the canvas before each layer draw.  The default value is true.\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     * @example\n     * var layer = new Konva.Layer();\n     */\n  Konva.Layer = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Layer, {\n    ____init: function(config) {\n      this.nodeType = 'Layer';\n      this.canvas = new Konva.SceneCanvas();\n      this.hitCanvas = new Konva.HitCanvas({\n        pixelRatio: 1\n      });\n      // call super constructor\n      Konva.BaseLayer.call(this, config);\n    },\n    _setCanvasSize: function(width, height) {\n      this.canvas.setSize(width, height);\n      this.hitCanvas.setSize(width, height);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Konva.Util.throw('You may only add groups and shapes to a layer.');\n      }\n    },\n    /**\n         * get visible intersection shape. This is the preferred\n         * method for determining if a point intersects a shape or not\n         * also you may pass optional selector parametr to return ancestor of intersected shape\n         * @method\n         * @memberof Konva.Layer.prototype\n         * @param {Object} pos\n         * @param {Number} pos.x\n         * @param {Number} pos.y\n         * @param {String} [selector]\n         * @returns {Konva.Node}\n         * @example\n         * var shape = layer.getIntersection({x: 50, y: 50});\n         * // or if you interested in shape parent:\n         * var group = layer.getIntersection({x: 50, y: 50}, 'Group');\n         */\n    getIntersection: function(pos, selector) {\n      var obj, i, intersectionOffset, shape;\n\n      if (!this.hitGraphEnabled() || !this.isVisible()) {\n        return null;\n      }\n      // in some cases antialiased area may be bigger than 1px\n      // it is possible if we will cache node, then scale it a lot\n      // TODO: check { 0; 0 } point before loop, and remove it from INTERSECTION_OFFSETS.\n      var spiralSearchDistance = 1;\n      var continueSearch = false;\n      while (true) {\n        for (i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n          intersectionOffset = INTERSECTION_OFFSETS[i];\n          obj = this._getIntersection({\n            x: pos.x + intersectionOffset.x * spiralSearchDistance,\n            y: pos.y + intersectionOffset.y * spiralSearchDistance\n          });\n          shape = obj.shape;\n          if (shape && selector) {\n            return shape.findAncestor(selector, true);\n          } else if (shape) {\n            return shape;\n          }\n          // we should continue search if we found antialiased pixel\n          // that means our node somewhere very close\n          continueSearch = !!obj.antialiased;\n          // stop search if found empty pixel\n          if (!obj.antialiased) {\n            break;\n          }\n        }\n        // if no shape, and no antialiased pixel, we should end searching\n        if (continueSearch) {\n          spiralSearchDistance += 1;\n        } else {\n          return null;\n        }\n      }\n    },\n    _getImageData: function(x, y) {\n      var width = this.hitCanvas.width || 1,\n        height = this.hitCanvas.height || 1,\n        index = Math.round(y) * width + Math.round(x);\n\n      if (!this._hitImageData) {\n        this._hitImageData = this.hitCanvas.context.getImageData(\n          0,\n          0,\n          width,\n          height\n        );\n      }\n\n      return [\n        this._hitImageData.data[4 * index + 0], // Red\n        this._hitImageData.data[4 * index + 1], // Green\n        this._hitImageData.data[4 * index + 2], // Blue\n        this._hitImageData.data[4 * index + 3] // Alpha\n      ];\n    },\n    _getIntersection: function(pos) {\n      var ratio = this.hitCanvas.pixelRatio;\n      var p = this.hitCanvas.context.getImageData(\n        Math.round(pos.x * ratio),\n        Math.round(pos.y * ratio),\n        1,\n        1\n      ).data,\n        p3 = p[3],\n        colorKey,\n        shape;\n      // fully opaque pixel\n      if (p3 === 255) {\n        colorKey = Konva.Util._rgbToHex(p[0], p[1], p[2]);\n        shape = Konva.shapes[HASH + colorKey];\n        if (shape) {\n          return {\n            shape: shape\n          };\n        }\n        return {\n          antialiased: true\n        };\n      } else if (p3 > 0) {\n        // antialiased pixel\n        return {\n          antialiased: true\n        };\n      }\n      // empty pixel\n      return {};\n    },\n    drawScene: function(can, top) {\n      var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n\n      this._fire(BEFORE_DRAW, {\n        node: this\n      });\n\n      if (this.getClearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n\n      Konva.Container.prototype.drawScene.call(this, canvas, top);\n\n      this._fire(DRAW, {\n        node: this\n      });\n\n      return this;\n    },\n    drawHit: function(can, top) {\n      var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n\n      if (layer && layer.getClearBeforeDraw()) {\n        layer.getHitCanvas().getContext().clear();\n      }\n\n      Konva.Container.prototype.drawHit.call(this, canvas, top);\n      this.imageData = null; // Clear imageData cache\n      return this;\n    },\n    clear: function(bounds) {\n      Konva.BaseLayer.prototype.clear.call(this, bounds);\n      this.getHitCanvas().getContext().clear(bounds);\n      this.imageData = null; // Clear getImageData cache\n      return this;\n    },\n    // extend Node.prototype.setVisible\n    setVisible: function(visible) {\n      Konva.Node.prototype.setVisible.call(this, visible);\n      if (visible) {\n        this.getCanvas()._canvas.style.display = 'block';\n        this.hitCanvas._canvas.style.display = 'block';\n      } else {\n        this.getCanvas()._canvas.style.display = 'none';\n        this.hitCanvas._canvas.style.display = 'none';\n      }\n      return this;\n    },\n    /**\n         * enable hit graph\n         * @name enableHitGraph\n         * @method\n         * @memberof Konva.Layer.prototype\n         * @returns {Layer}\n         */\n    enableHitGraph: function() {\n      this.setHitGraphEnabled(true);\n      return this;\n    },\n    /**\n         * disable hit graph\n         * @name disableHitGraph\n         * @method\n         * @memberof Konva.Layer.prototype\n         * @returns {Layer}\n         */\n    disableHitGraph: function() {\n      this.setHitGraphEnabled(false);\n      return this;\n    },\n    setSize: function(width, height) {\n      Konva.BaseLayer.prototype.setSize.call(this, width, height);\n      this.hitCanvas.setSize(width, height);\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.Layer, Konva.BaseLayer);\n\n  Konva.Factory.addGetterSetter(Konva.Layer, 'hitGraphEnabled', true);\n  /**\n     * get/set hitGraphEnabled flag.  Disabling the hit graph will greatly increase\n     *  draw performance because the hit graph will not be redrawn each time the layer is\n     *  drawn.  This, however, also disables mouse/touch event detection\n     * @name hitGraphEnabled\n     * @method\n     * @memberof Konva.Layer.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get hitGraphEnabled flag\n     * var hitGraphEnabled = layer.hitGraphEnabled();\n     *\n     * // disable hit graph\n     * layer.hitGraphEnabled(false);\n     *\n     * // enable hit graph\n     * layer.hitGraphEnabled(true);\n     */\n  Konva.Collection.mapMethods(Konva.Layer);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * FastLayer constructor. Layers are tied to their own canvas element and are used\n     * to contain shapes only.  If you don't need node nesting, mouse and touch interactions,\n     * or event pub/sub, you should use FastLayer instead of Layer to create your layers.\n     * It renders about 2x faster than normal layers.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.BaseLayer\n     * @param {Object} config\n     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n     * to clear the canvas before each layer draw.  The default value is true.\n     * @param {Boolean} [config.visible]\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     * @example\n     * var layer = new Konva.FastLayer();\n     */\n  Konva.FastLayer = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Util.addMethods(Konva.FastLayer, {\n    ____init: function(config) {\n      this.nodeType = 'Layer';\n      this.canvas = new Konva.SceneCanvas();\n      // call super constructor\n      Konva.BaseLayer.call(this, config);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Shape') {\n        Konva.Util.throw('You may only add shapes to a fast layer.');\n      }\n    },\n    _setCanvasSize: function(width, height) {\n      this.canvas.setSize(width, height);\n    },\n    hitGraphEnabled: function() {\n      return false;\n    },\n    getIntersection: function() {\n      return null;\n    },\n    drawScene: function(can) {\n      var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n\n      if (this.getClearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n\n      Konva.Container.prototype.drawScene.call(this, canvas);\n\n      return this;\n    },\n    draw: function() {\n      this.drawScene();\n      return this;\n    },\n    // extend Node.prototype.setVisible\n    setVisible: function(visible) {\n      Konva.Node.prototype.setVisible.call(this, visible);\n      if (visible) {\n        this.getCanvas()._canvas.style.display = 'block';\n      } else {\n        this.getCanvas()._canvas.style.display = 'none';\n      }\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.FastLayer, Konva.BaseLayer);\n\n  Konva.Collection.mapMethods(Konva.FastLayer);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Group constructor.  Groups are used to contain shapes or other groups.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Container\n     * @param {Object} config\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     * @example\n     * var group = new Konva.Group();\n     */\n  Konva.Group = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Group, {\n    ___init: function(config) {\n      this.nodeType = 'Group';\n      // call super constructor\n      Konva.Container.call(this, config);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Konva.Util.throw('You may only add groups and shapes to groups.');\n      }\n    }\n  });\n  Konva.Util.extend(Konva.Group, Konva.Container);\n\n  Konva.Collection.mapMethods(Konva.Group);\n})();\n\n(function(Konva) {\n  'use strict';\n  var now = (function() {\n    if (Konva.global.performance && Konva.global.performance.now) {\n      return function() {\n        return Konva.global.performance.now();\n      };\n    }\n\n    return function() {\n      return new Date().getTime();\n    };\n  })();\n\n  function FRAF(callback) {\n    setTimeout(callback, 1000 / 60);\n  }\n\n  var RAF = (function() {\n    return (\n      Konva.global.requestAnimationFrame ||\n      Konva.global.webkitRequestAnimationFrame ||\n      Konva.global.mozRequestAnimationFrame ||\n      Konva.global.oRequestAnimationFrame ||\n      Konva.global.msRequestAnimationFrame ||\n      FRAF\n    );\n  })();\n\n  function requestAnimFrame() {\n    return RAF.apply(Konva.global, arguments);\n  }\n\n  /**\n     * Animation constructor.  A stage is used to contain multiple layers and handle\n     * @constructor\n     * @memberof Konva\n     * @param {Function} func function executed on each animation frame.  The function is passed a frame object, which contains\n     *  timeDiff, lastTime, time, and frameRate properties.  The timeDiff property is the number of milliseconds that have passed\n     *  since the last animation frame.  The lastTime property is time in milliseconds that elapsed from the moment the animation started\n     *  to the last animation frame.  The time property is the time in milliseconds that ellapsed from the moment the animation started\n     *  to the current animation frame.  The frameRate property is the current frame rate in frames / second. Return false from function,\n     *  if you don't need to redraw layer/layers on some frames.\n     * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn on each animation frame. Can be a layer, an array of layers, or null.\n     *  Not specifying a node will result in no redraw.\n     * @example\n     * // move a node to the right at 50 pixels / second\n     * var velocity = 50;\n     *\n     * var anim = new Konva.Animation(function(frame) {\n     *   var dist = velocity * (frame.timeDiff / 1000);\n     *   node.move(dist, 0);\n     * }, layer);\n     *\n     * anim.start();\n     */\n  Konva.Animation = function(func, layers) {\n    var Anim = Konva.Animation;\n    this.func = func;\n    this.setLayers(layers);\n    this.id = Anim.animIdCounter++;\n    this.frame = {\n      time: 0,\n      timeDiff: 0,\n      lastTime: now()\n    };\n  };\n  /*\n     * Animation methods\n     */\n  Konva.Animation.prototype = {\n    /**\n         * set layers to be redrawn on each animation frame\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn.&nbsp; Can be a layer, an array of layers, or null.  Not specifying a node will result in no redraw.\n         * @return {Konva.Animation} this\n         */\n    setLayers: function(layers) {\n      var lays = [];\n      // if passing in no layers\n      if (!layers) {\n        lays = [];\n      } else if (layers.length > 0) {\n        // if passing in an array of Layers\n        // NOTE: layers could be an array or Konva.Collection.  for simplicity, I'm just inspecting\n        // the length property to check for both cases\n        lays = layers;\n      } else {\n        // if passing in a Layer\n        lays = [layers];\n      }\n\n      this.layers = lays;\n      return this;\n    },\n    /**\n         * get layers\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Array} Array of Konva.Layer\n         */\n    getLayers: function() {\n      return this.layers;\n    },\n    /**\n         * add layer.  Returns true if the layer was added, and false if it was not\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @param {Konva.Layer} layer to add\n         * @return {Bool} true if layer is added to animation, otherwise false\n         */\n    addLayer: function(layer) {\n      var layers = this.layers, len = layers.length, n;\n\n      // don't add the layer if it already exists\n      for (n = 0; n < len; n++) {\n        if (layers[n]._id === layer._id) {\n          return false;\n        }\n      }\n\n      this.layers.push(layer);\n      return true;\n    },\n    /**\n         * determine if animation is running or not.  returns true or false\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Bool} is animation running?\n         */\n    isRunning: function() {\n      var a = Konva.Animation,\n        animations = a.animations,\n        len = animations.length,\n        n;\n\n      for (n = 0; n < len; n++) {\n        if (animations[n].id === this.id) {\n          return true;\n        }\n      }\n      return false;\n    },\n    /**\n         * start animation\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Konva.Animation} this\n         */\n    start: function() {\n      var Anim = Konva.Animation;\n      this.stop();\n      this.frame.timeDiff = 0;\n      this.frame.lastTime = now();\n      Anim._addAnimation(this);\n      return this;\n    },\n    /**\n         * stop animation\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Konva.Animation} this\n         */\n    stop: function() {\n      Konva.Animation._removeAnimation(this);\n      return this;\n    },\n    _updateFrameObject: function(time) {\n      this.frame.timeDiff = time - this.frame.lastTime;\n      this.frame.lastTime = time;\n      this.frame.time += this.frame.timeDiff;\n      this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n  };\n  Konva.Animation.animations = [];\n  Konva.Animation.animIdCounter = 0;\n  Konva.Animation.animRunning = false;\n\n  Konva.Animation._addAnimation = function(anim) {\n    this.animations.push(anim);\n    this._handleAnimation();\n  };\n  Konva.Animation._removeAnimation = function(anim) {\n    var id = anim.id, animations = this.animations, len = animations.length, n;\n\n    for (n = 0; n < len; n++) {\n      if (animations[n].id === id) {\n        this.animations.splice(n, 1);\n        break;\n      }\n    }\n  };\n\n  Konva.Animation._runFrames = function() {\n    var layerHash = {},\n      animations = this.animations,\n      anim,\n      layers,\n      func,\n      n,\n      i,\n      layersLen,\n      layer,\n      key,\n      needRedraw;\n    /*\n         * loop through all animations and execute animation\n         *  function.  if the animation object has specified node,\n         *  we can add the node to the nodes hash to eliminate\n         *  drawing the same node multiple times.  The node property\n         *  can be the stage itself or a layer\n         */\n    /*\n         * WARNING: don't cache animations.length because it could change while\n         * the for loop is running, causing a JS error\n         */\n\n    for (n = 0; n < animations.length; n++) {\n      anim = animations[n];\n      layers = anim.layers;\n      func = anim.func;\n\n      anim._updateFrameObject(now());\n      layersLen = layers.length;\n\n      // if animation object has a function, execute it\n      if (func) {\n        // allow anim bypassing drawing\n        needRedraw = func.call(anim, anim.frame) !== false;\n      } else {\n        needRedraw = true;\n      }\n      if (!needRedraw) {\n        continue;\n      }\n      for (i = 0; i < layersLen; i++) {\n        layer = layers[i];\n\n        if (layer._id !== undefined) {\n          layerHash[layer._id] = layer;\n        }\n      }\n    }\n\n    for (key in layerHash) {\n      if (!layerHash.hasOwnProperty(key)) {\n        continue;\n      }\n      layerHash[key].draw();\n    }\n  };\n  Konva.Animation._animationLoop = function() {\n    var Anim = Konva.Animation;\n    if (Anim.animations.length) {\n      Anim._runFrames();\n      requestAnimFrame(Anim._animationLoop);\n    } else {\n      Anim.animRunning = false;\n    }\n  };\n  Konva.Animation._handleAnimation = function() {\n    if (!this.animRunning) {\n      this.animRunning = true;\n      requestAnimFrame(this._animationLoop);\n    }\n  };\n\n  /**\n     * batch draw. this function will not do immediate draw\n     * but it will schedule drawing to next tick (requestAnimFrame)\n     * @method\n     * @return {Konva.Layer} this\n     * @memberof Konva.Base.prototype\n     */\n  Konva.BaseLayer.prototype.batchDraw = function() {\n    var that = this, Anim = Konva.Animation;\n\n    if (!this.batchAnim) {\n      this.batchAnim = new Anim(function() {\n        // stop animation after first tick\n        that.batchAnim.stop();\n      }, this);\n    }\n\n    if (!this.batchAnim.isRunning()) {\n      this.batchAnim.start();\n    }\n    return this;\n  };\n\n  /**\n     * batch draw\n     * @method\n     * @return {Konva.Stage} this\n     * @memberof Konva.Stage.prototype\n     */\n  Konva.Stage.prototype.batchDraw = function() {\n    this.getChildren().each(function(layer) {\n      layer.batchDraw();\n    });\n    return this;\n  };\n})(Konva);\n\n(function() {\n  'use strict';\n  var blacklist = {\n    node: 1,\n    duration: 1,\n    easing: 1,\n    onFinish: 1,\n    yoyo: 1\n  },\n    PAUSED = 1,\n    PLAYING = 2,\n    REVERSING = 3,\n    idCounter = 0,\n    colorAttrs = ['fill', 'stroke', 'shadowColor'];\n\n  var Tween = function(prop, propFunc, func, begin, finish, duration, yoyo) {\n    this.prop = prop;\n    this.propFunc = propFunc;\n    this.begin = begin;\n    this._pos = begin;\n    this.duration = duration;\n    this._change = 0;\n    this.prevPos = 0;\n    this.yoyo = yoyo;\n    this._time = 0;\n    this._position = 0;\n    this._startTime = 0;\n    this._finish = 0;\n    this.func = func;\n    this._change = finish - this.begin;\n    this.pause();\n  };\n  /*\n     * Tween methods\n     */\n  Tween.prototype = {\n    fire: function(str) {\n      var handler = this[str];\n      if (handler) {\n        handler();\n      }\n    },\n    setTime: function(t) {\n      if (t > this.duration) {\n        if (this.yoyo) {\n          this._time = this.duration;\n          this.reverse();\n        } else {\n          this.finish();\n        }\n      } else if (t < 0) {\n        if (this.yoyo) {\n          this._time = 0;\n          this.play();\n        } else {\n          this.reset();\n        }\n      } else {\n        this._time = t;\n        this.update();\n      }\n    },\n    getTime: function() {\n      return this._time;\n    },\n    setPosition: function(p) {\n      this.prevPos = this._pos;\n      this.propFunc(p);\n      this._pos = p;\n    },\n    getPosition: function(t) {\n      if (t === undefined) {\n        t = this._time;\n      }\n      return this.func(t, this.begin, this._change, this.duration);\n    },\n    play: function() {\n      this.state = PLAYING;\n      this._startTime = this.getTimer() - this._time;\n      this.onEnterFrame();\n      this.fire('onPlay');\n    },\n    reverse: function() {\n      this.state = REVERSING;\n      this._time = this.duration - this._time;\n      this._startTime = this.getTimer() - this._time;\n      this.onEnterFrame();\n      this.fire('onReverse');\n    },\n    seek: function(t) {\n      this.pause();\n      this._time = t;\n      this.update();\n      this.fire('onSeek');\n    },\n    reset: function() {\n      this.pause();\n      this._time = 0;\n      this.update();\n      this.fire('onReset');\n    },\n    finish: function() {\n      this.pause();\n      this._time = this.duration;\n      this.update();\n      this.fire('onFinish');\n    },\n    update: function() {\n      this.setPosition(this.getPosition(this._time));\n    },\n    onEnterFrame: function() {\n      var t = this.getTimer() - this._startTime;\n      if (this.state === PLAYING) {\n        this.setTime(t);\n      } else if (this.state === REVERSING) {\n        this.setTime(this.duration - t);\n      }\n    },\n    pause: function() {\n      this.state = PAUSED;\n      this.fire('onPause');\n    },\n    getTimer: function() {\n      return new Date().getTime();\n    }\n  };\n\n  /**\n     * Tween constructor.  Tweens enable you to animate a node between the current state and a new state.\n     *  You can play, pause, reverse, seek, reset, and finish tweens.  By default, tweens are animated using\n     *  a linear easing.  For more tweening options, check out {@link Konva.Easings}\n     * @constructor\n     * @memberof Konva\n     * @example\n     * // instantiate new tween which fully rotates a node in 1 second\n     * var tween = new Konva.Tween({\n     *   node: node,\n     *   rotationDeg: 360,\n     *   duration: 1,\n     *   easing: Konva.Easings.EaseInOut\n     * });\n     *\n     * // play tween\n     * tween.play();\n     *\n     * // pause tween\n     * tween.pause();\n     */\n  Konva.Tween = function(config) {\n    var that = this,\n      node = config.node,\n      nodeId = node._id,\n      duration,\n      easing = config.easing || Konva.Easings.Linear,\n      yoyo = !!config.yoyo,\n      key;\n\n    if (typeof config.duration === 'undefined') {\n      duration = 1;\n    } else if (config.duration === 0) {\n      // zero is bad value for duration\n      duration = 0.001;\n    } else {\n      duration = config.duration;\n    }\n    this.node = node;\n    this._id = idCounter++;\n\n    var layers =\n      node.getLayer() ||\n      (node instanceof Konva.Stage ? node.getLayers() : null);\n    if (!layers) {\n      Konva.Util.error(\n        'Tween constructor have `node` that is not in a layer. Please add node into layer first.'\n      );\n    }\n    this.anim = new Konva.Animation(function() {\n      that.tween.onEnterFrame();\n    }, layers);\n\n    this.tween = new Tween(\n      key,\n      function(i) {\n        that._tweenFunc(i);\n      },\n      easing,\n      0,\n      1,\n      duration * 1000,\n      yoyo\n    );\n\n    this._addListeners();\n\n    // init attrs map\n    if (!Konva.Tween.attrs[nodeId]) {\n      Konva.Tween.attrs[nodeId] = {};\n    }\n    if (!Konva.Tween.attrs[nodeId][this._id]) {\n      Konva.Tween.attrs[nodeId][this._id] = {};\n    }\n    // init tweens map\n    if (!Konva.Tween.tweens[nodeId]) {\n      Konva.Tween.tweens[nodeId] = {};\n    }\n\n    for (key in config) {\n      if (blacklist[key] === undefined) {\n        this._addAttr(key, config[key]);\n      }\n    }\n\n    this.reset();\n\n    // callbacks\n    this.onFinish = config.onFinish;\n    this.onReset = config.onReset;\n  };\n\n  // start/diff object = attrs.nodeId.tweenId.attr\n  Konva.Tween.attrs = {};\n  // tweenId = tweens.nodeId.attr\n  Konva.Tween.tweens = {};\n\n  Konva.Tween.prototype = {\n    _addAttr: function(key, end) {\n      var node = this.node,\n        nodeId = node._id,\n        start,\n        diff,\n        tweenId,\n        n,\n        len,\n        trueEnd,\n        trueStart;\n\n      // remove conflict from tween map if it exists\n      tweenId = Konva.Tween.tweens[nodeId][key];\n\n      if (tweenId) {\n        delete Konva.Tween.attrs[nodeId][tweenId][key];\n      }\n\n      // add to tween map\n      start = node.getAttr(key);\n\n      if (Konva.Util._isArray(end)) {\n        diff = [];\n        len = Math.max(end.length, start.length);\n\n        if (key === 'points' && end.length !== start.length) {\n          // before tweening points we need to make sure that start.length === end.length\n          // Konva.Util._prepareArrayForTween thinking that end.length > start.length\n\n          if (end.length > start.length) {\n            // so in this case we will increase number of starting points\n            trueStart = start;\n            start = Konva.Util._prepareArrayForTween(start, end, node.closed());\n          } else {\n            // in this case we will increase number of eding points\n            trueEnd = end;\n            end = Konva.Util._prepareArrayForTween(end, start, node.closed());\n          }\n        }\n\n        for (n = 0; n < len; n++) {\n          diff.push(end[n] - start[n]);\n        }\n      } else if (colorAttrs.indexOf(key) !== -1) {\n        start = Konva.Util.colorToRGBA(start);\n        var endRGBA = Konva.Util.colorToRGBA(end);\n        diff = {\n          r: endRGBA.r - start.r,\n          g: endRGBA.g - start.g,\n          b: endRGBA.b - start.b,\n          a: endRGBA.a - start.a\n        };\n      } else {\n        diff = end - start;\n      }\n\n      Konva.Tween.attrs[nodeId][this._id][key] = {\n        start: start,\n        diff: diff,\n        end: end,\n        trueEnd: trueEnd,\n        trueStart: trueStart\n      };\n      Konva.Tween.tweens[nodeId][key] = this._id;\n    },\n    _tweenFunc: function(i) {\n      var node = this.node,\n        attrs = Konva.Tween.attrs[node._id][this._id],\n        key,\n        attr,\n        start,\n        diff,\n        newVal,\n        n,\n        len,\n        end;\n\n      for (key in attrs) {\n        attr = attrs[key];\n        start = attr.start;\n        diff = attr.diff;\n        end = attr.end;\n\n        if (Konva.Util._isArray(start)) {\n          newVal = [];\n          len = Math.max(start.length, end.length);\n          for (n = 0; n < len; n++) {\n            newVal.push((start[n] || 0) + diff[n] * i);\n          }\n        } else if (colorAttrs.indexOf(key) !== -1) {\n          newVal =\n            'rgba(' +\n            Math.round(start.r + diff.r * i) +\n            ',' +\n            Math.round(start.g + diff.g * i) +\n            ',' +\n            Math.round(start.b + diff.b * i) +\n            ',' +\n            (start.a + diff.a * i) +\n            ')';\n        } else {\n          newVal = start + diff * i;\n        }\n\n        node.setAttr(key, newVal);\n      }\n    },\n    _addListeners: function() {\n      var that = this;\n\n      // start listeners\n      this.tween.onPlay = function() {\n        that.anim.start();\n      };\n      this.tween.onReverse = function() {\n        that.anim.start();\n      };\n\n      // stop listeners\n      this.tween.onPause = function() {\n        that.anim.stop();\n      };\n      this.tween.onFinish = function() {\n        var node = that.node;\n\n        // after tweening  points of line we need to set original end\n        var attrs = Konva.Tween.attrs[node._id][that._id];\n        if (attrs.points && attrs.points.trueEnd) {\n          node.points(attrs.points.trueEnd);\n        }\n\n        if (that.onFinish) {\n          that.onFinish.call(that);\n        }\n      };\n      this.tween.onReset = function() {\n        var node = that.node;\n        // after tweening  points of line we need to set original start\n        var attrs = Konva.Tween.attrs[node._id][that._id];\n        if (attrs.points && attrs.points.trueStart) {\n          node.points(attrs.points.trueStart);\n        }\n\n        if (that.onReset) {\n          that.onReset();\n        }\n      };\n    },\n    /**\n         * play\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n    play: function() {\n      this.tween.play();\n      return this;\n    },\n    /**\n         * reverse\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n    reverse: function() {\n      this.tween.reverse();\n      return this;\n    },\n    /**\n         * reset\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n    reset: function() {\n      this.tween.reset();\n      return this;\n    },\n    /**\n         * seek\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @param {Integer} t time in seconds between 0 and the duration\n         * @returns {Tween}\n         */\n    seek: function(t) {\n      this.tween.seek(t * 1000);\n      return this;\n    },\n    /**\n         * pause\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n    pause: function() {\n      this.tween.pause();\n      return this;\n    },\n    /**\n         * finish\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n    finish: function() {\n      this.tween.finish();\n      return this;\n    },\n    /**\n         * destroy\n         * @method\n         * @memberof Konva.Tween.prototype\n         */\n    destroy: function() {\n      var nodeId = this.node._id,\n        thisId = this._id,\n        attrs = Konva.Tween.tweens[nodeId],\n        key;\n\n      this.pause();\n\n      for (key in attrs) {\n        delete Konva.Tween.tweens[nodeId][key];\n      }\n\n      delete Konva.Tween.attrs[nodeId][thisId];\n    }\n  };\n\n  /**\n     * Tween node properties. Shorter usage of {@link Konva.Tween} object.\n     *\n     * @method Konva.Node#to\n     * @memberof Konva.Node\n     * @param {Object} [params] tween params\n     * @example\n     *\n     * circle.to({\n     *  x : 50,\n     *  duration : 0.5\n     * });\n     */\n  Konva.Node.prototype.to = function(params) {\n    var onFinish = params.onFinish;\n    params.node = this;\n    params.onFinish = function() {\n      this.destroy();\n      if (onFinish) {\n        onFinish();\n      }\n    };\n    var tween = new Konva.Tween(params);\n    tween.play();\n  };\n\n  /*\n    * These eases were ported from an Adobe Flash tweening library to JavaScript\n    * by Xaric\n    */\n\n  /**\n     * @namespace Easings\n     * @memberof Konva\n     */\n  Konva.Easings = {\n    /**\n        * back ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n    BackEaseIn: function(t, b, c, d) {\n      var s = 1.70158;\n      return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    /**\n        * back ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n    BackEaseOut: function(t, b, c, d) {\n      var s = 1.70158;\n      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    /**\n        * back ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n    BackEaseInOut: function(t, b, c, d) {\n      var s = 1.70158;\n      if ((t /= d / 2) < 1) {\n        return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n      }\n      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    },\n    /**\n        * elastic ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n    ElasticEaseIn: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d) === 1) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * 0.3;\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      return (\n        -(a *\n          Math.pow(2, 10 * (t -= 1)) *\n          Math.sin((t * d - s) * (2 * Math.PI) / p)) + b\n      );\n    },\n    /**\n        * elastic ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n    ElasticEaseOut: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d) === 1) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * 0.3;\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      return (\n        a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) +\n        c +\n        b\n      );\n    },\n    /**\n        * elastic ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n    ElasticEaseInOut: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d / 2) === 2) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * (0.3 * 1.5);\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      if (t < 1) {\n        return (\n          -0.5 *\n            (a *\n              Math.pow(2, 10 * (t -= 1)) *\n              Math.sin((t * d - s) * (2 * Math.PI) / p)) +\n          b\n        );\n      }\n      return (\n        a *\n          Math.pow(2, -10 * (t -= 1)) *\n          Math.sin((t * d - s) * (2 * Math.PI) / p) *\n          0.5 +\n        c +\n        b\n      );\n    },\n    /**\n        * bounce ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n    BounceEaseOut: function(t, b, c, d) {\n      if ((t /= d) < 1 / 2.75) {\n        return c * (7.5625 * t * t) + b;\n      } else if (t < 2 / 2.75) {\n        return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n      } else if (t < 2.5 / 2.75) {\n        return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n      } else {\n        return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n      }\n    },\n    /**\n        * bounce ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n    BounceEaseIn: function(t, b, c, d) {\n      return c - Konva.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n    },\n    /**\n        * bounce ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n    BounceEaseInOut: function(t, b, c, d) {\n      if (t < d / 2) {\n        return Konva.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n      } else {\n        return (\n          Konva.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b\n        );\n      }\n    },\n    /**\n        * ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n    EaseIn: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n    /**\n        * ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n    EaseOut: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n    /**\n        * ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n    EaseInOut: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * (--t * (t - 2) - 1) + b;\n    },\n    /**\n        * strong ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n    StrongEaseIn: function(t, b, c, d) {\n      return c * (t /= d) * t * t * t * t + b;\n    },\n    /**\n        * strong ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n    StrongEaseOut: function(t, b, c, d) {\n      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    /**\n        * strong ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n    StrongEaseInOut: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t * t * t * t + b;\n      }\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    },\n    /**\n        * linear\n        * @function\n        * @memberof Konva.Easings\n        */\n    Linear: function(t, b, c, d) {\n      return c * t / d + b;\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  Konva.DD = {\n    // properties\n    anim: new Konva.Animation(function() {\n      var b = this.dirty;\n      this.dirty = false;\n      return b;\n    }),\n    isDragging: false,\n    justDragged: false,\n    offset: {\n      x: 0,\n      y: 0\n    },\n    node: null,\n\n    // methods\n    _drag: function(evt) {\n      var dd = Konva.DD,\n        node = dd.node;\n      if (node) {\n        if (!dd.isDragging) {\n          var pos = node.getStage().getPointerPosition();\n          // it is possible that pos is undefined\n          // reattach it\n          if (!pos) {\n            node.getStage()._setPointerPosition(evt);\n            pos = node.getStage().getPointerPosition();\n          }\n          var dragDistance = node.dragDistance();\n          var distance = Math.max(\n            Math.abs(pos.x - dd.startPointerPos.x),\n            Math.abs(pos.y - dd.startPointerPos.y)\n          );\n          if (distance < dragDistance) {\n            return;\n          }\n        }\n\n        node.getStage()._setPointerPosition(evt);\n        node._setDragPosition(evt);\n        if (!dd.isDragging) {\n          dd.isDragging = true;\n          node.fire(\n            'dragstart',\n            {\n              type: 'dragstart',\n              target: node,\n              evt: evt\n            },\n            true\n          );\n        }\n\n        // execute ondragmove if defined\n        node.fire(\n          'dragmove',\n          {\n            type: 'dragmove',\n            target: node,\n            evt: evt\n          },\n          true\n        );\n      }\n    },\n    _endDragBefore: function(evt) {\n      var dd = Konva.DD,\n        node = dd.node,\n        layer;\n\n      if (node) {\n        layer = node.getLayer();\n        dd.anim.stop();\n\n        // only fire dragend event if the drag and drop\n        // operation actually started.\n        if (dd.isDragging) {\n          dd.isDragging = false;\n          dd.justDragged = true;\n          Konva.listenClickTap = false;\n\n          if (evt) {\n            evt.dragEndNode = node;\n          }\n        }\n\n        delete dd.node;\n\n        if (node.getLayer() || layer || node instanceof Konva.Stage) {\n          (layer || node).draw();\n        }\n      }\n    },\n    _endDragAfter: function(evt) {\n      evt = evt || {};\n      var dragEndNode = evt.dragEndNode;\n\n      if (evt && dragEndNode) {\n        dragEndNode.fire(\n          'dragend',\n          {\n            type: 'dragend',\n            target: dragEndNode,\n            evt: evt\n          },\n          true\n        );\n      }\n    }\n  };\n\n  // Node extenders\n\n  /**\n     * initiate drag and drop\n     * @method\n     * @memberof Konva.Node.prototype\n     */\n  Konva.Node.prototype.startDrag = function() {\n    var dd = Konva.DD,\n      stage = this.getStage(),\n      layer = this.getLayer(),\n      pos = stage.getPointerPosition(),\n      ap = this.getAbsolutePosition();\n\n    if (pos) {\n      if (dd.node) {\n        dd.node.stopDrag();\n      }\n\n      dd.node = this;\n      dd.startPointerPos = pos;\n      dd.offset.x = pos.x - ap.x;\n      dd.offset.y = pos.y - ap.y;\n      dd.anim.setLayers(layer || this.getLayers());\n      dd.anim.start();\n\n      this._setDragPosition();\n    }\n  };\n\n  Konva.Node.prototype._setDragPosition = function(evt) {\n    var dd = Konva.DD,\n      pos = this.getStage().getPointerPosition(),\n      dbf = this.getDragBoundFunc();\n    if (!pos) {\n      return;\n    }\n    var newNodePos = {\n      x: pos.x - dd.offset.x,\n      y: pos.y - dd.offset.y\n    };\n\n    if (dbf !== undefined) {\n      newNodePos = dbf.call(this, newNodePos, evt);\n    }\n    this.setAbsolutePosition(newNodePos);\n\n    if (\n      !this._lastPos ||\n      this._lastPos.x !== newNodePos.x ||\n      this._lastPos.y !== newNodePos.y\n    ) {\n      dd.anim.dirty = true;\n    }\n\n    this._lastPos = newNodePos;\n  };\n\n  /**\n     * stop drag and drop\n     * @method\n     * @memberof Konva.Node.prototype\n     */\n  Konva.Node.prototype.stopDrag = function() {\n    var dd = Konva.DD,\n      evt = {};\n    dd._endDragBefore(evt);\n    dd._endDragAfter(evt);\n  };\n\n  Konva.Node.prototype.setDraggable = function(draggable) {\n    this._setAttr('draggable', draggable);\n    this._dragChange();\n  };\n\n  var origRemove = Konva.Node.prototype.remove;\n\n  Konva.Node.prototype.__originalRemove = origRemove;\n  Konva.Node.prototype.remove = function() {\n    var dd = Konva.DD;\n\n    // stop DD\n    if (dd.node && dd.node._id === this._id) {\n      this.stopDrag();\n    }\n\n    origRemove.call(this);\n  };\n\n  /**\n     * determine if node is currently in drag and drop mode\n     * @method\n     * @memberof Konva.Node.prototype\n     */\n  Konva.Node.prototype.isDragging = function() {\n    var dd = Konva.DD;\n    return !!(dd.node && dd.node._id === this._id && dd.isDragging);\n  };\n\n  Konva.Node.prototype._listenDrag = function() {\n    var that = this;\n\n    this._dragCleanup();\n\n    if (this.getClassName() === 'Stage') {\n      this.on('contentMousedown.konva contentTouchstart.konva', function(evt) {\n        if (!Konva.DD.node) {\n          that.startDrag(evt);\n        }\n      });\n    } else {\n      this.on('mousedown.konva touchstart.konva', function(evt) {\n        // ignore right and middle buttons\n        if (evt.evt.button === 1 || evt.evt.button === 2) {\n          return;\n        }\n        if (!Konva.DD.node) {\n          that.startDrag(evt);\n        }\n      });\n    }\n\n    // listening is required for drag and drop\n    /*\n        this._listeningEnabled = true;\n        this._clearSelfAndAncestorCache('listeningEnabled');\n        */\n  };\n\n  Konva.Node.prototype._dragChange = function() {\n    if (this.attrs.draggable) {\n      this._listenDrag();\n    } else {\n      // remove event listeners\n      this._dragCleanup();\n\n      /*\n             * force drag and drop to end\n             * if this node is currently in\n             * drag and drop mode\n             */\n      var stage = this.getStage();\n      var dd = Konva.DD;\n      if (stage && dd.node && dd.node._id === this._id) {\n        dd.node.stopDrag();\n      }\n    }\n  };\n\n  Konva.Node.prototype._dragCleanup = function() {\n    if (this.getClassName() === 'Stage') {\n      this.off('contentMousedown.konva');\n      this.off('contentTouchstart.konva');\n    } else {\n      this.off('mousedown.konva');\n      this.off('touchstart.konva');\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'dragBoundFunc');\n\n  /**\n     * get/set drag bound function.  This is used to override the default\n     *  drag and drop position\n     * @name dragBoundFunc\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Function} dragBoundFunc\n     * @returns {Function}\n     * @example\n     * // get drag bound function\n     * var dragBoundFunc = node.dragBoundFunc();\n     *\n     * // create vertical drag and drop\n     * node.dragBoundFunc(function(pos){\n     *   return {\n     *     x: this.getAbsolutePosition().x,\n     *     y: pos.y\n     *   };\n     * });\n     */\n\n  Konva.Factory.addGetter(Konva.Node, 'draggable', false);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'draggable');\n\n  /**\n     * get/set draggable flag\n     * @name draggable\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Boolean} draggable\n     * @returns {Boolean}\n     * @example\n     * // get draggable flag\n     * var draggable = node.draggable();\n     *\n     * // enable drag and drop\n     * node.draggable(true);\n     *\n     * // disable drag and drop\n     * node.draggable(false);\n     */\n\n  if (Konva.isBrowser) {\n    var html = Konva.document.documentElement;\n    html.addEventListener('mouseup', Konva.DD._endDragBefore, true);\n    html.addEventListener('touchend', Konva.DD._endDragBefore, true);\n\n    html.addEventListener('mousemove', Konva.DD._drag);\n    html.addEventListener('touchmove', Konva.DD._drag);\n\n    html.addEventListener('mouseup', Konva.DD._endDragAfter, false);\n    html.addEventListener('touchend', Konva.DD._endDragAfter, false);\n  }\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Rect constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} [config.cornerRadius]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var rect = new Konva.Rect({\n     *   width: 100,\n     *   height: 50,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 5\n     * });\n     */\n  Konva.Rect = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Rect.prototype = {\n    ___init: function(config) {\n      Konva.Shape.call(this, config);\n      this.className = 'Rect';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var cornerRadius = this.getCornerRadius(),\n        width = this.getWidth(),\n        height = this.getHeight();\n\n      context.beginPath();\n\n      if (!cornerRadius) {\n        // simple rect - don't bother doing all that complicated maths stuff.\n        context.rect(0, 0, width, height);\n      } else {\n        // arcTo would be nicer, but browser support is patchy (Opera)\n        cornerRadius = Math.min(cornerRadius, width / 2, height / 2);\n        context.moveTo(cornerRadius, 0);\n        context.lineTo(width - cornerRadius, 0);\n        context.arc(\n          width - cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI * 3 / 2,\n          0,\n          false\n        );\n        context.lineTo(width, height - cornerRadius);\n        context.arc(\n          width - cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          0,\n          Math.PI / 2,\n          false\n        );\n        context.lineTo(cornerRadius, height);\n        context.arc(\n          cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          Math.PI / 2,\n          Math.PI,\n          false\n        );\n        context.lineTo(0, cornerRadius);\n        context.arc(\n          cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI,\n          Math.PI * 3 / 2,\n          false\n        );\n      }\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n  };\n\n  Konva.Util.extend(Konva.Rect, Konva.Shape);\n\n  Konva.Factory.addGetterSetter(Konva.Rect, 'cornerRadius', 0);\n  /**\n     * get/set corner radius\n     * @name cornerRadius\n     * @method\n     * @memberof Konva.Rect.prototype\n     * @param {Number} cornerRadius\n     * @returns {Number}\n     * @example\n     * // get corner radius\n     * var cornerRadius = rect.cornerRadius();\n     *\n     * // set corner radius\n     * rect.cornerRadius(10);\n     */\n\n  Konva.Collection.mapMethods(Konva.Rect);\n})();\n\n(function(Konva) {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001, CIRCLE = 'Circle';\n\n  /**\n     * Circle constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.radius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // create circle\n     * var circle = new Konva.Circle({\n     *   radius: 40,\n     *   fill: 'red',\n     *   stroke: 'black'\n     *   strokeWidth: 5\n     * });\n     */\n  Konva.Circle = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Circle.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = CIRCLE;\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(0, 0, this.getRadius(), 0, PIx2, false);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Circle, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Circle, 'radius', 0);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Circle, 'radius');\n\n  /**\n     * get/set radius\n     * @name radius\n     * @method\n     * @memberof Konva.Circle.prototype\n     * @param {Number} radius\n     * @returns {Number}\n     * @example\n     * // get radius\n     * var radius = circle.radius();\n     *\n     * // set radius\n     * circle.radius(10);\n     */\n\n  Konva.Collection.mapMethods(Konva.Circle);\n})(Konva);\n\n(function() {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001, ELLIPSE = 'Ellipse';\n\n  /**\n     * Ellipse constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Object} config.radius defines x and y radius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var ellipse = new Konva.Ellipse({\n     *   radius : {\n     *     x : 50,\n     *     y : 50\n     *   },\n     *   fill: 'red'\n     * });\n     */\n  Konva.Ellipse = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Ellipse.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = ELLIPSE;\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var rx = this.getRadiusX(), ry = this.getRadiusY();\n\n      context.beginPath();\n      context.save();\n      if (rx !== ry) {\n        context.scale(1, ry / rx);\n      }\n      context.arc(0, 0, rx, 0, PIx2, false);\n      context.restore();\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadiusX() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadiusY() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      this.setRadius({\n        x: width / 2\n      });\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      this.setRadius({\n        y: height / 2\n      });\n    }\n  };\n  Konva.Util.extend(Konva.Ellipse, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addComponentsGetterSetter(Konva.Ellipse, 'radius', ['x', 'y']);\n\n  /**\n     * get/set radius\n     * @name radius\n     * @method\n     * @memberof Konva.Ellipse.prototype\n     * @param {Object} radius\n     * @param {Number} radius.x\n     * @param {Number} radius.y\n     * @returns {Object}\n     * @example\n     * // get radius\n     * var radius = ellipse.radius();\n     *\n     * // set radius\n     * ellipse.radius({\n     *   x: 200,\n     *   y: 100\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusX', 0);\n  /**\n     * get/set radius x\n     * @name radiusX\n     * @method\n     * @memberof Konva.Ellipse.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get radius x\n     * var radiusX = ellipse.radiusX();\n     *\n     * // set radius x\n     * ellipse.radiusX(200);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusY', 0);\n  /**\n     * get/set radius y\n     * @name radiusY\n     * @method\n     * @memberof Konva.Ellipse.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get radius y\n     * var radiusY = ellipse.radiusY();\n     *\n     * // set radius y\n     * ellipse.radiusY(200);\n     */\n\n  Konva.Collection.mapMethods(Konva.Ellipse);\n})();\n\n(function() {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001;\n  /**\n     * Ring constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.innerRadius\n     * @param {Number} config.outerRadius\n     * @param {Boolean} [config.clockwise]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var ring = new Konva.Ring({\n     *   innerRadius: 40,\n     *   outerRadius: 80,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 5\n     * });\n     */\n  Konva.Ring = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Ring.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Ring';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(0, 0, this.getInnerRadius(), 0, PIx2, false);\n      context.moveTo(this.getOuterRadius(), 0);\n      context.arc(0, 0, this.getOuterRadius(), PIx2, 0, true);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.outerRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.outerRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    },\n    setOuterRadius: function(val) {\n      this._setAttr('outerRadius', val);\n      this.setWidth(val * 2);\n      this.setHeight(val * 2);\n    }\n  };\n  Konva.Util.extend(Konva.Ring, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Ring, 'innerRadius', 0);\n\n  /**\n     * get/set innerRadius\n     * @name innerRadius\n     * @method\n     * @memberof Konva.Ring.prototype\n     * @param {Number} innerRadius\n     * @returns {Number}\n     * @example\n     * // get inner radius\n     * var innerRadius = ring.innerRadius();\n     *\n     * // set inner radius\n     * ring.innerRadius(20);\n     */\n  Konva.Factory.addGetter(Konva.Ring, 'outerRadius', 0);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Ring, 'outerRadius');\n\n  /**\n     * get/set outerRadius\n     * @name outerRadius\n     * @method\n     * @memberof Konva.Ring.prototype\n     * @param {Number} outerRadius\n     * @returns {Number}\n     * @example\n     * // get outer radius\n     * var outerRadius = ring.outerRadius();\n     *\n     * // set outer radius\n     * ring.outerRadius(20);\n     */\n\n  Konva.Collection.mapMethods(Konva.Ring);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Wedge constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.angle in degrees\n     * @param {Number} config.radius\n     * @param {Boolean} [config.clockwise]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // draw a wedge that's pointing downwards\n     * var wedge = new Konva.Wedge({\n     *   radius: 40,\n     *   fill: 'red',\n     *   stroke: 'black'\n     *   strokeWidth: 5,\n     *   angleDeg: 60,\n     *   rotationDeg: -120\n     * });\n     */\n  Konva.Wedge = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Wedge.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Wedge';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(\n        0,\n        0,\n        this.getRadius(),\n        0,\n        Konva.getAngle(this.getAngle()),\n        this.getClockwise()\n      );\n      context.lineTo(0, 0);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Wedge, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Wedge, 'radius', 0);\n\n  /**\n     * get/set radius\n     * @name radius\n     * @method\n     * @memberof Konva.Wedge.prototype\n     * @param {Number} radius\n     * @returns {Number}\n     * @example\n     * // get radius\n     * var radius = wedge.radius();\n     *\n     * // set radius\n     * wedge.radius(10);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Wedge, 'angle', 0);\n\n  /**\n     * get/set angle in degrees\n     * @name angle\n     * @method\n     * @memberof Konva.Wedge.prototype\n     * @param {Number} angle\n     * @returns {Number}\n     * @example\n     * // get angle\n     * var angle = wedge.angle();\n     *\n     * // set angle\n     * wedge.angle(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Wedge, 'clockwise', false);\n\n  /**\n     * get/set clockwise flag\n     * @name clockwise\n     * @method\n     * @memberof Konva.Wedge.prototype\n     * @param {Number} clockwise\n     * @returns {Number}\n     * @example\n     * // get clockwise flag\n     * var clockwise = wedge.clockwise();\n     *\n     * // draw wedge counter-clockwise\n     * wedge.clockwise(false);\n     *\n     * // draw wedge clockwise\n     * wedge.clockwise(true);\n     */\n\n  Konva.Factory.backCompat(Konva.Wedge, {\n    angleDeg: 'angle',\n    getAngleDeg: 'getAngle',\n    setAngleDeg: 'setAngle'\n  });\n\n  Konva.Collection.mapMethods(Konva.Wedge);\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n     * Arc constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.angle in degrees\n     * @param {Number} config.innerRadius\n     * @param {Number} config.outerRadius\n     * @param {Boolean} [config.clockwise]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // draw a Arc that's pointing downwards\n     * var arc = new Konva.Arc({\n     *   innerRadius: 40,\n     *   outerRadius: 80,\n     *   fill: 'red',\n     *   stroke: 'black'\n     *   strokeWidth: 5,\n     *   angle: 60,\n     *   rotationDeg: -120\n     * });\n     */\n  Konva.Arc = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Arc.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Arc';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var angle = Konva.getAngle(this.angle()), clockwise = this.clockwise();\n\n      context.beginPath();\n      context.arc(0, 0, this.getOuterRadius(), 0, angle, clockwise);\n      context.arc(0, 0, this.getInnerRadius(), angle, 0, !clockwise);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.getOuterRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.getOuterRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Arc, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Arc, 'innerRadius', 0);\n\n  /**\n     * get/set innerRadius\n     * @name innerRadius\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Number} innerRadius\n     * @returns {Number}\n     * @example\n     * // get inner radius\n     * var innerRadius = arc.innerRadius();\n     *\n     * // set inner radius\n     * arc.innerRadius(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Arc, 'outerRadius', 0);\n\n  /**\n     * get/set outerRadius\n     * @name outerRadius\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Number} outerRadius\n     * @returns {Number}\n     * @example\n     * // get outer radius\n     * var outerRadius = arc.outerRadius();\n     *\n     * // set outer radius\n     * arc.outerRadius(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Arc, 'angle', 0);\n\n  /**\n     * get/set angle in degrees\n     * @name angle\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Number} angle\n     * @returns {Number}\n     * @example\n     * // get angle\n     * var angle = arc.angle();\n     *\n     * // set angle\n     * arc.angle(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Arc, 'clockwise', false);\n\n  /**\n     * get/set clockwise flag\n     * @name clockwise\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Boolean} clockwise\n     * @returns {Boolean}\n     * @example\n     * // get clockwise flag\n     * var clockwise = arc.clockwise();\n     *\n     * // draw arc counter-clockwise\n     * arc.clockwise(false);\n     *\n     * // draw arc clockwise\n     * arc.clockwise(true);\n     */\n\n  Konva.Collection.mapMethods(Konva.Arc);\n})(Konva);\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var IMAGE = 'Image';\n\n  /**\n     * Image constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Image} config.image\n     * @param {Object} [config.crop]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var imageObj = new Image();\n     * imageObj.onload = function() {\n     *   var image = new Konva.Image({\n     *     x: 200,\n     *     y: 50,\n     *     image: imageObj,\n     *     width: 100,\n     *     height: 100\n     *   });\n     * };\n     * imageObj.src = '/path/to/image.jpg'\n     */\n  Konva.Image = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Image.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = IMAGE;\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _useBufferCanvas: function() {\n      return (\n        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&\n        this.hasStroke() &&\n        this.getStage()\n      );\n    },\n    _sceneFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight(),\n        image = this.getImage(),\n        cropWidth,\n        cropHeight,\n        params;\n\n      if (image) {\n        cropWidth = this.getCropWidth();\n        cropHeight = this.getCropHeight();\n        if (cropWidth && cropHeight) {\n          params = [\n            image,\n            this.getCropX(),\n            this.getCropY(),\n            cropWidth,\n            cropHeight,\n            0,\n            0,\n            width,\n            height\n          ];\n        } else {\n          params = [image, 0, 0, width, height];\n        }\n      }\n\n      if (this.hasFill() || this.hasStroke()) {\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n      }\n\n      if (image) {\n        context.drawImage.apply(context, params);\n      }\n    },\n    _hitFunc: function(context) {\n      var width = this.getWidth(), height = this.getHeight();\n\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getWidth: function() {\n      var image = this.getImage();\n      return this.attrs.width || (image ? image.width : 0);\n    },\n    getHeight: function() {\n      var image = this.getImage();\n      return this.attrs.height || (image ? image.height : 0);\n    }\n  };\n  Konva.Util.extend(Konva.Image, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Image, 'image');\n\n  /**\n     * set image\n     * @name setImage\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Image} image\n     */\n\n  /**\n     * get image\n     * @name getImage\n     * @method\n     * @memberof Konva.Image.prototype\n     * @returns {Image}\n     */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Image, 'crop', [\n    'x',\n    'y',\n    'width',\n    'height'\n  ]);\n  /**\n     * get/set crop\n     * @method\n     * @name crop\n     * @memberof Konva.Image.prototype\n     * @param {Object} crop\n     * @param {Number} crop.x\n     * @param {Number} crop.y\n     * @param {Number} crop.width\n     * @param {Number} crop.height\n     * @returns {Object}\n     * @example\n     * // get crop\n     * var crop = image.crop();\n     *\n     * // set crop\n     * image.crop({\n     *   x: 20,\n     *   y: 20,\n     *   width: 20,\n     *   height: 20\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Image, 'cropX', 0);\n  /**\n     * get/set crop x\n     * @method\n     * @name cropX\n     * @memberof Konva.Image.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get crop x\n     * var cropX = image.cropX();\n     *\n     * // set crop x\n     * image.cropX(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Image, 'cropY', 0);\n  /**\n     * get/set crop y\n     * @name cropY\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get crop y\n     * var cropY = image.cropY();\n     *\n     * // set crop y\n     * image.cropY(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Image, 'cropWidth', 0);\n  /**\n     * get/set crop width\n     * @name cropWidth\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Number} width\n     * @returns {Number}\n     * @example\n     * // get crop width\n     * var cropWidth = image.cropWidth();\n     *\n     * // set crop width\n     * image.cropWidth(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Image, 'cropHeight', 0);\n  /**\n     * get/set crop height\n     * @name cropHeight\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Number} height\n     * @returns {Number}\n     * @example\n     * // get crop height\n     * var cropHeight = image.cropHeight();\n     *\n     * // set crop height\n     * image.cropHeight(20);\n     */\n\n  Konva.Collection.mapMethods(Konva.Image);\n\n  /**\n     * load image from given url and create `Konva.Image` instance\n     * @method\n     * @memberof Konva.Image\n     * @param {String} url image source\n     * @param {Function} callback with Konva.Image instance as first argument\n     * @example\n     *  Konva.Image.fromURL(imageURL, function(image){\n     *    // image is Konva.Image instance\n     *    layer.add(image);\n     *    layer.draw();\n     *  });\n     */\n  Konva.Image.fromURL = function(url, callback) {\n    var img = new Image();\n    img.onload = function() {\n      var image = new Konva.Image({\n        image: img\n      });\n      callback(image);\n    };\n    img.src = url;\n  };\n})();\n\n/*eslint-disable max-depth */\n(function() {\n  'use strict';\n  // var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  // constants\n  var AUTO = 'auto',\n    //CANVAS = 'canvas',\n    CENTER = 'center',\n    JUSTIFY = 'justify',\n    CHANGE_KONVA = 'Change.konva',\n    CONTEXT_2D = '2d',\n    DASH = '-',\n    EMPTY_STRING = '',\n    LEFT = 'left',\n    TEXT = 'text',\n    TEXT_UPPER = 'Text',\n    MIDDLE = 'middle',\n    NORMAL = 'normal',\n    PX_SPACE = 'px ',\n    SPACE = ' ',\n    RIGHT = 'right',\n    WORD = 'word',\n    CHAR = 'char',\n    NONE = 'none',\n    ATTR_CHANGE_LIST = [\n      'fontFamily',\n      'fontSize',\n      'fontStyle',\n      'fontVariant',\n      'padding',\n      'align',\n      'lineHeight',\n      'text',\n      'width',\n      'height',\n      'wrap',\n      'letterSpacing'\n    ],\n    // cached variables\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\n  var dummyContext;\n  function getDummyContext() {\n    if (dummyContext) {\n      return dummyContext;\n    }\n    dummyContext = Konva.Util.createCanvasElement().getContext(CONTEXT_2D);\n    return dummyContext;\n  }\n\n  /**\n     * Text constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {String} [config.fontFamily] default is Arial\n     * @param {Number} [config.fontSize] in pixels.  Default is 12\n     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n     * @param {String} config.text\n     * @param {String} [config.align] can be left, center, or right\n     * @param {Number} [config.padding]\n     * @param {Number} [config.lineHeight] default is 1\n     * @param {String} [config.wrap] can be word, char, or none. Default is word\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var text = new Konva.Text({\n     *   x: 10,\n     *   y: 15,\n     *   text: 'Simple Text',\n     *   fontSize: 30,\n     *   fontFamily: 'Calibri',\n     *   fill: 'green'\n     * });\n     */\n  Konva.Text = function(config) {\n    this.___init(config);\n  };\n  function _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n  }\n  function _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n  }\n\n  Konva.Text.prototype = {\n    ___init: function(config) {\n      config = config || {};\n\n      // set default color to black\n      if (\n        !config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops\n      ) {\n        config.fill = config.fill || 'black';\n      }\n      //\n      // if (config.width === undefined) {\n      //     config.width = AUTO;\n      // }\n      // if (config.height === undefined) {\n      //     config.height = AUTO;\n      // }\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this.className = TEXT_UPPER;\n\n      // update text data for certain attr changes\n      for (var n = 0; n < attrChangeListLen; n++) {\n        this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n      }\n\n      this._setTextData();\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      var p = this.getPadding(),\n        textHeight = this.getTextHeight(),\n        lineHeightPx = this.getLineHeight() * textHeight,\n        textArr = this.textArr,\n        textArrLen = textArr.length,\n        align = this.getAlign(),\n        totalWidth = this.getWidth(),\n        letterSpacing = this.getLetterSpacing(),\n        textDecoration = this.textDecoration(),\n        fill = this.fill(),\n        fontSize = this.fontSize(),\n        n;\n\n      context.setAttr('font', this._getContextFont());\n\n      context.setAttr('textBaseline', MIDDLE);\n      context.setAttr('textAlign', LEFT);\n      context.save();\n      if (p) {\n        context.translate(p, 0);\n        context.translate(0, p + textHeight / 2);\n      } else {\n        context.translate(0, textHeight / 2);\n      }\n\n      // draw text lines\n      for (n = 0; n < textArrLen; n++) {\n        var obj = textArr[n],\n          text = obj.text,\n          width = obj.width;\n\n        // horizontal alignment\n        context.save();\n        if (align === RIGHT) {\n          context.translate(totalWidth - width - p * 2, 0);\n        } else if (align === CENTER) {\n          context.translate((totalWidth - width - p * 2) / 2, 0);\n        }\n\n        if (textDecoration.indexOf('underline') !== -1) {\n          context.save();\n          context.beginPath();\n          context.moveTo(0, Math.round(lineHeightPx / 2));\n          context.lineTo(Math.round(width), Math.round(lineHeightPx / 2));\n          // TODO: I have no idea what is real ratio\n          // just /20 looks good enough\n          context.lineWidth = fontSize / 15;\n          context.strokeStyle = fill;\n          context.stroke();\n          context.restore();\n        }\n        if (textDecoration.indexOf('line-through') !== -1) {\n          context.save();\n          context.beginPath();\n          context.moveTo(0, 0);\n          context.lineTo(Math.round(width), 0);\n          context.lineWidth = fontSize / 15;\n          context.strokeStyle = fill;\n          context.stroke();\n          context.restore();\n        }\n        if (letterSpacing !== 0 || align === JUSTIFY) {\n          //   var words = text.split(' ');\n          var spacesNumber = text.split(' ').length - 1;\n          for (var li = 0; li < text.length; li++) {\n            var letter = text[li];\n            // skip justify for the last line\n            if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {\n              context.translate(\n                Math.floor((totalWidth - width) / spacesNumber),\n                0\n              );\n            }\n            this.partialText = letter;\n            context.fillStrokeShape(this);\n            context.translate(\n              Math.round(this._getTextSize(letter).width) + letterSpacing,\n              0\n            );\n          }\n        } else {\n          this.partialText = text;\n\n          context.fillStrokeShape(this);\n        }\n        context.restore();\n        context.translate(0, lineHeightPx);\n      }\n      context.restore();\n    },\n    _hitFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight();\n\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // _useBufferCanvas: function(caching) {\n    //     var useIt = Konva.Shape.prototype._useBufferCanvas.call(this, caching);\n    //     if (useIt) {\n    //       return true;\n    //     }\n    //     return false;\n    //     // return isFirefox && this.hasFill() && this.hasShadow();\n    // },\n    setText: function(text) {\n      var str = Konva.Util._isString(text) ? text : (text || '').toString();\n      this._setAttr(TEXT, str);\n      return this;\n    },\n    /**\n         * get width of text area, which includes padding\n         * @method\n         * @memberof Konva.Text.prototype\n         * @returns {Number}\n         */\n    getWidth: function() {\n      var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n      return isAuto\n        ? this.getTextWidth() + this.getPadding() * 2\n        : this.attrs.width;\n    },\n    /**\n         * get the height of the text area, which takes into account multi-line text, line heights, and padding\n         * @method\n         * @memberof Konva.Text.prototype\n         * @returns {Number}\n         */\n    getHeight: function() {\n      var isAuto =\n        this.attrs.height === AUTO || this.attrs.height === undefined;\n      return isAuto\n        ? this.getTextHeight() * this.textArr.length * this.getLineHeight() +\n          this.getPadding() * 2\n        : this.attrs.height;\n    },\n    /**\n         * get text width\n         * @method\n         * @memberof Konva.Text.prototype\n         * @returns {Number}\n         */\n    getTextWidth: function() {\n      return this.textWidth;\n    },\n    /**\n         * get text height\n         * @method\n         * @memberof Konva.Text.prototype\n         * @returns {Number}\n         */\n    getTextHeight: function() {\n      return this.textHeight;\n    },\n    _getTextSize: function(text) {\n      var _context = getDummyContext(),\n        fontSize = this.getFontSize(),\n        metrics;\n\n      _context.save();\n      _context.font = this._getContextFont();\n\n      metrics = _context.measureText(text);\n      _context.restore();\n      return {\n        width: metrics.width,\n        height: parseInt(fontSize, 10)\n      };\n    },\n    _getContextFont: function() {\n      // IE don't want to work with usual font style\n      // bold was not working\n      // removing font variant will solve\n      // fix for: https://github.com/konvajs/konva/issues/94\n      if (Konva.UA.isIE) {\n        return (\n          this.getFontStyle() +\n          SPACE +\n          this.getFontSize() +\n          PX_SPACE +\n          this.getFontFamily()\n        );\n      }\n      return (\n        this.getFontStyle() +\n        SPACE +\n        this.getFontVariant() +\n        SPACE +\n        this.getFontSize() +\n        PX_SPACE +\n        this.getFontFamily()\n      );\n    },\n    _addTextLine: function(line) {\n      if (this.align() === JUSTIFY) {\n        line = line.trim();\n      }\n      var width = this._getTextWidth(line);\n      return this.textArr.push({ text: line, width: width });\n    },\n    _getTextWidth: function(text) {\n      var latterSpacing = this.getLetterSpacing();\n      var length = text.length;\n      return (\n        getDummyContext().measureText(text).width +\n        (length ? latterSpacing * (length - 1) : 0)\n      );\n    },\n    _setTextData: function() {\n      var lines = this.getText().split('\\n'),\n        fontSize = +this.getFontSize(),\n        textWidth = 0,\n        lineHeightPx = this.getLineHeight() * fontSize,\n        width = this.attrs.width,\n        height = this.attrs.height,\n        fixedWidth = width !== AUTO,\n        fixedHeight = height !== AUTO,\n        padding = this.getPadding(),\n        maxWidth = width - padding * 2,\n        maxHeightPx = height - padding * 2,\n        currentHeightPx = 0,\n        wrap = this.getWrap(),\n        shouldWrap = wrap !== NONE,\n        wrapAtWord = wrap !== CHAR && shouldWrap;\n\n      this.textArr = [];\n      getDummyContext().save();\n      getDummyContext().font = this._getContextFont();\n      for (var i = 0, max = lines.length; i < max; ++i) {\n        var line = lines[i];\n\n        var lineWidth = this._getTextWidth(line);\n        if (fixedWidth && lineWidth > maxWidth) {\n          /*\n                     * if width is fixed and line does not fit entirely\n                     * break the line into multiple fitting lines\n                     */\n          while (line.length > 0) {\n            /*\n                         * use binary search to find the longest substring that\n                         * that would fit in the specified width\n                         */\n            var low = 0,\n              high = line.length,\n              match = '',\n              matchWidth = 0;\n            while (low < high) {\n              var mid = (low + high) >>> 1,\n                substr = line.slice(0, mid + 1),\n                substrWidth = this._getTextWidth(substr);\n              if (substrWidth <= maxWidth) {\n                low = mid + 1;\n                match = substr;\n                matchWidth = substrWidth;\n              } else {\n                high = mid;\n              }\n            }\n            /*\n                         * 'low' is now the index of the substring end\n                         * 'match' is the substring\n                         * 'matchWidth' is the substring width in px\n                         */\n            if (match) {\n              // a fitting substring was found\n              if (wrapAtWord) {\n                // try to find a space or dash where wrapping could be done\n                var wrapIndex =\n                  Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\n                  1;\n                if (wrapIndex > 0) {\n                  // re-cut the substring found at the space/dash position\n                  low = wrapIndex;\n                  match = match.slice(0, low);\n                  matchWidth = this._getTextWidth(match);\n                }\n              }\n              this._addTextLine(match);\n              textWidth = Math.max(textWidth, matchWidth);\n              currentHeightPx += lineHeightPx;\n              if (\n                !shouldWrap ||\n                (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)\n              ) {\n                /*\n                                 * stop wrapping if wrapping is disabled or if adding\n                                 * one more line would overflow the fixed height\n                                 */\n                break;\n              }\n              line = line.slice(low);\n              if (line.length > 0) {\n                // Check if the remaining text would fit on one line\n                lineWidth = this._getTextWidth(line);\n                if (lineWidth <= maxWidth) {\n                  // if it does, add the line and break out of the loop\n                  this._addTextLine(line);\n                  currentHeightPx += lineHeightPx;\n                  textWidth = Math.max(textWidth, lineWidth);\n                  break;\n                }\n              }\n            } else {\n              // not even one character could fit in the element, abort\n              break;\n            }\n          }\n        } else {\n          // element width is automatically adjusted to max line width\n          this._addTextLine(line);\n          currentHeightPx += lineHeightPx;\n          textWidth = Math.max(textWidth, lineWidth);\n        }\n        // if element height is fixed, abort if adding one more line would overflow\n        if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n          break;\n        }\n      }\n      getDummyContext().restore();\n      this.textHeight = fontSize;\n      // var maxTextWidth = 0;\n      // for(var j = 0; j < this.textArr.length; j++) {\n      //     maxTextWidth = Math.max(maxTextWidth, this.textArr[j].width);\n      // }\n      this.textWidth = textWidth;\n    }\n  };\n  Konva.Util.extend(Konva.Text, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontFamily', 'Arial');\n\n  /**\n     * get/set font family\n     * @name fontFamily\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} fontFamily\n     * @returns {String}\n     * @example\n     * // get font family\n     * var fontFamily = text.fontFamily();\n     *\n     * // set font family\n     * text.fontFamily('Arial');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontSize', 12);\n\n  /**\n     * get/set font size in pixels\n     * @name fontSize\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {Number} fontSize\n     * @returns {Number}\n     * @example\n     * // get font size\n     * var fontSize = text.fontSize();\n     *\n     * // set font size to 22px\n     * text.fontSize(22);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontStyle', NORMAL);\n\n  /**\n     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n     * @name fontStyle\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} fontStyle\n     * @returns {String}\n     * @example\n     * // get font style\n     * var fontStyle = text.fontStyle();\n     *\n     * // set font style\n     * text.fontStyle('bold');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontVariant', NORMAL);\n\n  /**\n     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n     * @name fontVariant\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} fontVariant\n     * @returns {String}\n     * @example\n     * // get font variant\n     * var fontVariant = text.fontVariant();\n     *\n     * // set font variant\n     * text.fontVariant('small-caps');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'padding', 0);\n\n  /**\n     * set padding\n     * @name padding\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {Number} padding\n     * @returns {Number}\n     * @example\n     * // get padding\n     * var padding = text.padding();\n     *\n     * // set padding to 10 pixels\n     * text.padding(10);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'align', LEFT);\n\n  /**\n     * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'\n     * @name align\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} align\n     * @returns {String}\n     * @example\n     * // get text align\n     * var align = text.align();\n     *\n     * // center text\n     * text.align('center');\n     *\n     * // align text to right\n     * text.align('right');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'lineHeight', 1);\n\n  /**\n     * get/set line height.  The default is 1.\n     * @name lineHeight\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {Number} lineHeight\n     * @returns {Number}\n     * @example\n     * // get line height\n     * var lineHeight = text.lineHeight();\n     *\n     * // set the line height\n     * text.lineHeight(2);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'wrap', WORD);\n\n  /**\n     * get/set wrap.  Can be word, char, or none. Default is word.\n     * @name wrap\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} wrap\n     * @returns {String}\n     * @example\n     * // get wrap\n     * var wrap = text.wrap();\n     *\n     * // set wrap\n     * text.wrap('word');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'letterSpacing', 0);\n\n  /**\n       * set letter spacing property. Default value is 0.\n       * @name letterSpacing\n       * @method\n       * @memberof Konva.TextPath.prototype\n       * @param {Number} letterSpacing\n       */\n\n  Konva.Factory.addGetter(Konva.Text, 'text', EMPTY_STRING);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Text, 'text');\n\n  /**\n     * get/set text\n     * @name getText\n     * @method\n     * @memberof Konva.Text.prototype\n     * @param {String} text\n     * @returns {String}\n     * @example\n     * // get text\n     * var text = text.text();\n     *\n     * // set text\n     * text.text('Hello world!');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'textDecoration', EMPTY_STRING);\n\n  /**\n      * get/set text decoration of a text.  Possible values are 'underline', 'line-through' or combination of these values separated by space\n      * @name textDecoration\n      * @method\n      * @memberof Konva.Text.prototype\n      * @param {String} textDecoration\n      * @returns {String}\n      * @example\n      * // get text decoration\n      * var textDecoration = text.textDecoration();\n      *\n      * // underline text\n      * text.textDecoration('underline');\n      *\n      * // strike text\n      * text.textDecoration('line-through');\n      *\n      * // underline and strike text\n      * text.textDecoration('underline line-through');\n      */\n\n  Konva.Collection.mapMethods(Konva.Text);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Line constructor.&nbsp; Lines are defined by an array of points and\n     *  a tension\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Array} config.points\n     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n     *   The default is 0\n     * @param {Boolean} [config.closed] defines whether or not the line shape is closed, creating a polygon or blob\n     * @param {Boolean} [config.bezier] if no tension is provided but bezier=true, we draw the line as a bezier using the passed points\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var line = new Konva.Line({\n     *   x: 100,\n     *   y: 50,\n     *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n     *   stroke: 'red',\n     *   tension: 1\n     * });\n     */\n  Konva.Line = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Line.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Line';\n\n      this.on(\n        'pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva',\n        function() {\n          this._clearCache('tensionPoints');\n        }\n      );\n\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var points = this.getPoints(),\n        length = points.length,\n        tension = this.getTension(),\n        closed = this.getClosed(),\n        bezier = this.getBezier(),\n        tp,\n        len,\n        n;\n\n      if (!length) {\n        return;\n      }\n\n      context.beginPath();\n      context.moveTo(points[0], points[1]);\n\n      // tension\n      if (tension !== 0 && length > 4) {\n        tp = this.getTensionPoints();\n        len = tp.length;\n        n = closed ? 0 : 4;\n\n        if (!closed) {\n          context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n        }\n\n        while (n < len - 2) {\n          context.bezierCurveTo(\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++]\n          );\n        }\n\n        if (!closed) {\n          context.quadraticCurveTo(\n            tp[len - 2],\n            tp[len - 1],\n            points[length - 2],\n            points[length - 1]\n          );\n        }\n      } else if (bezier) {\n        // no tension but bezier\n        n = 2;\n\n        while (n < length) {\n          context.bezierCurveTo(\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++]\n          );\n        }\n      } else {\n        // no tension\n        for (n = 2; n < length; n += 2) {\n          context.lineTo(points[n], points[n + 1]);\n        }\n      }\n\n      // closed e.g. polygons and blobs\n      if (closed) {\n        context.closePath();\n        context.fillStrokeShape(this);\n      } else {\n        // open e.g. lines and splines\n        context.strokeShape(this);\n      }\n    },\n    getTensionPoints: function() {\n      return this._getCache('tensionPoints', this._getTensionPoints);\n    },\n    _getTensionPoints: function() {\n      if (this.getClosed()) {\n        return this._getTensionPointsClosed();\n      } else {\n        return Konva.Util._expandPoints(this.getPoints(), this.getTension());\n      }\n    },\n    _getTensionPointsClosed: function() {\n      var p = this.getPoints(),\n        len = p.length,\n        tension = this.getTension(),\n        util = Konva.Util,\n        firstControlPoints = util._getControlPoints(\n          p[len - 2],\n          p[len - 1],\n          p[0],\n          p[1],\n          p[2],\n          p[3],\n          tension\n        ),\n        lastControlPoints = util._getControlPoints(\n          p[len - 4],\n          p[len - 3],\n          p[len - 2],\n          p[len - 1],\n          p[0],\n          p[1],\n          tension\n        ),\n        middle = Konva.Util._expandPoints(p, tension),\n        tp = [firstControlPoints[2], firstControlPoints[3]]\n          .concat(middle)\n          .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1]\n          ]);\n\n      return tp;\n    },\n    getWidth: function() {\n      return this.getSelfRect().width;\n    },\n    getHeight: function() {\n      return this.getSelfRect().height;\n    },\n    // overload size detection\n    getSelfRect: function() {\n      var points;\n      if (this.getTension() !== 0) {\n        points = this._getTensionPoints();\n      } else {\n        points = this.getPoints();\n      }\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n      return {\n        x: Math.round(minX),\n        y: Math.round(minY),\n        width: Math.round(maxX - minX),\n        height: Math.round(maxY - minY)\n      };\n    }\n  };\n  Konva.Util.extend(Konva.Line, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Line, 'closed', false);\n\n  /**\n     * get/set closed flag.  The default is false\n     * @name closed\n     * @method\n     * @memberof Konva.Line.prototype\n     * @param {Boolean} closed\n     * @returns {Boolean}\n     * @example\n     * // get closed flag\n     * var closed = line.closed();\n     *\n     * // close the shape\n     * line.closed(true);\n     *\n     * // open the shape\n     * line.closed(false);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Line, 'bezier', false);\n\n  /**\n    * get/set bezier flag.  The default is false\n    * @name bezier\n    * @method\n    * @memberof Konva.Line.prototype\n    * @param {Boolean} bezier\n    * @returns {Boolean}\n    * @example\n    * // get whether the line is a bezier\n    * var isBezier = line.bezier();\n    *\n    * // set whether the line is a bezier\n    * line.bezier(true);\n    */\n\n  Konva.Factory.addGetterSetter(Konva.Line, 'tension', 0);\n\n  /**\n     * get/set tension\n     * @name tension\n     * @method\n     * @memberof Konva.Line.prototype\n     * @param {Number} Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n     *   The default is 0\n     * @returns {Number}\n     * @example\n     * // get tension\n     * var tension = line.tension();\n     *\n     * // set tension\n     * line.tension(3);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Line, 'points', []);\n  /**\n     * get/set points array\n     * @name points\n     * @method\n     * @memberof Konva.Line.prototype\n     * @param {Array} points\n     * @returns {Array}\n     * @example\n     * // get points\n     * var points = line.points();\n     *\n     * // set points\n     * line.points([10, 20, 30, 40, 50, 60]);\n     *\n     * // push a new point\n     * line.points(line.points().concat([70, 80]));\n     */\n\n  Konva.Collection.mapMethods(Konva.Line);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Sprite constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {String} config.animation animation key\n     * @param {Object} config.animations animation map\n     * @param {Integer} [config.frameIndex] animation frame index\n     * @param {Image} config.image image object\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var imageObj = new Image();\n     * imageObj.onload = function() {\n     *   var sprite = new Konva.Sprite({\n     *     x: 200,\n     *     y: 100,\n     *     image: imageObj,\n     *     animation: 'standing',\n     *     animations: {\n     *       standing: [\n     *         // x, y, width, height (6 frames)\n     *         0, 0, 49, 109,\n     *         52, 0, 49, 109,\n     *         105, 0, 49, 109,\n     *         158, 0, 49, 109,\n     *         210, 0, 49, 109,\n     *         262, 0, 49, 109\n     *       ],\n     *       kicking: [\n     *         // x, y, width, height (6 frames)\n     *         0, 109, 45, 98,\n     *         45, 109, 45, 98,\n     *         95, 109, 63, 98,\n     *         156, 109, 70, 98,\n     *         229, 109, 60, 98,\n     *         287, 109, 41, 98\n     *       ]\n     *     },\n     *     frameRate: 7,\n     *     frameIndex: 0\n     *   });\n     * };\n     * imageObj.src = '/path/to/image.jpg'\n     */\n  Konva.Sprite = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Sprite.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Sprite';\n\n      this._updated = true;\n      var that = this;\n      this.anim = new Konva.Animation(function() {\n        // if we don't need to redraw layer we should return false\n        var updated = that._updated;\n        that._updated = false;\n        return updated;\n      });\n      this.on('animationChange.konva', function() {\n        // reset index when animation changes\n        this.frameIndex(0);\n      });\n      this.on('frameIndexChange.konva', function() {\n        this._updated = true;\n      });\n      // smooth change for frameRate\n      this.on('frameRateChange.konva', function() {\n        if (!this.anim.isRunning()) {\n          return;\n        }\n        clearInterval(this.interval);\n        this._setInterval();\n      });\n\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      var anim = this.getAnimation(),\n        index = this.frameIndex(),\n        ix4 = index * 4,\n        set = this.getAnimations()[anim],\n        offsets = this.frameOffsets(),\n        x = set[ix4 + 0],\n        y = set[ix4 + 1],\n        width = set[ix4 + 2],\n        height = set[ix4 + 3],\n        image = this.getImage();\n\n      if (this.hasFill() || this.hasStroke()) {\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n      }\n\n      if (image) {\n        if (offsets) {\n          var offset = offsets[anim], ix2 = index * 2;\n          context.drawImage(\n            image,\n            x,\n            y,\n            width,\n            height,\n            offset[ix2 + 0],\n            offset[ix2 + 1],\n            width,\n            height\n          );\n        } else {\n          context.drawImage(image, x, y, width, height, 0, 0, width, height);\n        }\n      }\n    },\n    _hitFunc: function(context) {\n      var anim = this.getAnimation(),\n        index = this.frameIndex(),\n        ix4 = index * 4,\n        set = this.getAnimations()[anim],\n        offsets = this.frameOffsets(),\n        width = set[ix4 + 2],\n        height = set[ix4 + 3];\n\n      context.beginPath();\n      if (offsets) {\n        var offset = offsets[anim];\n        var ix2 = index * 2;\n        context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n      } else {\n        context.rect(0, 0, width, height);\n      }\n      context.closePath();\n      context.fillShape(this);\n    },\n    _useBufferCanvas: function() {\n      return (\n        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&\n        this.hasStroke()\n      );\n    },\n    _setInterval: function() {\n      var that = this;\n      this.interval = setInterval(function() {\n        that._updateIndex();\n      }, 1000 / this.getFrameRate());\n    },\n    /**\n         * start sprite animation\n         * @method\n         * @memberof Konva.Sprite.prototype\n         */\n    start: function() {\n      var layer = this.getLayer();\n\n      /*\n             * animation object has no executable function because\n             *  the updates are done with a fixed FPS with the setInterval\n             *  below.  The anim object only needs the layer reference for\n             *  redraw\n             */\n      this.anim.setLayers(layer);\n      this._setInterval();\n      this.anim.start();\n    },\n    /**\n         * stop sprite animation\n         * @method\n         * @memberof Konva.Sprite.prototype\n         */\n    stop: function() {\n      this.anim.stop();\n      clearInterval(this.interval);\n    },\n    /**\n         * determine if animation of sprite is running or not.  returns true or false\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @returns {Boolean}\n         */\n    isRunning: function() {\n      return this.anim.isRunning();\n    },\n    _updateIndex: function() {\n      var index = this.frameIndex(),\n        animation = this.getAnimation(),\n        animations = this.getAnimations(),\n        anim = animations[animation],\n        len = anim.length / 4;\n\n      if (index < len - 1) {\n        this.frameIndex(index + 1);\n      } else {\n        this.frameIndex(0);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Sprite, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'animation');\n\n  /**\n     * get/set animation key\n     * @name animation\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {String} anim animation key\n     * @returns {String}\n     * @example\n     * // get animation key\n     * var animation = sprite.animation();\n     *\n     * // set animation key\n     * sprite.animation('kicking');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'animations');\n\n  /**\n     * get/set animations map\n     * @name animations\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Object} animations\n     * @returns {Object}\n     * @example\n     * // get animations map\n     * var animations = sprite.animations();\n     *\n     * // set animations map\n     * sprite.animations({\n     *   standing: [\n     *     // x, y, width, height (6 frames)\n     *     0, 0, 49, 109,\n     *     52, 0, 49, 109,\n     *     105, 0, 49, 109,\n     *     158, 0, 49, 109,\n     *     210, 0, 49, 109,\n     *     262, 0, 49, 109\n     *   ],\n     *   kicking: [\n     *     // x, y, width, height (6 frames)\n     *     0, 109, 45, 98,\n     *     45, 109, 45, 98,\n     *     95, 109, 63, 98,\n     *     156, 109, 70, 98,\n     *     229, 109, 60, 98,\n     *     287, 109, 41, 98\n     *   ]\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameOffsets');\n\n  /**\n    * get/set offsets map\n    * @name offsets\n    * @method\n    * @memberof Konva.Sprite.prototype\n    * @param {Object} offsets\n    * @returns {Object}\n    * @example\n    * // get offsets map\n    * var offsets = sprite.offsets();\n    *\n    * // set offsets map\n    * sprite.offsets({\n    *   standing: [\n    *     // x, y (6 frames)\n    *     0, 0,\n    *     0, 0,\n    *     5, 0,\n    *     0, 0,\n    *     0, 3,\n    *     2, 0\n    *   ],\n    *   kicking: [\n    *     // x, y (6 frames)\n    *     0, 5,\n    *     5, 0,\n    *     10, 0,\n    *     0, 0,\n    *     2, 1,\n    *     0, 0\n    *   ]\n    * });\n    */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'image');\n\n  /**\n     * get/set image\n     * @name image\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Image} image\n     * @returns {Image}\n     * @example\n     * // get image\n     * var image = sprite.image();\n     *\n     * // set image\n     * sprite.image(imageObj);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameIndex', 0);\n\n  /**\n     * set/set animation frame index\n     * @name frameIndex\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Integer} frameIndex\n     * @returns {Integer}\n     * @example\n     * // get animation frame index\n     * var frameIndex = sprite.frameIndex();\n     *\n     * // set animation frame index\n     * sprite.frameIndex(3);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameRate', 17);\n\n  /**\n     * get/set frame rate in frames per second.  Increase this number to make the sprite\n     *  animation run faster, and decrease the number to make the sprite animation run slower\n     *  The default is 17 frames per second\n     * @name frameRate\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Integer} frameRate\n     * @returns {Integer}\n     * @example\n     * // get frame rate\n     * var frameRate = sprite.frameRate();\n     *\n     * // set frame rate to 2 frames per second\n     * sprite.frameRate(2);\n     */\n\n  Konva.Factory.backCompat(Konva.Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex'\n  });\n\n  Konva.Collection.mapMethods(Konva.Sprite);\n})();\n\n/*eslint-disable  no-shadow, max-len, max-depth */\n(function() {\n  'use strict';\n  /**\n     * Path constructor.\n     * @author Jason Follas\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {String} config.data SVG data string\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var path = new Konva.Path({\n     *   x: 240,\n     *   y: 40,\n     *   data: 'M12.582,9.551C3.251,16.237,0.921,29.021,7.08,38.564l-2.36,1.689l4.893,2.262l4.893,2.262l-0.568-5.36l-0.567-5.359l-2.365,1.694c-4.657-7.375-2.83-17.185,4.352-22.33c7.451-5.338,17.817-3.625,23.156,3.824c5.337,7.449,3.625,17.813-3.821,23.152l2.857,3.988c9.617-6.893,11.827-20.277,4.935-29.896C35.591,4.87,22.204,2.658,12.582,9.551z',\n     *   fill: 'green',\n     *   scale: 2\n     * });\n     */\n  Konva.Path = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Path.prototype = {\n    ___init: function(config) {\n      this.dataArray = [];\n      var that = this;\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Path';\n\n      this.dataArray = Konva.Path.parsePathData(this.getData());\n      this.on('dataChange.konva', function() {\n        that.dataArray = Konva.Path.parsePathData(this.getData());\n      });\n\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var ca = this.dataArray;\n\n      // context position\n      context.beginPath();\n      for (var n = 0; n < ca.length; n++) {\n        var c = ca[n].command;\n        var p = ca[n].points;\n        switch (c) {\n          case 'L':\n            context.lineTo(p[0], p[1]);\n            break;\n          case 'M':\n            context.moveTo(p[0], p[1]);\n            break;\n          case 'C':\n            context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n            break;\n          case 'Q':\n            context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n            break;\n          case 'A':\n            var cx = p[0],\n              cy = p[1],\n              rx = p[2],\n              ry = p[3],\n              theta = p[4],\n              dTheta = p[5],\n              psi = p[6],\n              fs = p[7];\n\n            var r = rx > ry ? rx : ry;\n            var scaleX = rx > ry ? 1 : rx / ry;\n            var scaleY = rx > ry ? ry / rx : 1;\n\n            context.translate(cx, cy);\n            context.rotate(psi);\n            context.scale(scaleX, scaleY);\n            context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n            context.scale(1 / scaleX, 1 / scaleY);\n            context.rotate(-psi);\n            context.translate(-cx, -cy);\n\n            break;\n          case 'z':\n            context.closePath();\n            break;\n        }\n      }\n\n      context.fillStrokeShape(this);\n    },\n    getSelfRect: function() {\n      var points = [];\n      this.dataArray.forEach(function(data) {\n        points = points.concat(data.points);\n      });\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n      return {\n        x: Math.round(minX),\n        y: Math.round(minY),\n        width: Math.round(maxX - minX),\n        height: Math.round(maxY - minY)\n      };\n    }\n  };\n  Konva.Util.extend(Konva.Path, Konva.Shape);\n\n  Konva.Path.getLineLength = function(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  };\n  Konva.Path.getPointOnLine = function(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n    if (fromX === undefined) {\n      fromX = P1x;\n    }\n    if (fromY === undefined) {\n      fromY = P1y;\n    }\n\n    var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n    var run = Math.sqrt(dist * dist / (1 + m * m));\n    if (P2x < P1x) {\n      run *= -1;\n    }\n    var rise = m * run;\n    var pt;\n\n    if (P2x === P1x) {\n      // vertical line\n      pt = {\n        x: fromX,\n        y: fromY + rise\n      };\n    } else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n      pt = {\n        x: fromX + run,\n        y: fromY + rise\n      };\n    } else {\n      var ix, iy;\n\n      var len = this.getLineLength(P1x, P1y, P2x, P2y);\n      if (len < 0.00000001) {\n        return undefined;\n      }\n      var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n      u = u / (len * len);\n      ix = P1x + u * (P2x - P1x);\n      iy = P1y + u * (P2y - P1y);\n\n      var pRise = this.getLineLength(fromX, fromY, ix, iy);\n      var pRun = Math.sqrt(dist * dist - pRise * pRise);\n      run = Math.sqrt(pRun * pRun / (1 + m * m));\n      if (P2x < P1x) {\n        run *= -1;\n      }\n      rise = m * run;\n      pt = {\n        x: ix + run,\n        y: iy + rise\n      };\n    }\n\n    return pt;\n  };\n\n  Konva.Path.getPointOnCubicBezier = function(\n    pct,\n    P1x,\n    P1y,\n    P2x,\n    P2y,\n    P3x,\n    P3y,\n    P4x,\n    P4y\n  ) {\n    function CB1(t) {\n      return t * t * t;\n    }\n    function CB2(t) {\n      return 3 * t * t * (1 - t);\n    }\n    function CB3(t) {\n      return 3 * t * (1 - t) * (1 - t);\n    }\n    function CB4(t) {\n      return (1 - t) * (1 - t) * (1 - t);\n    }\n    var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n    var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n  Konva.Path.getPointOnQuadraticBezier = function(\n    pct,\n    P1x,\n    P1y,\n    P2x,\n    P2y,\n    P3x,\n    P3y\n  ) {\n    function QB1(t) {\n      return t * t;\n    }\n    function QB2(t) {\n      return 2 * t * (1 - t);\n    }\n    function QB3(t) {\n      return (1 - t) * (1 - t);\n    }\n    var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n    var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n  Konva.Path.getPointOnEllipticalArc = function(cx, cy, rx, ry, theta, psi) {\n    var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n    var pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    };\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    };\n  };\n  /*\n     * get parsed data array from the data\n     *  string.  V, v, H, h, and l data are converted to\n     *  L data for the purpose of high performance Path\n     *  rendering\n     */\n  Konva.Path.parsePathData = function(data) {\n    // Path Data Segment must begin with a moveTo\n    //m (x y)+  Relative moveTo (subsequent points are treated as lineTo)\n    //M (x y)+  Absolute moveTo (subsequent points are treated as lineTo)\n    //l (x y)+  Relative lineTo\n    //L (x y)+  Absolute LineTo\n    //h (x)+    Relative horizontal lineTo\n    //H (x)+    Absolute horizontal lineTo\n    //v (y)+    Relative vertical lineTo\n    //V (y)+    Absolute vertical lineTo\n    //z (closepath)\n    //Z (closepath)\n    //c (x1 y1 x2 y2 x y)+ Relative Bezier curve\n    //C (x1 y1 x2 y2 x y)+ Absolute Bezier curve\n    //q (x1 y1 x y)+       Relative Quadratic Bezier\n    //Q (x1 y1 x y)+       Absolute Quadratic Bezier\n    //t (x y)+    Shorthand/Smooth Relative Quadratic Bezier\n    //T (x y)+    Shorthand/Smooth Absolute Quadratic Bezier\n    //s (x2 y2 x y)+       Shorthand/Smooth Relative Bezier curve\n    //S (x2 y2 x y)+       Shorthand/Smooth Absolute Bezier curve\n    //a (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+     Relative Elliptical Arc\n    //A (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+  Absolute Elliptical Arc\n\n    // return early if data is not defined\n    if (!data) {\n      return [];\n    }\n\n    // command string\n    var cs = data;\n\n    // command chars\n    var cc = [\n      'm',\n      'M',\n      'l',\n      'L',\n      'v',\n      'V',\n      'h',\n      'H',\n      'z',\n      'Z',\n      'c',\n      'C',\n      'q',\n      'Q',\n      't',\n      'T',\n      's',\n      'S',\n      'a',\n      'A'\n    ];\n    // convert white spaces to commas\n    cs = cs.replace(new RegExp(' ', 'g'), ',');\n    // create pipes so that we can split the data\n    for (var n = 0; n < cc.length; n++) {\n      cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n    }\n    // create array\n    var arr = cs.split('|');\n    var ca = [];\n    // init context point\n    var cpx = 0;\n    var cpy = 0;\n    for (n = 1; n < arr.length; n++) {\n      var str = arr[n];\n      var c = str.charAt(0);\n      str = str.slice(1);\n      // remove ,- for consistency\n      str = str.replace(new RegExp(',-', 'g'), '-');\n      // add commas so that it's easy to split\n      str = str.replace(new RegExp('-', 'g'), ',-');\n      str = str.replace(new RegExp('e,-', 'g'), 'e-');\n      var p = str.split(',');\n      if (p.length > 0 && p[0] === '') {\n        p.shift();\n      }\n      // convert strings to floats\n      for (var i = 0; i < p.length; i++) {\n        p[i] = parseFloat(p[i]);\n      }\n      while (p.length > 0) {\n        if (isNaN(p[0])) {\n          // case for a trailing comma before next command\n          break;\n        }\n\n        var cmd = null;\n        var points = [];\n        var startX = cpx, startY = cpy;\n        // Move var from within the switch to up here (jshint)\n        var prevCmd, ctlPtx, ctlPty; // Ss, Tt\n        var rx, ry, psi, fa, fs, x1, y1; // Aa\n\n        // convert l, H, h, V, and v to L\n        switch (c) {\n          // Note: Keep the lineTo's above the moveTo's in this switch\n          case 'l':\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'L':\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          // Note: lineTo handlers need to be above this point\n          case 'm':\n            var dx = p.shift();\n            var dy = p.shift();\n            cpx += dx;\n            cpy += dy;\n            cmd = 'M';\n            // After closing the path move the current position\n            // to the the first point of the path (if any).\n            if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n              for (var idx = ca.length - 2; idx >= 0; idx--) {\n                if (ca[idx].command === 'M') {\n                  cpx = ca[idx].points[0] + dx;\n                  cpy = ca[idx].points[1] + dy;\n                  break;\n                }\n              }\n            }\n            points.push(cpx, cpy);\n            c = 'l';\n            // subsequent points are treated as relative lineTo\n            break;\n          case 'M':\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'M';\n            points.push(cpx, cpy);\n            c = 'L';\n            // subsequent points are treated as absolute lineTo\n            break;\n\n          case 'h':\n            cpx += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'H':\n            cpx = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'v':\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'V':\n            cpy = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'C':\n            points.push(p.shift(), p.shift(), p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'c':\n            points.push(\n              cpx + p.shift(),\n              cpy + p.shift(),\n              cpx + p.shift(),\n              cpy + p.shift()\n            );\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'S':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 's':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'Q':\n            points.push(p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'q':\n            points.push(cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(cpx, cpy);\n            break;\n          case 'T':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 't':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 'A':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(\n              x1,\n              y1,\n              cpx,\n              cpy,\n              fa,\n              fs,\n              rx,\n              ry,\n              psi\n            );\n            break;\n          case 'a':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(\n              x1,\n              y1,\n              cpx,\n              cpy,\n              fa,\n              fs,\n              rx,\n              ry,\n              psi\n            );\n            break;\n        }\n\n        ca.push({\n          command: cmd || c,\n          points: points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, cmd || c, points)\n        });\n      }\n\n      if (c === 'z' || c === 'Z') {\n        ca.push({\n          command: 'z',\n          points: [],\n          start: undefined,\n          pathLength: 0\n        });\n      }\n    }\n\n    return ca;\n  };\n  Konva.Path.calcLength = function(x, y, cmd, points) {\n    var len, p1, p2, t;\n    var path = Konva.Path;\n\n    switch (cmd) {\n      case 'L':\n        return path.getLineLength(x, y, points[0], points[1]);\n      case 'C':\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = path.getPointOnCubicBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          points[4],\n          points[5]\n        );\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = path.getPointOnCubicBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3],\n            points[4],\n            points[5]\n          );\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case 'Q':\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = path.getPointOnQuadraticBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3]\n        );\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = path.getPointOnQuadraticBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3]\n          );\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case 'A':\n        // Approximates by breaking curve into line segments\n        len = 0.0;\n        var start = points[4];\n        // 4 = theta\n        var dTheta = points[5];\n        // 5 = dTheta\n        var end = points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n        // 1 degree resolution\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n        // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n        p1 = path.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          start,\n          0\n        );\n        if (dTheta < 0) {\n          // clockwise\n          for (t = start - inc; t > end; t -= inc) {\n            p2 = path.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            );\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        } else {\n          // counter-clockwise\n          for (t = start + inc; t < end; t += inc) {\n            p2 = path.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            );\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        }\n        p2 = path.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          end,\n          0\n        );\n        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\n        return len;\n    }\n\n    return 0;\n  };\n  Konva.Path.convertEndpointToCenterParameterization = function(\n    x1,\n    y1,\n    x2,\n    y2,\n    fa,\n    fs,\n    rx,\n    ry,\n    psiDeg\n  ) {\n    // Derived from: http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n    var psi = psiDeg * (Math.PI / 180.0);\n    var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n    var yp =\n      -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n\n    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n    if (lambda > 1) {\n      rx *= Math.sqrt(lambda);\n      ry *= Math.sqrt(lambda);\n    }\n\n    var f = Math.sqrt(\n      (rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n        (rx * rx * (yp * yp) + ry * ry * (xp * xp))\n    );\n\n    if (fa === fs) {\n      f *= -1;\n    }\n    if (isNaN(f)) {\n      f = 0;\n    }\n\n    var cxp = f * rx * yp / ry;\n    var cyp = f * -ry * xp / rx;\n\n    var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n    var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n\n    var vMag = function(v) {\n      return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n      return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n      return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n    };\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    var dTheta = vAngle(u, v);\n\n    if (vRatio(u, v) <= -1) {\n      dTheta = Math.PI;\n    }\n    if (vRatio(u, v) >= 1) {\n      dTheta = 0;\n    }\n    if (fs === 0 && dTheta > 0) {\n      dTheta = dTheta - 2 * Math.PI;\n    }\n    if (fs === 1 && dTheta < 0) {\n      dTheta = dTheta + 2 * Math.PI;\n    }\n    return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n  };\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Path, 'data');\n\n  /**\n     * set SVG path data string.  This method\n     *  also automatically parses the data string\n     *  into a data array.  Currently supported SVG data:\n     *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z\n     * @name setData\n     * @method\n     * @memberof Konva.Path.prototype\n     * @param {String} SVG path command string\n     */\n\n  /**\n     * get SVG path data string\n     * @name getData\n     * @method\n     * @memberof Konva.Path.prototype\n     */\n\n  Konva.Collection.mapMethods(Konva.Path);\n})();\n\n(function() {\n  'use strict';\n  var EMPTY_STRING = '',\n    //CALIBRI = 'Calibri',\n    NORMAL = 'normal';\n\n  /**\n     * Path constructor.\n     * @author Jason Follas\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {String} [config.fontFamily] default is Calibri\n     * @param {Number} [config.fontSize] default is 12\n     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n     * @param {String} config.text\n     * @param {String} config.data SVG data string\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var textpath = new Konva.TextPath({\n     *   x: 100,\n     *   y: 50,\n     *   fill: '#333',\n     *   fontSize: '24',\n     *   fontFamily: 'Arial',\n     *   text: 'All the world\\'s a stage, and all the men and women merely players.',\n     *   data: 'M10,10 C0,0 10,150 100,100 S300,150 400,50'\n     * });\n     */\n  Konva.TextPath = function(config) {\n    this.___init(config);\n  };\n\n  function _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n  }\n  function _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n  }\n\n  Konva.TextPath.prototype = {\n    ___init: function(config) {\n      var that = this;\n      this.dummyCanvas = Konva.Util.createCanvasElement();\n      this.dataArray = [];\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n\n      // overrides\n      // TODO: shouldn't this be on the prototype?\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this._fillFuncHit = _fillFunc;\n      this._strokeFuncHit = _strokeFunc;\n\n      this.className = 'TextPath';\n\n      this.dataArray = Konva.Path.parsePathData(this.attrs.data);\n      this.on('dataChange.konva', function() {\n        that.dataArray = Konva.Path.parsePathData(this.attrs.data);\n        that._setTextData();\n      });\n\n      // update text data for certain attr changes\n      this.on(\n        'textChange.konva alignChange.konva letterSpacingChange.konva',\n        that._setTextData\n      );\n      that._setTextData();\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      context.setAttr('font', this._getContextFont());\n      context.setAttr('textBaseline', this.getTextBaseline());\n      context.setAttr('textAlign', 'left');\n      context.save();\n\n      var textDecoration = this.textDecoration();\n      var fill = this.fill();\n      var fontSize = this.fontSize();\n\n      var glyphInfo = this.glyphInfo;\n      if (textDecoration === 'underline') {\n        context.beginPath();\n      }\n      for (var i = 0; i < glyphInfo.length; i++) {\n        context.save();\n\n        var p0 = glyphInfo[i].p0;\n\n        context.translate(p0.x, p0.y);\n        context.rotate(glyphInfo[i].rotation);\n        this.partialText = glyphInfo[i].text;\n\n        context.fillStrokeShape(this);\n        if (textDecoration === 'underline') {\n          if (i === 0) {\n            context.moveTo(0, fontSize / 2 + 1);\n          }\n\n          context.lineTo(fontSize, fontSize / 2 + 1);\n        }\n        context.restore();\n\n        //// To assist with debugging visually, uncomment following\n        //\n        // if (i % 2)\n        // context.strokeStyle = 'cyan';\n        // else\n        // context.strokeStyle = 'green';\n        // var p1 = glyphInfo[i].p1;\n        // context.moveTo(p0.x, p0.y);\n        // context.lineTo(p1.x, p1.y);\n        // context.stroke();\n      }\n      if (textDecoration === 'underline') {\n        context.strokeStyle = fill;\n        context.lineWidth = fontSize / 20;\n        context.stroke();\n      }\n\n      context.restore();\n    },\n    _hitFunc: function(context) {\n      context.beginPath();\n\n      var glyphInfo = this.glyphInfo;\n      if (glyphInfo.length >= 1) {\n        var p0 = glyphInfo[0].p0;\n        context.moveTo(p0.x, p0.y);\n      }\n      for (var i = 0; i < glyphInfo.length; i++) {\n        var p1 = glyphInfo[i].p1;\n        context.lineTo(p1.x, p1.y);\n      }\n      context.setAttr('lineWidth', this.getFontSize());\n      context.setAttr('strokeStyle', this.colorKey);\n      context.stroke();\n    },\n    /**\n         * get text width in pixels\n         * @method\n         * @memberof Konva.TextPath.prototype\n         */\n    getTextWidth: function() {\n      return this.textWidth;\n    },\n    /**\n         * get text height in pixels\n         * @method\n         * @memberof Konva.TextPath.prototype\n         */\n    getTextHeight: function() {\n      return this.textHeight;\n    },\n    /**\n         * set text\n         * @method\n         * @memberof Konva.TextPath.prototype\n         * @param {String} text\n         */\n    setText: function(text) {\n      Konva.Text.prototype.setText.call(this, text);\n    },\n    _getTextSize: function(text) {\n      var dummyCanvas = this.dummyCanvas;\n      var _context = dummyCanvas.getContext('2d');\n\n      _context.save();\n\n      _context.font = this._getContextFont();\n      var metrics = _context.measureText(text);\n\n      _context.restore();\n\n      return {\n        width: metrics.width,\n        height: parseInt(this.attrs.fontSize, 10)\n      };\n    },\n    _setTextData: function() {\n      var that = this;\n      var size = this._getTextSize(this.attrs.text);\n      var letterSpacing = this.getLetterSpacing();\n      var align = this.align();\n\n      this.textWidth = size.width;\n      this.textHeight = size.height;\n\n      var textFullWidth = Math.max(\n        this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing,\n        0\n      );\n\n      this.glyphInfo = [];\n\n      var fullPathWidth = 0;\n      for (var l = 0; l < that.dataArray.length; l++) {\n        if (that.dataArray[l].pathLength > 0) {\n          fullPathWidth += that.dataArray[l].pathLength;\n        }\n      }\n\n      var offset = 0;\n      if (align === 'center') {\n        offset = Math.max(0, fullPathWidth / 2 - textFullWidth / 2);\n      }\n      if (align === 'right') {\n        offset = Math.max(0, fullPathWidth - textFullWidth);\n      }\n\n      var charArr = this.getText().split('');\n      var spacesNumber = this.getText().split(' ').length - 1;\n\n      var p0, p1, pathCmd;\n\n      var pIndex = -1;\n      var currentT = 0;\n      // var sumLength = 0;\n      // for(var j = 0; j < that.dataArray.length; j++) {\n      //   if(that.dataArray[j].pathLength > 0) {\n      //\n      //     if (sumLength + that.dataArray[j].pathLength > offset) {}\n      //       fullPathWidth += that.dataArray[j].pathLength;\n      //   }\n      // }\n\n      var getNextPathSegment = function() {\n        currentT = 0;\n        var pathData = that.dataArray;\n\n        for (var j = pIndex + 1; j < pathData.length; j++) {\n          if (pathData[j].pathLength > 0) {\n            pIndex = j;\n\n            return pathData[j];\n          } else if (pathData[j].command === 'M') {\n            p0 = {\n              x: pathData[j].points[0],\n              y: pathData[j].points[1]\n            };\n          }\n        }\n\n        return {};\n      };\n\n      var findSegmentToFitCharacter = function(c) {\n        var glyphWidth = that._getTextSize(c).width + letterSpacing;\n\n        if (c === ' ' && align === 'justify') {\n          glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n        }\n\n        var currLen = 0;\n        var attempts = 0;\n\n        p1 = undefined;\n        while (\n          Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 &&\n          attempts < 25\n        ) {\n          attempts++;\n          var cumulativePathLength = currLen;\n          while (pathCmd === undefined) {\n            pathCmd = getNextPathSegment();\n\n            if (\n              pathCmd &&\n              cumulativePathLength + pathCmd.pathLength < glyphWidth\n            ) {\n              cumulativePathLength += pathCmd.pathLength;\n              pathCmd = undefined;\n            }\n          }\n\n          if (pathCmd === {} || p0 === undefined) {\n            return undefined;\n          }\n\n          var needNewSegment = false;\n\n          switch (pathCmd.command) {\n            case 'L':\n              if (\n                Konva.Path.getLineLength(\n                  p0.x,\n                  p0.y,\n                  pathCmd.points[0],\n                  pathCmd.points[1]\n                ) > glyphWidth\n              ) {\n                p1 = Konva.Path.getPointOnLine(\n                  glyphWidth,\n                  p0.x,\n                  p0.y,\n                  pathCmd.points[0],\n                  pathCmd.points[1],\n                  p0.x,\n                  p0.y\n                );\n              } else {\n                pathCmd = undefined;\n              }\n              break;\n            case 'A':\n              var start = pathCmd.points[4];\n              // 4 = theta\n              var dTheta = pathCmd.points[5];\n              // 5 = dTheta\n              var end = pathCmd.points[4] + dTheta;\n\n              if (currentT === 0) {\n                currentT = start + 0.00000001;\n              } else if (glyphWidth > currLen) {\n                // Just in case start is 0\n                currentT += Math.PI / 180.0 * dTheta / Math.abs(dTheta);\n              } else {\n                currentT -= Math.PI / 360.0 * dTheta / Math.abs(dTheta);\n              }\n\n              // Credit for bug fix: @therth https://github.com/ericdrowell/KonvaJS/issues/249\n              // Old code failed to render text along arc of this path: \"M 50 50 a 150 50 0 0 1 250 50 l 50 0\"\n              if (\n                (dTheta < 0 && currentT < end) ||\n                (dTheta >= 0 && currentT > end)\n              ) {\n                currentT = end;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnEllipticalArc(\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3],\n                currentT,\n                pathCmd.points[6]\n              );\n              break;\n            case 'C':\n              if (currentT === 0) {\n                if (glyphWidth > pathCmd.pathLength) {\n                  currentT = 0.00000001;\n                } else {\n                  currentT = glyphWidth / pathCmd.pathLength;\n                }\n              } else if (glyphWidth > currLen) {\n                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n              } else {\n                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n              }\n\n              if (currentT > 1.0) {\n                currentT = 1.0;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnCubicBezier(\n                currentT,\n                pathCmd.start.x,\n                pathCmd.start.y,\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3],\n                pathCmd.points[4],\n                pathCmd.points[5]\n              );\n              break;\n            case 'Q':\n              if (currentT === 0) {\n                currentT = glyphWidth / pathCmd.pathLength;\n              } else if (glyphWidth > currLen) {\n                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n              } else {\n                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n              }\n\n              if (currentT > 1.0) {\n                currentT = 1.0;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnQuadraticBezier(\n                currentT,\n                pathCmd.start.x,\n                pathCmd.start.y,\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3]\n              );\n              break;\n          }\n\n          if (p1 !== undefined) {\n            currLen = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n          }\n\n          if (needNewSegment) {\n            needNewSegment = false;\n            pathCmd = undefined;\n          }\n        }\n      };\n\n      // fake search for offset, this is very bad approach\n      // TODO: find other way to add offset from start (for align)\n      var testChar = 'C';\n      var glyphWidth = that._getTextSize(testChar).width + letterSpacing;\n      for (var k = 0; k < offset / glyphWidth; k++) {\n        findSegmentToFitCharacter(testChar);\n        if (p0 === undefined || p1 === undefined) {\n          break;\n        }\n        p0 = p1;\n      }\n\n      for (var i = 0; i < charArr.length; i++) {\n        // Find p1 such that line segment between p0 and p1 is approx. width of glyph\n        findSegmentToFitCharacter(charArr[i]);\n\n        if (p0 === undefined || p1 === undefined) {\n          break;\n        }\n\n        var width = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n\n        // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.\n        // Can foresee having a rough pair table built in that the developer can override as needed.\n\n        var kern = 0;\n        // placeholder for future implementation\n\n        var midpoint = Konva.Path.getPointOnLine(\n          kern + width / 2.0,\n          p0.x,\n          p0.y,\n          p1.x,\n          p1.y\n        );\n\n        var rotation = Math.atan2(p1.y - p0.y, p1.x - p0.x);\n        this.glyphInfo.push({\n          transposeX: midpoint.x,\n          transposeY: midpoint.y,\n          text: charArr[i],\n          rotation: rotation,\n          p0: p0,\n          p1: p1\n        });\n        p0 = p1;\n      }\n    },\n    getSelfRect: function() {\n      var points = [];\n\n      this.glyphInfo.forEach(function(info) {\n        points.push(info.p0.x);\n        points.push(info.p0.y);\n        points.push(info.p1.x);\n        points.push(info.p1.y);\n      });\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[0];\n      var maxY = points[0];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n      var fontSize = this.fontSize();\n      return {\n        x: Math.round(minX) - fontSize / 2,\n        y: Math.round(minY) - fontSize / 2,\n        width: Math.round(maxX - minX) + fontSize,\n        height: Math.round(maxY - minY) + fontSize\n      };\n    }\n  };\n\n  // map TextPath methods to Text\n  Konva.TextPath.prototype._getContextFont =\n    Konva.Text.prototype._getContextFont;\n\n  Konva.Util.extend(Konva.TextPath, Konva.Shape);\n\n  // add setters and getters\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontFamily', 'Arial');\n\n  /**\n     * set font family\n     * @name setFontFamily\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {String} fontFamily\n     */\n\n  /**\n     * get font family\n     * @name getFontFamily\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontSize', 12);\n\n  /**\n     * set font size\n     * @name setFontSize\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {int} fontSize\n     */\n\n  /**\n     * get font size\n     * @name getFontSize\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontStyle', NORMAL);\n\n  /**\n     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n     * @name setFontStyle\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {String} fontStyle\n     */\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'align', 'left');\n\n  /**\n      * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'\n      * @name align\n      * @method\n      * @memberof Konva.Text.prototype\n      * @param {String} align\n      * @returns {String}\n      * @example\n      * // get text align\n      * var align = text.align();\n      *\n      * // center text\n      * text.align('center');\n      *\n      * // align text to right\n      * text.align('right');\n      */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'letterSpacing', 0);\n\n  /**\n      * set letter spacing property. Default value is 0.\n      * @name letterSpacing\n      * @method\n      * @memberof Konva.TextPath.prototype\n      * @param {Number} letterSpacing\n      */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'textBaseline', 'middle');\n\n  /**\n      * set textBaseline property. Default value is 'middle'.\n      * Can be 'top', 'bottom', 'middle', 'alphabetic', 'hanging'\n      * @name textBaseline\n      * @method\n      * @memberof Konva.TextPath.prototype\n      * @param {Number} textBaseline\n      */\n\n  /**\n     * get font style\n     * @name getFontStyle\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontVariant', NORMAL);\n\n  /**\n     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n     * @name setFontVariant\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {String} fontVariant\n     */\n\n  /**\n     * @get font variant\n     * @name getFontVariant\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n\n  Konva.Factory.addGetter(Konva.TextPath, 'text', EMPTY_STRING);\n\n  /**\n     * get text\n     * @name getText\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'textDecoration', null);\n\n  /**\n      * get/set text decoration of a text.  Can be '' or 'underline'\n      * @name textDecoration\n      * @method\n      * @memberof Konva.Text.prototype\n      * @param {String} textDecoration\n      * @returns {String}\n      * @example\n      * // get text decoration\n      * var textDecoration = text.textDecoration();\n      *\n      * // center text\n      * text.textDecoration('underline');\n      */\n\n  Konva.Collection.mapMethods(Konva.TextPath);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * RegularPolygon constructor.&nbsp; Examples include triangles, squares, pentagons, hexagons, etc.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.sides\n     * @param {Number} config.radius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var hexagon = new Konva.RegularPolygon({\n     *   x: 100,\n     *   y: 200,\n     *   sides: 6,\n     *   radius: 70,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 4\n     * });\n     */\n  Konva.RegularPolygon = function(config) {\n    this.___init(config);\n  };\n\n  Konva.RegularPolygon.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'RegularPolygon';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var sides = this.attrs.sides, radius = this.attrs.radius, n, x, y;\n\n      context.beginPath();\n      context.moveTo(0, 0 - radius);\n\n      for (n = 1; n < sides; n++) {\n        x = radius * Math.sin(n * 2 * Math.PI / sides);\n        y = -1 * radius * Math.cos(n * 2 * Math.PI / sides);\n        context.lineTo(x, y);\n      }\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.RegularPolygon, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'radius', 0);\n\n  /**\n     * set radius\n     * @name setRadius\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     * @param {Number} radius\n     */\n\n  /**\n     * get radius\n     * @name getRadius\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'sides', 0);\n\n  /**\n     * set number of sides\n     * @name setSides\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     * @param {int} sides\n     */\n\n  /**\n     * get number of sides\n     * @name getSides\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     */\n\n  Konva.Collection.mapMethods(Konva.RegularPolygon);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Star constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Integer} config.numPoints\n     * @param {Number} config.innerRadius\n     * @param {Number} config.outerRadius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var star = new Konva.Star({\n     *   x: 100,\n     *   y: 200,\n     *   numPoints: 5,\n     *   innerRadius: 70,\n     *   outerRadius: 70,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 4\n     * });\n     */\n  Konva.Star = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Star.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Star';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var innerRadius = this.innerRadius(),\n        outerRadius = this.outerRadius(),\n        numPoints = this.numPoints();\n\n      context.beginPath();\n      context.moveTo(0, 0 - outerRadius);\n\n      for (var n = 1; n < numPoints * 2; n++) {\n        var radius = n % 2 === 0 ? outerRadius : innerRadius;\n        var x = radius * Math.sin(n * Math.PI / numPoints);\n        var y = -1 * radius * Math.cos(n * Math.PI / numPoints);\n        context.lineTo(x, y);\n      }\n      context.closePath();\n\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.outerRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.outerRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Star, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Star, 'numPoints', 5);\n\n  /**\n     * set number of points\n     * @name setNumPoints\n     * @method\n     * @memberof Konva.Star.prototype\n     * @param {Integer} points\n     */\n\n  /**\n     * get number of points\n     * @name getNumPoints\n     * @method\n     * @memberof Konva.Star.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Star, 'innerRadius', 0);\n\n  /**\n     * set inner radius\n     * @name setInnerRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     * @param {Number} radius\n     */\n\n  /**\n     * get inner radius\n     * @name getInnerRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Star, 'outerRadius', 0);\n\n  /**\n     * set outer radius\n     * @name setOuterRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     * @param {Number} radius\n     */\n\n  /**\n     * get outer radius\n     * @name getOuterRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     */\n\n  Konva.Collection.mapMethods(Konva.Star);\n})();\n\n(function() {\n  'use strict';\n  // constants\n  var ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width'\n  ],\n    CHANGE_KONVA = 'Change.konva',\n    NONE = 'none',\n    UP = 'up',\n    RIGHT = 'right',\n    DOWN = 'down',\n    LEFT = 'left',\n    LABEL = 'Label',\n    // cached variables\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\n\n  /**\n     * Label constructor.&nbsp; Labels are groups that contain a Text and Tag shape\n     * @constructor\n     * @memberof Konva\n     * @param {Object} config\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // create label\n     * var label = new Konva.Label({\n     *   x: 100,\n     *   y: 100,\n     *   draggable: true\n     * });\n     *\n     * // add a tag to the label\n     * label.add(new Konva.Tag({\n     *   fill: '#bbb',\n     *   stroke: '#333',\n     *   shadowColor: 'black',\n     *   shadowBlur: 10,\n     *   shadowOffset: [10, 10],\n     *   shadowOpacity: 0.2,\n     *   lineJoin: 'round',\n     *   pointerDirection: 'up',\n     *   pointerWidth: 20,\n     *   pointerHeight: 20,\n     *   cornerRadius: 5\n     * }));\n     *\n     * // add text to the label\n     * label.add(new Konva.Text({\n     *   text: 'Hello World!',\n     *   fontSize: 50,\n     *   lineHeight: 1.2,\n     *   padding: 10,\n     *   fill: 'green'\n     *  }));\n     */\n  Konva.Label = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Label.prototype = {\n    ____init: function(config) {\n      var that = this;\n\n      Konva.Group.call(this, config);\n      this.className = LABEL;\n\n      this.on('add.konva', function(evt) {\n        that._addListeners(evt.child);\n        that._sync();\n      });\n    },\n    /**\n         * get Text shape for the label.  You need to access the Text shape in order to update\n         * the text properties\n         * @name getText\n         * @method\n         * @memberof Konva.Label.prototype\n         */\n    getText: function() {\n      return this.find('Text')[0];\n    },\n    /**\n         * get Tag shape for the label.  You need to access the Tag shape in order to update\n         * the pointer properties and the corner radius\n         * @name getTag\n         * @method\n         * @memberof Konva.Label.prototype\n         */\n    getTag: function() {\n      return this.find('Tag')[0];\n    },\n    _addListeners: function(text) {\n      var that = this, n;\n      var func = function() {\n        that._sync();\n      };\n\n      // update text data for certain attr changes\n      for (n = 0; n < attrChangeListLen; n++) {\n        text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n      }\n    },\n    getWidth: function() {\n      return this.getText().getWidth();\n    },\n    getHeight: function() {\n      return this.getText().getHeight();\n    },\n    _sync: function() {\n      var text = this.getText(),\n        tag = this.getTag(),\n        width,\n        height,\n        pointerDirection,\n        pointerWidth,\n        x,\n        y,\n        pointerHeight;\n\n      if (text && tag) {\n        width = text.getWidth();\n        height = text.getHeight();\n        pointerDirection = tag.getPointerDirection();\n        pointerWidth = tag.getPointerWidth();\n        pointerHeight = tag.getPointerHeight();\n        x = 0;\n        y = 0;\n\n        switch (pointerDirection) {\n          case UP:\n            x = width / 2;\n            y = -1 * pointerHeight;\n            break;\n          case RIGHT:\n            x = width + pointerWidth;\n            y = height / 2;\n            break;\n          case DOWN:\n            x = width / 2;\n            y = height + pointerHeight;\n            break;\n          case LEFT:\n            x = -1 * pointerWidth;\n            y = height / 2;\n            break;\n        }\n\n        tag.setAttrs({\n          x: -1 * x,\n          y: -1 * y,\n          width: width,\n          height: height\n        });\n\n        text.setAttrs({\n          x: -1 * x,\n          y: -1 * y\n        });\n      }\n    }\n  };\n\n  Konva.Util.extend(Konva.Label, Konva.Group);\n\n  Konva.Collection.mapMethods(Konva.Label);\n\n  /**\n     * Tag constructor.&nbsp; A Tag can be configured\n     *  to have a pointer element that points up, right, down, or left\n     * @constructor\n     * @memberof Konva\n     * @param {Object} config\n     * @param {String} [config.pointerDirection] can be up, right, down, left, or none; the default\n     *  is none.  When a pointer is present, the positioning of the label is relative to the tip of the pointer.\n     * @param {Number} [config.pointerWidth]\n     * @param {Number} [config.pointerHeight]\n     * @param {Number} [config.cornerRadius]\n     */\n  Konva.Tag = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Tag.prototype = {\n    ___init: function(config) {\n      Konva.Shape.call(this, config);\n      this.className = 'Tag';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight(),\n        pointerDirection = this.getPointerDirection(),\n        pointerWidth = this.getPointerWidth(),\n        pointerHeight = this.getPointerHeight(),\n        cornerRadius = Math.min(this.getCornerRadius(), width / 2, height / 2);\n\n      context.beginPath();\n      if (!cornerRadius) {\n        context.moveTo(0, 0);\n      } else {\n        context.moveTo(cornerRadius, 0);\n      }\n\n      if (pointerDirection === UP) {\n        context.lineTo((width - pointerWidth) / 2, 0);\n        context.lineTo(width / 2, -1 * pointerHeight);\n        context.lineTo((width + pointerWidth) / 2, 0);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(width, 0);\n      } else {\n        context.lineTo(width - cornerRadius, 0);\n        context.arc(\n          width - cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI * 3 / 2,\n          0,\n          false\n        );\n      }\n\n      if (pointerDirection === RIGHT) {\n        context.lineTo(width, (height - pointerHeight) / 2);\n        context.lineTo(width + pointerWidth, height / 2);\n        context.lineTo(width, (height + pointerHeight) / 2);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(width, height);\n      } else {\n        context.lineTo(width, height - cornerRadius);\n        context.arc(\n          width - cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          0,\n          Math.PI / 2,\n          false\n        );\n      }\n\n      if (pointerDirection === DOWN) {\n        context.lineTo((width + pointerWidth) / 2, height);\n        context.lineTo(width / 2, height + pointerHeight);\n        context.lineTo((width - pointerWidth) / 2, height);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(0, height);\n      } else {\n        context.lineTo(cornerRadius, height);\n        context.arc(\n          cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          Math.PI / 2,\n          Math.PI,\n          false\n        );\n      }\n\n      if (pointerDirection === LEFT) {\n        context.lineTo(0, (height + pointerHeight) / 2);\n        context.lineTo(-1 * pointerWidth, height / 2);\n        context.lineTo(0, (height - pointerHeight) / 2);\n      }\n\n      if (cornerRadius) {\n        context.lineTo(0, cornerRadius);\n        context.arc(\n          cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI,\n          Math.PI * 3 / 2,\n          false\n        );\n      }\n\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getSelfRect: function() {\n      var x = 0,\n        y = 0,\n        pointerWidth = this.getPointerWidth(),\n        pointerHeight = this.getPointerHeight(),\n        direction = this.pointerDirection(),\n        width = this.getWidth(),\n        height = this.getHeight();\n\n      if (direction === UP) {\n        y -= pointerHeight;\n        height += pointerHeight;\n      } else if (direction === DOWN) {\n        height += pointerHeight;\n      } else if (direction === LEFT) {\n        // ARGH!!! I have no idea why should I used magic 1.5!!!!!!!!!\n        x -= pointerWidth * 1.5;\n        width += pointerWidth;\n      } else if (direction === RIGHT) {\n        width += pointerWidth * 1.5;\n      }\n      return {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n  };\n\n  Konva.Util.extend(Konva.Tag, Konva.Shape);\n  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerDirection', NONE);\n\n  /**\n     * set pointer Direction\n     * @name setPointerDirection\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {String} pointerDirection can be up, right, down, left, or none.  The\n     *  default is none\n     */\n\n  /**\n     * get pointer Direction\n     * @name getPointerDirection\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerWidth', 0);\n\n  /**\n     * set pointer width\n     * @name setPointerWidth\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {Number} pointerWidth\n     */\n\n  /**\n     * get pointer width\n     * @name getPointerWidth\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerHeight', 0);\n\n  /**\n     * set pointer height\n     * @name setPointerHeight\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {Number} pointerHeight\n     */\n\n  /**\n     * get pointer height\n     * @name getPointerHeight\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Tag, 'cornerRadius', 0);\n\n  /**\n     * set corner radius\n     * @name setCornerRadius\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {Number} corner radius\n     */\n\n  /**\n     * get corner radius\n     * @name getCornerRadius\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n  Konva.Collection.mapMethods(Konva.Tag);\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n     * Arrow constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Array} config.points\n     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n     *   The default is 0\n     * @param {Number} config.pointerLength\n     * @param {Number} config.pointerWidth\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var line = new Konva.Line({\n     *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n     *   stroke: 'red',\n     *   tension: 1,\n     *   pointerLength : 10,\n     *   pointerWidth : 12\n     * });\n     */\n  Konva.Arrow = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Arrow.prototype = {\n    ____init: function(config) {\n      // call super constructor\n      Konva.Line.call(this, config);\n      this.className = 'Arrow';\n    },\n    _sceneFunc: function(ctx) {\n      Konva.Line.prototype._sceneFunc.apply(this, arguments);\n      var PI2 = Math.PI * 2;\n      var points = this.points();\n      var n = points.length;\n      var dx = points[n - 2] - points[n - 4];\n      var dy = points[n - 1] - points[n - 3];\n      var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n      var length = this.pointerLength();\n      var width = this.pointerWidth();\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[n - 2], points[n - 1]);\n      ctx.rotate(radians);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n\n      if (this.pointerAtBeginning()) {\n        ctx.save();\n        ctx.translate(points[0], points[1]);\n        dx = points[2] - points[0];\n        dy = points[3] - points[1];\n        ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n        ctx.moveTo(0, 0);\n        ctx.lineTo(-length, width / 2);\n        ctx.lineTo(-length, -width / 2);\n        ctx.closePath();\n        ctx.restore();\n      }\n      ctx.fillStrokeShape(this);\n    }\n  };\n\n  Konva.Util.extend(Konva.Arrow, Konva.Line);\n  /**\n     * get/set pointerLength\n     * @name pointerLength\n     * @method\n     * @memberof Konva.Arrow.prototype\n     * @param {Number} Length of pointer of arrow.\n     *   The default is 10.\n     * @returns {Number}\n     * @example\n     * // get tension\n     * var pointerLength = line.pointerLength();\n     *\n     * // set tension\n     * line.pointerLength(15);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerLength', 10);\n  /**\n     * get/set pointerWidth\n     * @name pointerWidth\n     * @method\n     * @memberof Konva.Arrow.prototype\n     * @param {Number} Width of pointer of arrow.\n     *   The default is 10.\n     * @returns {Number}\n     * @example\n     * // get tension\n     * var pointerWidth = line.pointerWidth();\n     *\n     * // set tension\n     * line.pointerWidth(15);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerWidth', 10);\n  /**\n     * get/set pointerAtBeginning\n     * @name pointerAtBeginning\n     * @method\n     * @memberof Konva.Arrow.prototype\n     * @param {Number} Should pointer displayed at beginning of arrow.\n     *   The default is false.\n     * @returns {Boolean}\n     * @example\n     * // get tension\n     * var pointerAtBeginning = line.pointerAtBeginning();\n     *\n     * // set tension\n     * line.pointerAtBeginning(true);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerAtBeginning', false);\n  Konva.Collection.mapMethods(Konva.Arrow);\n})(Konva);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/konva/konva.js\n// module id = 33\n// module chunks = 0","/** @license React v16.2.0\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),l=require(\"fbjs/lib/ExecutionEnvironment\"),B=require(\"object-assign\"),C=require(\"fbjs/lib/emptyFunction\"),ba=require(\"fbjs/lib/EventListener\"),da=require(\"fbjs/lib/getActiveElement\"),ea=require(\"fbjs/lib/shallowEqual\"),fa=require(\"fbjs/lib/containsNode\"),ia=require(\"fbjs/lib/focusNode\"),D=require(\"fbjs/lib/emptyObject\");\nfunction E(a){for(var b=arguments.length-1,c=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(c+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}aa?void 0:E(\"227\");\nvar oa={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function pa(a,b){return(a&b)===b}\nvar ta={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ta,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){ua.hasOwnProperty(f)?E(\"48\",f):void 0;var g=f.toLowerCase(),h=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:pa(h,b.MUST_USE_PROPERTY),\nhasBooleanValue:pa(h,b.HAS_BOOLEAN_VALUE),hasNumericValue:pa(h,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:pa(h,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:pa(h,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:pa(h,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:E(\"50\",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);ua[f]=g}}},ua={};\nfunction va(a,b){if(oa.hasOwnProperty(a)||2<a.length&&(\"o\"===a[0]||\"O\"===a[0])&&(\"n\"===a[1]||\"N\"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case \"boolean\":return oa.hasOwnProperty(a)?a=!0:(b=wa(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a=\"data-\"===a||\"aria-\"===a),a;case \"undefined\":case \"number\":case \"string\":case \"object\":return!0;default:return!1}}function wa(a){return ua.hasOwnProperty(a)?ua[a]:null}\nvar xa=ta,ya=xa.MUST_USE_PROPERTY,K=xa.HAS_BOOLEAN_VALUE,za=xa.HAS_NUMERIC_VALUE,Aa=xa.HAS_POSITIVE_NUMERIC_VALUE,Ba=xa.HAS_OVERLOADED_BOOLEAN_VALUE,Ca=xa.HAS_STRING_BOOLEAN_VALUE,Da={Properties:{allowFullScreen:K,async:K,autoFocus:K,autoPlay:K,capture:Ba,checked:ya|K,cols:Aa,contentEditable:Ca,controls:K,\"default\":K,defer:K,disabled:K,download:Ba,draggable:Ca,formNoValidate:K,hidden:K,loop:K,multiple:ya|K,muted:ya|K,noValidate:K,open:K,playsInline:K,readOnly:K,required:K,reversed:K,rows:Aa,rowSpan:za,\nscoped:K,seamless:K,selected:ya|K,size:Aa,start:za,span:Aa,spellCheck:Ca,style:0,tabIndex:0,itemScope:K,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Ca},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute(\"value\");\"number\"!==a.type||!1===a.hasAttribute(\"value\")?a.setAttribute(\"value\",\"\"+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&\na.setAttribute(\"value\",\"\"+b)}}},Ea=xa.HAS_STRING_BOOLEAN_VALUE,M={xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\"},Ga={Properties:{autoReverse:Ea,externalResourcesRequired:Ea,preserveAlpha:Ea},DOMAttributeNames:{autoReverse:\"autoReverse\",externalResourcesRequired:\"externalResourcesRequired\",preserveAlpha:\"preserveAlpha\"},DOMAttributeNamespaces:{xlinkActuate:M.xlink,xlinkArcrole:M.xlink,xlinkHref:M.xlink,xlinkRole:M.xlink,xlinkShow:M.xlink,xlinkTitle:M.xlink,xlinkType:M.xlink,\nxmlBase:M.xml,xmlLang:M.xml,xmlSpace:M.xml}},Ha=/[\\-\\:]([a-z])/g;function Ia(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function(a){var b=a.replace(Ha,\nIa);Ga.Properties[b]=0;Ga.DOMAttributeNames[b]=a});xa.injectDOMPropertyConfig(Da);xa.injectDOMPropertyConfig(Ga);\nvar P={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){\"function\"!==typeof a.invokeGuardedCallback?E(\"197\"):void 0;Ja=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){Ja.apply(P,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){P.invokeGuardedCallback.apply(this,arguments);if(P.hasCaughtError()){var q=P.clearCaughtError();P._hasRethrowError||(P._hasRethrowError=!0,P._rethrowError=\nq)}},rethrowCaughtError:function(){return Ka.apply(P,arguments)},hasCaughtError:function(){return P._hasCaughtError},clearCaughtError:function(){if(P._hasCaughtError){var a=P._caughtError;P._caughtError=null;P._hasCaughtError=!1;return a}E(\"198\")}};function Ja(a,b,c,d,e,f,g,h,k){P._hasCaughtError=!1;P._caughtError=null;var q=Array.prototype.slice.call(arguments,3);try{b.apply(c,q)}catch(v){P._caughtError=v,P._hasCaughtError=!0}}\nfunction Ka(){if(P._hasRethrowError){var a=P._rethrowError;P._rethrowError=null;P._hasRethrowError=!1;throw a;}}var La=null,Ma={};\nfunction Na(){if(La)for(var a in Ma){var b=Ma[a],c=La.indexOf(a);-1<c?void 0:E(\"96\",a);if(!Oa[c]){b.extractEvents?void 0:E(\"97\",a);Oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;Pa.hasOwnProperty(h)?E(\"99\",h):void 0;Pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&Qa(k[e],g,h);e=!0}else f.registrationName?(Qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:E(\"98\",d,a)}}}}\nfunction Qa(a,b,c){Ra[a]?E(\"100\",a):void 0;Ra[a]=b;Sa[a]=b.eventTypes[c].dependencies}var Oa=[],Pa={},Ra={},Sa={};function Ta(a){La?E(\"101\"):void 0;La=Array.prototype.slice.call(a);Na()}function Ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];Ma.hasOwnProperty(c)&&Ma[c]===d||(Ma[c]?E(\"102\",c):void 0,Ma[c]=d,b=!0)}b&&Na()}\nvar Va=Object.freeze({plugins:Oa,eventNameDispatchConfigs:Pa,registrationNameModules:Ra,registrationNameDependencies:Sa,possibleRegistrationNames:null,injectEventPluginOrder:Ta,injectEventPluginsByName:Ua}),Wa=null,Xa=null,Ya=null;function Za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Ya(d);P.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction $a(a,b){null==b?E(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function ab(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var bb=null;\nfunction cb(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Za(a,b,c[e],d[e]);else c&&Za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function db(a){return cb(a,!0)}function gb(a){return cb(a,!1)}var hb={injectEventPluginOrder:Ta,injectEventPluginsByName:Ua};\nfunction ib(a,b){var c=a.stateNode;if(!c)return null;var d=Wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?E(\"231\",b,typeof c):void 0;\nreturn c}function jb(a,b,c,d){for(var e,f=0;f<Oa.length;f++){var g=Oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=$a(e,g))}return e}function kb(a){a&&(bb=$a(bb,a))}function lb(a){var b=bb;bb=null;b&&(a?ab(b,db):ab(b,gb),bb?E(\"95\"):void 0,P.rethrowCaughtError())}var mb=Object.freeze({injection:hb,getListener:ib,extractEvents:jb,enqueueEvents:kb,processEventQueue:lb}),nb=Math.random().toString(36).slice(2),Q=\"__reactInternalInstance$\"+nb,ob=\"__reactEventHandlers$\"+nb;\nfunction pb(a){if(a[Q])return a[Q];for(var b=[];!a[Q];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[Q];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[Q]);a=b.pop())c=d;return c}function qb(a){if(5===a.tag||6===a.tag)return a.stateNode;E(\"33\")}function rb(a){return a[ob]||null}\nvar sb=Object.freeze({precacheFiberNode:function(a,b){b[Q]=a},getClosestInstanceFromNode:pb,getInstanceFromNode:function(a){a=a[Q];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:qb,getFiberCurrentPropsFromNode:rb,updateFiberProps:function(a,b){a[ob]=b}});function tb(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function ub(a,b,c){for(var d=[];a;)d.push(a),a=tb(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}\nfunction vb(a,b,c){if(b=ib(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a)}function wb(a){a&&a.dispatchConfig.phasedRegistrationNames&&ub(a._targetInst,vb,a)}function xb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?tb(b):null;ub(b,vb,a)}}\nfunction yb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=ib(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a))}function zb(a){a&&a.dispatchConfig.registrationName&&yb(a._targetInst,null,a)}function Ab(a){ab(a,wb)}\nfunction Bb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=tb(h))g++;h=0;for(var k=f;k;k=tb(k))h++;for(;0<g-h;)e=tb(e),g--;for(;0<h-g;)f=tb(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=tb(e);f=tb(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=tb(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=tb(d)}for(d=0;d<e.length;d++)yb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)yb(c[a],\"captured\",b)}\nvar Cb=Object.freeze({accumulateTwoPhaseDispatches:Ab,accumulateTwoPhaseDispatchesSkipTarget:function(a){ab(a,xb)},accumulateEnterLeaveDispatches:Bb,accumulateDirectDispatches:function(a){ab(a,zb)}}),Db=null;function Eb(){!Db&&l.canUseDOM&&(Db=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return Db}var S={_root:null,_startText:null,_fallbackText:null};\nfunction Fb(){if(S._fallbackText)return S._fallbackText;var a,b=S._startText,c=b.length,d,e=Gb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);S._fallbackText=e.slice(a,1<d?1-d:void 0);return S._fallbackText}function Gb(){return\"value\"in S._root?S._root.value:S._root[Eb()]}\nvar Hb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),Ib={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction T(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}\nB(T.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Hb.length;a++)this[Hb[a]]=null}});T.Interface=Ib;T.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;B(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=B({},this.Interface,b);a.augmentClass=this.augmentClass;Jb(a)};Jb(T);function Kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction Lb(a){a instanceof this?void 0:E(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Jb(a){a.eventPool=[];a.getPooled=Kb;a.release=Lb}function Mb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Mb,{data:null});function Nb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Nb,{data:null});var Pb=[9,13,27,32],Vb=l.canUseDOM&&\"CompositionEvent\"in window,Wb=null;l.canUseDOM&&\"documentMode\"in document&&(Wb=document.documentMode);var Xb;\nif(Xb=l.canUseDOM&&\"TextEvent\"in window&&!Wb){var Yb=window.opera;Xb=!(\"object\"===typeof Yb&&\"function\"===typeof Yb.version&&12>=parseInt(Yb.version(),10))}\nvar Zb=Xb,$b=l.canUseDOM&&(!Vb||Wb&&8<Wb&&11>=Wb),ac=String.fromCharCode(32),bc={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},cc=!1;\nfunction dc(a,b){switch(a){case \"topKeyUp\":return-1!==Pb.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function ec(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var fc=!1;function gc(a,b){switch(a){case \"topCompositionEnd\":return ec(b);case \"topKeyPress\":if(32!==b.which)return null;cc=!0;return ac;case \"topTextInput\":return a=b.data,a===ac&&cc?null:a;default:return null}}\nfunction hc(a,b){if(fc)return\"topCompositionEnd\"===a||!Vb&&dc(a,b)?(a=Fb(),S._root=null,S._startText=null,S._fallbackText=null,fc=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return $b?null:b.data;default:return null}}\nvar ic={eventTypes:bc,extractEvents:function(a,b,c,d){var e;if(Vb)b:{switch(a){case \"topCompositionStart\":var f=bc.compositionStart;break b;case \"topCompositionEnd\":f=bc.compositionEnd;break b;case \"topCompositionUpdate\":f=bc.compositionUpdate;break b}f=void 0}else fc?dc(a,c)&&(f=bc.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(f=bc.compositionStart);f?($b&&(fc||f!==bc.compositionStart?f===bc.compositionEnd&&fc&&(e=Fb()):(S._root=d,S._startText=Gb(),fc=!0)),f=Mb.getPooled(f,b,c,d),e?f.data=\ne:(e=ec(c),null!==e&&(f.data=e)),Ab(f),e=f):e=null;(a=Zb?gc(a,c):hc(a,c))?(b=Nb.getPooled(bc.beforeInput,b,c,d),b.data=a,Ab(b)):b=null;return[e,b]}},jc=null,kc=null,lc=null;function mc(a){if(a=Xa(a)){jc&&\"function\"===typeof jc.restoreControlledState?void 0:E(\"194\");var b=Wa(a.stateNode);jc.restoreControlledState(a.stateNode,a.type,b)}}var nc={injectFiberControlledHostComponent:function(a){jc=a}};function oc(a){kc?lc?lc.push(a):lc=[a]:kc=a}\nfunction pc(){if(kc){var a=kc,b=lc;lc=kc=null;mc(a);if(b)for(a=0;a<b.length;a++)mc(b[a])}}var qc=Object.freeze({injection:nc,enqueueStateRestore:oc,restoreStateIfNeeded:pc});function rc(a,b){return a(b)}var sc=!1;function tc(a,b){if(sc)return rc(a,b);sc=!0;try{return rc(a,b)}finally{sc=!1,pc()}}var uc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};\nfunction vc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!uc[a.type]:\"textarea\"===b?!0:!1}function wc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xc;l.canUseDOM&&(xc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature(\"\",\"\"));\nfunction yc(a,b){if(!l.canUseDOM||b&&!(\"addEventListener\"in document))return!1;b=\"on\"+a;var c=b in document;c||(c=document.createElement(\"div\"),c.setAttribute(b,\"return;\"),c=\"function\"===typeof c[b]);!c&&xc&&\"wheel\"===a&&(c=document.implementation.hasFeature(\"Events.wheel\",\"3.0\"));return c}function zc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ac(a){var b=zc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nfunction Bc(a){a._valueTracker||(a._valueTracker=Ac(a))}function Cc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=zc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Dc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};\nfunction Ec(a,b,c){a=T.getPooled(Dc.change,a,b,c);a.type=\"change\";oc(c);Ab(a);return a}var Fc=null,Gc=null;function Hc(a){kb(a);lb(!1)}function Ic(a){var b=qb(a);if(Cc(b))return a}function Jc(a,b){if(\"topChange\"===a)return b}var Kc=!1;l.canUseDOM&&(Kc=yc(\"input\")&&(!document.documentMode||9<document.documentMode));function Lc(){Fc&&(Fc.detachEvent(\"onpropertychange\",Mc),Gc=Fc=null)}function Mc(a){\"value\"===a.propertyName&&Ic(Gc)&&(a=Ec(Gc,a,wc(a)),tc(Hc,a))}\nfunction Nc(a,b,c){\"topFocus\"===a?(Lc(),Fc=b,Gc=c,Fc.attachEvent(\"onpropertychange\",Mc)):\"topBlur\"===a&&Lc()}function Oc(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return Ic(Gc)}function Pc(a,b){if(\"topClick\"===a)return Ic(b)}function $c(a,b){if(\"topInput\"===a||\"topChange\"===a)return Ic(b)}\nvar ad={eventTypes:Dc,_isInputEventSupported:Kc,extractEvents:function(a,b,c,d){var e=b?qb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Jc;else if(vc(e))if(Kc)g=$c;else{g=Oc;var h=Nc}else f=e.nodeName,!f||\"input\"!==f.toLowerCase()||\"checkbox\"!==e.type&&\"radio\"!==e.type||(g=Pc);if(g&&(g=g(a,b)))return Ec(g,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&(a=\"\"+e.value,e.getAttribute(\"value\")!==\na&&e.setAttribute(\"value\",a))}};function bd(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(bd,{view:null,detail:null});var cd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}function fd(a,b,c,d){return T.call(this,a,b,c,d)}\nbd.augmentClass(fd,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});\nvar gd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},hd={eventTypes:gd,extractEvents:function(a,b,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?pb(b):null):a=null;if(a===\nb)return null;var f=null==a?e:qb(a);e=null==b?e:qb(b);var g=fd.getPooled(gd.mouseLeave,a,c,d);g.type=\"mouseleave\";g.target=f;g.relatedTarget=e;c=fd.getPooled(gd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=f;Bb(g,c,a,b);return[g,c]}},id=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function jd(a){a=a.type;return\"string\"===typeof a?a:\"function\"===typeof a?a.displayName||a.name:null}\nfunction kd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){return(a=a._reactInternalFiber)?2===kd(a):!1}function md(a){2!==kd(a)?E(\"188\"):void 0}\nfunction nd(a){var b=a.alternate;if(!b)return b=kd(a),3===b?E(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return md(e),a;if(g===d)return md(e),b;g=g.sibling}E(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:E(\"189\")}}c.alternate!==d?E(\"190\"):void 0}3!==c.tag?E(\"188\"):void 0;return c.stateNode.current===c?a:b}function od(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\nfunction pd(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var qd=[];\nfunction rd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=pb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],sd(a.topLevelType,b,a.nativeEvent,wc(a.nativeEvent))}var td=!0,sd=void 0;function ud(a){td=!!a}function U(a,b,c){return c?ba.listen(c,b,vd.bind(null,a)):null}function wd(a,b,c){return c?ba.capture(c,b,vd.bind(null,a)):null}\nfunction vd(a,b){if(td){var c=wc(b);c=pb(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(qd.length){var d=qd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{tc(rd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>qd.length&&qd.push(a)}}}\nvar xd=Object.freeze({get _enabled(){return td},get _handleTopLevel(){return sd},setHandleTopLevel:function(a){sd=a},setEnabled:ud,isEnabled:function(){return td},trapBubbledEvent:U,trapCapturedEvent:wd,dispatchEvent:vd});function yd(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar zd={animationend:yd(\"Animation\",\"AnimationEnd\"),animationiteration:yd(\"Animation\",\"AnimationIteration\"),animationstart:yd(\"Animation\",\"AnimationStart\"),transitionend:yd(\"Transition\",\"TransitionEnd\")},Ad={},Bd={};l.canUseDOM&&(Bd=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete zd.animationend.animation,delete zd.animationiteration.animation,delete zd.animationstart.animation),\"TransitionEvent\"in window||delete zd.transitionend.transition);\nfunction Cd(a){if(Ad[a])return Ad[a];if(!zd[a])return a;var b=zd[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Bd)return Ad[a]=b[c];return\"\"}\nvar Dd={topAbort:\"abort\",topAnimationEnd:Cd(\"animationend\")||\"animationend\",topAnimationIteration:Cd(\"animationiteration\")||\"animationiteration\",topAnimationStart:Cd(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCancel:\"cancel\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",\ntopCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoad:\"load\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",\ntopMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",topSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:Cd(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},Ed={},Fd=0,Gd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Hd(a){Object.prototype.hasOwnProperty.call(a,Gd)||(a[Gd]=Fd++,Ed[a[Gd]]={});return Ed[a[Gd]]}function Id(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Jd(a,b){var c=Id(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Id(c)}}function Kd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Ld=l.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Md={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},Nd=null,Od=null,Pd=null,Qd=!1;\nfunction Rd(a,b){if(Qd||null==Nd||Nd!==da())return null;var c=Nd;\"selectionStart\"in c&&Kd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Pd&&ea(Pd,c)?null:(Pd=c,a=T.getPooled(Md.select,Od,a,b),a.type=\"select\",a.target=Nd,Ab(a),a)}\nvar Sd={eventTypes:Md,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Hd(e);f=Sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?qb(b):window;switch(a){case \"topFocus\":if(vc(e)||\"true\"===e.contentEditable)Nd=e,Od=b,Pd=null;break;case \"topBlur\":Pd=Od=Nd=null;break;case \"topMouseDown\":Qd=!0;break;case \"topContextMenu\":case \"topMouseUp\":return Qd=!1,Rd(c,d);case \"topSelectionChange\":if(Ld)break;\ncase \"topKeyDown\":case \"topKeyUp\":return Rd(c,d)}return null}};function Td(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Td,{animationName:null,elapsedTime:null,pseudoElement:null});function Ud(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Ud,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}});function Vd(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(Vd,{relatedTarget:null});\nfunction Wd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}\nvar Xd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Yd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};function Zd(a,b,c,d){return T.call(this,a,b,c,d)}\nbd.augmentClass(Zd,{key:function(a){if(a.key){var b=Xd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Wd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Yd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===a.type?Wd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?Wd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}});function $d(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass($d,{dataTransfer:null});function ae(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(ae,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed});function be(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(be,{propertyName:null,elapsedTime:null,pseudoElement:null});\nfunction ce(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass(ce,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var de={},ee={};\n\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function(a){var b=a[0].toUpperCase()+\na.slice(1),c=\"on\"+b;b=\"top\"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+\"Capture\"},dependencies:[b]};de[a]=c;ee[b]=c});\nvar fe={eventTypes:de,extractEvents:function(a,b,c,d){var e=ee[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Wd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Zd;break;case \"topBlur\":case \"topFocus\":a=Vd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=fd;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=\n$d;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=ae;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Td;break;case \"topTransitionEnd\":a=be;break;case \"topScroll\":a=bd;break;case \"topWheel\":a=ce;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Ud;break;default:a=T}b=a.getPooled(e,b,c,d);Ab(b);return b}};sd=function(a,b,c,d){a=jb(a,b,c,d);kb(a);lb(!1)};hb.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nWa=sb.getFiberCurrentPropsFromNode;Xa=sb.getInstanceFromNode;Ya=sb.getNodeFromInstance;hb.injectEventPluginsByName({SimpleEventPlugin:fe,EnterLeaveEventPlugin:hd,ChangeEventPlugin:ad,SelectEventPlugin:Sd,BeforeInputEventPlugin:ic});var ge=[],he=-1;function V(a){0>he||(a.current=ge[he],ge[he]=null,he--)}function W(a,b){he++;ge[he]=a.current;a.current=b}new Set;var ie={current:D},X={current:!1},je=D;function ke(a){return le(a)?je:ie.current}\nfunction me(a,b){var c=a.type.contextTypes;if(!c)return D;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function le(a){return 2===a.tag&&null!=a.type.childContextTypes}function ne(a){le(a)&&(V(X,a),V(ie,a))}\nfunction oe(a,b,c){null!=ie.cursor?E(\"168\"):void 0;W(ie,b,a);W(X,c,a)}function pe(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:E(\"108\",jd(a)||\"Unknown\",e);return B({},b,c)}function qe(a){if(!le(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||D;je=ie.current;W(ie,b,a);W(X,X.current,a);return!0}\nfunction re(a,b){var c=a.stateNode;c?void 0:E(\"169\");if(b){var d=pe(a,je);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(ie,a);W(ie,d,a)}else V(X,a);W(X,b,a)}\nfunction Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction se(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction te(a,b,c){var d=void 0,e=a.type,f=a.key;\"function\"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):\"string\"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):\"object\"===typeof e&&null!==e&&\"number\"===typeof e.tag?(d=e,d.pendingProps=a.props):E(\"130\",null==e?e:typeof e,\"\");d.expirationTime=c;return d}function ue(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}\nfunction ve(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function we(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function xe(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function ye(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ze=null,Ae=null;\nfunction Be(a){return function(b){try{return a(b)}catch(c){}}}function Ce(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ze=Be(function(a){return b.onCommitFiberRoot(c,a)});Ae=Be(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function De(a){\"function\"===typeof ze&&ze(a)}function Ee(a){\"function\"===typeof Ae&&Ae(a)}\nfunction Fe(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Ge(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}\nfunction He(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Fe(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Fe(null))):a=null;a=a!==d?a:null;null===a?Ge(d,b):null===d.last||null===a.last?(Ge(d,b),Ge(a,b)):(Ge(d,b),a.last=b)}function Ie(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nfunction Je(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,h=c.first,k=!1;null!==h;){var q=h.expirationTime;if(q>f){var v=c.expirationTime;if(0===v||v>q)c.expirationTime=q;k||(k=!0,c.baseState=a)}else{k||(c.first=h.next,null===\nc.first&&(c.last=null));if(h.isReplace)a=Ie(h,d,a,e),g=!0;else if(q=Ie(h,d,a,e))a=g?B({},a,q):B(a,q),g=!1;h.isForced&&(c.hasForceUpdate=!0);null!==h.callback&&(q=c.callbackList,null===q&&(q=c.callbackList=[]),q.push(h))}h=h.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);k||(c.baseState=a);return a}\nfunction Ke(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?E(\"191\",e):void 0;e.call(b)}}\nfunction Le(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:ld,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});\na(c,g)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);He(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=ke(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?me(a,d):D;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,\nb){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:E(\"158\");var h=ke(a);d.props=g;d.state=a.memoizedState=e;d.refs=D;d.context=me(a,h);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);\"function\"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Je(c,a,e,d,g,b)));\"function\"===typeof d.componentDidMount&&(a.effectTag|=\n4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var h=b.memoizedProps,k=b.pendingProps;k||(k=h,null==k?E(\"159\"):void 0);var u=g.context,z=ke(b);z=me(b,z);\"function\"!==typeof g.componentWillReceiveProps||h===k&&u===z||(u=g.state,g.componentWillReceiveProps(k,z),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Je(a,b,b.updateQueue,g,k,e):u;if(!(h!==k||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==\ntypeof g.componentDidUpdate||h===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var G=k;if(null===h||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)G=!0;else{var I=b.stateNode,L=b.type;G=\"function\"===typeof I.shouldComponentUpdate?I.shouldComponentUpdate(G,e,z):L.prototype&&L.prototype.isPureReactComponent?!ea(h,G)||!ea(u,e):!0}G?(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(k,e,z),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4)):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,k),d(b,e));g.props=k;g.state=e;g.context=z;return G}}}var Qe=\"function\"===typeof Symbol&&Symbol[\"for\"],Re=Qe?Symbol[\"for\"](\"react.element\"):60103,Se=Qe?Symbol[\"for\"](\"react.call\"):60104,Te=Qe?Symbol[\"for\"](\"react.return\"):60105,Ue=Qe?Symbol[\"for\"](\"react.portal\"):60106,Ve=Qe?Symbol[\"for\"](\"react.fragment\"):60107,We=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction Xe(a){if(null===a||\"undefined\"===typeof a)return null;a=We&&a[We]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ye=Array.isArray;\nfunction Ze(a,b){var c=b.ref;if(null!==c&&\"function\"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?E(\"110\"):void 0,d=b.stateNode);d?void 0:E(\"147\",c);var e=\"\"+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===D?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}\"string\"!==typeof c?E(\"148\"):void 0;b._owner?void 0:E(\"149\",c)}return c}\nfunction $e(a,b){\"textarea\"!==a.type&&E(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction af(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=se(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=ve(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ze(b,c),d[\"return\"]=a,d;d=te(c,a.internalContextTag,d);d.ref=Ze(b,c);d[\"return\"]=a;return d}function q(a,b,c,d){if(null===b||7!==b.tag)return b=we(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c,d);\nb[\"return\"]=a;return b}function v(a,b,c,d){if(null===b||9!==b.tag)return b=xe(c,a.internalContextTag,d),b.type=c.value,b[\"return\"]=a,b;b=e(b,null,d);b.type=c.value;b[\"return\"]=a;return b}function y(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=ye(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c.children||[],d);b[\"return\"]=a;return b}function u(a,b,c,d,f){if(null===b||10!==b.tag)return b=ue(c,a.internalContextTag,\nd,f),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function z(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=ve(\"\"+b,a.internalContextTag,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Re:if(b.type===Ve)return b=ue(b.props.children,a.internalContextTag,c,b.key),b[\"return\"]=a,b;c=te(b,a.internalContextTag,c);c.ref=Ze(null,b);c[\"return\"]=a;return c;case Se:return b=we(b,a.internalContextTag,c),b[\"return\"]=a,b;case Te:return c=xe(b,a.internalContextTag,\nc),c.type=b.value,c[\"return\"]=a,c;case Ue:return b=ye(b,a.internalContextTag,c),b[\"return\"]=a,b}if(Ye(b)||Xe(b))return b=ue(b,a.internalContextTag,c,null),b[\"return\"]=a,b;$e(a,b)}return null}function G(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Re:return c.key===e?c.type===Ve?u(a,b,c.props.children,d,e):k(a,b,c,d):null;case Se:return c.key===e?q(a,b,c,d):null;case Te:return null===\ne?v(a,b,c,d):null;case Ue:return c.key===e?y(a,b,c,d):null}if(Ye(c)||Xe(c))return null!==e?null:u(a,b,c,d,null);$e(a,c)}return null}function I(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Re:return a=a.get(null===d.key?c:d.key)||null,d.type===Ve?u(b,a,d.props.children,e,d.key):k(b,a,d,e);case Se:return a=a.get(null===d.key?c:d.key)||null,q(b,a,d,e);case Te:return a=a.get(c)||null,v(b,a,d,e);case Ue:return a=\na.get(null===d.key?c:d.key)||null,y(b,a,d,e)}if(Ye(d)||Xe(d))return a=a.get(c)||null,u(b,a,d,e,null);$e(b,d)}return null}function L(e,g,m,A){for(var h=null,r=null,n=g,w=g=0,k=null;null!==n&&w<m.length;w++){n.index>w?(k=n,n=null):k=n.sibling;var x=G(e,n,m[w],A);if(null===x){null===n&&(n=k);break}a&&n&&null===x.alternate&&b(e,n);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x;n=k}if(w===m.length)return c(e,n),h;if(null===n){for(;w<m.length;w++)if(n=z(e,m[w],A))g=f(n,g,w),null===r?h=n:r.sibling=n,r=n;return h}for(n=\nd(e,n);w<m.length;w++)if(k=I(n,e,w,m[w],A)){if(a&&null!==k.alternate)n[\"delete\"](null===k.key?w:k.key);g=f(k,g,w);null===r?h=k:r.sibling=k;r=k}a&&n.forEach(function(a){return b(e,a)});return h}function N(e,g,m,A){var h=Xe(m);\"function\"!==typeof h?E(\"150\"):void 0;m=h.call(m);null==m?E(\"151\"):void 0;for(var r=h=null,n=g,w=g=0,k=null,x=m.next();null!==n&&!x.done;w++,x=m.next()){n.index>w?(k=n,n=null):k=n.sibling;var J=G(e,n,x.value,A);if(null===J){n||(n=k);break}a&&n&&null===J.alternate&&b(e,n);g=f(J,\ng,w);null===r?h=J:r.sibling=J;r=J;n=k}if(x.done)return c(e,n),h;if(null===n){for(;!x.done;w++,x=m.next())x=z(e,x.value,A),null!==x&&(g=f(x,g,w),null===r?h=x:r.sibling=x,r=x);return h}for(n=d(e,n);!x.done;w++,x=m.next())if(x=I(n,e,w,x.value,A),null!==x){if(a&&null!==x.alternate)n[\"delete\"](null===x.key?w:x.key);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x}a&&n.forEach(function(a){return b(e,a)});return h}return function(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===Ve&&null===f.key&&(f=f.props.children);\nvar m=\"object\"===typeof f&&null!==f;if(m)switch(f.$$typeof){case Re:a:{var r=f.key;for(m=d;null!==m;){if(m.key===r)if(10===m.tag?f.type===Ve:m.type===f.type){c(a,m.sibling);d=e(m,f.type===Ve?f.props.children:f.props,h);d.ref=Ze(m,f);d[\"return\"]=a;a=d;break a}else{c(a,m);break}else b(a,m);m=m.sibling}f.type===Ve?(d=ue(f.props.children,a.internalContextTag,h,f.key),d[\"return\"]=a,a=d):(h=te(f,a.internalContextTag,h),h.ref=Ze(d,f),h[\"return\"]=a,a=h)}return g(a);case Se:a:{for(m=f.key;null!==d;){if(d.key===\nm)if(7===d.tag){c(a,d.sibling);d=e(d,f,h);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=we(f,a.internalContextTag,h);d[\"return\"]=a;a=d}return g(a);case Te:a:{if(null!==d)if(9===d.tag){c(a,d.sibling);d=e(d,null,h);d.type=f.value;d[\"return\"]=a;a=d;break a}else c(a,d);d=xe(f,a.internalContextTag,h);d.type=f.value;d[\"return\"]=a;a=d}return g(a);case Ue:a:{for(m=f.key;null!==d;){if(d.key===m)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===\nf.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ye(f,a.internalContextTag,h);d[\"return\"]=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h)):(c(a,d),d=ve(f,a.internalContextTag,h)),d[\"return\"]=a,a=d,g(a);if(Ye(f))return L(a,d,f,h);if(Xe(f))return N(a,d,f,h);m&&$e(a,f);if(\"undefined\"===typeof f)switch(a.tag){case 2:case 1:h=a.type,E(\"152\",h.displayName||\nh.name||\"Component\")}return c(a,d)}}var bf=af(!0),cf=af(!1);\nfunction df(a,b,c,d,e){function f(a,b,c){var d=b.expirationTime;b.child=null===a?cf(b,null,c,d):bf(b,a.child,c,d)}function g(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){g(a,b);if(!c)return d&&re(b,!1),q(a,b);c=b.stateNode;id.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&re(b,!0);return b.child}function k(a){var b=a.stateNode;b.pendingContext?oe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&oe(a,\nb.context,!1);I(a,b.containerInfo)}function q(a,b){null!==a&&b.child!==a.child?E(\"153\"):void 0;if(null!==b.child){a=b.child;var c=se(a,a.pendingProps,a.expirationTime);b.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=se(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}function v(a,b){switch(b.tag){case 3:k(b);break;case 2:qe(b);break;case 4:I(b,b.stateNode.containerInfo)}return null}var y=a.shouldSetTextContent,u=a.useSyncScheduling,z=a.shouldDeprioritizeSubtree,\nG=b.pushHostContext,I=b.pushHostContainer,L=c.enterHydrationState,N=c.resetHydrationState,J=c.tryToClaimNextHydratableInstance;a=Le(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var w=a.adoptClassInstance,m=a.constructClassInstance,A=a.mountClassInstance,Ob=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return v(a,b);switch(b.tag){case 0:null!==a?E(\"155\"):void 0;var d=b.type,e=b.pendingProps,r=ke(b);r=me(b,r);d=d(e,r);b.effectTag|=\n1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(b.tag=2,e=qe(b),w(b,d),A(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=q(a,b);break a}d=ke(b);d=me(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=qe(b),d=void 0,null===a?b.stateNode?E(\"153\"):(m(b,b.pendingProps),A(b,c),d=!0):d=Ob(a,b,c),h(a,b,d,e);case 3:return k(b),\ne=b.updateQueue,null!==e?(d=b.memoizedState,e=Je(a,b,e,null,null,c),d===e?(N(),b=q(a,b)):(d=e.element,r=b.stateNode,(null===a||null===a.child)&&r.hydrate&&L(b)?(b.effectTag|=2,b.child=cf(b,null,d,c)):(N(),f(a,b,d)),b.memoizedState=e,b=b.child)):(N(),b=q(a,b)),b;case 5:G(b);null===a&&J(b);e=b.type;var n=b.memoizedProps;d=b.pendingProps;null===d&&(d=n,null===d?E(\"154\"):void 0);r=null!==a?a.memoizedProps:null;X.current||null!==d&&n!==d?(n=d.children,y(e,d)?n=null:r&&y(e,r)&&(b.effectTag|=16),g(a,b),\n2147483647!==c&&!u&&z(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,n),b.memoizedProps=d,b=b.child)):b=q(a,b);return b;case 6:return null===a&&J(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?E(\"154\"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=null===a?cf(b,b.stateNode,d,c):bf(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;\ncase 9:return null;case 4:a:{I(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?E(\"154\"):void 0);else if(null===e||b.memoizedProps===e){b=q(a,b);break a}null===a?b.child=bf(b,null,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||b.memoizedProps===c){b=q(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:E(\"156\")}},beginFailedWork:function(a,b,\nc){switch(b.tag){case 2:qe(b);break;case 3:k(b);break;default:E(\"157\")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return v(a,b);b.firstEffect=null;b.lastEffect=null;b.child=null===a?cf(b,null,null,c):bf(b,a.child,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\nfunction ef(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,h=a.finalizeInitialChildren,k=a.prepareUpdate,q=a.persistence,v=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,z=b.popHostContainer,G=c.prepareToHydrateHostInstance,I=c.prepareToHydrateHostTextInstance,L=c.popHydrationState,N=void 0,J=void 0,w=void 0;a.mutation?(N=function(){},J=function(a,b,c){(b.updateQueue=c)&&d(b)},w=function(a,b,c,e){c!==e&&d(b)}):q?E(\"235\"):E(\"236\");\nreturn{completeWork:function(a,b,c){var m=b.pendingProps;if(null===m)m=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return ne(b),null;case 3:z(b);V(X,b);V(ie,b);m=b.stateNode;m.pendingContext&&(m.context=m.pendingContext,m.pendingContext=null);if(null===a||null===a.child)L(b),b.effectTag&=-3;N(b);return null;case 5:y(b);c=v();var A=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,q=b.stateNode,x=u();q=\nk(q,A,p,m,c,x);J(a,b,q,A,p,m,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!m)return null===b.stateNode?E(\"166\"):void 0,null;a=u();if(L(b))G(b,c,a)&&d(b);else{a=e(A,m,c,a,b);a:for(p=b.child;null!==p;){if(5===p.tag||6===p.tag)g(a,p.stateNode);else if(4!==p.tag&&null!==p.child){p.child[\"return\"]=p;p=p.child;continue}if(p===b)break;for(;null===p.sibling;){if(null===p[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}h(a,A,m,c)&&d(b);b.stateNode=a}null!==b.ref&&\n(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)w(a,b,a.memoizedProps,m);else{if(\"string\"!==typeof m)return null===b.stateNode?E(\"166\"):void 0,null;a=v();c=u();L(b)?I(b)&&d(b):b.stateNode=f(m,a,c,b)}return null;case 7:(m=b.memoizedProps)?void 0:E(\"165\");b.tag=8;A=[];a:for((p=b.stateNode)&&(p[\"return\"]=b);null!==p;){if(5===p.tag||6===p.tag||4===p.tag)E(\"247\");else if(9===p.tag)A.push(p.type);else if(null!==p.child){p.child[\"return\"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===\np[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}p=m.handler;m=p(m.props,A);b.child=bf(b,null!==a?a.child:null,m,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return z(b),N(b),null;case 0:E(\"167\");default:E(\"156\")}}}}\nfunction ff(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(A){b(a,A)}}function d(a){\"function\"===typeof Ee&&Ee(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if(\"function\"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(A){b(a,A)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:k&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||k&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||\nb[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?E(\"160\"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c[\"return\"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?J(f,b.stateNode):N(f,b.stateNode);\nelse if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var h=a.getPublicInstance,k=a.mutation;a=a.persistence;k||(a?E(\"235\"):E(\"236\"));var q=k.commitMount,v=k.commitUpdate,y=k.resetTextContent,u=k.commitTextUpdate,z=k.appendChild,G=k.appendChildToContainer,I=k.insertBefore,L=k.insertInContainerBefore,\nN=k.removeChild,J=k.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(f(b)){var c=b;break a}b=b[\"return\"]}E(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:E(\"161\")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||f(c[\"return\"])){c=\nnull;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?L(b,e.stateNode,c):I(b,e.stateNode,c):d?G(b,e.stateNode):z(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===\na)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){g(a);a[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&v(c,f,e,a,d,b)}break;case 6:null===b.stateNode?E(\"162\"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:\nc,c);break;case 3:break;default:E(\"163\")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Ke(b,c);break;case 3:c=b.updateQueue;null!==c&&Ke(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&q(c,\nb.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:E(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(h(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var gf={};\nfunction hf(a){function b(a){a===gf?E(\"174\"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:gf},f={current:gf},g={current:gf};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),h=b(e.current);\nd=c(h,a.type,d);h!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=gf;g.current=gf}}}\nfunction jf(a){function b(a,b){var c=new Y(5,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=g(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];y=a}var e=a.shouldSetTextContent;\na=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){E(\"175\")},prepareToHydrateHostTextInstance:function(){E(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,h=a.getNextHydratableSibling,k=a.getFirstHydratableChild,q=a.hydrateInstance,v=a.hydrateTextInstance,y=null,u=null,z=!1;return{enterHydrationState:function(a){u=\nk(a.stateNode.containerInfo);y=a;return z=!0},resetHydrationState:function(){u=y=null;z=!1},tryToClaimNextHydratableInstance:function(a){if(z){var d=u;if(d){if(!c(a,d)){d=h(d);if(!d||!c(a,d)){a.effectTag|=2;z=!1;y=a;return}b(y,u)}y=a;u=k(d)}else a.effectTag|=2,z=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=q(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return v(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\ny)return!1;if(!z)return d(a),z=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=h(c);d(a);u=y?h(a.stateNode):null;return!0}}}\nfunction kf(a){function b(a){Qb=ja=!0;var b=a.stateNode;b.current===a?E(\"177\"):void 0;b.isReadyForCommit=!1;id.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;yg();for(t=c;null!==t;){var d=!1,e=void 0;try{for(;null!==t;){var f=t.effectTag;f&16&&zg(t);if(f&128){var g=t.alternate;null!==g&&Ag(g)}switch(f&-242){case 2:Ne(t);t.effectTag&=-3;break;case 6:Ne(t);t.effectTag&=-3;Oe(t.alternate,t);break;case 4:Oe(t.alternate,\nt);break;case 8:Sc=!0,Bg(t),Sc=!1}t=t.nextEffect}}catch(Tc){d=!0,e=Tc}d&&(null===t?E(\"178\"):void 0,h(t,e),null!==t&&(t=t.nextEffect))}Cg();b.current=a;for(t=c;null!==t;){c=!1;d=void 0;try{for(;null!==t;){var k=t.effectTag;k&36&&Dg(t.alternate,t);k&128&&Eg(t);if(k&64)switch(e=t,f=void 0,null!==R&&(f=R.get(e),R[\"delete\"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=R.get(e),R[\"delete\"](e))),null==f?E(\"184\"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});\nbreak;case 3:null===ca&&(ca=f.error);break;default:E(\"157\")}var Qc=t.nextEffect;t.nextEffect=null;t=Qc}}catch(Tc){c=!0,d=Tc}c&&(null===t?E(\"178\"):void 0,h(t,d),null!==t&&(t=t.nextEffect))}ja=Qb=!1;\"function\"===typeof De&&De(a.stateNode);ha&&(ha.forEach(G),ha=null);null!==ca&&(a=ca,ca=null,Ob(a));b=b.current.expirationTime;0===b&&(qa=R=null);return b}function c(a){for(;;){var b=Fg(a.alternate,a,H),c=a[\"return\"],d=a.sibling;var e=a;if(2147483647===H||2147483647!==e.expirationTime){if(2!==e.tag&&3!==\ne.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;\nif(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=rg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function e(a){var b=Gg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function f(a){if(null!==R){if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=k(F)?e(F):d(F);else for(;null!==F&&!A();)F=k(F)?e(F):d(F)}else if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=d(F);else for(;null!==F&&!A();)F=d(F)}function g(a,b){ja?E(\"243\"):void 0;ja=!0;a.isReadyForCommit=\n!1;if(a!==ra||b!==H||null===F){for(;-1<he;)ge[he]=null,he--;je=D;ie.current=D;X.current=!1;x();ra=a;H=b;F=se(ra.current,null,b)}var c=!1,d=null;try{f(b)}catch(Rc){c=!0,d=Rc}for(;c;){if(eb){ca=d;break}var g=F;if(null===g)eb=!0;else{var k=h(g,d);null===k?E(\"183\"):void 0;if(!eb){try{c=k;d=b;for(k=c;null!==g;){switch(g.tag){case 2:ne(g);break;case 5:qg(g);break;case 3:p(g);break;case 4:p(g)}if(g===k||g.alternate===k)break;g=g[\"return\"]}F=e(c);f(d)}catch(Rc){c=!0;d=Rc;continue}break}}}b=ca;eb=ja=!1;ca=\nnull;null!==b&&Ob(b);return a.isReadyForCommit?a.current.alternate:null}function h(a,b){var c=id.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,q(a)&&(eb=!0);else for(var g=a[\"return\"];null!==g&&null===c;){2===g.tag?\"function\"===typeof g.stateNode.componentDidCatch&&(d=!0,f=jd(g),c=g,e=!0):3===g.tag&&(c=g);if(q(g)){if(Sc||null!==ha&&(ha.has(g)||null!==g.alternate&&ha.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===qa&&(qa=new Set);qa.add(c);var h=\"\";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=\ng._debugOwner,Qc=g._debugSource;var m=jd(g);var n=null;k&&(n=jd(k));k=Qc;m=\"\\n    in \"+(m||\"Unknown\")+(k?\" (at \"+k.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+k.lineNumber+\")\":n?\" (created by \"+n+\")\":\"\");break a;default:m=\"\"}h+=m;g=g[\"return\"]}while(g);g=h;a=jd(a);null===R&&(R=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};R.set(c,b);try{var p=b.error;p&&p.suppressReactErrorLogging||console.error(p)}catch(Vc){Vc&&\nVc.suppressReactErrorLogging||console.error(Vc)}Qb?(null===ha&&(ha=new Set),ha.add(c)):G(c);return c}null===ca&&(ca=b);return null}function k(a){return null!==R&&(R.has(a)||null!==a.alternate&&R.has(a.alternate))}function q(a){return null!==qa&&(qa.has(a)||null!==a.alternate&&qa.has(a.alternate))}function v(){return 20*(((I()+100)/20|0)+1)}function y(a){return 0!==ka?ka:ja?Qb?1:H:!Hg||a.internalContextTag&1?v():1}function u(a,b){return z(a,b,!1)}function z(a,b){for(;null!==a;){if(0===a.expirationTime||\na.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a[\"return\"])if(3===a.tag){var c=a.stateNode;!ja&&c===ra&&b<H&&(F=ra=null,H=0);var d=c,e=b;Rb>Ig&&E(\"185\");if(null===d.nextScheduledRoot)d.remainingExpirationTime=e,null===O?(sa=O=d,d.nextScheduledRoot=d):(O=O.nextScheduledRoot=d,O.nextScheduledRoot=sa);else{var f=d.remainingExpirationTime;if(0===f||e<f)d.remainingExpirationTime=e}Fa||(la?\nSb&&(ma=d,na=1,m(ma,na)):1===e?w(1,null):L(e));!ja&&c===ra&&b<H&&(F=ra=null,H=0)}else break;a=a[\"return\"]}}function G(a){z(a,1,!0)}function I(){return Uc=((Wc()-Pe)/10|0)+2}function L(a){if(0!==Tb){if(a>Tb)return;Jg(Xc)}var b=Wc()-Pe;Tb=a;Xc=Kg(J,{timeout:10*(a-2)-b})}function N(){var a=0,b=null;if(null!==O)for(var c=O,d=sa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===O?E(\"244\"):void 0;if(d===d.nextScheduledRoot){sa=O=d.nextScheduledRoot=null;break}else if(d===sa)sa=e=d.nextScheduledRoot,\nO.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===O){O=c;O.nextScheduledRoot=sa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===O)break;c=d;d=d.nextScheduledRoot}}c=ma;null!==c&&c===b?Rb++:Rb=0;ma=b;na=a}function J(a){w(0,a)}function w(a,b){fb=b;for(N();null!==ma&&0!==na&&(0===a||na<=a)&&!Yc;)m(ma,na),N();null!==fb&&(Tb=0,Xc=-1);0!==na&&L(na);fb=null;Yc=!1;Rb=0;if(Ub)throw a=Zc,Zc=\nnull,Ub=!1,a;}function m(a,c){Fa?E(\"245\"):void 0;Fa=!0;if(c<=I()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=b(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(A()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Fa=!1}function A(){return null===fb||fb.timeRemaining()>Lg?!1:Yc=!0}function Ob(a){null===ma?E(\"246\"):\nvoid 0;ma.remainingExpirationTime=0;Ub||(Ub=!0,Zc=a)}var r=hf(a),n=jf(a),p=r.popHostContainer,qg=r.popHostContext,x=r.resetHostContainer,Me=df(a,r,n,u,y),rg=Me.beginWork,Gg=Me.beginFailedWork,Fg=ef(a,r,n).completeWork;r=ff(a,h);var zg=r.commitResetTextContent,Ne=r.commitPlacement,Bg=r.commitDeletion,Oe=r.commitWork,Dg=r.commitLifeCycles,Eg=r.commitAttachRef,Ag=r.commitDetachRef,Wc=a.now,Kg=a.scheduleDeferredCallback,Jg=a.cancelDeferredCallback,Hg=a.useSyncScheduling,yg=a.prepareForCommit,Cg=a.resetAfterCommit,\nPe=Wc(),Uc=2,ka=0,ja=!1,F=null,ra=null,H=0,t=null,R=null,qa=null,ha=null,ca=null,eb=!1,Qb=!1,Sc=!1,sa=null,O=null,Tb=0,Xc=-1,Fa=!1,ma=null,na=0,Yc=!1,Ub=!1,Zc=null,fb=null,la=!1,Sb=!1,Ig=1E3,Rb=0,Lg=1;return{computeAsyncExpiration:v,computeExpirationForFiber:y,scheduleWork:u,batchedUpdates:function(a,b){var c=la;la=!0;try{return a(b)}finally{(la=c)||Fa||w(1,null)}},unbatchedUpdates:function(a){if(la&&!Sb){Sb=!0;try{return a()}finally{Sb=!1}}return a()},flushSync:function(a){var b=la;la=!0;try{a:{var c=\nka;ka=1;try{var d=a();break a}finally{ka=c}d=void 0}return d}finally{la=b,Fa?E(\"187\"):void 0,w(1,null)}},deferredUpdates:function(a){var b=ka;ka=v();try{return a()}finally{ka=b}}}}\nfunction lf(a){function b(a){a=od(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=kf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,q){var g=b.current;if(c){c=\nc._reactInternalFiber;var h;b:{2===kd(c)&&2===c.tag?void 0:E(\"170\");for(h=c;3!==h.tag;){if(le(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h[\"return\"])?void 0:E(\"171\")}h=h.stateNode.context}c=le(c)?pe(c,h):h}else c=D;null===b.context?b.context=c:b.pendingContext=c;b=q;b=void 0===b?null:b;q=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);He(g,{expirationTime:q,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,\nnextCallback:null,next:null});f(g,q)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=pd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return Ce(B({},\na,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var mf=Object.freeze({default:lf}),nf=mf&&lf||mf,of=nf[\"default\"]?nf[\"default\"]:nf;function pf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ue,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var qf=\"object\"===typeof performance&&\"function\"===typeof performance.now,rf=void 0;rf=qf?function(){return performance.now()}:function(){return Date.now()};\nvar sf=void 0,tf=void 0;\nif(l.canUseDOM)if(\"function\"!==typeof requestIdleCallback||\"function\"!==typeof cancelIdleCallback){var uf=null,vf=!1,wf=-1,xf=!1,yf=0,zf=33,Af=33,Bf;Bf=qf?{didTimeout:!1,timeRemaining:function(){var a=yf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=yf-Date.now();return 0<a?a:0}};var Cf=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===Cf){vf=!1;a=rf();if(0>=yf-a)if(-1!==wf&&wf<=\na)Bf.didTimeout=!0;else{xf||(xf=!0,requestAnimationFrame(Df));return}else Bf.didTimeout=!1;wf=-1;a=uf;uf=null;null!==a&&a(Bf)}},!1);var Df=function(a){xf=!1;var b=a-yf+Af;b<Af&&zf<Af?(8>b&&(b=8),Af=b<zf?zf:b):zf=b;yf=a+Af;vf||(vf=!0,window.postMessage(Cf,\"*\"))};sf=function(a,b){uf=a;null!=b&&\"number\"===typeof b.timeout&&(wf=rf()+b.timeout);xf||(xf=!0,requestAnimationFrame(Df));return 0};tf=function(){uf=null;vf=!1;wf=-1}}else sf=window.requestIdleCallback,tf=window.cancelIdleCallback;else sf=function(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity}})})},\ntf=function(a){clearTimeout(a)};var Ef=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Ff={},Gf={};\nfunction Hf(a){if(Gf.hasOwnProperty(a))return!0;if(Ff.hasOwnProperty(a))return!1;if(Ef.test(a))return Gf[a]=!0;Ff[a]=!0;return!1}\nfunction If(a,b,c){var d=wa(b);if(d&&va(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Jf(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,\"\"+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,\"\"):a.setAttribute(b,\"\"+c))}else Kf(a,b,va(b,c)?c:null)}\nfunction Kf(a,b,c){Hf(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,\"\"+c))}function Jf(a,b){var c=wa(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:\"\":a.removeAttribute(c.attributeName):a.removeAttribute(b)}\nfunction Lf(a,b){var c=b.value,d=b.checked;return B({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function Mf(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}\nfunction Nf(a,b){b=b.checked;null!=b&&If(a,\"checked\",b)}function Of(a,b){Nf(a,b);var c=b.value;if(null!=c)if(0===c&&\"\"===a.value)a.value=\"0\";else if(\"number\"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==\"\"+b.defaultValue&&(a.defaultValue=\"\"+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Pf(a,b){switch(b.type){case \"submit\":case \"reset\":break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":a.value=\"\";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function Qf(a){var b=\"\";aa.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}\nfunction Rf(a,b){a=B({children:void 0},b);if(b=Qf(b.children))a.children=b;return a}function Sf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Tf(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Uf(a,b){null!=b.dangerouslySetInnerHTML?E(\"91\"):void 0;return B({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Vf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?E(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:E(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction Wf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Xf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Yf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Zf(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function $f(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Zf(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ag=void 0,bg=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Yf.svg||\"innerHTML\"in a)a.innerHTML=b;else{ag=ag||document.createElement(\"div\");ag.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=ag.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction cg(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar dg={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},eg=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(dg).forEach(function(a){eg.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);dg[b]=dg[a]})});\nfunction fg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||dg.hasOwnProperty(e)&&dg[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var gg=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction hg(a,b,c){b&&(gg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?E(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?E(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:E(\"61\")),null!=b.style&&\"object\"!==typeof b.style?E(\"62\",c()):void 0)}\nfunction ig(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var jg=Yf.html,kg=C.thatReturns(\"\");\nfunction lg(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Hd(a);b=Sa[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topScroll\"===e?wd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(wd(\"topFocus\",\"focus\",a),wd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(yc(\"cancel\",!0)&&wd(\"topCancel\",\"cancel\",a),c.topCancel=!0):\"topClose\"===e?(yc(\"close\",!0)&&wd(\"topClose\",\"close\",a),c.topClose=!0):Dd.hasOwnProperty(e)&&U(e,Dd[e],a),c[e]=!0)}}\nvar mg={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",topStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",\ntopWaiting:\"waiting\"};function ng(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===jg&&(d=Zf(a));d===jg?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function og(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction pg(a,b,c,d){var e=ig(b,c);switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);f=c;break;case \"source\":U(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);f=c;break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":U(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":Mf(a,c);f=Lf(a,c);U(\"topInvalid\",\"invalid\",a);\nlg(d,\"onChange\");break;case \"option\":f=Rf(a,c);break;case \"select\":Tf(a,c);f=B({},c,{value:void 0});U(\"topInvalid\",\"invalid\",a);lg(d,\"onChange\");break;case \"textarea\":Vf(a,c);f=Uf(a,c);U(\"topInvalid\",\"invalid\",a);lg(d,\"onChange\");break;default:f=c}hg(b,f,kg);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?fg(a,k,kg):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&bg(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&cg(a,k):\"number\"===typeof k&&cg(a,\n\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(Ra.hasOwnProperty(h)?null!=k&&lg(d,h):e?Kf(a,h,k):null!=k&&If(a,h,k))}switch(b){case \"input\":Bc(a);Pf(a,c);break;case \"textarea\":Bc(a);Xf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Sf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Sf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=\nC)}}\nfunction sg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Lf(a,c);d=Lf(a,d);f=[];break;case \"option\":c=Rf(a,c);d=Rf(a,d);f=[];break;case \"select\":c=B({},c,{value:void 0});d=B({},d,{value:void 0});f=[];break;case \"textarea\":c=Uf(a,c);d=Uf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=C)}hg(b,d,kg);var g,h;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if(\"style\"===g)for(h in b=c[g],b)b.hasOwnProperty(h)&&(a||(a={}),a[h]=\n\"\");else\"dangerouslySetInnerHTML\"!==g&&\"children\"!==g&&\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(Ra.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var k=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&k!==b&&(null!=k||null!=b))if(\"style\"===g)if(b){for(h in b)!b.hasOwnProperty(h)||k&&k.hasOwnProperty(h)||(a||(a={}),a[h]=\"\");for(h in k)k.hasOwnProperty(h)&&b[h]!==k[h]&&(a||(a={}),a[h]=k[h])}else a||(f||(f=[]),f.push(g,a)),a=k;else\"dangerouslySetInnerHTML\"===\ng?(k=k?k.__html:void 0,b=b?b.__html:void 0,null!=k&&b!==k&&(f=f||[]).push(g,\"\"+k)):\"children\"===g?b===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(g,\"\"+k):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&(Ra.hasOwnProperty(g)?(null!=k&&lg(e,g),f||b===k||(f=[])):(f=f||[]).push(g,k))}a&&(f=f||[]).push(\"style\",a);return f}\nfunction tg(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Nf(a,e);ig(c,d);d=ig(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?fg(a,h,kg):\"dangerouslySetInnerHTML\"===g?bg(a,h):\"children\"===g?cg(a,h):d?null!=h?Kf(a,g,h):a.removeAttribute(g):null!=h?If(a,g,h):Jf(a,g)}switch(c){case \"input\":Of(a,e);break;case \"textarea\":Wf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Sf(a,\n!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?Sf(a,!!e.multiple,e.defaultValue,!0):Sf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction ug(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);break;case \"source\":U(\"topError\",\"error\",a);break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);break;case \"details\":U(\"topToggle\",\"toggle\",a);break;case \"input\":Mf(a,c);U(\"topInvalid\",\"invalid\",a);lg(e,\"onChange\");break;case \"select\":Tf(a,c);\nU(\"topInvalid\",\"invalid\",a);lg(e,\"onChange\");break;case \"textarea\":Vf(a,c),U(\"topInvalid\",\"invalid\",a),lg(e,\"onChange\")}hg(b,c,kg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],\"children\"===g?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):Ra.hasOwnProperty(g)&&null!=f&&lg(e,g));switch(b){case \"input\":Bc(a);Pf(a,c);break;case \"textarea\":Bc(a);Xf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n(a.onclick=C)}return d}function vg(a,b){return a.nodeValue!==b}\nvar wg=Object.freeze({createElement:ng,createTextNode:og,setInitialProperties:pg,diffProperties:sg,updateProperties:tg,diffHydratedProperties:ug,diffHydratedText:vg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Of(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\nc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=rb(d);e?void 0:E(\"90\");Cc(d);Of(d,e)}}}break;case \"textarea\":Wf(a,c);break;case \"select\":b=c.value,null!=b&&Sf(a,!!c.multiple,b,!1)}}});nc.injectFiberControlledHostComponent(wg);var xg=null,Mg=null;function Ng(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction Og(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute(\"data-reactroot\"))}\nvar Z=of({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:$f(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=$f(a,b)}return a},getChildHostContext:function(a,b){return $f(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){xg=td;var a=da();if(Kd(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\nif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(z){b=null;break a}var f=0,g=-1,h=-1,k=0,q=0,v=a,y=null;b:for(;;){for(var u;;){v!==b||0!==d&&3!==v.nodeType||(g=f+d);v!==e||0!==c&&3!==v.nodeType||(h=f+c);3===v.nodeType&&(f+=v.nodeValue.length);if(null===(u=v.firstChild))break;y=v;v=u}for(;;){if(v===a)break b;y===b&&++k===d&&(g=f);y===e&&++q===c&&(h=f);if(null!==(u=v.nextSibling))break;v=y;y=v.parentNode}v=u}b=-1===g||-1===h?null:\n{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;Mg={focusedElem:a,selectionRange:b};ud(!1)},resetAfterCommit:function(){var a=Mg,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&fa(document.documentElement,c)){if(Kd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Eb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\nd&&(e=d,d=a,a=e);e=Jd(c,a);var f=Jd(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=\na.top}Mg=null;ud(xg);xg=null},createInstance:function(a,b,c,d,e){a=ng(a,b,c,d);a[Q]=e;a[ob]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){pg(a,b,c,d);a:{switch(b){case \"button\":case \"input\":case \"select\":case \"textarea\":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return sg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===\ntypeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=og(a,b);a[Q]=d;return a},now:rf,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[ob]=e;tg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=\"\"},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,\nb){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,\nb){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[Q]=f;a[ob]=c;return ug(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[Q]=c;return vg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},\ndidNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:sf,cancelDeferredCallback:tf,useSyncScheduling:!0});rc=Z.batchedUpdates;\nfunction Pg(a,b,c,d,e){Ng(c)?void 0:E(\"200\");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Og(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Qg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Ng(b)?void 0:E(\"200\");return pf(a,b,null,c)}\nfunction Rg(a,b){this._reactRootContainer=Z.createContainer(a,b)}Rg.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Rg.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};\nvar Sg={createPortal:Qg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);\"function\"===typeof a.render?E(\"188\"):E(\"213\",Object.keys(a))},hydrate:function(a,b,c){return Pg(null,a,b,!0,c)},render:function(a,b,c){return Pg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?E(\"38\"):void 0;return Pg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Ng(a)?void 0:\nE(\"40\");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Pg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Qg,unstable_batchedUpdates:tc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:mb,EventPluginRegistry:Va,EventPropagators:Cb,ReactControlledComponent:qc,ReactDOMComponentTree:sb,ReactDOMEventListener:xd}};\nZ.injectIntoDevTools({findFiberByHostInstance:pb,bundleType:0,version:\"16.2.0\",rendererPackageName:\"react-dom\"});var Tg=Object.freeze({default:Sg}),Ug=Tg&&Sg||Tg;module.exports=Ug[\"default\"]?Ug[\"default\"]:Ug;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 34\n// module chunks = 0","/** @license React v16.1.0\n * react-reconciler.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar $$$reconciler;\nmodule.exports = function(config) {\n'use strict';var ca=require(\"object-assign\"),da=require(\"react\"),p=require(\"fbjs/lib/emptyObject\"),ea=require(\"fbjs/lib/shallowEqual\");\nfunction F(b){for(var a=arguments.length-1,e=\"Minified React error #\"+b+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+b,d=0;d<a;d++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);a=Error(e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");a.name=\"Invariant Violation\";a.framesToPop=1;throw a;}var fa=da.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;\nfunction ia(b){b=b.type;return\"string\"===typeof b?b:\"function\"===typeof b?b.displayName||b.name:null}function ja(b){var a=b;if(b.alternate)for(;a[\"return\"];)a=a[\"return\"];else{if(0!==(a.effectTag&2))return 1;for(;a[\"return\"];)if(a=a[\"return\"],0!==(a.effectTag&2))return 1}return 3===a.tag?2:3}function ka(b){return(b=b._reactInternalFiber)?2===ja(b):!1}function la(b){2!==ja(b)?F(\"188\"):void 0}\nfunction ma(b){var a=b.alternate;if(!a)return a=ja(b),3===a?F(\"188\"):void 0,1===a?null:b;for(var e=b,d=a;;){var l=e[\"return\"],n=l?l.alternate:null;if(!l||!n)break;if(l.child===n.child){for(var m=l.child;m;){if(m===e)return la(l),b;if(m===d)return la(l),a;m=m.sibling}F(\"188\")}if(e[\"return\"]!==d[\"return\"])e=l,d=n;else{m=!1;for(var h=l.child;h;){if(h===e){m=!0;e=l;d=n;break}if(h===d){m=!0;d=l;e=n;break}h=h.sibling}if(!m){for(h=n.child;h;){if(h===e){m=!0;e=n;d=l;break}if(h===d){m=!0;d=n;e=l;break}h=h.sibling}m?\nvoid 0:F(\"189\")}}e.alternate!==d?F(\"190\"):void 0}3!==e.tag?F(\"188\"):void 0;return e.stateNode.current===e?b:a}function na(b){b=ma(b);if(!b)return null;for(var a=b;;){if(5===a.tag||6===a.tag)return a;if(a.child)a.child[\"return\"]=a,a=a.child;else{if(a===b)break;for(;!a.sibling;){if(!a[\"return\"]||a[\"return\"]===b)return null;a=a[\"return\"]}a.sibling[\"return\"]=a[\"return\"];a=a.sibling}}return null}\nfunction oa(b){b=ma(b);if(!b)return null;for(var a=b;;){if(5===a.tag||6===a.tag)return a;if(a.child&&4!==a.tag)a.child[\"return\"]=a,a=a.child;else{if(a===b)break;for(;!a.sibling;){if(!a[\"return\"]||a[\"return\"]===b)return null;a=a[\"return\"]}a.sibling[\"return\"]=a[\"return\"];a=a.sibling}}return null}var ta=[],L=-1;function N(b){0>L||(b.current=ta[L],ta[L]=null,L--)}function O(b,a){L++;ta[L]=b.current;b.current=a}new Set;var P={current:p},Q={current:!1},ua=p;function va(b){return wa(b)?ua:P.current}\nfunction xa(b,a){var e=b.type.contextTypes;if(!e)return p;var d=b.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===a)return d.__reactInternalMemoizedMaskedChildContext;var l={},n;for(n in e)l[n]=a[n];d&&(b=b.stateNode,b.__reactInternalMemoizedUnmaskedChildContext=a,b.__reactInternalMemoizedMaskedChildContext=l);return l}function wa(b){return 2===b.tag&&null!=b.type.childContextTypes}function ya(b){wa(b)&&(N(Q,b),N(P,b))}\nfunction za(b,a,e){null!=P.cursor?F(\"168\"):void 0;O(P,a,b);O(Q,e,b)}function Aa(b,a){var e=b.stateNode,d=b.type.childContextTypes;if(\"function\"!==typeof e.getChildContext)return a;e=e.getChildContext();for(var l in e)l in d?void 0:F(\"108\",ia(b)||\"Unknown\",l);return ca({},a,e)}function Ba(b){if(!wa(b))return!1;var a=b.stateNode;a=a&&a.__reactInternalMemoizedMergedChildContext||p;ua=P.current;O(P,a,b);O(Q,Q.current,b);return!0}\nfunction Ca(b,a){var e=b.stateNode;e?void 0:F(\"169\");if(a){var d=Aa(b,ua);e.__reactInternalMemoizedMergedChildContext=d;N(Q,b);N(P,b);O(P,d,b)}else N(Q,b);O(Q,a,b)}\nfunction S(b,a,e){this.tag=b;this.key=a;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=e;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction Da(b,a,e){var d=b.alternate;null===d?(d=new S(b.tag,b.key,b.internalContextTag),d.type=b.type,d.stateNode=b.stateNode,d.alternate=b,b.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=e;d.pendingProps=a;d.child=b.child;d.memoizedProps=b.memoizedProps;d.memoizedState=b.memoizedState;d.updateQueue=b.updateQueue;d.sibling=b.sibling;d.index=b.index;d.ref=b.ref;return d}\nfunction Ea(b,a,e){var d=void 0,l=b.type,n=b.key;\"function\"===typeof l?(d=l.prototype&&l.prototype.isReactComponent?new S(2,n,a):new S(0,n,a),d.type=l,d.pendingProps=b.props):\"string\"===typeof l?(d=new S(5,n,a),d.type=l,d.pendingProps=b.props):\"object\"===typeof l&&null!==l&&\"number\"===typeof l.tag?(d=l,d.pendingProps=b.props):F(\"130\",null==l?l:typeof l,\"\");d.expirationTime=e;return d}function La(b,a,e,d){a=new S(10,d,a);a.pendingProps=b;a.expirationTime=e;return a}\nfunction Ma(b,a,e){a=new S(6,null,a);a.pendingProps=b;a.expirationTime=e;return a}function Na(b,a,e){a=new S(7,b.key,a);a.type=b.handler;a.pendingProps=b;a.expirationTime=e;return a}function Oa(b,a,e){b=new S(9,null,a);b.expirationTime=e;return b}function Pa(b,a,e){a=new S(4,b.key,a);a.pendingProps=b.children||[];a.expirationTime=e;a.stateNode={containerInfo:b.containerInfo,pendingChildren:null,implementation:b.implementation};return a}var Qa=null,Ra=null;\nfunction Sa(b){return function(a){try{return b(a)}catch(e){}}}function Ta(b){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)return!0;try{var e=a.inject(b);Qa=Sa(function(b){return a.onCommitFiberRoot(e,b)});Ra=Sa(function(b){return a.onCommitFiberUnmount(e,b)})}catch(d){}return!0}function Ua(b){\"function\"===typeof Qa&&Qa(b)}function Va(b){\"function\"===typeof Ra&&Ra(b)}\nfunction Wa(b){return{baseState:b,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function cb(b,a){null===b.last?b.first=b.last=a:(b.last.next=a,b.last=a);if(0===b.expirationTime||b.expirationTime>a.expirationTime)b.expirationTime=a.expirationTime}\nfunction db(b,a){var e=b.alternate,d=b.updateQueue;null===d&&(d=b.updateQueue=Wa(null));null!==e?(b=e.updateQueue,null===b&&(b=e.updateQueue=Wa(null))):b=null;b=b!==d?b:null;null===b?cb(d,a):null===d.last||null===b.last?(cb(d,a),cb(b,a)):(cb(d,a),b.last=a)}function eb(b,a,e,d){b=b.partialState;return\"function\"===typeof b?b.call(a,e,d):b}\nfunction fb(b,a,e,d,l,n){null!==b&&b.updateQueue===e&&(e=a.updateQueue={baseState:e.baseState,expirationTime:e.expirationTime,first:e.first,last:e.last,isInitialized:e.isInitialized,callbackList:null,hasForceUpdate:!1});e.expirationTime=0;e.isInitialized?b=e.baseState:(b=e.baseState=a.memoizedState,e.isInitialized=!0);for(var m=!0,h=e.first,k=!1;null!==h;){var u=h.expirationTime;if(u>n){var y=e.expirationTime;if(0===y||y>u)e.expirationTime=u;k||(k=!0,e.baseState=b)}else{k||(e.first=h.next,null===\ne.first&&(e.last=null));if(h.isReplace)b=eb(h,d,b,l),m=!0;else if(u=eb(h,d,b,l))b=m?ca({},b,u):ca(b,u),m=!1;h.isForced&&(e.hasForceUpdate=!0);null!==h.callback&&(u=e.callbackList,null===u&&(u=e.callbackList=[]),u.push(h))}h=h.next}null!==e.callbackList?a.effectTag|=32:null!==e.first||e.hasForceUpdate||(a.updateQueue=null);k||(e.baseState=b);return b}\nfunction gb(b,a){var e=b.callbackList;if(null!==e)for(b.callbackList=null,b=0;b<e.length;b++){var d=e[b],l=d.callback;d.callback=null;\"function\"!==typeof l?F(\"191\",l):void 0;l.call(a)}}\nfunction hb(b,a,e,d){function l(b,a){a.updater=n;b.stateNode=a;a._reactInternalFiber=b}var n={isMounted:ka,enqueueSetState:function(e,h,d){e=e._reactInternalFiber;d=void 0===d?null:d;var m=a(e);db(e,{expirationTime:m,partialState:h,callback:d,isReplace:!1,isForced:!1,nextCallback:null,next:null});b(e,m)},enqueueReplaceState:function(e,d,k){e=e._reactInternalFiber;k=void 0===k?null:k;var h=a(e);db(e,{expirationTime:h,partialState:d,callback:k,isReplace:!0,isForced:!1,nextCallback:null,next:null});\nb(e,h)},enqueueForceUpdate:function(e,d){e=e._reactInternalFiber;d=void 0===d?null:d;var h=a(e);db(e,{expirationTime:h,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});b(e,h)}};return{adoptClassInstance:l,constructClassInstance:function(b,a){var e=b.type,d=va(b),h=2===b.tag&&null!=b.type.contextTypes,m=h?xa(b,d):p;a=new e(a,m);l(b,a);h&&(b=b.stateNode,b.__reactInternalMemoizedUnmaskedChildContext=d,b.__reactInternalMemoizedMaskedChildContext=m);return a},mountClassInstance:function(b,\na){var e=b.alternate,d=b.stateNode,h=d.state||null,m=b.pendingProps;m?void 0:F(\"158\");var l=va(b);d.props=m;d.state=b.memoizedState=h;d.refs=p;d.context=xa(b,l);null!=b.type&&null!=b.type.prototype&&!0===b.type.prototype.unstable_isAsyncReactComponent&&(b.internalContextTag|=1);\"function\"===typeof d.componentWillMount&&(h=d.state,d.componentWillMount(),h!==d.state&&n.enqueueReplaceState(d,d.state,null),h=b.updateQueue,null!==h&&(d.state=fb(e,b,h,d,m,a)));\"function\"===typeof d.componentDidMount&&(b.effectTag|=\n4)},updateClassInstance:function(b,a,l){var h=a.stateNode;h.props=a.memoizedProps;h.state=a.memoizedState;var m=a.memoizedProps,k=a.pendingProps;k||(k=m,null==k?F(\"159\"):void 0);var v=h.context,w=va(a);w=xa(a,w);\"function\"!==typeof h.componentWillReceiveProps||m===k&&v===w||(v=h.state,h.componentWillReceiveProps(k,w),h.state!==v&&n.enqueueReplaceState(h,h.state,null));v=a.memoizedState;l=null!==a.updateQueue?fb(b,a,a.updateQueue,h,k,l):v;if(!(m!==k||v!==l||Q.current||null!==a.updateQueue&&a.updateQueue.hasForceUpdate))return\"function\"!==\ntypeof h.componentDidUpdate||m===b.memoizedProps&&v===b.memoizedState||(a.effectTag|=4),!1;var C=k;if(null===m||null!==a.updateQueue&&a.updateQueue.hasForceUpdate)C=!0;else{var I=a.stateNode,D=a.type;C=\"function\"===typeof I.shouldComponentUpdate?I.shouldComponentUpdate(C,l,w):D.prototype&&D.prototype.isPureReactComponent?!ea(m,C)||!ea(v,l):!0}C?(\"function\"===typeof h.componentWillUpdate&&h.componentWillUpdate(k,l,w),\"function\"===typeof h.componentDidUpdate&&(a.effectTag|=4)):(\"function\"!==typeof h.componentDidUpdate||\nm===b.memoizedProps&&v===b.memoizedState||(a.effectTag|=4),e(a,k),d(a,l));h.props=k;h.state=l;h.context=w;return C}}}var ib=\"function\"===typeof Symbol&&Symbol[\"for\"]&&Symbol[\"for\"](\"react.portal\")||60106,jb=Array.isArray,kb=\"function\"===typeof Symbol&&Symbol.iterator,lb,mb,nb,U;\"function\"===typeof Symbol&&Symbol[\"for\"]?(lb=Symbol[\"for\"](\"react.element\"),mb=Symbol[\"for\"](\"react.call\"),nb=Symbol[\"for\"](\"react.return\"),U=Symbol[\"for\"](\"react.fragment\")):(lb=60103,mb=60104,nb=60105,U=60107);\nfunction ob(b){if(null===b||\"undefined\"===typeof b)return null;b=kb&&b[kb]||b[\"@@iterator\"];return\"function\"===typeof b?b:null}\nfunction pb(b,a){var e=a.ref;if(null!==e&&\"function\"!==typeof e){if(a._owner){a=a._owner;var d=void 0;a&&(2!==a.tag?F(\"110\"):void 0,d=a.stateNode);d?void 0:F(\"147\",e);var l=\"\"+e;if(null!==b&&null!==b.ref&&b.ref._stringRef===l)return b.ref;b=function(b){var a=d.refs===p?d.refs={}:d.refs;null===b?delete a[l]:a[l]=b};b._stringRef=l;return b}\"string\"!==typeof e?F(\"148\"):void 0;a._owner?void 0:F(\"149\",e)}return e}\nfunction qb(b,a){\"textarea\"!==b.type&&F(\"31\",\"[object Object]\"===Object.prototype.toString.call(a)?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":a,\"\")}\nfunction wb(b,a){function e(r,c){if(a){if(!b){if(null===c.alternate)return;c=c.alternate}var f=r.lastEffect;null!==f?(f.nextEffect=c,r.lastEffect=c):r.firstEffect=r.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function d(b,c){if(!a)return null;for(;null!==c;)e(b,c),c=c.sibling;return null}function l(b,c){for(b=new Map;null!==c;)null!==c.key?b.set(c.key,c):b.set(c.index,c),c=c.sibling;return b}function n(a,c,f){if(b)return a=Da(a,c,f),a.index=0,a.sibling=null,a;a.expirationTime=f;a.effectTag=0;a.index=\n0;a.sibling=null;a.pendingProps=c;return a}function m(b,c,f){b.index=f;if(!a)return c;f=b.alternate;if(null!==f)return f=f.index,f<c?(b.effectTag=2,c):f;b.effectTag=2;return c}function h(b){a&&null===b.alternate&&(b.effectTag=2);return b}function k(b,c,f,a){if(null===c||6!==c.tag)return c=Ma(f,b.internalContextTag,a),c[\"return\"]=b,c;c=n(c,f,a);c[\"return\"]=b;return c}function u(b,c,f,a){if(null!==c&&c.type===f.type)return a=n(c,f.props,a),a.ref=pb(c,f),a[\"return\"]=b,a;a=Ea(f,b.internalContextTag,a);\na.ref=pb(c,f);a[\"return\"]=b;return a}function y(b,c,f,a){if(null===c||7!==c.tag)return c=Na(f,b.internalContextTag,a),c[\"return\"]=b,c;c=n(c,f,a);c[\"return\"]=b;return c}function A(b,c,f,a){if(null===c||9!==c.tag)return c=Oa(f,b.internalContextTag,a),c.type=f.value,c[\"return\"]=b,c;c=n(c,null,a);c.type=f.value;c[\"return\"]=b;return c}function v(b,c,f,a){if(null===c||4!==c.tag||c.stateNode.containerInfo!==f.containerInfo||c.stateNode.implementation!==f.implementation)return c=Pa(f,b.internalContextTag,\na),c[\"return\"]=b,c;c=n(c,f.children||[],a);c[\"return\"]=b;return c}function w(b,c,f,a,e){if(null===c||10!==c.tag)return c=La(f,b.internalContextTag,a,e),c[\"return\"]=b,c;c=n(c,f,a);c[\"return\"]=b;return c}function C(b,c,f){if(\"string\"===typeof c||\"number\"===typeof c)return c=Ma(\"\"+c,b.internalContextTag,f),c[\"return\"]=b,c;if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case lb:if(c.type===U)return c=La(c.props.children,b.internalContextTag,f,c.key),c[\"return\"]=b,c;f=Ea(c,b.internalContextTag,f);\nf.ref=pb(null,c);f[\"return\"]=b;return f;case mb:return c=Na(c,b.internalContextTag,f),c[\"return\"]=b,c;case nb:return f=Oa(c,b.internalContextTag,f),f.type=c.value,f[\"return\"]=b,f;case ib:return c=Pa(c,b.internalContextTag,f),c[\"return\"]=b,c}if(jb(c)||ob(c))return c=La(c,b.internalContextTag,f,null),c[\"return\"]=b,c;qb(b,c)}return null}function I(b,c,f,a){var r=null!==c?c.key:null;if(\"string\"===typeof f||\"number\"===typeof f)return null!==r?null:k(b,c,\"\"+f,a);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case lb:return f.key===\nr?f.type===U?w(b,c,f.props.children,a,r):u(b,c,f,a):null;case mb:return f.key===r?y(b,c,f,a):null;case nb:return null===r?A(b,c,f,a):null;case ib:return f.key===r?v(b,c,f,a):null}if(jb(f)||ob(f))return null!==r?null:w(b,c,f,a,null);qb(b,f)}return null}function D(b,c,f,a,e){if(\"string\"===typeof a||\"number\"===typeof a)return b=b.get(f)||null,k(c,b,\"\"+a,e);if(\"object\"===typeof a&&null!==a){switch(a.$$typeof){case lb:return b=b.get(null===a.key?f:a.key)||null,a.type===U?w(c,b,a.props.children,e,a.key):\nu(c,b,a,e);case mb:return b=b.get(null===a.key?f:a.key)||null,y(c,b,a,e);case nb:return b=b.get(f)||null,A(c,b,a,e);case ib:return b=b.get(null===a.key?f:a.key)||null,v(c,b,a,e)}if(jb(a)||ob(a))return b=b.get(f)||null,w(c,b,a,e,null);qb(c,a)}return null}function M(b,c,f,h){for(var r=null,z=null,g=c,E=c=0,k=null;null!==g&&E<f.length;E++){g.index>E?(k=g,g=null):k=g.sibling;var t=I(b,g,f[E],h);if(null===t){null===g&&(g=k);break}a&&g&&null===t.alternate&&e(b,g);c=m(t,c,E);null===z?r=t:z.sibling=t;z=t;\ng=k}if(E===f.length)return d(b,g),r;if(null===g){for(;E<f.length;E++)if(g=C(b,f[E],h))c=m(g,c,E),null===z?r=g:z.sibling=g,z=g;return r}for(g=l(b,g);E<f.length;E++)if(k=D(g,b,E,f[E],h)){if(a&&null!==k.alternate)g[\"delete\"](null===k.key?E:k.key);c=m(k,c,E);null===z?r=k:z.sibling=k;z=k}a&&g.forEach(function(c){return e(b,c)});return r}function G(b,c,f,h){var r=ob(f);\"function\"!==typeof r?F(\"150\"):void 0;f=r.call(f);null==f?F(\"151\"):void 0;for(var z=r=null,g=c,k=c=0,x=null,t=f.next();null!==g&&!t.done;k++,\nt=f.next()){g.index>k?(x=g,g=null):x=g.sibling;var n=I(b,g,t.value,h);if(null===n){g||(g=x);break}a&&g&&null===n.alternate&&e(b,g);c=m(n,c,k);null===z?r=n:z.sibling=n;z=n;g=x}if(t.done)return d(b,g),r;if(null===g){for(;!t.done;k++,t=f.next())t=C(b,t.value,h),null!==t&&(c=m(t,c,k),null===z?r=t:z.sibling=t,z=t);return r}for(g=l(b,g);!t.done;k++,t=f.next())if(t=D(g,b,k,t.value,h),null!==t){if(a&&null!==t.alternate)g[\"delete\"](null===t.key?k:t.key);c=m(t,c,k);null===z?r=t:z.sibling=t;z=t}a&&g.forEach(function(c){return e(b,\nc)});return r}return function(b,c,a,k){var f=\"object\"===typeof a&&null!==a;if(f)switch(a.$$typeof){case lb:a:{var z=a.key;for(f=c;null!==f;){if(f.key===z)if(10===f.tag?a.type===U:f.type===a.type){d(b,f.sibling);c=n(f,a.type===U?a.props.children:a.props,k);c.ref=pb(f,a);c[\"return\"]=b;b=c;break a}else{d(b,f);break}else e(b,f);f=f.sibling}a.type===U?(a=La(a.props.children,b.internalContextTag,k,a.key),a[\"return\"]=b,b=a):(k=Ea(a,b.internalContextTag,k),k.ref=pb(c,a),k[\"return\"]=b,b=k)}return h(b);case mb:a:{for(f=\na.key;null!==c;){if(c.key===f)if(7===c.tag){d(b,c.sibling);a=n(c,a,k);a[\"return\"]=b;b=a;break a}else{d(b,c);break}else e(b,c);c=c.sibling}a=Na(a,b.internalContextTag,k);a[\"return\"]=b;b=a}return h(b);case nb:a:{if(null!==c)if(9===c.tag){d(b,c.sibling);c=n(c,null,k);c.type=a.value;c[\"return\"]=b;b=c;break a}else d(b,c);c=Oa(a,b.internalContextTag,k);c.type=a.value;c[\"return\"]=b;b=c}return h(b);case ib:a:{for(f=a.key;null!==c;){if(c.key===f)if(4===c.tag&&c.stateNode.containerInfo===a.containerInfo&&c.stateNode.implementation===\na.implementation){d(b,c.sibling);a=n(c,a.children||[],k);a[\"return\"]=b;b=a;break a}else{d(b,c);break}else e(b,c);c=c.sibling}a=Pa(a,b.internalContextTag,k);a[\"return\"]=b;b=a}return h(b)}if(\"string\"===typeof a||\"number\"===typeof a)return a=\"\"+a,null!==c&&6===c.tag?(d(b,c.sibling),a=n(c,a,k)):(d(b,c),a=Ma(a,b.internalContextTag,k)),a[\"return\"]=b,b=a,h(b);if(jb(a))return M(b,c,a,k);if(ob(a))return G(b,c,a,k);f&&qb(b,a);if(\"undefined\"===typeof a)switch(b.tag){case 2:case 1:a=b.type,F(\"152\",a.displayName||\na.name||\"Component\")}return d(b,c)}}var xb=wb(!0,!0),yb=wb(!1,!0),zb=wb(!1,!1);\nfunction Ab(b,a,e,d,l){function n(b,a,c){m(b,a,c,a.expirationTime)}function m(b,a,c,f){a.child=null===b?zb(a,a.child,c,f):b.child===a.child?xb(a,a.child,c,f):yb(a,a.child,c,f)}function h(b,a){var c=a.ref;null===c||b&&b.ref===c||(a.effectTag|=128)}function k(b,a,c,f){h(b,a);if(!c)return f&&Ca(a,!1),y(b,a);c=a.stateNode;fa.current=a;var g=c.render();a.effectTag|=1;n(b,a,g);a.memoizedState=c.state;a.memoizedProps=c.props;f&&Ca(a,!0);return a.child}function u(b){var a=b.stateNode;a.pendingContext?za(b,\na.pendingContext,a.pendingContext!==a.context):a.context&&za(b,a.context,!1);D(b,a.containerInfo)}function y(b,a){null!==b&&a.child!==b.child?F(\"153\"):void 0;if(null!==a.child){b=a.child;var c=Da(b,b.pendingProps,b.expirationTime);a.child=c;for(c[\"return\"]=a;null!==b.sibling;)b=b.sibling,c=c.sibling=Da(b,b.pendingProps,b.expirationTime),c[\"return\"]=a;c.sibling=null}return a.child}function A(b,a){switch(a.tag){case 3:u(a);break;case 2:Ba(a);break;case 4:D(a,a.stateNode.containerInfo)}return null}var v=\nb.shouldSetTextContent,w=b.useSyncScheduling,C=b.shouldDeprioritizeSubtree,I=a.pushHostContext,D=a.pushHostContainer,M=e.enterHydrationState,G=e.resetHydrationState,r=e.tryToClaimNextHydratableInstance;b=hb(d,l,function(b,a){b.memoizedProps=a},function(b,a){b.memoizedState=a});var c=b.adoptClassInstance,f=b.constructClassInstance,x=b.mountClassInstance,Fa=b.updateClassInstance;return{beginWork:function(b,a,e){if(0===a.expirationTime||a.expirationTime>e)return A(b,a);switch(a.tag){case 0:null!==b?\nF(\"155\"):void 0;var d=a.type,g=a.pendingProps,m=va(a);m=xa(a,m);d=d(g,m);a.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(a.tag=2,g=Ba(a),c(a,d),x(a,e),a=k(b,a,!0,g)):(a.tag=1,n(b,a,d),a.memoizedProps=g,a=a.child);return a;case 1:a:{g=a.type;e=a.pendingProps;d=a.memoizedProps;if(Q.current)null===e&&(e=d);else if(null===e||d===e){a=y(b,a);break a}d=va(a);d=xa(a,d);g=g(e,d);a.effectTag|=1;n(b,a,g);a.memoizedProps=e;a=a.child}return a;case 2:return g=Ba(a),d=void 0,null===\nb?a.stateNode?F(\"153\"):(f(a,a.pendingProps),x(a,e),d=!0):d=Fa(b,a,e),k(b,a,d,g);case 3:return u(a),g=a.updateQueue,null!==g?(d=a.memoizedState,g=fb(b,a,g,null,null,e),d===g?(G(),a=y(b,a)):(d=g.element,m=a.stateNode,(null===b||null===b.child)&&m.hydrate&&M(a)?(a.effectTag|=2,a.child=zb(a,a.child,d,e)):(G(),n(b,a,d)),a.memoizedState=g,a=a.child)):(G(),a=y(b,a)),a;case 5:I(a);null===b&&r(a);g=a.type;var l=a.memoizedProps;d=a.pendingProps;null===d&&(d=l,null===d?F(\"154\"):void 0);m=null!==b?b.memoizedProps:\nnull;Q.current||null!==d&&l!==d?(l=d.children,v(g,d)?l=null:m&&v(g,m)&&(a.effectTag|=16),h(b,a),2147483647!==e&&!w&&C(g,d)?(a.expirationTime=2147483647,a=null):(n(b,a,l),a.memoizedProps=d,a=a.child)):a=y(b,a);return a;case 6:return null===b&&r(a),b=a.pendingProps,null===b&&(b=a.memoizedProps),a.memoizedProps=b,null;case 8:a.tag=7;case 7:g=a.pendingProps;if(Q.current)null===g&&(g=b&&b.memoizedProps,null===g?F(\"154\"):void 0);else if(null===g||a.memoizedProps===g)g=a.memoizedProps;d=g.children;a.stateNode=\nnull===b?zb(a,a.stateNode,d,e):b.child===a.child?xb(a,a.stateNode,d,e):yb(a,a.stateNode,d,e);a.memoizedProps=g;return a.stateNode;case 9:return null;case 4:a:{D(a,a.stateNode.containerInfo);g=a.pendingProps;if(Q.current)null===g&&(g=b&&b.memoizedProps,null==g?F(\"154\"):void 0);else if(null===g||a.memoizedProps===g){a=y(b,a);break a}null===b?a.child=yb(a,a.child,g,e):n(b,a,g);a.memoizedProps=g;a=a.child}return a;case 10:a:{e=a.pendingProps;if(Q.current)null===e&&(e=a.memoizedProps);else if(null===e||\na.memoizedProps===e){a=y(b,a);break a}n(b,a,e);a.memoizedProps=e;a=a.child}return a;default:F(\"156\")}},beginFailedWork:function(a,b,c){switch(b.tag){case 2:Ba(b);break;case 3:u(b);break;default:F(\"157\")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return A(a,b);b.firstEffect=null;b.lastEffect=null;m(a,b,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\nfunction Bb(b,a,e){function d(a){a.effectTag|=4}var l=b.createInstance,n=b.createTextInstance,m=b.appendInitialChild,h=b.finalizeInitialChildren,k=b.prepareUpdate,u=b.persistence,y=a.getRootHostContainer,A=a.popHostContext,v=a.getHostContext,w=a.popHostContainer,C=e.prepareToHydrateHostInstance,I=e.prepareToHydrateHostTextInstance,D=e.popHydrationState,M=void 0,G=void 0,r=void 0;b.mutation?(M=function(){},G=function(a,b,e){(b.updateQueue=e)&&d(b)},r=function(a,b,e,h){e!==h&&d(b)}):u?F(\"235\"):F(\"236\");\nreturn{completeWork:function(a,b,e){var c=b.pendingProps;if(null===c)c=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===e)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return ya(b),null;case 3:w(b);N(Q,b);N(P,b);c=b.stateNode;c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null);if(null===a||null===a.child)D(b),b.effectTag&=-3;M(b);return null;case 5:A(b);e=y();var f=b.type;if(null!==a&&null!=b.stateNode){var g=a.memoizedProps,x=b.stateNode,u=v();x=\nk(x,f,g,c,e,u);G(a,b,x,f,g,c,e);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?F(\"166\"):void 0,null;a=v();if(D(b))C(b,e,a)&&d(b);else{a=l(f,c,e,a,b);a:for(g=b.child;null!==g;){if(5===g.tag||6===g.tag)m(a,g.stateNode);else if(4!==g.tag&&null!==g.child){g.child[\"return\"]=g;g=g.child;continue}if(g===b)break;for(;null===g.sibling;){if(null===g[\"return\"]||g[\"return\"]===b)break a;g=g[\"return\"]}g.sibling[\"return\"]=g[\"return\"];g=g.sibling}h(a,f,c,e)&&d(b);b.stateNode=a}null!==b.ref&&\n(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)r(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?F(\"166\"):void 0,null;a=y();e=v();D(b)?I(b)&&d(b):b.stateNode=n(c,a,e,b)}return null;case 7:(c=b.memoizedProps)?void 0:F(\"165\");b.tag=8;f=[];a:for((g=b.stateNode)&&(g[\"return\"]=b);null!==g;){if(5===g.tag||6===g.tag||4===g.tag)F(\"247\");else if(9===g.tag)f.push(g.type);else if(null!==g.child){g.child[\"return\"]=g;g=g.child;continue}for(;null===g.sibling;){if(null===\ng[\"return\"]||g[\"return\"]===b)break a;g=g[\"return\"]}g.sibling[\"return\"]=g[\"return\"];g=g.sibling}g=c.handler;c=g(c.props,f);b.child=xb(b,null!==a?a.child:null,c,e);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return w(b),M(b),null;case 0:F(\"167\");default:F(\"156\")}}}}\nfunction Cb(b,a){function e(b){var c=b.ref;if(null!==c)try{c(null)}catch(f){a(b,f)}}function d(b){\"function\"===typeof Va&&Va(b);switch(b.tag){case 2:e(b);var c=b.stateNode;if(\"function\"===typeof c.componentWillUnmount)try{c.props=b.memoizedProps,c.state=b.memoizedState,c.componentWillUnmount()}catch(f){a(b,f)}break;case 5:e(b);break;case 7:l(b.stateNode);break;case 4:k&&m(b)}}function l(b){for(var a=b;;)if(d(a),null===a.child||k&&4===a.tag){if(a===b)break;for(;null===a.sibling;){if(null===a[\"return\"]||\na[\"return\"]===b)return;a=a[\"return\"]}a.sibling[\"return\"]=a[\"return\"];a=a.sibling}else a.child[\"return\"]=a,a=a.child}function n(b){return 5===b.tag||3===b.tag||4===b.tag}function m(b){for(var a=b,f=!1,e=void 0,h=void 0;;){if(!f){f=a[\"return\"];a:for(;;){null===f?F(\"160\"):void 0;switch(f.tag){case 5:e=f.stateNode;h=!1;break a;case 3:e=f.stateNode.containerInfo;h=!0;break a;case 4:e=f.stateNode.containerInfo;h=!0;break a}f=f[\"return\"]}f=!0}if(5===a.tag||6===a.tag)l(a),h?G(e,a.stateNode):M(e,a.stateNode);\nelse if(4===a.tag?e=a.stateNode.containerInfo:d(a),null!==a.child){a.child[\"return\"]=a;a=a.child;continue}if(a===b)break;for(;null===a.sibling;){if(null===a[\"return\"]||a[\"return\"]===b)return;a=a[\"return\"];4===a.tag&&(f=!1)}a.sibling[\"return\"]=a[\"return\"];a=a.sibling}}var h=b.getPublicInstance,k=b.mutation;b=b.persistence;k||(b?F(\"235\"):F(\"236\"));var u=k.commitMount,y=k.commitUpdate,A=k.resetTextContent,v=k.commitTextUpdate,w=k.appendChild,C=k.appendChildToContainer,I=k.insertBefore,D=k.insertInContainerBefore,\nM=k.removeChild,G=k.removeChildFromContainer;return{commitResetTextContent:function(b){A(b.stateNode)},commitPlacement:function(b){a:{for(var a=b[\"return\"];null!==a;){if(n(a)){var f=a;break a}a=a[\"return\"]}F(\"160\");f=void 0}var e=a=void 0;switch(f.tag){case 5:a=f.stateNode;e=!1;break;case 3:a=f.stateNode.containerInfo;e=!0;break;case 4:a=f.stateNode.containerInfo;e=!0;break;default:F(\"161\")}f.effectTag&16&&(A(a),f.effectTag&=-17);a:b:for(f=b;;){for(;null===f.sibling;){if(null===f[\"return\"]||n(f[\"return\"])){f=\nnull;break a}f=f[\"return\"]}f.sibling[\"return\"]=f[\"return\"];for(f=f.sibling;5!==f.tag&&6!==f.tag;){if(f.effectTag&2)continue b;if(null===f.child||4===f.tag)continue b;else f.child[\"return\"]=f,f=f.child}if(!(f.effectTag&2)){f=f.stateNode;break a}}for(var d=b;;){if(5===d.tag||6===d.tag)f?e?D(a,d.stateNode,f):I(a,d.stateNode,f):e?C(a,d.stateNode):w(a,d.stateNode);else if(4!==d.tag&&null!==d.child){d.child[\"return\"]=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d[\"return\"]||d[\"return\"]===\nb)return;d=d[\"return\"]}d.sibling[\"return\"]=d[\"return\"];d=d.sibling}},commitDeletion:function(b){m(b);b[\"return\"]=null;b.child=null;b.alternate&&(b.alternate.child=null,b.alternate[\"return\"]=null)},commitWork:function(b,a){switch(a.tag){case 2:break;case 5:var c=a.stateNode;if(null!=c){var e=a.memoizedProps;b=null!==b?b.memoizedProps:e;var d=a.type,h=a.updateQueue;a.updateQueue=null;null!==h&&y(c,h,d,b,e,a)}break;case 6:null===a.stateNode?F(\"162\"):void 0;c=a.memoizedProps;v(a.stateNode,null!==b?b.memoizedProps:\nc,c);break;case 3:break;default:F(\"163\")}},commitLifeCycles:function(b,a){switch(a.tag){case 2:var c=a.stateNode;if(a.effectTag&4)if(null===b)c.props=a.memoizedProps,c.state=a.memoizedState,c.componentDidMount();else{var e=b.memoizedProps;b=b.memoizedState;c.props=a.memoizedProps;c.state=a.memoizedState;c.componentDidUpdate(e,b)}a=a.updateQueue;null!==a&&gb(a,c);break;case 3:c=a.updateQueue;null!==c&&gb(c,null!==a.child?a.child.stateNode:null);break;case 5:c=a.stateNode;null===b&&a.effectTag&4&&u(c,\na.type,a.memoizedProps,a);break;case 6:break;case 4:break;default:F(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var e=a.stateNode;switch(a.tag){case 5:b(h(e));break;default:b(e)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var Db={};\nfunction Gb(b){function a(a){a===Db?F(\"174\"):void 0;return a}var e=b.getChildHostContext,d=b.getRootHostContext,l={current:Db},n={current:Db},m={current:Db};return{getHostContext:function(){return a(l.current)},getRootHostContainer:function(){return a(m.current)},popHostContainer:function(a){N(l,a);N(n,a);N(m,a)},popHostContext:function(a){n.current===a&&(N(l,a),N(n,a))},pushHostContainer:function(a,b){O(m,b,a);b=d(b);O(n,a,a);O(l,b,a)},pushHostContext:function(b){var d=a(m.current),h=a(l.current);\nd=e(h,b.type,d);h!==d&&(O(n,b,b),O(l,d,b))},resetHostContainer:function(){l.current=Db;m.current=Db}}}\nfunction Hb(b){function a(a,b){var e=new S(5,null,0);e.type=\"DELETED\";e.stateNode=b;e[\"return\"]=a;e.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=e,a.lastEffect=e):a.firstEffect=a.lastEffect=e}function e(a,b){switch(a.tag){case 5:return n(b,a.type,a.pendingProps);case 6:return m(b,a.pendingProps);default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];A=a}var l=b.shouldSetTextContent;b=b.hydration;if(!b)return{enterHydrationState:function(){return!1},\nresetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){F(\"175\")},prepareToHydrateHostTextInstance:function(){F(\"176\")},popHydrationState:function(){return!1}};var n=b.canHydrateInstance,m=b.canHydrateTextInstance,h=b.getNextHydratableSibling,k=b.getFirstHydratableChild,u=b.hydrateInstance,y=b.hydrateTextInstance,A=null,v=null,w=!1;return{enterHydrationState:function(a){v=k(a.stateNode.containerInfo);A=a;return w=!0},resetHydrationState:function(){v=\nA=null;w=!1},tryToClaimNextHydratableInstance:function(b){if(w){var d=v;if(d){if(!e(b,d)){d=h(d);if(!d||!e(b,d)){b.effectTag|=2;w=!1;A=b;return}a(A,v)}b.stateNode=d;A=b;v=k(d)}else b.effectTag|=2,w=!1,A=b}},prepareToHydrateHostInstance:function(a,b,e){b=u(a.stateNode,a.type,a.memoizedProps,b,e,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return y(a.stateNode,a.memoizedProps,a)},popHydrationState:function(b){if(b!==A)return!1;if(!w)return d(b),w=!0,!1;var e=\nb.type;if(5!==b.tag||\"head\"!==e&&\"body\"!==e&&!l(e,b.memoizedProps))for(e=v;e;)a(b,e),e=h(e);d(b);v=A?h(b.stateNode):null;return!0}}}\nfunction Ib(b){function a(a){Ga=Y=!0;var b=a.stateNode;b.current===a?F(\"177\"):void 0;b.isReadyForCommit=!1;fa.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;Mb();for(q=c;null!==q;){var e=!1,d=void 0;try{for(;null!==q;){var g=q.effectTag;g&16&&Nb(q);if(g&128){var k=q.alternate;null!==k&&Ob(k)}switch(g&-242){case 2:sb(q);q.effectTag&=-3;break;case 6:sb(q);q.effectTag&=-3;tb(q.alternate,q);break;case 4:tb(q.alternate,\nq);break;case 8:Ya=!0,Pb(q),Ya=!1}q=q.nextEffect}}catch(Za){e=!0,d=Za}e&&(null===q?F(\"178\"):void 0,h(q,d),null!==q&&(q=q.nextEffect))}Qb();b.current=a;for(q=c;null!==q;){c=!1;e=void 0;try{for(;null!==q;){var X=q.effectTag;X&36&&Rb(q.alternate,q);X&128&&Sb(q);if(X&64)switch(d=q,g=void 0,null!==K&&(g=K.get(d),K[\"delete\"](d),null==g&&null!==d.alternate&&(d=d.alternate,g=K.get(d),K[\"delete\"](d))),null==g?F(\"184\"):void 0,d.tag){case 2:d.stateNode.componentDidCatch(g.error,{componentStack:g.componentStack});\nbreak;case 3:null===R&&(R=g.error);break;default:F(\"157\")}var m=q.nextEffect;q.nextEffect=null;q=m}}catch(Za){c=!0,e=Za}c&&(null===q?F(\"178\"):void 0,h(q,e),null!==q&&(q=q.nextEffect))}Y=Ga=!1;\"function\"===typeof Ua&&Ua(a.stateNode);T&&(T.forEach(C),T=null);null!==R&&(a=R,R=null,f(a));b=b.current.expirationTime;0===b&&(Z=K=null);return b}function e(a){for(;;){var b=Fb(a.alternate,a,H),c=a[\"return\"],e=a.sibling;var d=a;if(2147483647===H||2147483647!==d.expirationTime){if(2!==d.tag&&3!==d.tag)var f=\n0;else f=d.updateQueue,f=null===f?0:f.expirationTime;for(var g=d.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;d.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==e)return e;if(null!==\nc)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=t(a.alternate,a,H);null===b&&(b=e(a));fa.current=null;return b}function l(a){var b=Eb(a.alternate,a,H);null===b&&(b=e(a));fa.current=null;return b}function n(a){if(null!==K){if(!(0===H||H>a))if(H<=$a)for(;null!==B;)B=k(B)?l(B):d(B);else for(;null!==B&&!c();)B=k(B)?l(B):d(B)}else if(!(0===H||H>a))if(H<=$a)for(;null!==B;)B=d(B);else for(;null!==B&&!c();)B=d(B)}function m(a,b){Y?F(\"243\"):void 0;Y=!0;a.isReadyForCommit=\n!1;if(a!==pa||b!==H||null===B){for(;-1<L;)ta[L]=null,L--;ua=p;P.current=p;Q.current=!1;E();pa=a;H=b;B=Da(pa.current,null,b)}var c=!1,e=null;try{n(b)}catch(Xa){c=!0,e=Xa}for(;c;){if(qa){R=e;break}var d=B;if(null===d)qa=!0;else{var k=h(d,e);null===k?F(\"183\"):void 0;if(!qa){try{c=k;e=b;for(k=c;null!==d;){switch(d.tag){case 2:ya(d);break;case 5:g(d);break;case 3:z(d);break;case 4:z(d)}if(d===k||d.alternate===k)break;d=d[\"return\"]}B=l(c);n(e)}catch(Xa){c=!0;e=Xa;continue}break}}}b=R;qa=Y=!1;R=null;null!==\nb&&f(b);return a.isReadyForCommit?a.current.alternate:null}function h(a,b){var c=fa.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,u(a)&&(qa=!0);else for(var g=a[\"return\"];null!==g&&null===c;){2===g.tag?\"function\"===typeof g.stateNode.componentDidCatch&&(d=!0,f=ia(g),c=g,e=!0):3===g.tag&&(c=g);if(u(g)){if(Ya||null!==T&&(T.has(g)||null!==g.alternate&&T.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===Z&&(Z=new Set);Z.add(c);var k=\"\";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var h=\ng._debugOwner,m=g._debugSource;var l=ia(g);var X=null;h&&(X=ia(h));h=m;l=\"\\n    in \"+(l||\"Unknown\")+(h?\" (at \"+h.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+h.lineNumber+\")\":X?\" (created by \"+X+\")\":\"\");break a;default:l=\"\"}k+=l;g=g[\"return\"]}while(g);g=k;a=ia(a);null===K&&(K=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};K.set(c,b);try{console.error(b.error)}catch(Tb){console.error(Tb)}Ga?(null===T&&(T=new Set),\nT.add(c)):C(c);return c}null===R&&(R=b);return null}function k(a){return null!==K&&(K.has(a)||null!==a.alternate&&K.has(a.alternate))}function u(a){return null!==Z&&(Z.has(a)||null!==a.alternate&&Z.has(a.alternate))}function y(){return 20*(((I()+100)/20|0)+1)}function A(a){return 0!==V?V:Y?Ga?1:H:!Ub||a.internalContextTag&1?y():1}function v(a,b){return w(a,b,!1)}function w(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||\na.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a[\"return\"])if(3===a.tag){var c=a.stateNode;!Y&&c===pa&&b<=H&&(B=pa=null,H=0);var d=b;Ha>Vb&&F(\"185\");if(null===c.nextScheduledRoot)c.remainingExpirationTime=d,null===J?(aa=J=c,c.nextScheduledRoot=c):(J=J.nextScheduledRoot=c,J.nextScheduledRoot=aa);else{var e=c.remainingExpirationTime;if(0===e||d<e)c.remainingExpirationTime=d}ha||(W?Ia&&r(c,1):1===d?G(1,null):ra||(ra=!0,ub(M)))}else break;a=a[\"return\"]}}function C(a){w(a,1,!0)}\nfunction I(){return $a=((vb()-Wb)/10|0)+2}function D(){var a=0,b=null;if(null!==J)for(var c=J,d=aa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===J?F(\"244\"):void 0;if(d===d.nextScheduledRoot){aa=J=d.nextScheduledRoot=null;break}else if(d===aa)aa=e=d.nextScheduledRoot,J.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===J){J=c;J.nextScheduledRoot=aa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===\na||e<a)a=e,b=d;if(d===J)break;c=d;d=d.nextScheduledRoot}}c=ba;null!==c&&c===b?Ha++:Ha=0;ba=b;Ja=a}function M(a){G(0,a)}function G(a,b){sa=b;for(D();null!==ba&&0!==Ja&&(0===a||Ja<=a)&&!ab;)r(ba,Ja),D();null!==sa&&(ra=!1);null===ba||ra||(ra=!0,ub(M));sa=null;ab=!1;Ha=0;if(Ka)throw a=bb,bb=null,Ka=!1,a;}function r(b,d){ha?F(\"245\"):void 0;ha=!0;if(d<=I()){var e=b.finishedWork;null!==e?(b.finishedWork=null,b.remainingExpirationTime=a(e)):(b.finishedWork=null,e=m(b,d),null!==e&&(b.remainingExpirationTime=\na(e)))}else e=b.finishedWork,null!==e?(b.finishedWork=null,b.remainingExpirationTime=a(e)):(b.finishedWork=null,e=m(b,d),null!==e&&(c()?b.finishedWork=e:b.remainingExpirationTime=a(e)));ha=!1}function c(){return null===sa||sa.timeRemaining()>Xb?!1:ab=!0}function f(a){null===ba?F(\"246\"):void 0;ba.remainingExpirationTime=0;Ka||(Ka=!0,bb=a)}var x=Gb(b),Fa=Hb(b),z=x.popHostContainer,g=x.popHostContext,E=x.resetHostContainer,rb=Ab(b,x,Fa,v,A),t=rb.beginWork,Eb=rb.beginFailedWork,Fb=Bb(b,x,Fa).completeWork;\nx=Cb(b,h);var Nb=x.commitResetTextContent,sb=x.commitPlacement,Pb=x.commitDeletion,tb=x.commitWork,Rb=x.commitLifeCycles,Sb=x.commitAttachRef,Ob=x.commitDetachRef,vb=b.now,ub=b.scheduleDeferredCallback,Ub=b.useSyncScheduling,Mb=b.prepareForCommit,Qb=b.resetAfterCommit,Wb=vb(),$a=2,V=0,Y=!1,B=null,pa=null,H=0,q=null,K=null,Z=null,T=null,R=null,qa=!1,Ga=!1,Ya=!1,aa=null,J=null,ra=!1,ha=!1,ba=null,Ja=0,ab=!1,Ka=!1,bb=null,sa=null,W=!1,Ia=!1,Vb=1E3,Ha=0,Xb=1;return{computeAsyncExpiration:y,computeExpirationForFiber:A,\nscheduleWork:v,batchedUpdates:function(a,b){var c=W;W=!0;try{return a(b)}finally{(W=c)||ha||G(1,null)}},unbatchedUpdates:function(a){if(W&&!Ia){Ia=!0;try{return a()}finally{Ia=!1}}return a()},flushSync:function(a){var b=W;W=!0;try{a:{var c=V;V=1;try{var d=a();break a}finally{V=c}d=void 0}return d}finally{W=b,ha?F(\"187\"):void 0,G(1,null)}},deferredUpdates:function(a){var b=V;V=y();try{return a()}finally{V=b}}}}\nfunction Jb(b){function a(a){a=na(a);return null===a?null:a.stateNode}var e=b.getPublicInstance;b=Ib(b);var d=b.computeAsyncExpiration,l=b.computeExpirationForFiber,n=b.scheduleWork;return{createContainer:function(a,b){var d=new S(3,null,0);a={current:d,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return d.stateNode=a},updateContainer:function(a,b,e,u){var h=b.current;if(e){e=\ne._reactInternalFiber;var k;b:{2===ja(e)&&2===e.tag?void 0:F(\"170\");for(k=e;3!==k.tag;){if(wa(k)){k=k.stateNode.__reactInternalMemoizedMergedChildContext;break b}(k=k[\"return\"])?void 0:F(\"171\")}k=k.stateNode.context}e=wa(e)?Aa(e,k):k}else e=p;null===b.context?b.context=e:b.pendingContext=e;b=u;b=void 0===b?null:b;u=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():l(h);db(h,{expirationTime:u,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,\nnextCallback:null,next:null});n(h,u)},batchedUpdates:b.batchedUpdates,unbatchedUpdates:b.unbatchedUpdates,deferredUpdates:b.deferredUpdates,flushSync:b.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return e(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:a,findHostInstanceWithNoPortals:function(a){a=oa(a);return null===a?null:a.stateNode},injectIntoDevTools:function(b){var d=b.findFiberByHostInstance;return Ta(ca({},\nb,{findHostInstanceByFiber:function(b){return a(b)},findFiberByHostInstance:function(a){return d?d(a):null}}))}}}var Kb=Object.freeze({default:Jb}),Lb=Kb&&Jb||Kb;module.exports=Lb[\"default\"]?Lb[\"default\"]:Lb;\n  return ($$$reconciler || ($$$reconciler = module.exports))(config);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-reconciler/cjs/react-reconciler.production.min.js\n// module id = 35\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-reconciler.production.min.js');\n} else {\n  module.exports = require('./cjs/react-reconciler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-reconciler/index.js\n// module id = 36\n// module chunks = 0","/** @license React v16.2.0\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var m=require(\"object-assign\"),n=require(\"fbjs/lib/emptyObject\"),p=require(\"fbjs/lib/emptyFunction\"),q=\"function\"===typeof Symbol&&Symbol[\"for\"],r=q?Symbol[\"for\"](\"react.element\"):60103,t=q?Symbol[\"for\"](\"react.call\"):60104,u=q?Symbol[\"for\"](\"react.return\"):60105,v=q?Symbol[\"for\"](\"react.portal\"):60106,w=q?Symbol[\"for\"](\"react.fragment\"):60107,x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){for(var b=arguments.length-1,e=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,c=0;c<b;c++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[c+1]);b=Error(e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}\nvar z={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function A(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}A.prototype.isReactComponent={};A.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?y(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};A.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction B(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}function C(){}C.prototype=A.prototype;var D=B.prototype=new C;D.constructor=B;m(D,A.prototype);D.isPureReactComponent=!0;function E(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}var F=E.prototype=new C;F.constructor=E;m(F,A.prototype);F.unstable_isAsyncReactComponent=!0;F.render=function(){return this.props.children};var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,e){var c,d={},g=null,k=null;if(null!=b)for(c in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)H.call(b,c)&&!I.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var h=Array(f),l=0;l<f;l++)h[l]=arguments[l+2];d.children=h}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:r,type:a,key:g,ref:k,props:d,_owner:G.current}}function K(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===r}\nfunction escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var L=/\\/+/g,M=[];function N(a,b,e,c){if(M.length){var d=M.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function O(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>M.length&&M.push(a)}\nfunction P(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case r:case t:case u:case v:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+Q(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+Q(d,k);g+=P(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=x&&a[x]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=\nf.call(a),k=0;!(d=a.next()).done;)d=d.value,f=b+Q(d,k++),g+=P(d,f,e,c);else\"object\"===d&&(e=\"\"+a,y(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function R(a,b){a.func.call(a.context,b,a.count++)}\nfunction S(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?T(a,c,e,p.thatReturnsArgument):null!=a&&(K(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(L,\"$\\x26/\")+\"/\")+e,a={$$typeof:r,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function T(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(L,\"$\\x26/\")+\"/\");b=N(b,g,c,d);null==a||P(a,\"\",S,b);O(b)}\nvar U={Children:{map:function(a,b,e){if(null==a)return a;var c=[];T(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=N(null,null,b,e);null==a||P(a,\"\",R,b);O(b)},count:function(a){return null==a?0:P(a,\"\",p.thatReturnsNull,null)},toArray:function(a){var b=[];T(a,b,null,p.thatReturnsArgument);return b},only:function(a){K(a)?void 0:y(\"143\");return a}},Component:A,PureComponent:B,unstable_AsyncComponent:E,Fragment:w,createElement:J,cloneElement:function(a,b,e){var c=m({},a.props),\nd=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)H.call(b,h)&&!I.hasOwnProperty(h)&&(c[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)c.children=e;else if(1<h){f=Array(h);for(var l=0;l<h;l++)f[l]=arguments[l+2];c.children=f}return{$$typeof:r,type:a.type,key:d,ref:g,props:c,_owner:k}},createFactory:function(a){var b=J.bind(null,a);b.type=a;return b},\nisValidElement:K,version:\"16.2.0\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:G,assign:m}},V=Object.freeze({default:U}),W=V&&U||V;module.exports=W[\"default\"]?W[\"default\"]:W;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 37\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/media/monster-marbles-sprite-sheets.edcc46e8.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/monster-marbles-sprite-sheets.jpg\n// module id = 38\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 39\n// module chunks = 0"],"sourceRoot":""}